// Code generated by go-bindata.
// sources:
// ClusterRole/admission-controllerCR.yaml
// ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml
// ClusterRole/alameda-datahubCR.yaml
// ClusterRole/alameda-evictionerCR.yaml
// ClusterRole/alameda-operatorCR.yaml
// ClusterRoleBinding/admission-controllerCRB.yaml
// ClusterRoleBinding/alameda-datahubCRB.yaml
// ClusterRoleBinding/alameda-evictionerCRB.yaml
// ClusterRoleBinding/alameda-operatorCRB.yaml
// ConfigMap/grafana-datasources.yaml
// CustomResourceDefinition/alamedarecommendationsCRD.yaml
// CustomResourceDefinition/alamedascalersCRD.yaml
// Deployment/admission-controllerDM.yaml
// Deployment/alameda-datahubDM.yaml
// Deployment/alameda-evictionerDM.yaml
// Deployment/alameda-grafanaDM.yaml
// Deployment/alameda-influxdbDM.yaml
// Deployment/alameda-operatorDM.yaml
// PersistentVolumeClaim/my-alamedagrafanaPVC.yaml
// PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml
// Service/admission-controllerSV.yaml
// Service/alameda-datahubSV.yaml
// Service/alameda-grafanaSV.yaml
// Service/alameda-influxdbSV.yaml
// ServiceAccount/admission-controllerSA.yaml
// ServiceAccount/alameda-datahubSA.yaml
// ServiceAccount/alameda-evictionerSA.yaml
// ServiceAccount/alameda-operatorSA.yaml
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _clusterroleAdmissionControllercrYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\x31\x6f\x84\x30\x0c\x85\x77\x24\xfe\x43\x74\x3b\x54\xdd\x2a\xd6\x0e\xdd\x3b\x74\x37\x89\x0f\x2c\x42\x1c\xd9\xce\x55\xed\xaf\xaf\x28\xa7\xc2\x42\x75\xa7\x63\x7b\xc8\xcf\xdf\x7b\x31\x64\xfa\x40\x51\xe2\xd4\x39\xe9\xc1\xb7\x50\x6c\x64\xa1\x6f\x30\xe2\xd4\x4e\x2f\xda\x12\x3f\x5d\x9e\xeb\x6a\xa2\x14\x3a\xf7\x1a\x8b\x1a\xca\x3b\x47\xac\xab\x19\x0d\x02\x18\x74\x75\xe5\x5c\x82\x19\x3b\x07\x61\x26\x5d\xd6\x35\x9e\x93\x09\xc7\x88\xd2\x4c\xc2\xac\x8d\x15\x63\x21\x88\x75\x25\x25\xa2\xfe\x9a\x1a\x07\x99\xde\x84\x4b\x5e\xf5\xf2\x35\xee\xf4\xb7\x45\x70\x20\x35\xd9\x87\x39\xad\x73\x82\xca\x45\x3c\xee\x7d\x73\x31\x30\x4a\xc3\x27\xf6\x23\xf3\xe4\x39\x9d\x69\x28\xab\x5b\xd7\xb1\x0b\x4a\xbf\xb7\x0c\x68\x9b\xf0\x82\x60\xb8\xe9\x92\xc3\x55\x1f\xe4\xfc\x27\x4b\xe6\x70\x0b\x32\x92\xee\x54\x06\xf3\xe3\x31\x0f\x72\xd6\x63\xa2\x60\x8e\xe4\x41\xd1\x74\xfb\x19\x30\x47\xfe\x9a\x31\xd9\x3d\x69\xee\xaf\x7b\x85\x2f\x2f\xbd\x1d\xfe\x71\xe4\xd2\xb8\xe5\x8c\x49\x47\x3a\x5b\x4b\x7c\x9c\x60\x6b\xba\xde\xfd\x56\xf8\x4f\x00\x00\x00\xff\xff\x27\x12\x21\x03\x02\x03\x00\x00")

func clusterroleAdmissionControllercrYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleAdmissionControllercrYaml,
		"ClusterRole/admission-controllerCR.yaml",
	)
}

func clusterroleAdmissionControllercrYaml() (*asset, error) {
	bytes, err := clusterroleAdmissionControllercrYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole/admission-controllerCR.yaml", size: 770, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleAggregateAlamedaAdminEditAlamedacrYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\xbf\x6a\x33\x31\x10\xc4\x7b\xc3\xbd\x83\x70\x7f\xf7\xf1\x75\xe1\xda\x14\xe9\x53\xa4\x9f\x93\x86\xf3\x62\xfd\x39\x56\x2b\x07\xf2\xf4\x41\xbe\xd8\xee\x42\x02\xe9\x7e\xec\xce\xec\x8c\x84\x4d\xde\xa8\x55\x4a\x9e\x9d\x2e\xf0\x13\x9a\x9d\x8a\xca\x07\x4c\x4a\x9e\xce\x4f\x75\x92\xf2\xef\xf2\x7f\x38\x9c\x25\x87\xd9\x3d\xc7\x56\x8d\xfa\x5a\x22\x87\x43\xa2\x21\xc0\x30\x0f\x07\xe7\x32\x12\x67\x87\x75\x55\xae\x30\x8e\x88\x48\x0c\x18\x11\x92\xe4\x91\x41\xec\x36\xea\xea\x88\x85\xb1\x5e\x8d\xee\x9b\xe0\xc7\x39\x2b\xfb\xa5\xd9\x1d\x4d\x1b\x8f\xbf\x72\xf6\xf4\x87\x51\x5b\x64\x8f\x1e\x1d\x36\x79\xd1\xd2\xb6\xbd\xc8\xe8\xd0\xac\x54\x8f\x28\x79\x9d\x7c\xc9\x06\xc9\xd4\x3a\x41\xfa\x5a\x59\x4b\x53\xcf\xbb\x78\x7f\x4d\xd7\x53\x6b\x9f\x5d\xa8\xcb\x6d\xbb\xd2\x76\x88\x52\xbf\xc8\x2b\x61\xdc\xb9\x6d\xe1\xce\x81\x91\x9d\xff\xa6\x8f\xd2\x97\x94\x98\xc3\xf5\x3b\x7e\xd2\xeb\x1d\xe6\x4f\x9f\x01\x00\x00\xff\xff\xc6\xe3\x80\x4c\x09\x02\x00\x00")

func clusterroleAggregateAlamedaAdminEditAlamedacrYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleAggregateAlamedaAdminEditAlamedacrYaml,
		"ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml",
	)
}

func clusterroleAggregateAlamedaAdminEditAlamedacrYaml() (*asset, error) {
	bytes, err := clusterroleAggregateAlamedaAdminEditAlamedacrYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml", size: 521, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleAlamedaDatahubcrYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\xbd\x6e\xc3\x50\x08\x85\x77\x4b\x7e\x07\x94\xce\x76\xd5\xad\xf2\xda\xa1\x6b\xd5\xa1\x3b\xb1\x49\x8c\xe2\x0b\xb7\xfc\x44\x6a\x9f\xbe\xba\x49\x15\x25\x13\x70\x40\xdf\x01\xb0\xf2\x17\x99\xb3\xca\x04\xb6\xc7\x79\xc4\x8c\x55\x8d\x7f\x31\x58\x65\x3c\xbd\xfa\xc8\xfa\x7c\x7e\xe9\xbb\x13\xcb\x32\xc1\xdb\x96\x1e\x64\x9f\xba\x51\xdf\x15\x0a\x5c\x30\x70\xea\x3b\x00\xc1\x42\x13\xe0\x86\x85\x16\x1c\x9a\xbc\xe6\x7e\x38\x99\xaa\x0f\x91\xa1\xc6\xb8\xf5\x9d\xe5\x46\x3e\xf5\xdd\x13\x7c\x90\x15\xf6\xe6\x0c\x07\x35\xf8\x4e\xb2\x1f\xa8\xa6\x85\x62\xa5\x74\x48\x59\xc8\x2e\x54\xaf\x38\x13\x68\x25\xf1\x95\x0f\x31\x14\x15\x6e\x3c\x39\x42\xdf\x0d\x80\x95\xdf\x4d\xb3\xfa\x04\x6d\x8f\x01\x76\xbb\x16\x8d\x5c\xd3\x66\xba\xc9\x37\x94\xb7\xfa\x4c\xb6\xbf\xb5\x8e\x14\x8f\xa4\xab\x8c\x19\xea\x33\x6e\x2c\xc7\x71\x56\x09\x64\x21\xf3\x11\xf9\x91\xff\x3f\x7c\xbd\xdc\x68\xd6\x52\x48\x96\xcb\x03\xef\xac\xee\x9c\x5a\x92\x75\xc1\xa0\xbf\x00\x00\x00\xff\xff\x15\x11\x3a\x98\x7f\x01\x00\x00")

func clusterroleAlamedaDatahubcrYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleAlamedaDatahubcrYaml,
		"ClusterRole/alameda-datahubCR.yaml",
	)
}

func clusterroleAlamedaDatahubcrYaml() (*asset, error) {
	bytes, err := clusterroleAlamedaDatahubcrYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole/alameda-datahubCR.yaml", size: 383, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleAlamedaEvictionercrYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\xb1\x4e\xc6\x30\x0c\x06\xf7\x48\x79\x87\xe8\xdf\x53\xc4\x86\xb2\x32\xb0\x33\xb0\xbb\xcd\x27\xb0\x9a\xc6\x91\xed\x74\xe0\xe9\x51\xf9\xd5\xe9\x4e\x37\x1c\x0d\xfe\x82\x1a\x4b\x2f\x49\x57\xda\x16\x9a\xfe\x23\xca\xbf\xe4\x2c\x7d\xd9\xdf\x6c\x61\x79\x39\x5f\x63\xd8\xb9\xd7\x92\xde\xdb\x34\x87\x7e\x4a\x43\x0c\x07\x9c\x2a\x39\x95\x18\x52\xea\x74\xa0\x24\x6a\x74\xa0\x52\xc6\xc9\xdb\x75\x80\xe6\x5d\x45\x2c\xfb\x74\x51\xa6\x16\x83\xce\x06\x2b\x31\xe4\x44\x83\x3f\x54\xe6\xb0\xff\x41\x4e\x8f\xc7\x45\x85\xc9\xd4\x0d\x77\x1d\x52\xed\xb2\x13\xba\xde\xed\x1b\xfe\x94\x8a\x06\xc7\x5f\x00\x00\x00\xff\xff\xed\xf3\xb3\x71\xc6\x00\x00\x00")

func clusterroleAlamedaEvictionercrYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleAlamedaEvictionercrYaml,
		"ClusterRole/alameda-evictionerCR.yaml",
	)
}

func clusterroleAlamedaEvictionercrYaml() (*asset, error) {
	bytes, err := clusterroleAlamedaEvictionercrYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole/alameda-evictionerCR.yaml", size: 198, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleAlamedaOperatorcrYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x3d\x6f\x1b\x31\x0c\xdd\x0d\xf8\x3f\x08\xe9\x7c\x17\x74\x2b\xbc\x76\xe8\x5a\x74\xe8\x4e\x4b\xf4\x1d\x61\x49\x54\x49\xca\x69\xf2\xeb\x8b\xfb\xb0\x73\x41\x95\x22\x69\x81\x4e\x26\x68\x49\xef\x91\xef\xbd\x83\x42\xdf\x51\x94\x38\x1f\x9c\x1c\xc1\xf7\x50\x6d\x64\xa1\x27\x30\xe2\xdc\x9f\x3f\x69\x4f\x7c\x7f\xf9\xb8\xdf\x9d\x29\x87\x83\xfb\x1c\xab\x1a\xca\x37\x8e\xb8\xdf\x25\x34\x08\x60\x70\xd8\xef\x9c\xcb\x90\xf0\xe0\x20\x42\xc2\x00\x1d\x17\x14\x30\x96\xee\x2c\xcc\xda\x59\x35\x16\x82\xb8\xdf\x49\x8d\xa8\x87\xfd\xae\x73\x50\xe8\x8b\x70\x2d\x3a\x5f\xef\xdc\xdd\xdd\xf4\x2b\xa8\x5c\xc5\xe3\xb5\x9b\x39\xa0\x2e\x65\xe1\xb0\x56\x82\x25\x92\x9f\x29\x7a\xce\x26\x1c\x23\xca\xfc\xdf\x05\xe5\x78\xbd\x3a\xa0\x2d\x45\x24\x5d\xab\x07\x30\x3f\xb6\xc0\xa1\x14\x6d\xc1\xaf\x48\x8a\xb6\x42\x07\x2c\x91\x1f\x13\x66\x7b\x07\xde\x54\x7a\x41\x30\x5c\xea\x5a\xc2\xad\x2e\xcf\x47\x02\x46\x9c\xda\x6d\x7a\x3d\x17\xcc\x3a\xd2\xc9\x7a\xe2\x16\xd7\x67\x6a\x9e\xf3\x89\x86\x7f\x5b\x48\x35\x56\x0f\x91\xf2\xd0\x4f\x3b\x06\xca\x28\xda\x03\xb5\x90\x57\xd5\xa7\xf3\xab\x0e\xb7\x9e\xa0\xe7\x94\x30\x87\x59\xad\xff\xba\xb3\xbf\x9f\xe0\xfe\x44\x19\x22\x3d\x35\x4c\x75\xa5\xf1\xc1\x7d\x45\x49\xa4\x53\x74\xdc\x89\xc5\xfd\xa8\x28\x8f\xae\x08\x27\xb4\x11\xab\xba\x9a\x03\xca\x1c\x0b\x2d\xe0\xd1\xdd\xe4\xeb\x12\x67\x9a\xf2\x90\x07\xf7\x92\xb8\x6b\x27\x61\x6d\xdf\x9e\xda\x90\x72\x9b\x35\xb6\x6c\x43\xf8\xd3\x30\x4f\x24\x75\x0d\x73\x6b\x7a\x5f\xd5\x38\x5d\xbb\x01\x4f\x94\xe9\xcf\x72\xb5\x94\x79\x6b\xa4\x15\xbd\xe0\xef\xf1\xd9\x3e\xb9\xf1\xc0\x62\x8c\xc6\x6c\x61\xdd\xbe\xe0\x40\x6a\xb2\xfd\x60\xb5\x50\x2f\x10\x69\x32\x61\x1e\x1e\xf0\x38\x32\x9f\x97\x90\x54\x69\x1b\xf3\x0d\x2e\x7c\x8d\xd9\x6b\x53\xcb\x85\x5e\x68\xf7\x2e\xa0\x5f\x01\x00\x00\xff\xff\xe9\x3a\x26\x7a\xa9\x05\x00\x00")

func clusterroleAlamedaOperatorcrYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleAlamedaOperatorcrYaml,
		"ClusterRole/alameda-operatorCR.yaml",
	)
}

func clusterroleAlamedaOperatorcrYaml() (*asset, error) {
	bytes, err := clusterroleAlamedaOperatorcrYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole/alameda-operatorCR.yaml", size: 1449, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingAdmissionControllercrbYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8e\xc1\x4a\x04\x31\x0c\x86\xef\x85\xbe\x43\x5f\xa0\x23\xde\xa4\x37\xf5\xe0\x7d\x05\xef\xd9\x36\x6a\x9c\x4e\x52\x92\x74\x0f\x3e\xbd\xcc\x22\x88\x08\x03\x9e\xff\xe4\xfb\x3e\x18\xf4\x82\x6a\x24\x5c\x92\x9e\xa1\x2e\x30\xfd\x5d\x94\x3e\xc1\x49\x78\x59\xef\x6c\x21\xb9\xb9\xdc\xc6\xb0\x12\xb7\x92\x1e\xfb\x34\x47\x3d\x49\xc7\x07\xe2\x46\xfc\x16\xc3\x86\x0e\x0d\x1c\x4a\x0c\x29\x31\x6c\x58\x12\xb4\x8d\x6c\xa7\xe6\x2a\xec\x2a\xbd\xa3\xe6\x55\x45\x2c\xfb\x74\x51\x82\x1e\x83\x4a\xc7\x13\xbe\x5e\xdf\x60\xd0\x93\xca\x1c\x07\x15\xfb\xd9\x9f\x88\x7f\x2a\x6d\x9e\x3f\xb0\xba\x5d\x9d\xf9\x1b\xf7\x8c\x7a\xa1\x8a\xf7\xb5\xca\x64\xdf\x97\x23\xe6\xcf\x6e\x03\x2a\x96\xf4\xdb\xf1\x15\x00\x00\xff\xff\xe6\xe4\xf9\x05\x51\x01\x00\x00")

func clusterrolebindingAdmissionControllercrbYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingAdmissionControllercrbYaml,
		"ClusterRoleBinding/admission-controllerCRB.yaml",
	)
}

func clusterrolebindingAdmissionControllercrbYaml() (*asset, error) {
	bytes, err := clusterrolebindingAdmissionControllercrbYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding/admission-controllerCRB.yaml", size: 337, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingAlamedaDatahubcrbYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\x31\x6e\xc3\x30\x0c\x45\x77\x01\xba\x83\x2e\x20\x17\xdd\x0a\x6d\x6d\x87\xee\x2e\xd0\x9d\x96\xd8\x9a\xb5\x2c\x0a\x14\xe5\x21\xa7\x0f\x1c\x24\x43\x10\x24\xc8\x4a\xfe\xff\xde\x87\x4a\x3f\x28\x8d\xb8\x04\x27\x13\xc4\x01\xba\xce\x2c\x74\x00\x25\x2e\xc3\xf2\xd6\x06\xe2\x97\xed\xd5\x9a\x85\x4a\x0a\xee\x33\xf7\xa6\x28\x23\x67\xfc\xa0\x92\xa8\xfc\x59\xb3\xa2\x42\x02\x85\x60\x8d\x73\x05\x56\x0c\x0e\x32\xac\x98\xc0\xef\xe7\xb9\x4f\x7e\x11\xe6\xe6\xb5\x2b\x0b\x41\xb6\x46\x38\xe3\x88\xbf\xa7\x06\x54\xfa\x12\xee\xf5\xc1\x80\x3d\x76\xe3\x7f\xde\xd6\xfa\xf4\x8f\x51\x5b\xb0\xc6\x9f\x39\xdf\x28\x1b\x45\x7c\x8f\x91\x7b\xd1\xbb\xa8\xcb\xa3\x55\x88\x18\xdc\x35\xf8\x18\x00\x00\xff\xff\x87\x69\x93\xc4\x3c\x01\x00\x00")

func clusterrolebindingAlamedaDatahubcrbYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingAlamedaDatahubcrbYaml,
		"ClusterRoleBinding/alameda-datahubCRB.yaml",
	)
}

func clusterrolebindingAlamedaDatahubcrbYaml() (*asset, error) {
	bytes, err := clusterrolebindingAlamedaDatahubcrbYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding/alameda-datahubCRB.yaml", size: 316, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingAlamedaEvictionercrbYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\xb1\x6a\x03\x31\x0c\x80\xe1\xdd\xe0\x77\xf0\x0b\xf8\x4a\xb7\xe2\xad\xed\xd0\xfd\x0a\xdd\x75\xb6\x9a\x28\xe7\xb3\x8c\x2c\xdf\x90\xa7\x0f\x17\x92\x21\x04\x0e\x32\x4b\xfa\xf4\x43\xa5\x3f\x94\x46\x5c\x82\x93\x09\xe2\x00\x5d\x8f\x2c\x74\x06\x25\x2e\xc3\xfc\xd1\x06\xe2\xb7\xf5\xdd\x9a\x99\x4a\x0a\xee\x3b\xf7\xa6\x28\x23\x67\xfc\xa2\x92\xa8\x1c\xac\x59\x50\x21\x81\x42\xb0\xc6\xb9\x02\x0b\x06\x07\x19\x16\x4c\xe0\x71\xa5\xb8\x41\x28\x7e\x16\xe6\xe6\xb5\x2b\x0b\x41\xb6\x46\x38\xe3\x88\xff\xd7\x23\xa8\xf4\x23\xdc\xeb\x4e\xc3\xb6\xf6\x94\xf0\xd2\xc3\xd6\xa7\x13\x46\x6d\xc1\x1a\x7f\xa3\x7e\x51\x56\x8a\xf8\x19\x23\xf7\xa2\x7b\xda\x7d\xd6\x2a\x44\x0c\xee\xd1\xbe\x04\x00\x00\xff\xff\x20\x44\xec\x5c\x45\x01\x00\x00")

func clusterrolebindingAlamedaEvictionercrbYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingAlamedaEvictionercrbYaml,
		"ClusterRoleBinding/alameda-evictionerCRB.yaml",
	)
}

func clusterrolebindingAlamedaEvictionercrbYaml() (*asset, error) {
	bytes, err := clusterrolebindingAlamedaEvictionercrbYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding/alameda-evictionerCRB.yaml", size: 325, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingAlamedaOperatorcrbYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8e\xb1\x6e\x02\x31\x10\x44\x7b\x4b\xfe\x07\xff\x80\x2f\x4a\x17\xb9\x4b\x52\xa4\xbf\x48\xf4\x7b\xf6\x02\xcb\xf9\xbc\xd6\x7a\x7d\x05\x5f\x8f\x40\x50\x20\x04\x12\xf5\xcc\xbc\x79\x50\x69\x83\xd2\x88\x4b\x70\x32\x41\x1c\xa0\xeb\x9e\x85\x8e\xa0\xc4\x65\x98\xbf\xda\x40\xfc\xb1\x7e\x5a\x33\x53\x49\xc1\xfd\xe6\xde\x14\x65\xe4\x8c\x3f\x54\x12\x95\x9d\x35\x0b\x2a\x24\x50\x08\xd6\x38\x57\x60\xc1\xe0\x20\xc3\x82\x09\x3c\x57\x14\x50\x16\x3f\x0b\x73\xf3\xda\x95\x85\x20\x5b\x23\x9c\x71\xc4\xed\x65\x02\x95\xfe\x84\x7b\x7d\x61\x70\xae\x3d\x08\xbc\x71\xd7\xfa\x74\xc0\xa8\x2d\x58\xe3\xaf\xa0\x7f\x94\x95\x22\x7e\xc7\xc8\xbd\xe8\x73\xd6\x2d\x69\x15\x22\x06\x77\x4f\x3e\x05\x00\x00\xff\xff\xd4\x6d\x49\x68\x3f\x01\x00\x00")

func clusterrolebindingAlamedaOperatorcrbYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingAlamedaOperatorcrbYaml,
		"ClusterRoleBinding/alameda-operatorCRB.yaml",
	)
}

func clusterrolebindingAlamedaOperatorcrbYaml() (*asset, error) {
	bytes, err := clusterrolebindingAlamedaOperatorcrbYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding/alameda-operatorCRB.yaml", size: 319, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configmapGrafanaDatasourcesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\x4f\x6f\xea\x30\x0c\xc0\xef\x95\xfa\x1d\xac\x9c\x29\x3c\x2e\x4f\x28\xb7\xf7\xc6\x85\xc3\xb4\xc3\x24\x2e\xd3\x34\x99\x36\x85\x8c\x34\x89\xec\x84\x51\x6d\x7c\xf7\x29\x30\xca\x9f\xa5\x97\x36\xf6\xcf\xbf\xd8\x2e\x7a\xbd\x54\xc4\xda\x59\x09\xbb\x69\x59\x6c\xb5\x6d\x24\x3c\x38\xdb\xea\xf5\x23\xfa\xb2\xe8\x54\xc0\x06\x03\xca\xb2\x00\xb0\xd8\x29\x09\x6b\xc2\x16\x2d\x56\x29\xcc\x2e\x52\xad\xf8\x9c\x64\x8f\xb5\x92\xb0\x25\xe7\xb8\x0a\x31\x38\xd2\x68\xca\x62\x10\x78\x72\x9d\x0a\x1b\x15\x79\xdc\x63\x67\x24\x7c\x55\x29\x0c\xf0\x79\x7a\xa5\x47\x5c\x7a\x12\x12\xa6\xa3\xab\xcc\xd5\x8d\x42\xc2\xcb\x25\x73\xa7\x18\x0a\x1c\xad\x17\xcd\x9d\x65\x48\xa6\x86\x85\x04\xb1\xb0\xad\x89\xfb\xf9\x7f\x31\xba\x47\x00\x32\x65\xa1\xf7\xc7\x32\x7d\x2c\x6b\x56\x22\xe7\xc6\xba\x56\x9c\x9a\x14\x9e\xdc\xbe\xcf\x32\x91\x4c\x02\x36\x21\x78\x96\x93\x09\x1a\xec\x54\x83\xd5\xd9\x3b\xbe\xdd\xe2\x98\x77\xb5\x9c\xfd\x99\xfd\xcd\xba\x3c\x32\x7f\x38\x4a\xb3\x0a\x6c\x3a\x6d\x53\x20\x7f\x2b\x2b\x1a\xa8\x2c\x91\xb6\xbc\x42\x3e\x0e\xf9\xa6\x6d\x50\x64\xd1\x64\xc9\x15\xb2\xae\xff\xc5\xb0\x11\x12\x5a\x34\xac\x72\x90\xe6\xb9\x6a\x31\x9a\x20\x24\x04\x8a\x59\xe6\x9d\x9d\x9d\x63\x40\x21\x73\xbf\x31\x2d\xdd\xf0\xf3\x56\xfb\xa5\x22\xdd\xf6\x3f\xa2\xdf\xe0\x21\xe7\x26\x85\xcd\x93\x35\xfd\xb9\xc7\x5b\xe4\x70\x39\xbe\x9e\x3e\x0f\xa7\xd3\x77\x00\x00\x00\xff\xff\x50\xc7\x8a\x1f\x1a\x03\x00\x00")

func configmapGrafanaDatasourcesYamlBytes() ([]byte, error) {
	return bindataRead(
		_configmapGrafanaDatasourcesYaml,
		"ConfigMap/grafana-datasources.yaml",
	)
}

func configmapGrafanaDatasourcesYaml() (*asset, error) {
	bytes, err := configmapGrafanaDatasourcesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ConfigMap/grafana-datasources.yaml", size: 794, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _customresourcedefinitionAlamedarecommendationscrdYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4d\x8f\x13\x31\x0c\xbd\x57\xea\x7f\xb0\x7a\xef\x40\xc5\x05\xcd\x6d\x05\x17\x2e\x2b\xb4\x48\x7b\x41\x1c\xdc\xc4\x74\xc3\x26\x71\x70\x3c\x15\xfb\xef\x51\x92\xce\x4e\x4b\xa7\xc3\xfa\x34\xf3\xfc\xe2\xe7\x4f\x4c\xee\x91\x24\x3b\x8e\x3d\x60\x72\xf4\x47\x29\x96\xbf\xdc\x3d\x7f\xcc\x9d\xe3\x77\xc7\xdd\x9e\x14\x77\xeb\xd5\xb3\x8b\xb6\x87\x4f\x43\x56\x0e\x0f\x94\x79\x10\x43\x9f\xe9\xa7\x8b\x4e\x1d\xc7\xf5\x2a\x90\xa2\x45\xc5\x7e\xbd\x02\xf0\xb8\x27\x9f\xeb\x27\x80\xe1\xa8\xc2\xde\x93\x6c\x95\xd9\x8f\xa1\x7b\xd8\xec\xba\xf7\x9b\xc2\x89\x18\xa8\x07\xf4\x18\xc8\xa2\x90\xe1\x10\x28\x5a\xd4\x9a\x08\x0e\xca\xd9\xa0\x77\xf1\xd0\x95\x50\xe8\x22\x49\xee\xd0\xad\x57\x39\x91\xa9\x22\x07\xe1\x21\xf5\xb0\x40\x6d\x22\x63\x4a\xad\x98\xbb\x26\xf8\x70\x21\xd8\x08\xc9\x0f\x82\xfe\x56\x4e\x85\x93\x0d\x27\xea\xe1\xbe\x44\x4d\x68\xc8\x16\xf0\x88\xde\x35\xce\x49\x88\x13\xc5\xbb\xaf\x5f\x1e\x3f\x7c\x33\x4f\x14\xf0\x84\x02\x24\xe1\x44\xa2\xee\x35\xa3\x62\x67\xc3\x98\x40\x00\x7d\x29\x42\x59\xc5\xc5\xc3\x84\xd7\x12\xfe\x4f\xbb\x18\xcb\x25\x95\xf7\xbf\xc8\xe8\x84\xbf\x76\x73\xb4\xd9\x24\xc7\x89\xb6\xde\xfe\xe3\x00\x70\x4a\xe1\x1a\x5d\x88\xd5\xac\x6e\xc0\x9c\xe3\x56\x5d\x93\xc9\x69\x19\xe7\x03\xdf\x2a\x76\x7a\xfd\x7b\x70\x42\x76\xe6\xf1\xb6\x66\x75\x8d\x2f\x05\x6c\x3e\x14\xc1\x97\x73\xd7\xac\xca\xf6\xac\x8f\x6f\x98\x8e\xa2\x0e\x79\x71\x8c\xc7\xf1\x92\x8f\x3b\xf4\xe9\xa9\x5c\xed\xd9\x2b\x34\x86\x92\x92\xbd\xbf\xba\x83\xcd\xe6\x72\xe9\xdb\xbf\xe1\x68\xeb\x6d\xe7\x1e\xbe\xff\xa8\x2b\xaf\x2c\x64\x4f\x2b\x5a\xd1\xbf\x01\x00\x00\xff\xff\xa6\x65\x21\x8a\x3f\x04\x00\x00")

func customresourcedefinitionAlamedarecommendationscrdYamlBytes() ([]byte, error) {
	return bindataRead(
		_customresourcedefinitionAlamedarecommendationscrdYaml,
		"CustomResourceDefinition/alamedarecommendationsCRD.yaml",
	)
}

func customresourcedefinitionAlamedarecommendationscrdYaml() (*asset, error) {
	bytes, err := customresourcedefinitionAlamedarecommendationscrdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "CustomResourceDefinition/alamedarecommendationsCRD.yaml", size: 1087, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _customresourcedefinitionAlamedascalerscrdYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\xbd\x8e\x2b\x37\x0f\xed\x17\xd8\x77\x20\xfc\x15\xdb\x7c\xb6\xb3\x48\x13\x4c\x11\xe0\xc2\x49\xb1\x08\x72\x11\xec\x06\xb7\x09\x52\xd0\x12\xc7\x66\x56\x22\x15\x89\x63\xc4\x79\xfa\x40\x1a\xff\xdb\x7b\xe1\x00\x51\x35\x3a\x12\x0f\xa9\x43\x52\x1a\x4c\xfc\x85\x72\x61\x95\x0e\x30\x31\xfd\x65\x24\x75\x56\x66\xef\xdf\x95\x19\xeb\x7c\xf3\xbc\x24\xc3\xe7\xc7\x87\x77\x16\xdf\xc1\x62\x28\xa6\xf1\x95\x8a\x0e\xd9\xd1\x0f\xd4\xb3\xb0\xb1\xca\xe3\x43\x24\x43\x8f\x86\x1d\x00\xc0\xe3\x03\x40\xc0\x25\x85\xd2\xd5\x4f\x00\xa7\x62\x59\x43\xa0\x3c\x35\xd5\xb0\xa7\xef\x60\xf2\x3c\xfb\x66\x52\xf7\x08\x46\xea\x00\x03\x46\xf2\x58\x1c\x06\xca\x65\x86\x83\x69\xfd\x66\x59\xcd\x2a\x05\xb2\x34\x98\x1f\x1f\x4a\x22\xd7\xc8\x57\x59\x87\xd4\xc1\x57\xb6\x8e\xe4\xfb\x50\xc6\x83\x7c\x1a\x1d\xbd\x35\x47\xe3\x42\x0a\x43\xc6\x70\x19\x43\x5d\x2b\x4e\x13\x75\xf0\xb9\xb2\x24\x74\xe4\x2b\xb8\xc1\xc0\x1e\xeb\xe1\x77\xc4\x9a\x48\x3e\xfd\xf2\xf2\xe5\xdb\x37\xb7\xa6\x88\x3b\x14\x20\x65\x4d\x94\x8d\x0f\x11\xd4\x71\x22\xfc\x11\x04\xf0\x54\x5c\xe6\xd4\x58\xe1\xfb\xe9\xe9\x12\xc0\x53\x65\x1f\x8d\xc0\x57\xe9\xa9\x80\xad\x09\x36\x23\x46\x1e\x4a\xf3\x0c\xda\x83\xad\xb9\x40\xa6\x94\xa9\x90\x18\x8e\x39\x3a\x25\xd3\x1e\x50\x40\x97\x7f\x90\xb3\x19\xbc\x51\xae\x2c\x50\xd6\x3a\x04\x5f\xd3\xb5\xa1\x6c\x90\xc9\xe9\x4a\xf8\xef\x03\x75\x01\xd3\xe6\x33\xa0\x51\xb1\x73\x4a\x16\xa3\x2c\x18\xaa\x34\x03\xfd\x1f\x50\x3c\x44\xdc\x42\xa6\xea\x04\x06\x39\xa1\x6b\x5b\xca\x0c\x7e\xd6\x4c\xc0\xd2\x6b\x07\x6b\xb3\x54\xba\xf9\x7c\xc5\xb6\xaf\x3e\xa7\x31\x0e\xc2\xb6\x9d\xb7\x02\xe2\xe5\x60\x9a\xcb\xdc\xd3\x86\xc2\x1c\x13\x4f\x5b\xa0\x62\xad\x62\xa3\xff\x5f\xde\x15\x66\x79\x3a\x8d\xcc\xb6\x35\x7b\xc5\x32\xcb\xea\x88\xb7\x3a\xb8\x5f\xfb\x9f\x58\x3c\x70\x01\xdc\x11\x8d\x27\x38\x4a\x5c\xa1\x2a\xcc\xeb\x8f\x6f\xbf\xc2\x3e\x8e\x96\x86\x0b\xdd\x9b\xe2\x47\xbb\x72\x14\xbf\x6a\xc5\xd2\x53\x1e\xb3\xd7\x67\x8d\x8d\x92\xc4\x27\x65\xb1\x36\x71\x81\x49\x2e\x84\x2f\xc3\x32\xb2\xd5\x7c\xff\x39\x50\xb1\x9a\xa4\x19\x2c\x50\x44\x0d\x96\x04\x43\xf2\x68\xe4\x67\xf0\x22\xb0\xc0\x48\x61\x81\x85\xfe\x6b\xe9\xab\xc8\x65\x5a\x45\xbd\x47\xfc\xc3\x6d\x71\xbd\x75\x14\xe8\x88\x1f\x1a\x7d\x3f\x6e\xf6\x53\x1d\xee\xec\x72\xba\xd5\x5e\x1f\x07\x54\x07\x09\x2e\x03\x7d\x60\xb0\x54\x0d\x84\x17\x4d\x94\x34\xb0\xdb\x5e\x59\x90\x0c\xf1\x0a\x9c\x42\xb1\xca\x7f\x8d\x3b\x8d\x09\x9d\xdd\x1f\x68\xa1\x40\xce\x34\x5f\xf9\x38\x2b\xe1\xa7\x97\x98\x34\x1b\x8a\x75\xf0\x3a\x08\x4c\x22\xbe\xd3\xa4\x36\x70\xa6\x15\x09\x65\x34\x02\xa7\x9e\x00\x7b\xa3\x0c\x51\x3d\xf7\xdb\xb1\x8e\x6b\xf9\x71\xa0\xa7\xdb\x31\x5d\xa6\x08\x5a\xe5\x71\xa6\xf3\x86\x9a\x1e\x02\x3d\x47\x47\x9d\xef\xc8\xbc\xa1\x0d\xe5\xbe\xdc\xef\x2e\xed\xc5\xe1\x9d\xb9\xd2\xe6\x43\xd3\x51\xb8\x14\x74\x1b\x49\xcc\xa9\xf4\xbc\xba\xb5\xe7\xe3\xd3\x5f\x72\xfc\x7b\xeb\x9b\xfa\x8d\x6a\x9d\xd0\x7e\x6d\x71\x17\xf7\xbd\x09\xbb\xc4\x37\xfb\xbf\x80\xcd\x33\x86\xb4\xae\x2f\xfe\x89\xfc\xe8\x1c\x25\x23\xff\xf9\xea\x1d\x9d\x4c\xce\x1f\xcf\x71\xee\x54\x7c\xfb\x2f\x28\x1d\xfc\xf6\x7b\x7b\x42\x4d\x33\xf9\x5d\x4f\x36\xf4\x9f\x00\x00\x00\xff\xff\xae\x07\x76\xea\x7b\x08\x00\x00")

func customresourcedefinitionAlamedascalerscrdYamlBytes() ([]byte, error) {
	return bindataRead(
		_customresourcedefinitionAlamedascalerscrdYaml,
		"CustomResourceDefinition/alamedascalersCRD.yaml",
	)
}

func customresourcedefinitionAlamedascalerscrdYaml() (*asset, error) {
	bytes, err := customresourcedefinitionAlamedascalerscrdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "CustomResourceDefinition/alamedascalersCRD.yaml", size: 2171, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAdmissionControllerdmYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\x51\x6f\xe2\x38\x10\xc7\xdf\x91\xf8\x0e\xa3\x7d\xe9\x53\x12\x56\x77\xec\xe9\xfc\x96\x25\x59\x5d\x75\xc0\x22\xe0\x56\xea\x13\x9a\x3a\xc3\xc5\xc2\xb1\x53\x7b\x92\x8a\x6f\x7f\x32\x34\x94\xb4\x50\x7a\x7e\x4a\x66\xec\xdf\xfc\x67\x3c\x1e\xac\xd5\x2f\x72\x5e\x59\x23\x00\xeb\xda\x27\xed\xd7\xe1\x60\xa7\x4c\x21\x20\xa3\x5a\xdb\x7d\x45\x86\x87\x83\x8a\x18\x0b\x64\x14\xc3\x01\x80\xc1\x8a\x04\x60\x51\x29\x1f\x0e\x46\xd2\x1a\x76\x56\x6b\x72\x9d\xd7\xd7\x28\x49\xc0\xce\x59\xeb\x23\x6e\xd8\x3a\x85\x3a\x38\xd1\x18\xcb\xc8\xca\x1a\x7f\x40\x01\x14\xe4\xa5\x53\x35\x1f\x14\x64\xb4\x55\x86\x3c\x94\xf6\x19\xd8\x42\x71\x50\x00\x5c\xd2\xd5\x68\x00\x4c\x55\xad\x91\x29\x46\x5d\x97\x18\xdb\x9a\x8c\x2f\xd5\x96\x63\x65\x93\x67\x54\x1c\x6d\xad\x8b\x1c\x61\xb1\x17\x70\xc7\xae\xa1\xbb\xe1\xc0\xd7\x24\x0f\xf1\x1d\xd5\x5a\x49\xf4\x02\xbe\x86\x5f\x4f\x9a\x24\x5b\xf7\xa2\xad\x42\x96\xe5\x14\x1f\x49\x77\x6a\x21\x14\xe9\x7a\xee\x9d\x96\xee\xfc\x79\xd5\xc2\xfa\xb8\x72\x61\xe9\x7e\xb4\x1b\xf1\x00\x4e\x99\x84\x15\x9c\xa8\x0c\xb9\x57\x40\xf4\x89\x98\x00\xaa\xc2\x7f\x49\xc0\x53\x83\xfb\x50\xb6\xda\xd9\xba\x24\xf6\x6c\x5d\x82\x1a\x2b\x2a\x30\x7a\x05\xb8\x92\xb4\x68\x47\xf1\x6f\xf1\xb7\x37\x84\x45\xa3\xf5\xc2\x6a\x25\xf7\x02\xee\xb7\x73\xcb\x0b\x47\xfe\xd0\x3f\xdd\x36\x47\xde\x36\x4e\xd2\x79\x86\x00\x5a\x55\x8a\xfb\x26\x00\x59\x37\x02\xbe\x8d\xaa\xbe\xb5\xa2\xca\xba\xbd\x80\x3f\x47\x33\x75\xee\x71\xf4\xd4\x90\xbf\x0c\xf9\x7d\x7c\x05\xf2\xc7\xf8\x1c\x42\xa6\x3d\x3b\xdd\x15\x2e\x9d\xa6\xb3\x3c\x4b\x37\x69\x36\x9b\xac\xa7\x9b\x2c\x5f\x4c\x7f\x3e\xe4\xd9\x66\x9e\xce\xf2\xd5\x22\x9d\xe4\xe7\xe8\x16\x75\x43\x3f\x9c\xad\xde\xc8\xd8\x2a\xd2\xc5\x92\xb6\x6f\xcc\x2f\x8e\x05\x72\x29\x4e\xcd\x12\x9f\x1e\xd0\x6d\x31\xe9\x3a\xfd\xeb\x9f\xef\x9b\x34\xcb\x96\xf9\x6a\xf5\x4e\x89\x80\x2f\xdd\xf5\x05\x72\xd9\x3c\xc6\xfd\x27\x19\xfb\x56\x8a\xf1\x68\x34\x1e\x7d\xb9\x19\x2c\x9f\xa7\xdf\xa7\xef\xb3\x15\x70\xb7\x45\xed\xc3\xab\xba\x01\x58\x4f\x57\x9b\x49\xbe\x5c\x6f\x7e\xdc\x5f\xe4\x24\xc4\x32\x61\xed\x23\x49\x8e\x7d\xf8\x8a\xa5\xe3\x4f\x61\x17\xcb\xfb\x5f\xe9\x3a\xdf\xfc\x9d\x3f\xfc\x0f\xfa\x8e\xf6\x37\xe9\x93\xf4\x63\xcd\x2d\xba\xc4\x35\x26\xf1\x24\x1d\xb1\x4f\x76\xcd\x23\x39\x43\x4c\x3e\x3c\x24\x4f\xae\x55\x92\x50\x4a\xdb\x18\xee\x7e\x23\x89\xfd\xcc\x5a\xab\x9b\x8a\x66\x61\x8f\xef\xb5\x60\x15\x4c\xc7\xf6\xe8\xeb\x3f\x97\x72\xd4\x7d\xd1\x15\xc6\xde\x4f\xa3\xf7\x02\x0e\x77\xd4\xb9\x8e\xf1\xde\x0f\x89\x0b\x8c\x63\x5e\xbd\xbe\x3d\x9a\xe6\x57\xc7\x4a\xc4\xfa\x04\x78\xc9\x38\x3d\x16\xe0\xe3\x31\xd4\xdf\x7b\x9d\xff\x5f\x00\x00\x00\xff\xff\xd1\x71\x8c\x2f\xb3\x06\x00\x00")

func deploymentAdmissionControllerdmYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAdmissionControllerdmYaml,
		"Deployment/admission-controllerDM.yaml",
	)
}

func deploymentAdmissionControllerdmYaml() (*asset, error) {
	bytes, err := deploymentAdmissionControllerdmYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment/admission-controllerDM.yaml", size: 1715, mode: os.FileMode(438), modTime: time.Unix(1553162135, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAlamedaDatahubdmYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4d\x4f\xe3\x3c\x10\xbe\x57\xea\x7f\x98\x1b\xa7\xa4\xa9\x5e\x81\xc0\xb7\xa0\xf4\x15\x48\x6d\xa9\x5a\xba\xbb\xb7\x6a\x70\xa6\xc4\xc2\x5f\xd8\xe3\xb2\xfd\xf7\xab\x44\x1b\x68\x51\xcb\x8a\xb9\x79\xc6\xcf\x87\x1f\x8d\xd1\xab\x1f\x14\xa2\x72\x56\x00\x7a\x1f\x47\xbb\xf1\x70\xf0\xa2\x6c\x2d\xa0\x22\xaf\xdd\xde\x90\xe5\xe1\xc0\x10\x63\x8d\x8c\x62\x38\x00\xb0\x68\x48\x00\x6a\x34\x54\x63\xd6\xb6\x9b\xf4\xd4\x0f\xa2\x47\x49\x02\x5e\x82\x73\x31\xe3\xc4\x2e\x28\xd4\xed\x10\xad\x75\x8c\xac\x9c\x8d\x1d\x0b\x40\x4d\x51\x06\xe5\xb9\x13\xaf\x68\xab\x2c\x45\x68\xdc\x1b\xb0\x83\xba\x13\x07\x6e\xa8\xb5\xa5\x95\xec\x90\xa7\x44\x01\x98\x8c\xd7\xc8\x94\xa3\xf6\x0d\xe6\xce\x93\x8d\x8d\xda\x72\xae\xdc\xe8\x0d\x15\x67\x5b\x17\xb2\x40\x58\xef\x05\x5c\x70\x48\x74\x31\x1c\x44\x4f\xb2\xb3\x11\xa8\x63\x8f\x02\xc6\xed\x31\x92\x26\xc9\x2e\xfc\xb5\x68\x90\x65\x33\xc5\x27\xd2\xbd\x69\x68\xfd\x9c\x7c\x7d\x6f\xa3\x87\x1e\x46\xd6\xd6\xd9\xd8\xda\xd2\xc7\x1a\xe7\x55\x00\xde\xad\xb7\x25\x9d\x65\x54\x96\xc2\x07\x36\xfb\x5a\x09\x40\x19\x7c\x26\x01\xaf\x09\xf7\x6d\x44\x3e\x38\xdf\x10\x47\x76\x61\xf4\x09\x93\x85\x86\xb4\xd8\x15\xf9\x7f\xf9\xd5\x27\xfc\x22\x69\xbd\x70\x5a\xc9\xbd\x80\xfb\xed\xdc\xf1\x22\x50\xec\x76\xa5\xbf\x16\x28\xba\x14\x24\x1d\xbe\x0a\x40\x2b\xa3\xf8\xb8\x05\x20\x7d\x12\x30\x2e\x0a\x73\xdc\x36\x64\x5c\xd8\x0b\x18\x5f\x16\x33\x75\x38\x0a\xf4\x9a\x28\x9e\xa6\xb9\x3c\xcb\x52\x1c\xb1\x90\xdd\x1d\xc0\xfb\xd0\xca\x69\x39\x9b\x54\xe5\xa6\x2a\x1f\xcb\xbb\xf5\xed\xe6\x7e\xfe\xff\x74\xfd\xab\xba\xdd\x94\x55\xb5\x9c\xac\x56\x87\xd4\x3b\xd4\x89\x04\x34\xcc\x3e\x8a\xd1\x7b\x76\xca\x6e\x75\xfa\x5d\x3f\xe5\xc7\x7f\x20\x8f\x3b\x29\xae\x8b\xeb\xab\x6f\x88\xae\x57\x93\xe5\xbc\x9c\x4d\x4e\xa8\x62\x6d\x94\xfd\x06\xd5\xa2\x5c\xad\x7e\x3e\x2c\xab\x73\x54\x1e\x63\xfc\x37\xdd\x62\xf9\x30\x9b\x3c\xde\x4d\xd6\xab\xcd\x7a\x39\xfd\x22\x0c\x1f\x9c\x21\x6e\x28\xc5\xec\xe5\x3a\x7e\xfc\xc9\xcc\x38\xab\xda\x40\xec\x73\x17\xc8\x4d\x71\x33\xee\x69\x22\x85\x9d\x92\x54\x4a\xe9\x92\xe5\xb3\x0b\x7c\x7c\x6d\x7e\x6a\xd7\xff\x04\x00\x00\xff\xff\xc0\x55\x64\xef\xd6\x04\x00\x00")

func deploymentAlamedaDatahubdmYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAlamedaDatahubdmYaml,
		"Deployment/alameda-datahubDM.yaml",
	)
}

func deploymentAlamedaDatahubdmYaml() (*asset, error) {
	bytes, err := deploymentAlamedaDatahubdmYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment/alameda-datahubDM.yaml", size: 1238, mode: os.FileMode(438), modTime: time.Unix(1553224507, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAlamedaEvictionerdmYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\xc1\x6e\xdb\x30\x0c\x86\xef\x01\xf2\x0e\x44\x2f\x3d\xd9\x75\xb1\xa5\xc3\x74\x73\x67\x03\x2b\x90\x66\x41\xdb\xf5\x1a\xb0\x32\x33\x0b\x95\x44\x55\xa2\x5d\xe4\xed\x07\x07\x73\xe7\x6c\x4d\x36\x9e\x12\x91\xfc\x3f\xf2\x97\x8c\xc1\x3c\x52\x4c\x86\xbd\x02\x0c\x21\x5d\xf4\x97\xf3\xd9\xb3\xf1\x8d\x82\x8a\x82\xe5\x9d\x23\x2f\xf3\x99\x23\xc1\x06\x05\xd5\x7c\x06\xe0\xd1\x91\x02\xb4\xe8\xa8\xc1\x8c\x7a\xa3\xc5\xb0\xa7\x38\xe6\x52\x40\x4d\x0a\x9e\x23\x73\xca\xa4\x13\x8e\x06\xed\x90\x44\xef\x59\x70\x28\x4e\x7b\x21\x80\x86\x92\x8e\x26\xc8\x9e\x5f\xd1\xd6\x78\x4a\xd0\xf2\x2b\x08\x43\xb3\xe7\x83\xb4\x74\x84\x05\x20\xe4\x82\x45\xa1\x1c\x6d\x68\x31\xe7\x40\x3e\xb5\x66\x2b\xb9\xe1\x8b\x57\x34\x92\x6d\x39\x66\x91\xb0\xd9\x29\x38\x97\xd8\xd1\xf9\x7c\x96\x02\xe9\x3d\x3d\x52\xb0\x46\x63\x52\x70\x39\xfc\x4d\x64\x49\x0b\xc7\x5f\x93\x39\x14\xdd\x2e\xf1\x89\xec\x38\x2b\x0c\x06\x1d\xdb\x7b\x9c\x64\xec\x9e\xfa\x35\xc4\x29\xcf\x86\xb0\x87\xa4\x93\x2c\x80\xb7\x1d\x86\xd0\xec\x05\x8d\xa7\xf8\xbb\x3d\xfb\x27\x0f\xc0\x38\xfc\x41\x0a\x5e\x3a\xdc\x0d\x76\x85\xc8\xa1\x25\x49\xc2\xf1\xe2\xef\xb6\x2c\xb6\x64\x55\x5f\xe4\x1f\xf2\xab\x3f\x24\xd6\x9d\xb5\x6b\xb6\x46\xef\x14\xdc\x6c\x57\x2c\xeb\x48\x69\xff\x68\xc6\xb2\x48\x89\xbb\xa8\x69\xba\x1e\x80\x35\xce\xc8\xe1\x11\x80\x0e\x9d\x82\xab\xc2\x1d\x9e\x3a\x72\x1c\x77\x0a\x3e\x17\xb7\x66\x9a\x89\xf4\xd2\x51\x7a\x5f\xe4\xe3\xe2\x88\xc8\xa7\xc5\x54\x84\x7c\x3f\xe9\x1e\x7d\x2b\x97\xe5\x6d\x5d\x95\x9b\xfa\xf1\xe6\xcb\xc3\xcd\xb7\x55\x7d\xb7\xa9\xca\x87\xf2\xeb\xf7\xeb\x4d\x59\x55\x77\xf5\xfd\xfd\x54\xbb\x47\xdb\x91\x82\xb3\xd1\xb6\xe1\xe2\xdb\xee\x29\x3f\xfc\x00\xf2\xd4\x6b\xb5\x28\x8a\x45\x71\xf6\x5f\xc0\xf1\xe7\xa6\x5e\x95\xd7\xcb\xfa\x3d\xe0\x16\x6d\xa2\x37\xb5\x44\xb1\x37\x9a\x4a\xad\xb9\xf3\x72\xea\xf2\x0f\x2b\x57\x47\x9e\xca\xcf\x00\x00\x00\xff\xff\x9a\x52\x24\x77\x1b\x04\x00\x00")

func deploymentAlamedaEvictionerdmYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAlamedaEvictionerdmYaml,
		"Deployment/alameda-evictionerDM.yaml",
	)
}

func deploymentAlamedaEvictionerdmYaml() (*asset, error) {
	bytes, err := deploymentAlamedaEvictionerdmYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment/alameda-evictionerDM.yaml", size: 1051, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAlamedaGrafanadmYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4f\x6f\xe2\x3e\x10\xbd\x23\xf1\x1d\xe6\xc6\x29\x09\xb4\xfd\x5d\x7c\x6d\x2f\x3f\x69\xa9\x72\x58\xf5\x3e\x38\x13\x62\xd5\xf6\x78\xed\x09\x15\xdf\x7e\xe5\x34\x29\x09\x65\xd9\x9d\x0b\x62\xfe\xbc\xf7\xe6\x79\x00\x83\x79\xa3\x98\x0c\x7b\x05\x18\x42\xaa\x4e\xbb\xf5\xea\xdd\xf8\x46\xc1\x0b\x05\xcb\x67\x47\x5e\xd6\x2b\x47\x82\x0d\x0a\xaa\xf5\x0a\xc0\xa3\x23\x05\x68\xd1\x51\x83\xc5\x31\x62\x8b\x1e\xa7\x42\x0a\xa8\x49\xc1\x7b\x64\x4e\x85\xf4\xc2\xd1\xa0\xcd\x45\xf4\x9e\x05\xc5\xb0\x4f\x03\x0a\x40\x43\x49\x47\x13\x64\x20\x7f\xa1\xd6\x78\x4a\xd0\xf1\x07\x08\x43\x33\x90\x83\x74\x94\x65\x59\xa3\x87\x49\x98\x91\x01\x08\xb9\x60\x51\xa8\x44\x1b\x3a\x2c\x39\x90\x4f\x9d\x69\xa5\x34\x5c\x7d\xa0\x91\xa2\xe5\x58\x44\xc2\xe6\xac\x60\x23\xb1\xa7\xcd\x7a\x95\x02\xe9\x81\x3e\xd2\x80\x9a\x14\xec\xf2\xd7\x44\x96\xb4\x70\x1c\xa5\x39\x14\xdd\xfd\xc0\x03\xd9\x49\x6c\x0e\x0c\xe1\xe6\xde\x93\x90\x69\x78\x6e\x56\x0e\xfb\xaf\x40\x00\x5f\xfa\x72\x68\xf6\x82\xc6\x53\xbc\xcc\x16\xa3\xfb\x8b\xa1\x1c\xc6\xe1\xf1\x92\xaf\xc6\x4f\xf5\x5f\xf9\x54\x3e\x5e\x75\xd5\xbd\xb5\x35\x5b\xa3\xcf\x0a\xfe\x6f\x5f\x59\xea\x48\x69\x78\xe6\xa9\x2d\x70\x94\xb9\xde\xcc\xfb\x25\xa6\xe6\x28\x0a\x1e\xb7\xdb\xed\xbc\x61\x3a\x8b\x4e\x24\x2c\xf3\x21\xb2\xb0\x66\xab\xe0\xe7\x73\x7d\x29\x45\x4a\xdc\x47\x4d\x4b\x1e\x6b\x9c\xb9\xa2\x06\xd0\xa1\x57\xf0\xb0\xdd\xba\x65\xda\x91\xe3\x78\x1e\x2a\x7b\x33\x2f\x45\xfa\xd5\x53\xba\x0d\xb3\xfb\x23\xcc\x6e\x09\x73\x62\xdb\x3b\xda\x73\xef\xbf\x59\xe1\x72\xb2\x46\xe9\x14\x54\x27\x8c\x95\x35\x87\xea\xdb\x83\x5c\x2c\x19\x4b\x45\x12\x8e\x78\xa4\x65\x4b\xea\x0f\x9f\x48\x37\x00\x96\x4c\x24\x7a\x62\xa9\x42\xe4\x93\xc9\xbf\x5a\xe3\x8f\x55\xbe\xb5\xd1\xcb\x7b\xf4\x37\xda\x3e\x77\x9c\xaf\x57\xfc\x5d\x73\xc8\xff\x17\x49\xc8\xcb\xdb\x30\xfe\x6c\xd1\xb8\x6b\xab\x73\xee\x75\x40\xda\xb8\x73\x31\x9e\x7a\x39\xa2\x96\xe1\xa4\x37\x73\x4e\xcd\xbe\x35\xc7\x3d\x86\x2b\x98\x86\x5a\xec\xad\xec\xb9\x21\x05\x4f\x0f\x37\x0f\xee\xce\x7a\x77\x9b\xe0\x77\x00\x00\x00\xff\xff\xe3\xc1\x33\x76\xfb\x04\x00\x00")

func deploymentAlamedaGrafanadmYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAlamedaGrafanadmYaml,
		"Deployment/alameda-grafanaDM.yaml",
	)
}

func deploymentAlamedaGrafanadmYaml() (*asset, error) {
	bytes, err := deploymentAlamedaGrafanadmYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment/alameda-grafanaDM.yaml", size: 1275, mode: os.FileMode(438), modTime: time.Unix(1553218344, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAlamedaInfluxdbdmYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x94\x4f\x6f\xe2\x3c\x10\xc6\xef\x48\x7c\x87\x51\xdf\x03\xa7\x40\x39\xbd\x52\x6e\x14\xd2\x6d\xb4\x2d\x8d\xf8\xd3\xdd\x3d\xa1\xc1\x19\x8a\x55\xc7\xb6\xec\x09\x6d\xbe\xfd\xca\x69\xb3\x0d\x14\x68\xa5\x5d\x1f\x10\xf1\xf8\xf9\x3d\x33\xb6\xc7\x68\xe5\x03\x39\x2f\x8d\x8e\x01\xad\xf5\x83\xdd\xb0\xdb\x79\x92\x3a\x8f\x61\x42\x56\x99\xaa\x20\xcd\xdd\x4e\x41\x8c\x39\x32\xc6\xdd\x0e\x80\xc6\x82\x62\x40\x85\x05\xe5\x18\x49\xbd\x51\xe5\x4b\xbe\x6e\x22\xde\xa2\xa0\x18\x9e\x9c\x31\x3e\xe2\x92\x8d\x93\xa8\x42\x10\xb5\x36\x8c\x2c\x8d\xf6\x35\x06\x20\x27\x2f\x9c\xb4\x5c\xbb\x4f\x68\x23\x35\x79\xd8\x9a\x67\x60\x03\x79\xed\x0e\xbc\xa5\x90\x97\x92\xa2\x56\x42\xdb\x0d\x80\xa9\xb0\x0a\x99\xfa\xa8\xec\x16\xfb\xc6\x92\xf6\x5b\xb9\xe1\xbe\x34\x83\x67\x94\x1c\x6d\x8c\x8b\x1c\x61\x5e\xc5\xd0\x63\x57\x52\xaf\xdb\xf1\x96\x44\xed\xef\xa8\xc6\xfa\x18\x86\xe1\xd3\x93\x22\xc1\xc6\xbd\xe5\x56\x20\x8b\xed\x2d\xae\x49\x35\xd9\x86\x81\xd6\x1e\xaf\xbc\xc9\xa4\x51\xb7\xf7\x2b\x0c\xf5\x65\x12\xc0\x9f\x0c\xc3\xf8\x0f\x3c\x89\xd2\x49\xae\xc6\x46\x33\xbd\x70\x2b\x02\xe0\x4a\x3d\xf2\x4b\x4f\x2e\x86\xe1\xe5\xe5\x65\x13\x12\x46\x33\x4a\x4d\xee\xdd\x31\x7a\x3b\xb6\x7d\xab\x30\x64\x81\x8f\xad\x40\x3c\xec\xff\x1f\xa1\xb2\x52\xd3\xc1\x9a\xac\x54\x2a\x33\x4a\x8a\x2a\x86\x74\x33\x35\x9c\x39\xf2\xf5\xf5\x68\x96\x91\xde\xb5\x4a\x6c\x2c\xd3\xe9\xf5\xed\xf2\xe7\xe4\x6a\x35\x4b\xb2\xfb\xd9\x22\x9d\x7e\x5b\x4d\xd2\xf9\xe8\xea\x36\x99\xbc\x2f\x06\xd8\xa1\x2a\x29\x86\x8b\x70\x4e\x17\x67\x28\x37\x8b\x45\x56\xff\xcc\x57\xc9\xf4\x5f\x50\xc6\xc9\x6c\x91\x5e\xa7\xe3\xd1\x22\x39\x46\x1a\x10\x8b\x01\x2b\x3f\xb0\x4e\xee\x90\x29\xfc\xef\x0b\xc7\x5f\xa4\x67\xb3\xf4\x61\xb4\x48\x56\xdf\x93\x5f\x5f\xa6\x3f\x51\xf5\x29\x7d\xb4\x5c\xdc\xfc\xcd\x06\x8c\x26\x77\xe9\x74\xb5\x9c\x27\xb3\x63\x6a\xcc\x0b\xa9\x3f\x97\x67\xa3\xf9\xfc\xc7\xfd\xec\x68\x02\x35\xc2\xa2\xf7\xe7\x30\xa7\xfc\x4b\x4f\xee\x33\xdd\x59\xf7\x00\x38\x30\xdf\x19\x55\x16\x74\x67\x4a\xcd\x7e\xef\x9a\x16\x61\x2a\x43\xde\xc6\x70\x78\x1c\x6d\xf4\xfe\xbb\x17\xda\x7b\x5b\xae\x23\x56\xbe\xbd\x28\xbc\x36\xf7\x5a\x55\x31\x6c\x50\x79\x3a\x65\xb3\x43\x37\x50\x72\x3d\xf8\xd8\x8e\x70\xd0\xa8\x91\x67\xe3\xf0\x71\x2f\x13\x5f\xae\x5f\x39\x87\xf2\xd7\x12\x4f\x77\xfd\x47\x98\x0d\xaf\xbf\x67\xd2\xfc\x50\x6b\xc7\x0a\x65\x11\xb7\xcd\x44\x98\x99\xd6\x98\x5e\x51\x45\x6f\xf5\xf7\x1b\x64\xdf\xee\x44\xef\xd0\xef\xec\x26\x79\x12\x8e\x78\xcf\xe3\x75\x6a\x7a\x4a\xfb\x3b\x00\x00\xff\xff\x74\x9f\x8f\x39\xa6\x06\x00\x00")

func deploymentAlamedaInfluxdbdmYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAlamedaInfluxdbdmYaml,
		"Deployment/alameda-influxdbDM.yaml",
	)
}

func deploymentAlamedaInfluxdbdmYaml() (*asset, error) {
	bytes, err := deploymentAlamedaInfluxdbdmYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment/alameda-influxdbDM.yaml", size: 1702, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAlamedaOperatordmYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\x4d\x6f\xdb\x3c\x0c\xbe\x07\xc8\x7f\x20\x7a\xe9\xc9\x8e\xd3\xf7\xed\x0e\xba\x79\x70\x80\x0d\xe8\x47\x90\x76\xbb\x06\xac\xcc\xcc\x42\x65\x51\xa5\x68\x17\xf9\xf7\x83\x8d\x79\x8b\x8b\x64\xe3\x4d\x22\x9f\x0f\x3d\x14\x46\xf7\x9d\x24\x39\x0e\x06\x30\xc6\xb4\xea\xd7\xcb\xc5\xab\x0b\xb5\x81\x8a\xa2\xe7\x63\x4b\x41\x97\x8b\x96\x14\x6b\x54\x34\xcb\x05\x40\xc0\x96\x0c\xa0\xc7\x96\x6a\xcc\x38\x92\xa0\xb2\x4c\x9d\x14\xd1\x92\x81\x57\x61\x4e\x99\x76\xca\xe2\xd0\x0f\x4d\x0c\x81\x15\xd5\x71\x48\x23\x0d\x40\x4d\xc9\x8a\x8b\x3a\xaa\x57\x74\x70\x81\x12\x34\xfc\x0e\xca\x50\x8f\xea\xa0\x0d\x0d\xbe\xbc\xb3\x23\xf2\xac\x2a\x80\x52\x1b\x3d\x2a\xe5\xe8\x63\x83\x39\x47\x0a\xa9\x71\x07\xcd\x1d\xaf\xde\xd1\x69\x76\x60\xc9\x84\xb0\x3e\x1a\xb8\x56\xe9\xe8\x7a\xb9\x48\x91\xec\xe8\x43\x68\xa4\x4f\x06\xd6\xc3\x31\x91\x27\xab\x2c\xbf\x3c\xb6\xa8\xb6\xb9\xc3\x17\xf2\x93\x6b\x18\x0c\x9d\x7f\xff\xe4\x63\xc2\x9e\xa6\x36\xd4\xe5\xe4\x86\xf2\x73\x95\xbf\xe8\x00\xfc\x76\x3f\x94\xe5\xa0\xe8\x02\xc9\x1f\x70\xf6\x0f\x2d\x00\xd7\xe2\x0f\x32\xf0\xd6\xe1\x71\x88\x29\x0a\xc7\x86\x34\x29\xcb\xea\x23\x28\x93\x86\xbc\xe9\x8b\xfc\xbf\xfc\xd3\x07\x82\x6d\xe7\xfd\x96\xbd\xb3\x47\x03\x5f\x0f\x0f\xac\x5b\xa1\x34\x7e\x99\x69\x4c\x28\x71\x27\x96\x4e\x1f\x06\xe0\x5d\xeb\x74\x7e\x05\x60\x63\x67\xe0\xa6\x68\xe7\xb7\x2d\xb5\x2c\x47\x03\xff\x17\xf7\xee\xb4\x23\xf4\xd6\x51\x3a\x4f\xb2\xbe\x44\x72\x33\x23\xa1\xd0\x9f\xa0\xa7\xcc\xca\xbb\xf2\x7e\x53\x95\xfb\xc7\xed\x66\x57\x3e\x3f\xee\xf6\x55\xf9\x5c\x7e\xf9\xf6\x79\x5f\x56\xd5\x6e\xf3\xf4\x74\xca\xdc\xa3\xef\xc8\xc0\xd5\x14\xd9\xb0\xee\xa6\x7b\xc9\xe7\xdf\x3f\x4f\xbd\x35\xb7\x45\x71\x5b\x5c\x4d\xe0\x44\xd2\x3b\x4b\xa5\xb5\xdc\x05\xbd\xbc\xa8\xf9\xdc\xc3\xd9\xa5\x0e\x73\x3f\x03\x00\x00\xff\xff\xda\xf8\xa8\xef\xc9\x03\x00\x00")

func deploymentAlamedaOperatordmYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAlamedaOperatordmYaml,
		"Deployment/alameda-operatorDM.yaml",
	)
}

func deploymentAlamedaOperatordmYaml() (*asset, error) {
	bytes, err := deploymentAlamedaOperatordmYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment/alameda-operatorDM.yaml", size: 969, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _persistentvolumeclaimMyAlamedagrafanapvcYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8c\xb1\x6a\x03\x31\x10\x44\xfb\x83\xfb\x87\xfd\x81\x33\x24\xa5\xda\x14\xa9\x42\x42\x0a\xa7\x1e\xa4\x89\x11\x3e\x69\x95\xdd\x95\x21\x7f\x1f\x6c\xb8\x94\xef\xcd\xf0\x30\xea\x99\xe6\x55\x7b\x92\xdb\xd3\xba\x5c\x6b\x2f\x49\x3e\xee\xca\x83\x3d\xce\xba\xcf\xc6\x97\x1d\xb5\xad\x4b\x63\xa0\x20\x90\xd6\x45\xa4\xa3\x31\x49\xfb\xdd\xb0\xa3\xb1\xe0\x74\x31\x7c\xa3\xe3\x34\x6e\xf9\xd8\x7d\x20\x33\xc9\xd5\x54\x7d\x8b\x19\x6a\x15\xfb\xba\xf8\x60\x7e\x34\x90\x33\xdd\xdf\xb4\xd0\x1f\x2c\xb2\xc9\x27\x51\xbe\xac\x06\xdf\x7b\xe6\x5d\x1a\x5d\xa7\xe5\xff\x8b\xf1\x67\xd2\xe3\x40\x11\x0f\x35\x5c\x98\xe4\xf9\xb5\xca\x5f\x00\x00\x00\xff\xff\xcd\x80\xb5\x5b\xd1\x00\x00\x00")

func persistentvolumeclaimMyAlamedagrafanapvcYamlBytes() ([]byte, error) {
	return bindataRead(
		_persistentvolumeclaimMyAlamedagrafanapvcYaml,
		"PersistentVolumeClaim/my-alamedagrafanaPVC.yaml",
	)
}

func persistentvolumeclaimMyAlamedagrafanapvcYaml() (*asset, error) {
	bytes, err := persistentvolumeclaimMyAlamedagrafanapvcYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "PersistentVolumeClaim/my-alamedagrafanaPVC.yaml", size: 209, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _persistentvolumeclaimMyAlamedainfluxdbpvcYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8c\x31\x4f\x03\x31\x0c\x46\xf7\x93\xee\x3f\x78\xeb\x74\x15\x5d\xb3\x32\x30\x21\x10\x43\x99\x4d\xf2\x81\xac\x26\x71\xb0\x9d\x0a\xfe\x3d\x6a\xa5\x63\x7c\x4f\x4f\x8f\x87\x9c\x61\x2e\xda\x13\x5d\x4f\xeb\x72\x91\x5e\x12\xbd\xde\x94\x07\x7a\x9c\xb5\xce\x86\xc7\xca\xd2\xd6\xa5\x21\xb8\x70\x70\x5a\x17\xa2\xce\x0d\x89\xda\xef\xc6\x95\x1b\x0a\x1f\xa5\x7f\xd6\xf9\x53\x3e\x8e\xe3\x9a\xf7\xc0\x07\x67\x24\xba\x98\xaa\x6f\x31\x43\x4d\xb8\xae\x8b\x0f\xe4\xfb\x84\x73\x86\xfb\xb3\x16\xf8\x9d\x89\x36\x7a\x03\x97\x77\x93\xc0\x4b\xcf\xb8\x49\x83\xeb\xb4\xfc\x9f\x18\xbe\x27\x3c\x76\x24\xf2\x50\xe3\x2f\x24\x3a\x9c\x1e\x9e\xe4\xf0\x17\x00\x00\xff\xff\xca\xf8\x4b\x4d\xd4\x00\x00\x00")

func persistentvolumeclaimMyAlamedainfluxdbpvcYamlBytes() ([]byte, error) {
	return bindataRead(
		_persistentvolumeclaimMyAlamedainfluxdbpvcYaml,
		"PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml",
	)
}

func persistentvolumeclaimMyAlamedainfluxdbpvcYaml() (*asset, error) {
	bytes, err := persistentvolumeclaimMyAlamedainfluxdbpvcYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml", size: 212, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceAdmissionControllersvYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x41\x4e\xc4\x30\x0c\x45\xf7\x95\x7a\x07\x5f\x20\xa5\x88\x59\xa0\x9c\x02\x09\x89\xbd\x49\xcd\x8c\x35\xa9\x1d\xd9\x66\xce\x8f\x92\xaa\x3b\x10\xbb\xe4\xff\xaf\xf7\x8c\x8d\x3f\xc8\x9c\x55\x32\x3c\x9e\xe7\xe9\xce\xb2\x65\x78\x27\x7b\x70\xa1\x79\xda\x29\x70\xc3\xc0\x3c\x4f\x00\x28\xa2\x81\xc1\x2a\x3e\xfe\x00\x7e\xec\x16\xac\xed\x86\x8b\x36\x12\xbf\xf1\x57\x2c\xac\x4f\xa3\x92\x6b\x2a\x64\x91\x9c\x8a\x51\x24\xc1\x9d\x32\xe0\xb6\xb3\x77\x63\x2a\x2a\x61\x5a\x2b\x59\x8a\xea\x1d\x59\xf1\x93\xea\x49\xc7\xd6\x7e\x5f\xf7\xfa\x6f\xd6\xd9\x7a\xc3\x42\x19\xee\xa6\xea\x29\xbe\x43\x8d\xb1\xce\x93\x37\x2a\x43\xd0\xd4\xe2\x50\xa5\xf1\xce\x70\xb9\xbc\x1c\xe6\x40\xbb\x52\xbc\x8d\xf0\x75\x5d\xd7\x9e\x3a\x55\x2a\xa1\xf6\xdf\x71\x3f\x01\x00\x00\xff\xff\xfd\xfe\xa8\xb5\x52\x01\x00\x00")

func serviceAdmissionControllersvYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceAdmissionControllersvYaml,
		"Service/admission-controllerSV.yaml",
	)
}

func serviceAdmissionControllersvYaml() (*asset, error) {
	bytes, err := serviceAdmissionControllersvYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/admission-controllerSV.yaml", size: 338, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceAlamedaDatahubsvYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\x31\xce\x83\x30\x0c\x46\xf7\x48\xb9\x83\x2f\x80\xc4\x3f\xb0\xe4\x1a\xbf\xd4\xfd\x23\x58\x6d\x44\x20\x96\x6d\x38\x7f\x15\xe8\xda\x6e\x96\x9f\xf5\x9e\x21\xe5\xc1\x6a\xa5\xed\x89\xce\xbf\x18\xd6\xb2\x2f\x89\xfe\x59\xcf\x92\x39\x86\x8d\x1d\x0b\x1c\x29\x06\xa2\x8a\x99\xab\x5d\x23\x11\x44\x12\xa1\x62\xe3\x05\x43\x3f\x79\x1d\x73\x27\x3b\x36\xfe\x0a\x4c\x90\x39\xd1\xaa\xad\xd9\xe0\x87\x37\x2d\xa8\x31\x98\x70\xbe\xb4\xd2\xd4\xef\xc0\xf0\x11\x3d\x55\xf2\x1d\xec\x2c\xd1\x34\x8e\xd3\xd8\x17\xc6\x95\xb3\x37\xfd\xf1\xce\x3b\x00\x00\xff\xff\x06\x30\x7d\x22\xdc\x00\x00\x00")

func serviceAlamedaDatahubsvYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceAlamedaDatahubsvYaml,
		"Service/alameda-datahubSV.yaml",
	)
}

func serviceAlamedaDatahubsvYaml() (*asset, error) {
	bytes, err := serviceAlamedaDatahubsvYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/alameda-datahubSV.yaml", size: 220, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceAlamedaGrafanasvYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\x31\xaa\xc3\x30\x10\x44\x7b\x81\xee\xb0\x17\x30\xf8\xf3\x3b\x9d\x22\x10\x48\x3f\x91\x27\x46\x58\x96\xc4\x6a\xe3\xf3\x87\xc8\x55\x8a\xa4\x7b\xec\x83\x7d\x83\x96\x6e\xd4\x9e\x6a\x09\x72\xfc\x79\xb7\xa5\xb2\x04\xb9\x52\x8f\x14\xe9\xdd\x4e\xc3\x02\x43\xf0\x4e\x24\xe3\xce\xdc\x07\x8a\xa0\xb5\x20\xc8\xd8\xb9\x60\x5a\x15\x0f\x14\xbc\x4d\xc1\xce\xaf\xa2\x37\x44\x06\xd9\xb4\xd6\x3e\xd9\xd3\xaa\x26\x64\xef\x7a\x63\x1c\x6f\x5b\x55\x3b\x03\xd3\xe0\x20\xff\xf3\x3c\x9f\x41\x83\xae\xb4\xcb\xc7\xb5\x33\x33\x5a\xd5\x1f\x9b\xe4\x15\x00\x00\xff\xff\xbc\x15\xe7\x75\xe2\x00\x00\x00")

func serviceAlamedaGrafanasvYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceAlamedaGrafanasvYaml,
		"Service/alameda-grafanaSV.yaml",
	)
}

func serviceAlamedaGrafanasvYaml() (*asset, error) {
	bytes, err := serviceAlamedaGrafanasvYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/alameda-grafanaSV.yaml", size: 226, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceAlamedaInfluxdbsvYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\x41\x6a\xc3\x40\x0c\x45\xf7\x06\xdf\x41\x17\x18\xb7\xdd\x94\x30\xa7\x28\x14\xba\x97\xc7\x4a\x2c\x32\x96\x06\x49\x0e\x3d\x7e\xb1\x4d\x29\xee\x22\x3b\x49\xef\xf3\xbe\xb0\xf1\x17\x99\xb3\x4a\x86\xc7\x5b\xdf\xdd\x59\xa6\x0c\x9f\x64\x0f\x2e\xd4\x77\x0b\x05\x4e\x18\x98\xfb\x0e\x00\x45\x34\x30\x58\xc5\xf7\x1d\xc0\x8f\xdc\x80\xb5\xcd\x38\x68\x23\xf1\x99\xaf\x31\xb0\xbe\xec\x48\x6e\xa9\x90\x45\x72\x2a\x46\x91\x04\x17\xca\x80\x15\x17\x9a\x30\x6d\xde\x79\x1d\x53\x54\xdf\x6c\x15\x47\xaa\xbf\x62\x6c\xed\x2f\xc8\x72\xad\xeb\xf7\x34\x6e\xe8\xac\xf8\x4f\xbc\x61\xa1\x0c\x77\x53\xf5\x14\x6b\xa8\x31\xd6\xbe\xf3\x46\x65\x17\x37\xb5\x38\x2a\xd2\x3e\x67\xb8\xbc\x5e\xde\x8f\xca\x40\xbb\x51\x7c\x9c\xae\x4e\x95\x4a\xa8\x3d\xfb\xea\x27\x00\x00\xff\xff\x7d\xb6\x9f\x27\x42\x01\x00\x00")

func serviceAlamedaInfluxdbsvYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceAlamedaInfluxdbsvYaml,
		"Service/alameda-influxdbSV.yaml",
	)
}

func serviceAlamedaInfluxdbsvYaml() (*asset, error) {
	bytes, err := serviceAlamedaInfluxdbsvYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/alameda-influxdbSV.yaml", size: 322, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountAdmissionControllersaYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcb\x31\x0e\xc3\x30\x08\x00\xc0\xdd\x92\xff\xc0\x07\x32\x74\x65\xeb\x1b\x2a\x75\x47\x98\x01\xc5\x86\x08\x88\xdf\x5f\x75\xc8\x7c\x3a\xba\xf4\x2b\x91\xea\x86\xb0\x5f\xbd\x9d\x6a\x03\xe1\x23\xb1\x95\xe5\xcd\xec\xb7\x55\x6f\x4b\x8a\x06\x15\x61\x6f\x00\x46\x4b\x10\x68\x2c\xcd\xff\x3b\xd8\xad\xc2\xe7\x94\x78\x34\x2f\x62\x41\x38\xc3\x3d\x8f\xba\xcb\x43\x69\xfe\x02\x00\x00\xff\xff\xb1\x76\xe2\x42\x6a\x00\x00\x00")

func serviceaccountAdmissionControllersaYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountAdmissionControllersaYaml,
		"ServiceAccount/admission-controllerSA.yaml",
	)
}

func serviceaccountAdmissionControllersaYaml() (*asset, error) {
	bytes, err := serviceaccountAdmissionControllersaYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/admission-controllerSA.yaml", size: 106, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountAlamedaDatahubsaYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xc9\x31\x0a\xc3\x30\x0c\x05\xd0\xdd\xe0\x3b\xe8\x02\x19\xba\x6a\xeb\x19\x0a\xdd\x7f\x6d\x41\x45\x62\x29\xc8\x72\xce\x5f\x3a\x64\x7d\x0f\xa7\xbe\x25\xa6\xba\x31\x5d\x8f\x5a\x76\xb5\xce\xf4\x92\xb8\xb4\xc9\xb3\x35\x5f\x96\xb5\x0c\x49\x74\x24\xb8\x16\x22\xc3\x10\x26\x1c\x18\xd2\xb1\xfd\xf9\xbb\x3e\x77\xcc\x13\x4d\x98\xf6\x70\x9f\x5b\xae\xf4\x50\x1c\xbf\x00\x00\x00\xff\xff\x57\x6d\xdf\xda\x65\x00\x00\x00")

func serviceaccountAlamedaDatahubsaYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountAlamedaDatahubsaYaml,
		"ServiceAccount/alameda-datahubSA.yaml",
	)
}

func serviceaccountAlamedaDatahubsaYaml() (*asset, error) {
	bytes, err := serviceaccountAlamedaDatahubsaYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/alameda-datahubSA.yaml", size: 101, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountAlamedaEvictionersaYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xc9\x31\x0e\xc3\x30\x08\x05\xd0\xdd\x92\xef\xc0\x05\x32\x74\x65\xeb\x19\x2a\x75\xff\xc2\x0c\x28\x31\x44\x98\xf8\xfc\x9d\x3a\x3f\xdc\xf6\xd5\x5c\x16\xce\xb4\x5f\xbd\x9d\xe6\x83\xe9\xa3\xb9\x4d\xf4\x2d\x12\x8f\x57\x6f\x53\x0b\x03\x05\xee\x8d\xc8\x31\x95\x09\x17\xa6\x0e\x1c\xba\x4d\xca\xc2\x35\xff\xb6\x6e\x88\x32\x9d\x19\xb1\x8e\x7a\x2a\xd2\x70\xfd\x02\x00\x00\xff\xff\x01\xbf\xed\x2a\x68\x00\x00\x00")

func serviceaccountAlamedaEvictionersaYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountAlamedaEvictionersaYaml,
		"ServiceAccount/alameda-evictionerSA.yaml",
	)
}

func serviceaccountAlamedaEvictionersaYaml() (*asset, error) {
	bytes, err := serviceaccountAlamedaEvictionersaYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/alameda-evictionerSA.yaml", size: 104, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountAlamedaOperatorsaYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xc9\x21\x0e\xc3\x30\x0c\x05\x50\x1e\x29\x77\xf0\x05\x0a\x46\xcd\x76\x86\x49\xe3\x5f\xc9\x07\x56\x9b\x38\x72\xdc\x9e\x7f\x68\xf8\x61\xd9\x97\xb1\xcd\xa7\xca\xf3\xaa\xe5\xb4\xd9\x55\x3e\x8c\xc7\x1a\xdf\xad\xf9\x3d\xb3\x96\xc1\x44\x47\x42\x6b\x11\x99\x18\x54\xc1\x85\xc1\x8e\xc3\x17\x03\xe9\xf1\x97\xbd\xd0\xa8\x72\x86\xfb\x3e\xf2\x4e\x0f\xc3\xf5\x0b\x00\x00\xff\xff\x9b\x90\xea\x1d\x66\x00\x00\x00")

func serviceaccountAlamedaOperatorsaYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountAlamedaOperatorsaYaml,
		"ServiceAccount/alameda-operatorSA.yaml",
	)
}

func serviceaccountAlamedaOperatorsaYaml() (*asset, error) {
	bytes, err := serviceaccountAlamedaOperatorsaYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/alameda-operatorSA.yaml", size: 102, mode: os.FileMode(438), modTime: time.Unix(1553074143, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ClusterRole/admission-controllerCR.yaml":                 clusterroleAdmissionControllercrYaml,
	"ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml": clusterroleAggregateAlamedaAdminEditAlamedacrYaml,
	"ClusterRole/alameda-datahubCR.yaml":                      clusterroleAlamedaDatahubcrYaml,
	"ClusterRole/alameda-evictionerCR.yaml":                   clusterroleAlamedaEvictionercrYaml,
	"ClusterRole/alameda-operatorCR.yaml":                     clusterroleAlamedaOperatorcrYaml,
	"ClusterRoleBinding/admission-controllerCRB.yaml":         clusterrolebindingAdmissionControllercrbYaml,
	"ClusterRoleBinding/alameda-datahubCRB.yaml":              clusterrolebindingAlamedaDatahubcrbYaml,
	"ClusterRoleBinding/alameda-evictionerCRB.yaml":           clusterrolebindingAlamedaEvictionercrbYaml,
	"ClusterRoleBinding/alameda-operatorCRB.yaml":             clusterrolebindingAlamedaOperatorcrbYaml,
	"ConfigMap/grafana-datasources.yaml":                      configmapGrafanaDatasourcesYaml,
	"CustomResourceDefinition/alamedarecommendationsCRD.yaml": customresourcedefinitionAlamedarecommendationscrdYaml,
	"CustomResourceDefinition/alamedascalersCRD.yaml":         customresourcedefinitionAlamedascalerscrdYaml,
	"Deployment/admission-controllerDM.yaml":                  deploymentAdmissionControllerdmYaml,
	"Deployment/alameda-datahubDM.yaml":                       deploymentAlamedaDatahubdmYaml,
	"Deployment/alameda-evictionerDM.yaml":                    deploymentAlamedaEvictionerdmYaml,
	"Deployment/alameda-grafanaDM.yaml":                       deploymentAlamedaGrafanadmYaml,
	"Deployment/alameda-influxdbDM.yaml":                      deploymentAlamedaInfluxdbdmYaml,
	"Deployment/alameda-operatorDM.yaml":                      deploymentAlamedaOperatordmYaml,
	"PersistentVolumeClaim/my-alamedagrafanaPVC.yaml":         persistentvolumeclaimMyAlamedagrafanapvcYaml,
	"PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml":        persistentvolumeclaimMyAlamedainfluxdbpvcYaml,
	"Service/admission-controllerSV.yaml":                     serviceAdmissionControllersvYaml,
	"Service/alameda-datahubSV.yaml":                          serviceAlamedaDatahubsvYaml,
	"Service/alameda-grafanaSV.yaml":                          serviceAlamedaGrafanasvYaml,
	"Service/alameda-influxdbSV.yaml":                         serviceAlamedaInfluxdbsvYaml,
	"ServiceAccount/admission-controllerSA.yaml":              serviceaccountAdmissionControllersaYaml,
	"ServiceAccount/alameda-datahubSA.yaml":                   serviceaccountAlamedaDatahubsaYaml,
	"ServiceAccount/alameda-evictionerSA.yaml":                serviceaccountAlamedaEvictionersaYaml,
	"ServiceAccount/alameda-operatorSA.yaml":                  serviceaccountAlamedaOperatorsaYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"ClusterRole": &bintree{nil, map[string]*bintree{
		"admission-controllerCR.yaml":                 &bintree{clusterroleAdmissionControllercrYaml, map[string]*bintree{}},
		"aggregate-alameda-admin-edit-alamedaCR.yaml": &bintree{clusterroleAggregateAlamedaAdminEditAlamedacrYaml, map[string]*bintree{}},
		"alameda-datahubCR.yaml":                      &bintree{clusterroleAlamedaDatahubcrYaml, map[string]*bintree{}},
		"alameda-evictionerCR.yaml":                   &bintree{clusterroleAlamedaEvictionercrYaml, map[string]*bintree{}},
		"alameda-operatorCR.yaml":                     &bintree{clusterroleAlamedaOperatorcrYaml, map[string]*bintree{}},
	}},
	"ClusterRoleBinding": &bintree{nil, map[string]*bintree{
		"admission-controllerCRB.yaml": &bintree{clusterrolebindingAdmissionControllercrbYaml, map[string]*bintree{}},
		"alameda-datahubCRB.yaml":      &bintree{clusterrolebindingAlamedaDatahubcrbYaml, map[string]*bintree{}},
		"alameda-evictionerCRB.yaml":   &bintree{clusterrolebindingAlamedaEvictionercrbYaml, map[string]*bintree{}},
		"alameda-operatorCRB.yaml":     &bintree{clusterrolebindingAlamedaOperatorcrbYaml, map[string]*bintree{}},
	}},
	"ConfigMap": &bintree{nil, map[string]*bintree{
		"grafana-datasources.yaml": &bintree{configmapGrafanaDatasourcesYaml, map[string]*bintree{}},
	}},
	"CustomResourceDefinition": &bintree{nil, map[string]*bintree{
		"alamedarecommendationsCRD.yaml": &bintree{customresourcedefinitionAlamedarecommendationscrdYaml, map[string]*bintree{}},
		"alamedascalersCRD.yaml":         &bintree{customresourcedefinitionAlamedascalerscrdYaml, map[string]*bintree{}},
	}},
	"Deployment": &bintree{nil, map[string]*bintree{
		"admission-controllerDM.yaml": &bintree{deploymentAdmissionControllerdmYaml, map[string]*bintree{}},
		"alameda-datahubDM.yaml":      &bintree{deploymentAlamedaDatahubdmYaml, map[string]*bintree{}},
		"alameda-evictionerDM.yaml":   &bintree{deploymentAlamedaEvictionerdmYaml, map[string]*bintree{}},
		"alameda-grafanaDM.yaml":      &bintree{deploymentAlamedaGrafanadmYaml, map[string]*bintree{}},
		"alameda-influxdbDM.yaml":     &bintree{deploymentAlamedaInfluxdbdmYaml, map[string]*bintree{}},
		"alameda-operatorDM.yaml":     &bintree{deploymentAlamedaOperatordmYaml, map[string]*bintree{}},
	}},
	"PersistentVolumeClaim": &bintree{nil, map[string]*bintree{
		"my-alamedagrafanaPVC.yaml":  &bintree{persistentvolumeclaimMyAlamedagrafanapvcYaml, map[string]*bintree{}},
		"my-alamedainfluxdbPVC.yaml": &bintree{persistentvolumeclaimMyAlamedainfluxdbpvcYaml, map[string]*bintree{}},
	}},
	"Service": &bintree{nil, map[string]*bintree{
		"admission-controllerSV.yaml": &bintree{serviceAdmissionControllersvYaml, map[string]*bintree{}},
		"alameda-datahubSV.yaml":      &bintree{serviceAlamedaDatahubsvYaml, map[string]*bintree{}},
		"alameda-grafanaSV.yaml":      &bintree{serviceAlamedaGrafanasvYaml, map[string]*bintree{}},
		"alameda-influxdbSV.yaml":     &bintree{serviceAlamedaInfluxdbsvYaml, map[string]*bintree{}},
	}},
	"ServiceAccount": &bintree{nil, map[string]*bintree{
		"admission-controllerSA.yaml": &bintree{serviceaccountAdmissionControllersaYaml, map[string]*bintree{}},
		"alameda-datahubSA.yaml":      &bintree{serviceaccountAlamedaDatahubsaYaml, map[string]*bintree{}},
		"alameda-evictionerSA.yaml":   &bintree{serviceaccountAlamedaEvictionersaYaml, map[string]*bintree{}},
		"alameda-operatorSA.yaml":     &bintree{serviceaccountAlamedaOperatorsaYaml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
