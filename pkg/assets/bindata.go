// Code generated by go-bindata. DO NOT EDIT.
// sources:
// CustomResourceDefinition/alamedarecommendationsCRD.yaml
// CustomResourceDefinition/alamedascalersCRD.yaml
// CustomResourceDefinition/alamedascalersV2CRD.yaml
// ClusterRole/admission-controllerCR.yaml
// ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml
// ClusterRole/alameda-datahubCR.yaml
// ClusterRole/alameda-evictionerCR.yaml
// ClusterRole/alameda-executorCR.yaml
// ClusterRole/alameda-grafanaCR.yaml
// ClusterRole/alameda-operatorCR.yaml
// ServiceAccount/admission-controllerSA.yaml
// ServiceAccount/alameda-aiSA.yaml
// ServiceAccount/alameda-datahubSA.yaml
// ServiceAccount/alameda-evictionerSA.yaml
// ServiceAccount/alameda-executorSA.yaml
// ServiceAccount/alameda-grafanaSA.yaml
// ServiceAccount/alameda-operatorSA.yaml
// ClusterRoleBinding/admission-controllerCRB.yaml
// ClusterRoleBinding/alameda-datahubCRB.yaml
// ClusterRoleBinding/alameda-evictionerCRB.yaml
// ClusterRoleBinding/alameda-executorCRB.yaml
// ClusterRoleBinding/alameda-grafanaCRB.yaml
// ClusterRoleBinding/alameda-operatorCRB.yaml
// Secret/admission-controller-tls.yaml
// Secret/alameda-influxdb.yaml
// ConfigMap/alameda-executor-config.yaml
// ConfigMap/alameda-recommender-config.yaml
// ConfigMap/dashboards-config.yaml
// ConfigMap/grafana-datasources.yaml
// PersistentVolumeClaim/admission-controller-data.yaml
// PersistentVolumeClaim/admission-controller-log.yaml
// PersistentVolumeClaim/alameda-ai-data.yaml
// PersistentVolumeClaim/alameda-ai-log.yaml
// PersistentVolumeClaim/alameda-datahub-data.yaml
// PersistentVolumeClaim/alameda-datahub-log.yaml
// PersistentVolumeClaim/alameda-evictioner-data.yaml
// PersistentVolumeClaim/alameda-evictioner-log.yaml
// PersistentVolumeClaim/alameda-executor-data.yaml
// PersistentVolumeClaim/alameda-executor-log.yaml
// PersistentVolumeClaim/alameda-operator-data.yaml
// PersistentVolumeClaim/alameda-operator-log.yaml
// PersistentVolumeClaim/alameda-recommender-data.yaml
// PersistentVolumeClaim/alameda-recommender-log.yaml
// PersistentVolumeClaim/my-alamedagrafanaPVC.yaml
// PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml
// Service/admission-controllerSV.yaml
// Service/alameda-datahubSV.yaml
// Service/alameda-grafanaSV.yaml
// Service/alameda-influxdbSV.yaml
// Deployment/admission-controllerDM.yaml
// Deployment/alameda-aiDM.yaml
// Deployment/alameda-datahubDM.yaml
// Deployment/alameda-evictionerDM.yaml
// Deployment/alameda-executorDM.yaml
// Deployment/alameda-grafanaDM.yaml
// Deployment/alameda-influxdbDM.yaml
// Deployment/alameda-operatorDM.yaml
// Deployment/alameda-recommenderDM.yaml

package assets


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}


type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataCustomResourceDefinitionAlamedarecommendationsCRDyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x53\x3d\x8f\xdb\x30\x0c\xdd\xf5\x2b\x88\xec\x71\x6b\x74\x29\xbc\x1d" +
	"\xda\xa5\xcb\xa1\xb8\x02\xb7\x14\x1d\x18\x89\xcd\xb1\x27\x8b\x2a\x45\x07\xbd\x7f\x5f\xd8\x8a\xf3\x71\x89\x13\x4e" +
	"\xf6\x13\xf5\xde\xe3\x87\x30\xf3\x33\x69\x61\x49\x1d\x60\x66\xfa\x67\x94\xc6\xbf\xd2\xbc\x7e\x2e\x0d\xcb\x87\x5d" +
	"\xbb\x21\xc3\xd6\xbd\x72\x0a\x1d\x7c\x19\x8a\x49\xff\x44\x45\x06\xf5\xf4\x95\x7e\x73\x62\x63\x49\xae\x27\xc3\x80" +
	"\x86\x9d\x03\x88\xb8\xa1\x58\xc6\x2f\x00\x2f\xc9\x54\x62\x24\x5d\x9b\x48\x9c\x69\x3b\x58\xb5\xcd\xc7\x95\x03\x48" +
	"\xd8\x53\x07\x18\xb1\xa7\x80\x4a\x5e\xfa\x9e\x52\x40\x9b\x3c\xe0\x60\x52\x3c\x46\x4e\xdb\x66\x64\x42\x4e\xa4\xa5" +
	"\x41\x76\x25\x93\x1f\x15\xb6\x2a\x43\xee\x60\x39\xb1\x2a\xec\xdd\xd4\x22\x1e\xaa\xd8\xd3\x99\xd8\x74\x9e\xe3\xa0" +
	"\x18\x97\xec\x38\x80\xe2\x25\x53\x07\x8f\x23\x65\x46\x4f\xc1\x01\xec\x30\x72\xcd\xa8\x22\x92\x29\x3d\x7c\xff\xf6" +
	"\xfc\xe9\x87\x7f\xa1\x1e\x2b\x08\x90\x55\x32\xa9\xf1\xec\x65\x8c\x93\xee\x1f\x30\x00\x7b\x1b\x35\x8a\x29\xa7\xed" +
	"\x01\x9e\xac\xdf\x4b\x3a\x9d\xc2\x79\xa2\x6c\xfe\x90\xb7\x03\x3c\xb7\x6f\x8e\x6b\xe6\xe6\xf1\xd5\x5e\x9e\xe3\x00" +
	"\x6c\xd4\x5f\x80\xcb\x44\x35\xa6\x61\x5f\xc1\x17\xca\x39\x86\xee\x37\xee\x2a\xeb\x42\x8d\xc7\xbb\x7f\x07\x56\x0a" +
	"\x97\x57\xd7\x93\xa1\x0b\xf8\x06\x5b\x3d\x42\x55\x7c\x73\xb7\x15\xd6\x27\xbd\xbb\x3b\x0d\x43\x1b\xca\x8d\xa1\xed" +
	"\xe6\x27\xba\x6b\x31\xe6\x17\x6c\xdd\xf1\x0a\x7a\x4f\xd9\x28\x3c\xbe\x5f\xf3\xd5\xea\x6c\xa7\xa7\x5f\x2f\x29\x4c" +
	"\x0f\xb6\x74\xf0\xf3\xd7\xb8\xd0\x26\x4a\x61\xbf\x84\x13\xf8\x3f\x00\x00\xff\xff\xc3\x68\x72\x63\x12\x04\x00\x00" +
	"")

func bindataCustomResourceDefinitionAlamedarecommendationsCRDyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataCustomResourceDefinitionAlamedarecommendationsCRDyaml,
		"CustomResourceDefinition/alamedarecommendationsCRD.yaml",
	)
}



func bindataCustomResourceDefinitionAlamedarecommendationsCRDyaml() (*asset, error) {
	bytes, err := bindataCustomResourceDefinitionAlamedarecommendationsCRDyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "CustomResourceDefinition/alamedarecommendationsCRD.yaml",
		size: 1042,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1554175225, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataCustomResourceDefinitionAlamedascalersCRDyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\xc1\x6e\x23\x37\x0c\xbd\xcf\x57\x10\xee\x21\x97\x7a\xdc\xa0\x97" +
	"\x62\x0e\x05\x16\x6e\x0f\x41\xd1\x45\x91\x14\x7b\x29\x7a\xa0\x25\x8e\xad\x46\x22\x55\x89\x32\xd6\xfd\xfa\x42\x1a" +
	"\xdb\xc9\xcc\xc6\xd8\x14\xa8\x4e\xa3\x37\xe2\x23\xf5\x48\x8a\x18\xdd\x27\x4a\xd9\x09\x0f\x80\xd1\xd1\x67\x25\xae" +
	"\xbb\xdc\x3f\xff\x90\x7b\x27\x9b\xe3\xfd\x8e\x14\xef\xbb\x67\xc7\x76\x80\x6d\xc9\x2a\xe1\x91\xb2\x94\x64\xe8\x27" +
	"\x1a\x1d\x3b\x75\xc2\x5d\x20\x45\x8b\x8a\x03\x00\x40\x07\xe0\x71\x47\x3e\x0f\x5d\xdd\x1a\x61\x4d\xe2\x3d\xa5\xb5" +
	"\x8a\xf8\x0b\xf5\x00\xab\xfb\xfe\xbb\x55\x07\xc0\x18\x68\x00\xf4\x18\xc8\x62\x36\xe8\x29\xe5\x1e\x8b\x4a\xfd\x76" +
	"\xbc\xef\x2b\x03\x3a\x6e\xb0\xeb\x72\x24\x53\x99\xf7\x49\x4a\x1c\xe0\xf6\xc1\x89\xf9\x1c\xc5\x74\x81\x0f\x93\x93" +
	"\xa7\xe6\xa4\xe1\xd1\x97\x84\x7e\xe9\xbe\x03\xc8\x46\x22\x0d\xf0\xb1\x52\x44\x34\x64\x3b\x80\x23\x7a\x67\xb1\xde" +
	"\x78\x22\x95\x48\xfc\xe1\xb7\x87\x4f\xdf\x3f\x99\x03\x05\x9c\x40\x80\x98\x24\x52\x52\x77\xf1\x5d\xd7\x2b\xa5\xaf" +
	"\x18\x80\xa5\x6c\x92\x8b\x8d\x11\x7e\x5c\xbf\xfa\x03\x70\x57\x99\x27\x13\xb0\x55\x6a\xca\xa0\x07\x82\xe3\x84\x91" +
	"\x85\xdc\xbc\x82\x8c\xa0\x07\x97\x21\x51\x4c\x94\x89\xb5\x45\x38\xe3\x92\x11\x90\x41\x76\x7f\x91\xd1\x1e\x9e\x28" +
	"\x55\x12\xc8\x07\x29\xde\xd6\x04\x1d\x29\x29\x24\x32\xb2\x67\xf7\xcf\x95\x39\x83\x4a\x73\xe9\x51\x29\xeb\x8c\xd1" +
	"\xb1\x52\x62\xf4\x55\x93\x42\xdf\x02\xb2\x85\x80\x27\x48\x54\x7d\x40\xe1\x57\x6c\xed\x48\xee\xe1\x57\x49\x04\x8e" +
	"\x47\x19\xe0\xa0\x1a\xf3\xb0\xd9\xec\x9d\x5e\x4a\xcd\x48\x08\x85\x9d\x9e\x36\xad\x62\xdc\xae\xa8\xa4\xbc\xb1\x74" +
	"\x24\xbf\xc1\xe8\xd6\x2d\x4e\xd6\x56\x9e\xc1\x7e\x93\xce\x65\x98\xef\x5e\x05\xa6\xa7\x9a\xb4\xac\xc9\xf1\xfe\x0a" +
	"\xb7\xdc\xbf\x57\xf5\x5f\x1c\x5b\x70\x19\xf0\xcc\x32\x45\xff\x22\x6e\x85\xaa\x26\x8f\x3f\x3f\xfd\x0e\x97\x18\x5a" +
	"\x02\xe6\x8a\x37\xad\x5f\xcc\xf2\x8b\xec\x55\x26\xc7\x23\xa5\x29\x6d\x63\x92\xd0\x18\x89\x6d\x14\xc7\xda\x36\xc6" +
	"\x3b\xe2\xb9\xe4\xb9\xec\x82\xd3\x9a\xe7\xbf\x0b\x65\xad\xd9\xe9\x61\x8b\xcc\xa2\xb0\x23\x28\xd1\xa2\x92\xed\xe1" +
	"\x81\x61\x8b\x81\xfc\x16\x33\xfd\xdf\xa2\x57\x7d\xf3\xba\x0a\xfa\x75\xd9\xaf\x8f\xc2\x17\x07\x27\x71\xae\xf0\xa5" +
	"\xa3\x2f\xeb\xad\xfe\xa9\xcb\xcc\x9e\x9f\x37\xda\xe9\x66\x28\x75\x11\xe3\xce\x13\x7d\x26\x53\xf4\xa6\xdd\x4e\xc4" +
	"\x13\xce\x9b\x27\x8a\x77\xe6\xb4\x3c\x4f\x5c\xc2\x12\x5b\x43\xd6\xea\xe4\x0b\xd8\x48\x88\x68\xf4\xbd\xa1\x66\xf2" +
	"\x64\x54\xd2\x92\x7f\x56\xb8\x77\x0f\x21\x4a\x52\x64\x1d\xe0\xb1\x30\xac\x02\x3e\xd3\xaa\xb6\x6c\xa2\x3d\x31\x25" +
	"\x54\x02\x23\x96\x00\x47\xa5\x04\x41\xac\x1b\x4f\x53\xf9\xd6\xb2\x73\x9e\xee\xde\x0c\x68\x91\x1d\x68\x05\xe7\x12" +
	"\xcd\x7a\x68\x7d\x0d\xf2\xab\xd9\x55\xd4\x92\xdf\x93\xdf\xf3\x1b\xbc\xbd\x0e\x8c\xe5\xfd\x6f\x19\x4e\xda\x44\x2f" +
	"\xa7\x40\xac\x46\x78\x74\xfb\x37\x8e\xdc\xbc\xe0\x92\xe1\xbf\xda\xde\xf8\xb5\x80\x8f\x97\x49\x7b\xbc\x47\x1f\x0f" +
	"\x78\xdf\xbd\x48\x83\xc6\x50\x54\xb2\x1f\x97\x13\x6b\xb5\x9a\x8d\xa9\xb6\x35\xc2\xb6\xcd\xdd\x3c\xc0\x1f\x7f\xd6" +
	"\x59\xa5\x92\xc8\x9e\x1b\x62\x02\xff\x0d\x00\x00\xff\xff\xc7\x3f\x75\xd9\xda\x07\x00\x00")

func bindataCustomResourceDefinitionAlamedascalersCRDyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataCustomResourceDefinitionAlamedascalersCRDyaml,
		"CustomResourceDefinition/alamedascalersCRD.yaml",
	)
}



func bindataCustomResourceDefinitionAlamedascalersCRDyaml() (*asset, error) {
	bytes, err := bindataCustomResourceDefinitionAlamedascalersCRDyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "CustomResourceDefinition/alamedascalersCRD.yaml",
		size: 2010,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559611553, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataCustomResourceDefinitionAlamedascalersV2CRDyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\xb1\x8e\x23\x37\x0c\xed\xe7\x2b\x08\xa7\xd8\x26\x1e\xc7\x48\x13" +
	"\x4c\x11\xe0\xe0\xa4\x58\x04\x39\x04\xbb\x87\x6b\x82\x14\xb4\xc4\xb1\x95\x95\x48\x45\xe2\x18\xe7\x7c\x7d\x20\x8d" +
	"\xed\xf5\xcc\xda\xb8\x0d\x70\xaa\xac\x37\xd2\xe3\xd3\x23\x29\x19\xa3\xfb\x4c\x29\x3b\xe1\x0e\x30\x3a\xfa\xa2\xc4" +
	"\x65\x96\xdb\x97\x9f\x72\xeb\x64\x75\x58\x6f\x49\x71\xdd\xbc\x38\xb6\x1d\x6c\x86\xac\x12\x9e\x28\xcb\x90\x0c\xfd" +
	"\x42\xbd\x63\xa7\x4e\xb8\x09\xa4\x68\x51\xb1\x03\x00\x68\x00\x3c\x6e\xc9\xe7\xae\x29\x53\x23\xac\x49\xbc\xa7\xb4" +
	"\x54\x11\x7f\xa6\xee\x60\xb1\x6e\x7f\x58\x34\x00\x8c\x81\x3a\x40\x8f\x81\x2c\x66\x83\x9e\x52\x6e\x71\x50\x29\xbf" +
	"\x1d\xef\xda\xc2\x80\x8e\x2b\xec\x9a\x1c\xc9\x14\xe6\x5d\x92\x21\x76\x70\x7f\xe1\xc8\x7c\x52\x31\x1e\xe0\xc3\x18" +
	"\xe4\xb9\x06\xa9\x78\xf4\x43\x42\x3f\x0f\xdf\x00\x64\x23\x91\x3a\xf8\x58\x28\x22\x1a\xb2\x0d\xc0\x01\xbd\xb3\x58" +
	"\x4e\x3c\x92\x4a\x24\xfe\xf0\xc7\xe3\xe7\x1f\x9f\xcd\x9e\x02\x8e\x20\x40\x4c\x12\x29\xa9\x3b\xc7\x2e\xe3\xca\xe9" +
	"\x0b\x06\x60\x29\x9b\xe4\x62\x65\x84\x9f\x97\x57\x5f\x00\x1e\x0a\xf3\xb8\x05\x6c\xb1\x9a\x32\xe8\x9e\xe0\x30\x62" +
	"\x64\x21\xd7\xa8\x20\x3d\xe8\xde\x65\x48\x14\x13\x65\x62\xad\x0a\x27\x5c\xd2\x03\x32\xc8\xf6\x6f\x32\xda\xc2\x33" +
	"\xa5\x42\x02\x79\x2f\x83\xb7\x25\x41\x07\x4a\x0a\x89\x8c\xec\xd8\xfd\x7b\x61\xce\xa0\x52\x43\x7a\x54\xca\x3a\x61" +
	"\x74\xac\x94\x18\x7d\xf1\x64\xa0\xef\x01\xd9\x42\xc0\x23\x24\x2a\x31\x60\xe0\x2b\xb6\xba\x24\xb7\xf0\xbb\x24\x02" +
	"\xc7\xbd\x74\xb0\x57\x8d\xb9\x5b\xad\x76\x4e\xcf\xa5\x66\x24\x84\x81\x9d\x1e\x57\xb5\x62\xdc\x76\x50\x49\x79\x65" +
	"\xe9\x40\x7e\x85\xd1\x2d\xab\x4e\xd6\x5a\x9e\xc1\x7e\x97\x4e\x65\x98\x1f\xae\x84\xe9\xb1\x24\x2d\x6b\x72\xbc\xbb" +
	"\xc0\x35\xf7\xef\x75\xfd\x37\xc7\x16\x5c\x06\x3c\xb1\x8c\xea\x5f\xcd\x2d\x50\xf1\xe4\xe9\xd7\xe7\x4f\x70\xd6\x50" +
	"\x13\x30\x75\xbc\x7a\xfd\xba\x2d\xbf\xda\x5e\x6c\x72\xdc\x53\x1a\xd3\xd6\x27\x09\x95\x91\xd8\x46\x71\xac\x75\x62" +
	"\xbc\x23\x9e\x5a\x9e\x87\x6d\x70\x5a\xf2\xfc\xcf\x40\x59\x4b\x76\x5a\xd8\x20\xb3\x28\x6c\x09\x86\x68\x51\xc9\xb6" +
	"\xf0\xc8\xb0\xc1\x40\x7e\x83\x99\xbe\xb5\xe9\xc5\xdf\xbc\x2c\x86\x7e\xdd\xf6\xcb\xa5\xf0\x66\xe1\x68\xce\x05\x3e" +
	"\x77\xf4\x79\xdc\xea\x9f\x32\xcc\xe4\xfa\xb9\xd1\x4e\x77\xa5\x94\x41\x8c\x5b\x4f\xf4\x85\xcc\xa0\x77\xf7\x6d\x45" +
	"\x3c\xe1\xb4\x79\xa2\x78\x67\x8e\xf3\xf5\xc4\x43\x98\x63\x4b\xc8\x5a\x82\xbc\x81\x8d\x84\x88\x46\xdf\x2b\xf5\x74" +
	"\x9f\x7d\x2a\xd7\xe5\x3c\x86\x53\x0a\x6f\xc0\xdb\x72\x4a\xe4\x43\xc4\x1b\xe8\xfe\x06\x7a\x57\xcd\xf9\x13\xa6\x84" +
	"\xc7\xa9\x4e\xf2\x64\x54\xd2\x3c\xf0\xa4\xc1\x1e\x1e\x43\x94\xa4\xc8\xda\xc1\xd3\xc0\xb0\x08\xf8\x42\x8b\x72\xb5" +
	"\x24\xda\x11\x53\x42\x25\x30\x62\x09\xb0\x57\x4a\x10\xc4\xba\xfe\x38\xb6\x59\x69\x0f\xe7\xe9\xe1\xa6\x9e\x59\x15" +
	"\x41\x6d\x0c\x97\x68\xd2\xeb\xcb\x8b\xc8\xaf\x56\xa1\xa2\x0e\xf9\x3d\x75\x78\x7a\x2b\x36\x97\x87\x6d\x7e\xfe\x7b" +
	"\x1b\x47\x6f\xa2\x97\x63\x20\x56\x23\xdc\xbb\xdd\x8d\x25\x77\x0f\x38\x67\xf8\xbf\x7b\xef\x7c\x9a\xc1\x87\xf3\x3f" +
	"\x82\xc3\x1a\x7d\xdc\xe3\xba\x79\xb5\x06\x8d\xa1\xa8\x64\x3f\xce\x5f\xd6\xc5\x62\xf2\x9c\xd6\xa9\x11\xb6\xf5\xff" +
	"\x41\xee\xe0\xcf\xbf\xca\x9b\xaa\x92\xc8\x9e\x1a\x77\x04\xff\x0b\x00\x00\xff\xff\xce\x5d\x7d\x66\x82\x08\x00\x00" +
	"")

func bindataCustomResourceDefinitionAlamedascalersV2CRDyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataCustomResourceDefinitionAlamedascalersV2CRDyaml,
		"CustomResourceDefinition/alamedascalersV2CRD.yaml",
	)
}



func bindataCustomResourceDefinitionAlamedascalersV2CRDyaml() (*asset, error) {
	bytes, err := bindataCustomResourceDefinitionAlamedascalersV2CRDyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "CustomResourceDefinition/alamedascalersV2CRD.yaml",
		size: 2178,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559611553, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAdmissioncontrollerCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\xbf\x6e\xf3\x30\x0c\xc4\x77\x3f\x85\x91\xdd\xfa\xf0\x6d\x85\xd7" +
	"\x0e\xdd\x3b\x74\x67\x24\xc6\x26\x22\x8b\x02\x49\xa5\x7f\x9e\xbe\x90\x53\x38\x1e\x2a\x34\x40\x3c\xf9\x80\x3b\xff" +
	"\xee\x2c\x41\xa6\x37\x14\x25\x4e\x63\x2f\x47\xf0\x0e\x8a\xcd\x2c\xf4\x05\x46\x9c\xdc\xf9\x49\x1d\xf1\xbf\xcb\xff" +
	"\xee\x4c\x29\x8c\xfd\x73\x2c\x6a\x28\xaf\x1c\xb1\x5b\xd0\x20\x80\xc1\xd8\xf5\x7d\x82\x05\xc7\xfe\x84\x01\x05\x8c" +
	"\x05\x68\x80\xb0\x90\xd6\xef\x0e\x9e\x93\x09\xc7\x88\xd2\x49\x89\xa8\xd5\x3f\xf4\x90\xe9\x45\xb8\xe4\x55\xd6\x67" +
	"\xe8\x0f\x5b\x46\x70\x22\x35\xd9\x77\x38\xac\x36\x41\xe5\x22\x1e\x77\xa9\xa5\x18\x18\xa5\xe9\x1d\x8f\x33\xf3\xd9" +
	"\x73\x3a\xd1\x54\xae\x59\x5d\x5d\x17\x94\xe3\x2e\x30\xa1\x6d\xef\x5e\x10\x0c\x37\x59\x72\xd8\xcb\x80\x11\x57\xf9" +
	"\x7b\xdd\x66\xa5\xcc\xe1\x4f\x72\x24\xbd\x89\x0c\xe6\xe7\x16\x07\x3f\x0c\x93\x6e\x6b\xae\xae\xac\x2d\xb8\x60\x8e" +
	"\xe4\x41\xd1\x74\x37\x24\x47\xfe\x5c\x30\xd9\xbd\xbd\xee\x6d\xd2\xfe\x09\x3f\x3d\xea\x31\xdc\x6e\xc0\x43\xf8\xba" +
	"\xda\x71\xc6\xa4\x33\x9d\xcc\x11\xb7\xd0\xb7\xb9\xd7\xdb\xf0\x18\xb5\x18\xab\x87\x48\x69\x72\x75\x08\x50\x42\x51" +
	"\x07\xd4\xa2\x43\x84\x05\x03\xd4\x4c\x7b\xf0\x77\x00\x00\x00\xff\xff\x58\xbe\x65\xe9\x78\x03\x00\x00")

func bindataClusterRoleAdmissioncontrollerCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAdmissioncontrollerCRyaml,
		"ClusterRole/admission-controllerCR.yaml",
	)
}



func bindataClusterRoleAdmissioncontrollerCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAdmissioncontrollerCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/admission-controllerCR.yaml",
		size: 888,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1560334147, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAggregatealamedaadmineditalamedaCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x4f\xbd\x4e\xf4\x30\x10\xec\xfd\x14\xab\xeb\x93\x4f\x5f\x87\xdc\x52" +
	"\xd0\x53\xd0\xef\xd9\xa3\xdc\xea\x6c\x6f\xb4\x5e\x1f\x12\x4f\x8f\x2e\x21\xd0\x81\x90\xa8\x3c\xf2\xce\x2f\xaf\xf2" +
	"\x02\xeb\xa2\x2d\x92\x9d\x39\xcd\x3c\xfc\xa2\x26\x6f\xec\xa2\x6d\xbe\x3e\xf4\x59\xf4\xdf\xed\x7f\xb8\x4a\xcb\x91" +
	"\x1e\xcb\xe8\x0e\x7b\xd6\x82\x50\xe1\x9c\xd9\x39\x06\xa2\xc6\x15\x91\x78\x59\x0c\x0b\x3b\x26\x2e\x5c\x91\x79\xe2" +
	"\x5c\xa5\x4d\xc8\xe2\xc7\x57\x20\x2a\x7c\x46\xe9\x77\x19\x7d\x93\xf9\x65\xe6\xba\xfb\x44\x3a\xb9\x0d\x9c\x7e\x23" +
	"\xbc\x47\x7f\xea\x6c\x14\xf4\x18\x26\xe2\x55\x9e\x4c\xc7\xba\x95\x98\x88\x87\x6b\x4f\x5c\xa4\x2d\x73\xd2\xe6\x2c" +
	"\x0d\xd6\x67\x96\x40\x64\xe8\x3a\x2c\xe1\xa0\xee\x2b\xee\x6c\x58\x0f\x44\x37\xd8\xf9\xe3\xb6\xc0\xb7\xb7\x48\xdf" +
	"\x41\x32\xb0\x63\x83\x63\xcd\x07\xcc\x28\x70\xfc\x45\x0b\x43\xd2\x5a\xd1\xf2\xb6\xff\xa7\x36\xaf\xec\xe9\xf2\x1e" +
	"\x00\x00\xff\xff\x36\x9a\x6e\xc2\xf0\x01\x00\x00")

func bindataClusterRoleAggregatealamedaadmineditalamedaCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAggregatealamedaadmineditalamedaCRyaml,
		"ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml",
	)
}



func bindataClusterRoleAggregatealamedaadmineditalamedaCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAggregatealamedaadmineditalamedaCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml",
		size: 496,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1556186955, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAlamedadatahubCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\x31\x4f\xc3\x40\x0c\x85\xf7\xfb\x15\x56\x99\x13\xc4\x86\xb2\x32" +
	"\xb0\x22\x06\x76\x37\xf7\xda\x58\xcd\x9d\x0f\xdb\x57\x09\x7e\x3d\x6a\xaa\x16\x75\xb2\xf4\xfc\xf4\x7d\xb2\xb9\xc9" +
	"\x17\xcc\x45\xeb\x44\xb6\xe7\x79\xe4\x1e\x8b\x9a\xfc\x72\x88\xd6\xf1\xf4\xea\xa3\xe8\xf3\xf9\x25\x9d\xa4\xe6\x89" +
	"\xde\xd6\xee\x01\xfb\xd4\x15\xa9\x20\x38\x73\xf0\x94\x88\x2a\x17\x4c\x74\x40\x86\x71\xa8\xb1\x0c\xbc\x72\x41\xe6" +
	"\xe1\xd2\x58\xfa\x3e\x59\x5f\xe1\x53\x7a\xa2\x0f\x58\x11\xbf\x18\xe9\xa0\x46\xdf\x1d\xf6\x43\xcd\xb4\x20\x16\x74" +
	"\xa7\x5e\x33\x6c\x03\x7a\xe3\x19\xa4\x0d\xd5\x17\x39\xc4\x50\xb4\x4a\xa8\x49\x3d\x52\x1a\x88\x9b\xbc\x9b\xf6\xe6" +
	"\x13\x25\xa2\x81\x76\xbb\x44\x64\x70\xed\x36\xe3\x16\xde\x31\x9e\x88\xce\xb0\xfd\x6d\x71\x44\x3c\x30\xb6\x90\x7b" +
	"\xa8\xcf\xbc\x4a\x3d\x8e\xb3\xd6\x60\xa9\x30\x1f\x59\x1e\xc8\xd7\xea\xf5\x3c\xc3\xac\xa5\xa0\xe6\xed\x5d\xff\x92" +
	"\xbb\xe3\x32\x7b\xcb\x1c\xf8\x0b\x00\x00\xff\xff\x44\xa5\x3d\x5d\x6a\x01\x00\x00")

func bindataClusterRoleAlamedadatahubCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAlamedadatahubCRyaml,
		"ClusterRole/alameda-datahubCR.yaml",
	)
}



func bindataClusterRoleAlamedadatahubCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAlamedadatahubCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/alameda-datahubCR.yaml",
		size: 362,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1555659065, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAlamedaevictionerCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\xb1\x4e\x03\x31\x10\x44\x7b\x7f\x85\x95\xfe\x8c\xe8\xd0\xb5\x14" +
	"\xf4\x14\xf4\x1b\x7b\x92\xac\xe2\xf3\x5a\xbb\xeb\x20\xf8\x7a\x94\x70\x12\x48\x17\x0a\x2a\x8f\x46\xde\x79\x33\xd4" +
	"\xf9\x0d\x6a\x2c\x6d\x8e\xba\xa7\x9c\x68\xf8\x49\x94\x3f\xc9\x59\x5a\x3a\x3f\x59\x62\x79\xb8\x3c\x86\x33\xb7\x32" +
	"\xc7\xe7\x3a\xcc\xa1\xaf\x52\x11\x16\x38\x15\x72\x9a\x43\x8c\x8d\x16\xcc\xf1\x80\x02\x25\x17\x25\x9e\xa8\xd2\x82" +
	"\x42\x13\x2e\x9c\xaf\x51\xd0\xa0\xa3\xc2\xe6\x30\x45\xea\xfc\xa2\x32\xba\x5d\x4f\xa7\xb8\xdb\x85\x18\x15\x26\x43" +
	"\x33\x56\xaf\x4b\xb1\x10\xe3\x05\xba\x5f\x9d\x23\xfc\xf6\x16\x54\x38\xb6\x29\x34\x5c\x2c\x53\xe5\x76\x4c\x59\x9a" +
	"\x13\x37\xa8\x25\xe2\x6d\xf8\xda\xed\xfa\x1b\x6a\xbf\x2d\x45\x96\x65\x41\x2b\xb7\xf9\x77\x1a\x6c\xb1\xbd\xdb\x96" +
	"\xa0\xe8\x95\x33\x19\xdc\xd6\xd2\xbd\xca\xc7\x82\xe6\x7f\xac\xaa\x6c\xdf\xe2\x9d\x3c\x9f\x6e\x6a\xf4\x42\x77\x87" +
	"\xf6\x6e\x49\x3a\x9a\x9d\xf8\xe0\x89\x65\x8b\xff\xc1\x65\x69\x07\x3e\xfe\x17\xfa\x15\x00\x00\xff\xff\x1d\x35\xcc" +
	"\x76\x16\x02\x00\x00")

func bindataClusterRoleAlamedaevictionerCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAlamedaevictionerCRyaml,
		"ClusterRole/alameda-evictionerCR.yaml",
	)
}



func bindataClusterRoleAlamedaevictionerCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAlamedaevictionerCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/alameda-evictionerCR.yaml",
		size: 534,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1560334200, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAlamedaexecutorCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8e\x31\x6e\x2b\x31\x0c\x44\x7b\x9d\x42\x17\xf0\x7e\xfc\x2e\x50\x9b" +
	"\x22\x7d\x10\xa4\xa7\xa5\xb1\x97\xb0\x24\x0a\x24\x65\x38\x39\x7d\xb0\x6b\x03\x29\x92\x26\x95\x66\x80\x27\xbe\xa1" +
	"\xc1\xef\x50\x63\xe9\x29\xea\x91\xf2\x42\xd3\x57\x51\xfe\x24\x67\xe9\xcb\xe5\xc9\x16\x96\x7f\xd7\xff\xe1\xc2\xbd" +
	"\xa4\xf8\x5c\xa7\x39\xf4\x55\x2a\x42\x83\x53\x21\xa7\x14\x62\xcc\x8a\xfd\xc3\x1b\x37\x98\x53\x1b\x29\xf6\x59\x6b" +
	"\x88\xb1\x53\x43\x8a\x27\x14\x28\xb9\x28\xf1\x81\x2a\x35\x14\x3a\xe0\x86\x3c\x5d\x34\xe8\xac\xb0\x14\x0e\x91\x06" +
	"\xbf\xa8\xcc\x61\xdb\xc9\xad\x0e\xdb\x03\x6e\x8e\xbe\x6d\xdc\xaa\xc2\x64\x6a\xc6\x03\x52\x8c\xca\x99\x0c\x7e\x67" +
	"\x0b\x46\x95\x8f\x86\xbe\xf7\x2b\xf4\xf8\x00\xcf\xf0\xfd\xad\x6c\xf7\x30\x47\x21\xc7\x1e\x07\x79\x5e\x7f\x1f\xb0" +
	"\xc8\x40\xb7\x95\x4f\xbe\xb0\xfc\xd4\x7f\xeb\xb2\xf4\x13\x9f\xff\x2a\xfd\x0a\x00\x00\xff\xff\x28\xff\xe1\x73\x80" +
	"\x01\x00\x00")

func bindataClusterRoleAlamedaexecutorCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAlamedaexecutorCRyaml,
		"ClusterRole/alameda-executorCR.yaml",
	)
}



func bindataClusterRoleAlamedaexecutorCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAlamedaexecutorCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/alameda-executorCR.yaml",
		size: 384,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559697907, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAlamedagrafanaCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\xa1\x6e\xc5\x30\x0c\x46\x61\xee\xa7\xb0\x2e\x4f\xa7\xb1\x29\x74" +
	"\x60\x7c\x60\xfc\xbf\x8d\xdb\x59\x4d\xe3\xc8\x4e\x0a\xf6\xf4\xd3\x05\xa5\xe7\x48\x1f\xba\xfe\x88\x87\x5a\xcb\xec" +
	"\x4f\xac\x0b\xe6\xf8\x35\xd7\x3f\x0c\xb5\xb6\x1c\x1f\xb1\xa8\xbd\x5d\xef\x74\x68\x2b\x99\x3f\xeb\x8c\x21\xfe\x6d" +
	"\x55\xe8\x94\x81\x82\x81\x4c\xcc\x0d\xa7\x64\xde\xa4\x88\x63\x98\x43\x13\x2a\x4e\x29\x48\xbb\x63\x43\x03\xf9\xac" +
	"\x12\x99\x12\xa3\xeb\x97\xdb\xec\x91\x99\x98\x13\x3f\x1e\xc4\xec\x12\x36\x7d\x95\x3b\xbe\xbc\xe8\x58\x25\x88\xf9" +
	"\x12\x7f\xde\x63\x97\xf1\x1f\x00\x00\xff\xff\x37\xd4\xd9\xbf\xb3\x00\x00\x00")

func bindataClusterRoleAlamedagrafanaCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAlamedagrafanaCRyaml,
		"ClusterRole/alameda-grafanaCR.yaml",
	)
}



func bindataClusterRoleAlamedagrafanaCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAlamedagrafanaCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/alameda-grafanaCR.yaml",
		size: 179,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1556071759, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAlamedaoperatorCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\xbb\x92\xdb\x30\x0c\xec\xf5\x15\x9c\x4b\x6d\xdd\xa4\xcb\xb8\x4d" +
	"\x91\x36\x93\x22\x3d\x4c\xae\x64\x8c\x29\x82\x01\x41\x5f\xee\xbe\x3e\xa3\xc7\xc9\x4e\xe4\x24\x37\x2e\xae\xf2\x0e" +
	"\x68\x72\x17\xd8\x85\x28\xf3\x77\x68\x61\x49\x7b\xa7\x07\xf2\x2d\x55\x3b\x8a\xf2\x0b\x19\x4b\x6a\x4f\x9f\x4a\xcb" +
	"\xf2\x78\xfe\xd8\x9c\x38\x85\xbd\xfb\x1c\x6b\x31\xe8\x37\x89\x68\x06\x18\x05\x32\xda\x37\xce\x25\x1a\xb0\x77\x1d" +
	"\x02\x94\x4c\x94\x78\x47\x91\x06\x04\xda\x49\x9e\x4b\x8d\xd6\x88\xb2\x6f\x76\x8e\x32\x7f\x51\xa9\xb9\x8c\x17\x77" +
	"\xee\xe1\xa1\x71\x4e\x51\xa4\xaa\xc7\x52\x4b\x12\x50\x26\x94\x25\xcc\x40\x91\x23\xfb\x49\x95\x97\x64\x2a\x31\x42" +
	"\xc7\xa3\x33\xf4\xb0\x5c\xeb\x61\xd3\x6f\xe4\x32\x83\x27\x32\x7f\xdc\x52\x52\xce\x65\x4b\xba\x30\x14\xd8\xcc\x18" +
	"\x90\xa3\x3c\x0f\x48\xf6\x36\x9a\x11\x79\x05\x19\x26\x58\x73\x78\x85\x79\x3d\x0f\x88\x30\xdc\x56\xd4\x4a\x46\x2a" +
	"\x47\xee\xac\x65\xd9\xca\xbb\xc8\xf1\x92\x3a\xee\xef\xed\xbd\x9a\x14\x4f\x91\x53\xdf\x8e\x83\x24\x4e\xd0\xd2\x12" +
	"\x6f\x19\x17\x0b\xc7\x7f\xcf\xa3\x5e\x4b\x0a\x2f\xc3\x80\x14\x26\x3f\xde\x61\x3c\xf7\x8a\x7e\xec\x38\x51\xe4\x97" +
	"\x4d\x54\x16\xfa\x0f\xee\x2b\x74\xe0\x32\x2e\x80\xeb\x44\xdd\x8f\x0a\x7d\x76\x59\x65\x80\x1d\x51\x8b\xab\x29\x40" +
	"\xa7\x7c\x97\x4c\x1e\x6e\x35\x69\x37\x48\x62\x13\xe5\xd4\xbb\xdf\x14\xbb\x5b\xb1\x9e\x8b\xeb\x33\x17\x35\x6e\x9d" +
	"\xd9\x8d\x50\x30\x7e\x1a\xd2\x28\xae\x2c\xab\xb8\x6d\xd8\xd7\x62\x32\xbc\x16\x03\x3a\x4e\xfc\x0f\x57\xb6\x16\xbc" +
	"\x69\x23\x0b\xbc\xe2\xcf\x45\xb8\x7a\xeb\xe2\xf1\x64\xfb\xb6\x97\xb0\x4c\x59\xd1\x73\x31\xbd\xfe\xbc\x6c\xd9\xce" +
	"\x14\x79\xcc\x56\xea\x9f\x70\x38\x8a\x9c\xe6\xc8\x57\xbd\x95\xb7\xff\xc5\x6b\xcd\xe1\xdf\xd2\x75\xbb\x5f\x3d\xf3" +
	"\xb5\x4f\x77\x51\xfd\x0a\x00\x00\xff\xff\x62\xfe\x79\x2f\x5e\x05\x00\x00")

func bindataClusterRoleAlamedaoperatorCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAlamedaoperatorCRyaml,
		"ClusterRole/alameda-operatorCR.yaml",
	)
}



func bindataClusterRoleAlamedaoperatorCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAlamedaoperatorCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/alameda-operatorCR.yaml",
		size: 1374,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1556274219, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAdmissioncontrollerSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x31\xaa\x42\x41\x0c\x05\xd0\x7e\x56\x91\x0d\xfc\xe2\xb7\xe9\x5c" +
	"\x83\x60\x7f\xc9\x5c\x21\xf8\x26\x79\x64\xe2\x5b\xbf\x08\xd6\x87\x83\xd3\x1f\xac\xed\x19\x2a\xd7\xff\x78\x79\x4c" +
	"\x95\x3b\xeb\x72\xe3\xcd\x2c\xdf\xd1\x63\xb1\x31\xd1\xd0\x21\x12\x58\x54\xc1\x5c\xbe\xbf\xe9\xcf\x32\xba\xf2\x38" +
	"\x58\x3f\xdc\x27\x8c\x2a\x4f\x4e\x16\x3a\x0b\xfe\x09\x00\x00\xff\xff\x7e\x31\x7e\x77\x63\x00\x00\x00")

func bindataServiceAccountAdmissioncontrollerSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAdmissioncontrollerSAyaml,
		"ServiceAccount/admission-controllerSA.yaml",
	)
}



func bindataServiceAccountAdmissioncontrollerSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAdmissioncontrollerSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/admission-controllerSA.yaml",
		size: 99,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1554175225, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAlamedaaiSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\x31\x0e\x02\x41\x08\x05\xd0\x7e\x4e\xc1\x05\x2c\x6c\xe9\x3c\x83" +
	"\x89\xfd\x0f\x7c\x13\xa2\xc3\x6c\x58\x9c\xf3\xdb\x6c\xfb\x70\xc4\x8b\x75\xc6\x4a\x95\x7d\x1f\x9f\x48\x57\x79\xb2" +
	"\x76\x18\x1f\x66\xeb\x97\x3d\x26\x1b\x8e\x86\x0e\x91\xc4\xa4\x0a\xbe\x98\x74\xdc\x10\x17\x9d\x07\x8c\x2a\x6f\x3a" +
	"\x0b\xbd\x0a\xf1\x0f\x00\x00\xff\xff\xaa\xc4\x7e\xde\x59\x00\x00\x00")

func bindataServiceAccountAlamedaaiSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAlamedaaiSAyaml,
		"ServiceAccount/alameda-aiSA.yaml",
	)
}



func bindataServiceAccountAlamedaaiSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAlamedaaiSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/alameda-aiSA.yaml",
		size: 89,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1554261951, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAlamedadatahubSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\xb1\x0d\x02\x31\x0c\x05\xd0\x3e\x53\x78\x01\x0a\x5a\x77\xcc\x80" +
	"\x44\xff\x89\x3f\xc2\x82\x38\x27\x9f\x2f\xf3\x23\xa4\x6b\x1f\x36\x7f\x30\x77\x9f\xa1\xb2\xae\xed\xe3\x61\x2a\x77" +
	"\xe6\xf2\xce\x5b\xef\xf3\x88\x6a\x83\x05\x43\x41\x9b\x48\x60\x50\x05\x5f\x0c\x1a\x2e\x7f\x7d\x1f\xcf\xd3\xf7\x0d" +
	"\x9d\x2a\x2f\x1a\x13\x35\x13\xfe\x0b\x00\x00\xff\xff\x06\xa1\x23\x4a\x5e\x00\x00\x00")

func bindataServiceAccountAlamedadatahubSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAlamedadatahubSAyaml,
		"ServiceAccount/alameda-datahubSA.yaml",
	)
}



func bindataServiceAccountAlamedadatahubSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAlamedadatahubSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/alameda-datahubSA.yaml",
		size: 94,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1554175225, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAlamedaevictionerSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x31\x0e\x02\x41\x08\x05\xd0\x7e\x4e\xc1\x05\x2c\x6c\xe9\x3c\x83" +
	"\x89\xfd\x0f\xf3\x4d\x88\x0e\x6c\x58\x9c\xf3\xdb\x6c\xfd\x70\xf8\x8b\x75\x7a\x86\xca\xbe\x8f\x8f\xc7\x54\x79\xb2" +
	"\xb6\x1b\x1f\x66\xf9\x8b\x1e\x8b\x8d\x89\x86\x0e\x91\xc0\xa2\x0a\xbe\x58\x9c\xb8\x71\xbb\xb5\x67\xb0\x2e\x3a\x0f" +
	"\x18\x55\xde\x9c\x2c\x74\x16\xfc\x1f\x00\x00\xff\xff\x58\x7c\x98\x9a\x61\x00\x00\x00")

func bindataServiceAccountAlamedaevictionerSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAlamedaevictionerSAyaml,
		"ServiceAccount/alameda-evictionerSA.yaml",
	)
}



func bindataServiceAccountAlamedaevictionerSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAlamedaevictionerSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/alameda-evictionerSA.yaml",
		size: 97,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1554175225, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAlamedaexecutorSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\xb1\x0d\xc2\x40\x0c\x05\xd0\xfe\xa6\xf0\x02\x14\xb4\xee\x98\x01" +
	"\x89\xfe\xcb\xf7\x91\x2c\x38\x3b\x72\x9c\x88\xf1\x69\x52\x3f\x6c\xfe\x62\xed\x9e\xa1\x72\xde\xc7\xc7\x63\xaa\x3c" +
	"\x59\xa7\x1b\x1f\x66\x79\x44\x8f\xc5\xc6\x44\x43\x87\x48\x60\x51\x05\x5f\x2c\x4e\xdc\xf8\xa3\x1d\x9d\x75\xc1\xbe" +
	"\xc1\xa8\xf2\xe6\x64\xa1\xb3\xe0\xff\x00\x00\x00\xff\xff\xb4\xac\xe5\x58\x5f\x00\x00\x00")

func bindataServiceAccountAlamedaexecutorSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAlamedaexecutorSAyaml,
		"ServiceAccount/alameda-executorSA.yaml",
	)
}



func bindataServiceAccountAlamedaexecutorSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAlamedaexecutorSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/alameda-executorSA.yaml",
		size: 95,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559697907, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAlamedagrafanaSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\xb1\x0d\xc2\x40\x0c\x05\xd0\xfe\xa6\xf0\x02\x14\xb4\xee\x98\x01" +
	"\x89\xfe\xcb\xfe\x41\x16\x9c\x2f\x72\x4c\xe6\xa7\x49\xfb\xb0\xc7\x8b\x75\xc4\x4a\x95\xf3\x3e\x3e\x91\xae\xf2\x64" +
	"\x9d\x61\x7c\x98\xad\x5f\xf6\x98\x6c\x38\x1a\x3a\x44\x12\x93\x2a\xf8\x62\xd2\x71\x7b\x17\x36\x24\x2e\x3f\x76\x18" +
	"\x55\x36\x3a\x0b\xbd\x0a\xf1\x0f\x00\x00\xff\xff\x5c\xef\x2c\xe0\x5e\x00\x00\x00")

func bindataServiceAccountAlamedagrafanaSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAlamedagrafanaSAyaml,
		"ServiceAccount/alameda-grafanaSA.yaml",
	)
}



func bindataServiceAccountAlamedagrafanaSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAlamedagrafanaSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/alameda-grafanaSA.yaml",
		size: 94,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1556071759, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAlamedaoperatorSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x31\x0e\x02\x41\x08\x05\xd0\x7e\x4e\xc1\x05\x2c\x6c\xe9\x3c\x83" +
	"\x89\xfd\xcf\xf0\x4d\x88\x0e\x4c\x58\xdc\xf3\x5b\x68\xfb\x1e\xb6\x3f\x58\x87\x67\xa8\x9c\xd7\xf1\xf2\x30\x95\x3b" +
	"\xeb\xf4\xc9\xdb\x9c\xf9\x89\x1e\x8b\x0d\x43\x43\x87\x48\x60\x51\x05\x6f\x2c\x1a\x2e\xb9\x59\xe8\xac\x7f\x1c\x1b" +
	"\x93\x2a\x4f\xda\x8f\xe1\xdf\x00\x00\x00\xff\xff\x01\x08\xdb\x27\x5f\x00\x00\x00")

func bindataServiceAccountAlamedaoperatorSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAlamedaoperatorSAyaml,
		"ServiceAccount/alameda-operatorSA.yaml",
	)
}



func bindataServiceAccountAlamedaoperatorSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAlamedaoperatorSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/alameda-operatorSA.yaml",
		size: 95,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1554175225, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleBindingAdmissioncontrollerCRByaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\xb1\x4e\xc4\x30\x0c\xc6\xf1\x3d\x4f\xe1\x17\x68\x11\x1b\xca\x06" +
	"\x0c\xec\x45\x62\x77\x13\x17\x4c\x53\x3b\x72\x9c\x0e\x3c\x3d\xaa\x44\x07\x74\xa7\xd3\xcd\x9f\xbe\xff\x0f\x2b\x7f" +
	"\x90\x35\x56\x89\x60\x33\xa6\x11\xbb\x7f\xa9\xf1\x0f\x3a\xab\x8c\xeb\x53\x1b\x59\x1f\xf6\xc7\xb0\xb2\xe4\x08\xaf" +
	"\xa5\x37\x27\x9b\xb4\xd0\x0b\x4b\x66\xf9\x0c\x1b\x39\x66\x74\x8c\x01\x40\x70\xa3\x08\x0b\x65\x32\x74\x35\xe4\x01" +
	"\xf3\xc6\xed\xc8\x0f\x49\xc5\x4d\x4b\x21\x0b\xa6\x85\x26\x5a\x8e\x07\x56\x7e\x33\xed\xf5\x86\x1e\x00\x2e\xf0\xfb" +
	"\xad\xd6\xe7\x6f\x4a\xde\x0e\x6c\xf8\x0b\xbd\x93\xed\x9c\xe8\x39\x25\xed\xe2\x01\xe0\xac\x5d\x2d\x9c\x73\xab\x98" +
	"\xfe\x8b\xbf\x01\x00\x00\xff\xff\x96\x62\xb4\x2f\x3d\x01\x00\x00")

func bindataClusterRoleBindingAdmissioncontrollerCRByamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleBindingAdmissioncontrollerCRByaml,
		"ClusterRoleBinding/admission-controllerCRB.yaml",
	)
}



func bindataClusterRoleBindingAdmissioncontrollerCRByaml() (*asset, error) {
	bytes, err := bindataClusterRoleBindingAdmissioncontrollerCRByamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRoleBinding/admission-controllerCRB.yaml",
		size: 317,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1554258873, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleBindingAlamedadatahubCRByaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\x31\xae\xc2\x30\x0c\xc6\xf1\x3d\xa7\xc8\x05\xda\xa7\xb7\xa1\x6c" +
	"\xc0\xc0\x5e\x24\x76\x37\x71\xa9\x69\x1a\x47\x8e\xd3\x81\xd3\xa3\x0a\x84\x04\x48\x88\xd5\xfa\xfc\xff\x41\xa6\x13" +
	"\x4a\x21\x4e\xce\x4a\x0f\xbe\x85\xaa\x23\x0b\x5d\x41\x89\x53\x3b\x6d\x4a\x4b\xfc\xb7\xfc\x9b\x89\x52\x70\x76\x1f" +
	"\x6b\x51\x94\x8e\x23\xee\x28\x05\x4a\x67\x33\xa3\x42\x00\x05\x67\xac\x4d\x30\xa3\xb3\x03\x06\x14\x50\x16\xa0\x06" +
	"\x22\xcc\x18\xa0\x59\x17\x63\xed\x8d\x70\xc4\x0e\x87\x75\x0c\x99\x0e\xc2\x35\x7f\x81\x8d\xb5\x1f\xee\x4f\x4c\xa9" +
	"\xfd\x05\xbd\x16\x67\x9a\x47\xe1\x88\xb2\x90\xc7\xad\xf7\x5c\x93\x3e\x23\xef\x8f\xf7\x7b\xc9\xe0\x5f\x85\x5b\x00" +
	"\x00\x00\xff\xff\xc4\x91\x85\x3b\x28\x01\x00\x00")

func bindataClusterRoleBindingAlamedadatahubCRByamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleBindingAlamedadatahubCRByaml,
		"ClusterRoleBinding/alameda-datahubCRB.yaml",
	)
}



func bindataClusterRoleBindingAlamedadatahubCRByaml() (*asset, error) {
	bytes, err := bindataClusterRoleBindingAlamedadatahubCRByamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRoleBinding/alameda-datahubCRB.yaml",
		size: 296,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1554175225, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleBindingAlamedaevictionerCRByaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\x31\x0e\xc2\x30\x0c\x85\xe1\x3d\xa7\xc8\x05\x5a\xc4\x86\xb2\x01" +
	"\x03\x7b\x91\xd8\xdd\xc4\x05\xd3\x34\x8e\x1c\xa7\x03\xa7\x47\x15\x08\x09\x81\x10\xb3\xfd\xfe\x0f\x32\x9d\x50\x0a" +
	"\x71\x72\x56\x7a\xf0\x2d\x54\xbd\xb0\xd0\x0d\x94\x38\xb5\xe3\xa6\xb4\xc4\xab\x79\x6d\x46\x4a\xc1\xd9\x7d\xac\x45" +
	"\x51\x3a\x8e\xb8\xa3\x14\x28\x9d\xcd\x84\x0a\x01\x14\x9c\xb1\x36\xc1\x84\xce\x0e\x18\x50\x40\x59\x80\x1a\x88\x30" +
	"\x61\x80\x06\x67\xf2\x4b\x11\xc5\x08\x47\xec\x70\x58\xfe\x21\xd3\x41\xb8\xe6\x1f\xb6\xb1\xf6\x83\xfe\x57\x2a\xb5" +
	"\xbf\xa2\xd7\xe2\x4c\xf3\x8c\x1c\x51\x66\xf2\xb8\xf5\x9e\x6b\xd2\x57\xe7\xcb\xf6\x71\x2a\x19\xfc\xbb\x73\x0f\x00" +
	"\x00\xff\xff\x2e\xae\x54\xf5\x31\x01\x00\x00")

func bindataClusterRoleBindingAlamedaevictionerCRByamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleBindingAlamedaevictionerCRByaml,
		"ClusterRoleBinding/alameda-evictionerCRB.yaml",
	)
}



func bindataClusterRoleBindingAlamedaevictionerCRByaml() (*asset, error) {
	bytes, err := bindataClusterRoleBindingAlamedaevictionerCRByamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRoleBinding/alameda-evictionerCRB.yaml",
		size: 305,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1554175225, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleBindingAlamedaexecutorCRByaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\xb1\x4a\x44\x31\x10\x45\xfb\x7c\xc5\xfc\xc0\x7b\x62\x27\xe9\xd4" +
	"\xc2\x7e\x15\xfb\xd9\xe4\xae\x8e\x9b\x64\xc2\x64\xb2\x88\x5f\x2f\x4f\x44\x90\x07\x62\x7b\xe1\x9e\x73\xb8\xcb\x33" +
	"\x6c\x88\xb6\x48\x76\xe4\xb4\xf2\xf4\x57\x35\xf9\x60\x17\x6d\xeb\xf9\x66\xac\xa2\x57\x97\xeb\x70\x96\x96\x23\xdd" +
	"\x97\x39\x1c\x76\xd0\x82\x3b\x69\x59\xda\x4b\xa8\x70\xce\xec\x1c\x03\x51\x32\x7c\xfd\x9e\xa4\x62\x38\xd7\x1e\xa9" +
	"\xcd\x52\x02\x51\xe3\x8a\x48\x27\x64\x18\xbb\x1a\xcb\xc2\x85\x2b\x32\x2f\x78\x47\x9a\xae\x16\x4c\x0b\x0e\x38\x6d" +
	"\x1c\xee\xf2\x60\x3a\xfb\x1f\x4d\x81\x68\x97\xf4\x3f\xcf\x98\xc7\x37\x24\x1f\x31\x2c\xdf\x88\x47\xd8\x45\x12\x6e" +
	"\x53\xd2\xd9\xfc\x87\xb2\x7b\x6e\xf3\xe8\x9c\x7e\x1b\x3e\x03\x00\x00\xff\xff\x1b\xcc\x70\x56\x43\x01\x00\x00")

func bindataClusterRoleBindingAlamedaexecutorCRByamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleBindingAlamedaexecutorCRByaml,
		"ClusterRoleBinding/alameda-executorCRB.yaml",
	)
}



func bindataClusterRoleBindingAlamedaexecutorCRByaml() (*asset, error) {
	bytes, err := bindataClusterRoleBindingAlamedaexecutorCRByamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRoleBinding/alameda-executorCRB.yaml",
		size: 323,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559697907, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleBindingAlamedagrafanaCRByaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\x31\x4e\xc6\x30\x0c\xc5\xf1\x3d\xa7\xc8\x05\x5a\xc4\x86\xb2\x01" +
	"\x03\xfb\x87\xc4\xfe\x9a\xb8\xc5\x34\xb5\x23\xc7\xe9\xc0\xe9\x11\x02\x21\x01\x12\x62\xb5\xfc\xfe\x3f\x34\x7e\x22" +
	"\xeb\xac\x92\xa2\x2d\xc8\x33\x86\x3f\xab\xf1\x2b\x9c\x55\xe6\xfd\xa6\xcf\xac\x57\xe7\x75\xd8\x59\x4a\x8a\xf7\x75" +
	"\x74\x27\xbb\x68\xa5\x3b\x96\xc2\xb2\x85\x83\x1c\x05\x8e\x14\x62\x14\x1c\x94\xe2\x4a\x85\x0c\xae\x06\x9e\x50\x71" +
	"\x50\xc1\xb4\x19\x56\x08\x82\x69\xa5\x0b\xad\xef\xcf\x68\xfc\x60\x3a\xda\x1f\x70\x88\xf1\x97\xfb\x2f\xa6\x8f\xe5" +
	"\x85\xb2\xf7\x14\xa6\xcf\xc2\x23\xd9\xc9\x99\x6e\x73\xd6\x21\xfe\x15\xf9\x39\xfc\xb8\xf7\x86\xfc\x5d\x78\x0b\x00" +
	"\x00\xff\xff\x75\x1b\xd8\xd0\x28\x01\x00\x00")

func bindataClusterRoleBindingAlamedagrafanaCRByamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleBindingAlamedagrafanaCRByaml,
		"ClusterRoleBinding/alameda-grafanaCRB.yaml",
	)
}



func bindataClusterRoleBindingAlamedagrafanaCRByaml() (*asset, error) {
	bytes, err := bindataClusterRoleBindingAlamedagrafanaCRByamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRoleBinding/alameda-grafanaCRB.yaml",
		size: 296,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1556071759, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleBindingAlamedaoperatorCRByaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\xbd\x0a\xc2\x30\x10\xc0\xf1\x3d\x4f\x91\x17\x68\xc5\x4d\xb2\xa9" +
	"\x83\x7b\x05\xf7\x6b\x72\xd5\xb3\x69\x2e\x5c\x2e\x1d\x7c\x7a\x91\x8a\x20\x05\x71\xbd\x8f\xff\x0f\x32\x5d\x50\x0a" +
	"\x71\x72\x56\x7a\xf0\x2d\x54\xbd\xb1\xd0\x03\x94\x38\xb5\xe3\xae\xb4\xc4\x9b\x79\x6b\x46\x4a\xc1\xd9\x63\xac\x45" +
	"\x51\x3a\x8e\x78\xa0\x14\x28\x5d\xcd\x84\x0a\x01\x14\x9c\xb1\x36\xc1\x84\xce\x0e\x18\x50\x40\x59\x80\x1a\x88\x30" +
	"\x61\x80\x86\xf3\x32\x32\xc2\x11\x3b\x1c\x5e\xd7\x90\xe9\x24\x5c\xf3\x0f\xd9\x58\xbb\x82\xff\x73\x4a\xed\xef\xe8" +
	"\xb5\x38\xd3\xbc\x13\x67\x94\x99\x3c\xee\xbd\xe7\x9a\xf4\x53\x59\x7d\x2e\x8b\x92\xc1\x7f\x1b\xcf\x00\x00\x00\xff" +
	"\xff\xa8\xcd\x05\x0d\x2b\x01\x00\x00")

func bindataClusterRoleBindingAlamedaoperatorCRByamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleBindingAlamedaoperatorCRByaml,
		"ClusterRoleBinding/alameda-operatorCRB.yaml",
	)
}



func bindataClusterRoleBindingAlamedaoperatorCRByaml() (*asset, error) {
	bytes, err := bindataClusterRoleBindingAlamedaoperatorCRByamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRoleBinding/alameda-operatorCRB.yaml",
		size: 299,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1554175225, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataSecretAdmissioncontrollertlsyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x3d\x0a\x82\x41\x0c\x04\xd0\x3e\xa7\xc8\x05\xbe\xc2\x36\x97\xb0" +
	"\x10\xec\x87\xdd\x11\x82\xfb\x67\x36\x0a\xde\x5e\x44\xfb\xf7\x04\xcb\xaf\x8c\xed\x73\x98\xbe\x4e\x72\xf7\x51\x4d" +
	"\x2f\x2c\xc1\x94\xce\x44\x45\xc2\x44\x75\xa0\xd3\x14\xb5\xfb\xfe\xe2\xa3\xcc\x91\x31\x5b\x63\x1c\xd9\xf6\x1f\xec" +
	"\x85\x42\xd3\x1b\x2b\x03\x39\x03\x2e\xbf\x9f\xef\x45\xd3\xf3\xc2\xe3\xc9\x4f\x00\x00\x00\xff\xff\xc0\x89\x2c\x4b" +
	"\x73\x00\x00\x00")

func bindataSecretAdmissioncontrollertlsyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataSecretAdmissioncontrollertlsyaml,
		"Secret/admission-controller-tls.yaml",
	)
}



func bindataSecretAdmissioncontrollertlsyaml() (*asset, error) {
	bytes, err := bindataSecretAdmissioncontrollertlsyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Secret/admission-controller-tls.yaml",
		size: 115,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1556071759, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataSecretAlamedainfluxdbyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x31\x0e\xc2\x30\x0c\x05\xd0\x3d\xa7\xf0\x05\x3a\xb0\xfa\x12\x0c" +
	"\x48\xec\x9f\xfa\x57\xb2\x48\xd2\xe0\xb8\x08\x6e\xcf\x40\xe7\xa7\x87\xe1\x77\xc6\xf4\xbd\xab\xbc\x2f\xe5\xe9\xdd" +
	"\x54\x6e\x5c\x83\x59\x1a\x13\x86\x84\x16\x91\x8e\x46\x15\x54\x34\x1a\x16\xef\x5b\x3d\x3e\xf6\x58\xb2\xce\x13\xe7" +
	"\xc0\x4a\x95\x8d\xc6\x40\xee\x01\x2f\xff\x9b\xdf\x41\x95\xeb\xc0\xeb\xe0\x2f\x00\x00\xff\xff\x82\xf8\x7a\xe9\x6e" +
	"\x00\x00\x00")

func bindataSecretAlamedainfluxdbyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataSecretAlamedainfluxdbyaml,
		"Secret/alameda-influxdb.yaml",
	)
}



func bindataSecretAlamedainfluxdbyaml() (*asset, error) {
	bytes, err := bindataSecretAlamedainfluxdbyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Secret/alameda-influxdb.yaml",
		size: 110,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1556071759, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataConfigMapAlamedaexecutorconfigyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x31\x6f\x03\x21\x0c\x85\x77\x7e\xc5\x53\x3a\x73\xa2\x8a\xb2\x78" +
	"\xed\xdc\xb5\xbb\x63\x7c\x0d\xca\x1d\x20\x20\x51\x22\xf5\xc7\x57\x77\x05\xa9\x52\x46\xf8\xde\xf7\x6c\x73\x0e\x5f" +
	"\x5a\x6a\x48\x91\x70\x7f\x37\xd7\x10\x3d\xe1\x23\xc5\x39\x7c\x7f\x72\x36\xab\x36\xf6\xdc\x98\x0c\x10\x79\x55\x02" +
	"\x2f\xbc\xaa\x67\xab\x0f\x95\x5b\x4b\xc5\xca\x1e\xee\xbc\x66\x16\x25\xcc\xea\xb5\x70\x4b\x85\x83\x19\xfa\x5f\x6e" +
	"\x7a\xae\x0b\xe1\xc7\x1a\x00\xd8\xd0\xe5\x76\xa6\xfd\x01\xb0\xf7\x45\x6b\x25\x1c\xc6\x90\x1e\x98\xfe\xf5\x4d\xf5" +
	"\x2e\x87\x2e\xe4\x54\x1a\xe1\xe4\xdc\xc9\xed\x3f\x63\xa7\x51\x28\x17\x95\xab\x95\xa7\x2c\x4a\x38\x02\x78\x43\x55" +
	"\x49\xd1\x77\xae\x8f\x1c\x8a\xda\x16\xb6\xc3\x8e\xce\xbd\xf0\xc8\xe7\x4d\x9d\x79\xa9\xfa\x1b\x00\x00\xff\xff\x90" +
	"\x0c\x1c\x4a\x2a\x01\x00\x00")

func bindataConfigMapAlamedaexecutorconfigyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataConfigMapAlamedaexecutorconfigyaml,
		"ConfigMap/alameda-executor-config.yaml",
	)
}



func bindataConfigMapAlamedaexecutorconfigyaml() (*asset, error) {
	bytes, err := bindataConfigMapAlamedaexecutorconfigyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ConfigMap/alameda-executor-config.yaml",
		size: 298,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1560334147, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataConfigMapAlamedarecommenderconfigyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\x31\x4f\xc3\x30\x10\x85\x77\xff\x8a\x53\xf6\x46\x2e\xa8\x15\x44" +
	"\xca\xc4\xcc\xca\x82\x50\x74\xb5\xaf\x89\x55\xdb\x67\x9d\x9d\xb0\xf0\xe3\x51\x9c\x54\x94\xd1\xef\xfb\x74\x7e\x0f" +
	"\x93\xfb\x20\xc9\x8e\x63\x07\xcb\x51\xdd\x5c\xb4\x1d\xbc\x71\xbc\xba\xf1\x1d\x93\x0a\x54\xd0\x62\xc1\x4e\x01\x44" +
	"\x0c\xd4\x01\x7a\x0c\x64\xf1\x20\x64\x38\x04\x8a\x96\xe4\x60\xaa\xbf\x2b\x39\xa1\xa1\x0e\xae\x64\x49\xb0\xb0\xa0" +
	"\x53\xf7\x0b\x9b\xd7\x16\x0e\xbe\x83\x9f\x83\x02\x00\xf8\x1c\x3d\x5f\xd0\x7f\xd5\xc7\x94\x70\x70\xb1\x90\x2c\xe8" +
	"\xa1\x87\xe3\x8b\xae\xf1\x92\x70\xc8\x13\x4b\x79\x84\xcf\xfa\x0f\x7a\x8e\xe3\x3f\x76\xde\xa1\xa5\xcb\x3c\x42\x0f" +
	"\x57\xf4\x99\xd4\xf6\xe1\xda\x66\x9a\x2f\xdb\x8f\x68\xad\x50\xce\xd0\x43\x73\x5f\xb6\xf3\xf6\x61\x41\x9b\x17\xd3" +
	"\x54\x3f\xb1\x14\xe8\xe1\xa4\xf5\x49\xef\xf7\xd6\xd2\xd9\xa0\x77\x71\xdc\x6f\xfa\x34\x21\xf4\xa0\xdb\xa7\x53\x0d" +
	"\xbc\x0b\xae\xe4\xa1\x4c\x42\x79\x62\x6f\x2b\x7b\xad\x28\x63\x48\x9e\x06\xc1\x42\xeb\xe0\xcd\x4f\x24\x8e\xed\x3d" +
	"\x3c\xeb\xc7\xd0\xf0\x1c\x6b\x83\x6d\x1f\x16\x1c\x32\xcf\x62\x56\xb3\xf9\x66\xb9\x79\x46\xdb\xa8\xdf\x00\x00\x00" +
	"\xff\xff\xca\xd6\xe9\x26\xd8\x01\x00\x00")

func bindataConfigMapAlamedarecommenderconfigyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataConfigMapAlamedarecommenderconfigyaml,
		"ConfigMap/alameda-recommender-config.yaml",
	)
}



func bindataConfigMapAlamedarecommenderconfigyaml() (*asset, error) {
	bytes, err := bindataConfigMapAlamedarecommenderconfigyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ConfigMap/alameda-recommender-config.yaml",
		size: 472,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1560334147, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataConfigMapDashboardsconfigyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\xbd\x69\x73\xdc\x36\xb6\x00\xfa\x5d\xbf\x02\x97\x93\x3b\x23\xfb\xb6" +
	"\xe4\x66\xcb\xad\xa5\xab\x3c\x55\x8a\x9c\xc4\x79\x2f\x76\xf4\xbc\xe4\x56\x26\xf2\xed\x82\x48\xa8\x9b\x16\x09\x72" +
	"\xb8\x68\x89\xe3\xf9\xed\xaf\x08\x70\x07\x40\xb2\x77\xb6\xfa\xb0\x2a\x91\x1b\x0b\x89\xe5\xe0\xe0\xec\x07\x7b\xd6" +
	"\x6f\xc4\x0f\x2c\x97\x8e\xd0\x9d\xbe\x77\x6b\x51\x73\x84\x2e\x5c\x7a\x63\x4d\xde\x62\x6f\xcf\x21\x21\x36\x71\x88" +
	"\x47\x7b\x08\x51\xec\x90\x11\x32\x71\x30\xbd\x76\xb1\x6f\x06\x07\x06\x6b\x96\xd4\x04\x1e\x36\xc8\x08\xdd\x10\x93" +
	"\xf8\x38\x74\x7d\x6c\xed\xb1\x8e\x08\xed\x21\x64\xd8\x51\x10\x12\x7f\x4a\xb0\x1d\x4e\x0f\xbf\x04\x2e\x8d\x5f\x88" +
	"\xd0\x5f\x07\xec\x0f\x42\x5f\x93\xbf\x08\x69\x98\x52\x37\xc4\xa1\xe5\xd2\x40\x1b\x15\x2a\x10\xd2\x6c\x2b\x08\xb5" +
	"\x11\xfa\xa3\x50\x86\x4a\x2d\x58\xab\xeb\xc8\xb2\xc3\x9f\xa9\x36\x42\x7a\xaf\x5a\x17\x0f\x29\x70\x23\xdf\x20\xda" +
	"\x08\x69\x07\x07\xe8\x27\x1f\xdf\x60\x8a\xd1\xc1\x81\x26\x34\x26\x14\x5f\xdb\x71\xc3\xd0\x8f\x88\x50\x3b\xb5\x4c" +
	"\x65\x9d\x65\xb8\xf4\xc2\xb5\x5d\x3f\xfe\x8a\x3f\xb9\xc6\xfb\xfd\x1e\x1a\xe8\x7a\x0f\x0d\x86\xc3\x1e\xd2\x9f\x89" +
	"\x1f\x8b\xd7\x30\x6e\x7d\x9e\x4f\x1f\xfd\x1d\x9d\xdb\xc4\x0f\x03\xb1\x75\xf8\xe8\xb1\xd6\xd9\x6e\x68\xa5\x16\xdf" +
	"\x0a\xbf\x3e\x67\xff\xfe\x96\xbf\x46\x23\xa6\x15\x4a\x67\xa7\x4d\x28\x09\x7f\x36\xb5\x11\xa2\x91\x6d\x17\xcb\x7d" +
	"\xec\x4d\x3f\xba\xae\x1d\x5a\x9e\x36\x42\xfd\x42\x95\x65\x96\x17\x5b\xb3\x2d\x7a\x1b\xef\xde\x1f\x9f\x0b\x85\x1e" +
	"\xa6\xc4\x0e\x2a\xfb\x57\xde\x3d\xcd\x70\x6d\x1b\x7b\x01\x89\x5f\x78\x83\xed\xa0\xb2\xb4\xda\xc4\xb7\xcc\x4b\xb7" +
	"\x0a\x18\x7c\x3f\xa4\x1b\x7e\xaf\x8d\xd0\xe0\xa5\x50\xfc\x50\x9e\x41\x52\xfa\x18\x97\x96\x17\xb2\xf2\x7d\x36\xd3" +
	"\xd3\x4a\x61\x3e\xb1\xcf\x95\x9a\xd0\x0a\xd9\x12\x6b\x17\xfc\x00\xa0\x37\xec\x04\xa0\x0f\x21\x0e\xa3\xea\xb6\x66" +
	"\x9b\xea\xbb\xf7\xc5\xed\x2c\x8d\xa1\xba\x5e\xd8\x98\x92\x8f\x96\x43\xdc\x28\x14\xb6\x0c\x25\x2b\xea\xfa\xdf\x63" +
	"\xe3\x76\xe2\xbb\x11\x55\xad\x2b\x6b\xf5\x1b\xb6\x23\x39\x48\xf3\xfa\xea\xde\xb1\x1a\x06\xdd\x83\x97\xc3\x1e\x1a" +
	"\xbe\xe4\xff\xf5\x0f\xcf\x24\xf0\xcd\xdb\x1d\x9d\xf4\x90\x3e\x38\xeb\xa1\x97\xfd\xb8\xe1\xa9\xb2\xe5\xb0\xdf\x43" +
	"\xfa\xc9\xa0\x87\xe2\x37\xf7\x0f\xcf\x4e\x9e\x95\x21\xbc\xba\xd2\xe5\x83\x7d\xe9\xbb\x0e\x09\xa7\x44\x5c\x63\x25" +
	"\xdc\xb3\xda\x1b\xd7\x77\x70\xbc\x90\x9a\x47\x7c\x83\xd0\x30\xa2\x56\x58\x7d\xc5\x04\x47\x13\x22\x83\x40\x07\x3f" +
	"\xa4\x4b\x28\x02\xa2\x63\xd1\xb4\x52\x04\xbc\x60\xea\xde\xab\x70\x49\x38\xf5\x49\x30\x75\x6d\xf3\x17\x7c\xcd\xc1" +
	"\xac\xbe\xd9\x5b\xec\xdf\x12\x3f\x6d\x57\x0b\xcd\x0d\xa7\x69\x28\x3d\x4d\xb3\x1c\x26\xbd\xf9\x30\x0d\x8e\xab\xa5" +
	"\x34\x24\xfe\x1d\xb6\xe5\xe0\x2c\xc3\x2c\x88\x2f\xbe\xe7\x59\x74\xf2\x91\x9f\x21\x5d\x5d\x2b\x83\xe2\xea\xf4\x0b" +
	"\xf8\xf8\x2e\xde\x34\x14\xba\x28\x24\x0f\x55\x50\x60\x0d\xef\xd2\x2d\xaf\x54\x7d\xab\xb6\xad\xf9\x88\x8f\xe9\xa4" +
	"\xd5\x47\x06\xd5\x8f\xd4\x1e\x0a\x07\x3f\xbc\xc6\x21\xbe\x74\x2d\x1a\xc6\xd3\xd6\xfb\x95\x6d\xd2\xe2\x15\x66\xd5" +
	"\x6f\x5d\x76\x9b\x69\x86\x4b\x29\x31\x42\x62\x56\xa1\x3e\x6e\xf9\x31\x1e\x9d\x74\x5b\x3c\x37\x08\x6f\xac\x18\x10" +
	"\xb4\x6a\xc7\xa4\xea\x47\x97\x86\x1f\xac\x3f\xd9\x47\x86\xfd\xff\x16\x5a\xf9\x44\xd5\x9f\xd5\x34\x74\x67\x0b\xf8" +
	"\x16\x7b\x2d\x37\xf7\xc6\x77\x9d\xf8\x4d\xf1\x4c\x64\xcb\x1d\xf2\x89\x6a\xef\x5e\x9c\x4b\xab\xdd\xac\xf3\x4c\xfb" +
	"\x11\x78\xd8\xbf\xb5\x2d\x2a\xc5\x1e\x37\x96\x6d\x97\x69\x86\x23\xbd\x87\x74\xfd\xb4\x87\xf4\xd3\xb3\x18\x09\xea" +
	"\xa7\x12\x6c\x79\x13\x8f\x42\x8a\xd4\xf9\x69\x21\xc5\x77\xf2\x57\x0e\x62\xdc\x7a\x76\x24\x79\x59\x82\x87\xd8\xcb" +
	"\x6a\x8f\x2e\xc3\xa1\x17\xae\x1d\x39\x54\xb6\x67\x21\xf6\x27\x24\x6c\xb9\x19\xe4\xc1\x63\xe3\xdb\x0f\x22\x67\x3f" +
	"\xf2\xbe\x7e\x71\xaf\x5f\xfd\xe7\x4a\x3b\x7c\x8e\x3d\x2b\x20\xfe\x1d\xf1\x0f\x9f\x5f\x69\xdf\xd0\xab\x57\x48\x7f" +
	"\x86\x5e\x20\xc3\x8d\x68\x58\xd3\xf0\x99\x38\xb1\x12\x6a\x0f\x2d\x87\x8c\x03\xe2\x5b\x44\x24\xac\x0a\xf8\xe7\x47" +
	"\x6c\x84\x6c\xe1\x06\x92\x46\x3e\xb9\x61\x34\x92\x26\x85\x8f\x20\x24\x31\x89\x74\xdc\xef\xcf\x04\x1e\x19\x0a\x8f" +
	"\x17\x4e\xeb\x1f\xb2\x9b\xef\x54\x58\xdb\x94\xa6\x38\xbf\xfc\x19\x7d\x60\xd3\x0e\xd0\xa7\x4b\xa1\x99\x8f\x69\x0c" +
	"\x6f\x84\x86\xf2\xbb\x2e\xa5\x36\x02\x8b\x4e\x6c\x12\x84\x58\xb8\xe8\x18\xd2\x29\x1e\xbc\x53\xf1\xe0\xb1\x36\xed" +
	"\x0f\x9e\x1b\xaf\x8b\xf6\x6a\x8e\x33\x97\x62\xc0\x39\x8e\x1d\xeb\xfa\x2e\x41\xb5\xf8\x6e\xd2\x96\xb8\xc2\xb6\x85" +
	"\x83\x8b\x94\xf2\xf9\x5a\x3d\x03\xd7\x98\x95\xcb\xc8\xa9\x98\x2c\xff\x85\xd0\x49\xc8\x88\xd2\x2a\xd2\x8d\x6b\x89" +
	"\xba\xeb\x32\x08\x19\xe2\xfb\x0c\x76\x65\x5f\x88\x11\x8d\xe4\x8a\x8c\x89\x01\x19\x5e\xca\xa0\x52\x2f\x63\xa7\x81" +
	"\x7e\xdc\x43\x83\x7e\xcc\xd8\x9c\xc4\x80\x3a\x38\x91\x20\x94\xac\xf3\xa0\xd2\xf9\xe8\x65\x8c\xdb\x06\xc9\xff\xfa" +
	"\x87\x83\x41\x85\xc0\x5b\x0a\xad\x52\x5d\xfa\x84\x58\x11\x49\x98\x96\xc4\xca\xd1\xa0\x5a\x1a\xbc\x23\xf7\x8a\x75" +
	"\xb6\xc9\x84\x50\xe9\x92\x62\xdb\x9a\xd0\xf3\xe0\x63\xb2\x7f\x72\xdc\x1d\x03\xaa\xaa\xce\x88\xfc\xe4\x60\xcb\xeb" +
	"\x63\xde\xf4\x07\xc7\x0b\x1f\x6b\x5b\xfc\x8b\xf8\xae\xb2\x81\x83\x1f\xd4\x75\x16\x55\xd6\xf9\xd6\x64\x1a\x7e\xe0" +
	"\xbc\xb1\xbc\x45\x2d\xb1\xeb\x86\x58\x7d\x9d\xb1\x83\x1c\xb4\xba\xa0\xe2\x9b\x4f\x4e\x2b\xb3\xaa\x7b\xcb\x0c\x25" +
	"\x0c\xa3\x9a\xbc\x14\x08\x25\x09\xe9\x90\x32\x0d\x78\xa2\x98\xbc\xe6\xc5\x6f\xf0\xb1\x69\x45\x81\x08\xb3\xbc\x56" +
	"\x85\x17\x7c\x42\x4d\xe2\x13\x76\x84\x6e\x6c\x57\x40\xd6\xfc\x42\xfb\xf5\x8e\xf8\xbe\x65\x12\xe9\x1c\x98\x88\x46" +
	"\x8d\x96\x82\x10\x1b\xb7\x8a\xaf\xc7\x37\x9a\x47\xcc\x5f\x38\xed\x22\x6b\x31\xd7\x95\x1f\x44\x0e\xba\x7e\xdc\xb7" +
	"\x68\x10\x62\x6a\x90\x67\x68\xdf\xc7\x21\xd9\xcf\xee\xf3\xb1\x4f\xfe\x1d\x91\x20\x1c\xb3\x3b\xff\xab\xe1\x9a\x24" +
	"\xbe\xf1\x87\x87\x87\x57\xda\xb7\x3f\x86\xce\xe7\x67\x31\x41\x30\xdb\x5b\x78\xb7\xd5\x93\x08\xfc\xf8\xff\x98\xbd" +
	"\xf3\xeb\xd7\x74\x80\xdf\xbe\xc9\x5e\xda\x92\xa4\x98\x9f\xa2\x90\x48\x27\x1c\xf2\x23\xa7\x84\x25\x24\x7d\x5c\xfb" +
	"\x9e\x4c\x12\x39\x9c\xb4\xf3\x87\xa9\x75\xa3\x60\x08\x24\x54\x0a\x7a\xcf\xb7\x01\xfd\x10\x5f\x4e\xe8\x3d\x0e\x85" +
	"\xd5\xd5\xc2\x4c\xbe\x24\x72\xd7\xc1\x7b\x12\xb8\x76\x14\x5a\xae\x1a\xfb\x04\x53\xec\x33\xe1\x91\x14\xbb\x04\xae" +
	"\x1f\x4a\x79\x55\x86\x58\xc6\x29\x45\x64\x51\xd3\xba\xb3\xcc\x08\xdb\xf5\x57\x52\x99\xc4\x92\x1e\x8a\xe4\x8d\x4c" +
	"\x76\x56\x9d\xeb\x03\x7e\xb0\xa4\xf7\xd9\x75\x64\xdc\xf2\xa3\x24\x2e\x6c\xbc\x10\x09\x06\x8a\x77\x40\x29\x47\x94" +
	"\xf6\xac\xc3\xbc\x19\x6e\xfd\xe3\x73\xed\xa4\x1f\xf1\x43\x5b\x16\xba\x8d\x34\x85\x35\xb4\xdd\xc9\xf7\x38\x90\xca" +
	"\x4d\xb2\x9b\x48\xd3\xa5\xc7\x22\x9f\x51\xf5\x60\xb4\x60\xbf\xf3\x01\x06\xd3\x18\x34\x66\x1e\x5a\xcd\xe7\x6b\xcf" +
	"\xe5\xa3\x6a\xeb\x19\x65\xa0\x26\x09\xe2\xda\x5f\xc8\x1d\x49\x85\x23\x7b\xaa\x4f\x6e\x81\xcc\x50\x22\xe1\x5b\x54" +
	"\x68\x28\x8a\x21\x6b\x77\xa1\x2d\xa9\x6d\x92\xc0\xf0\x2d\x2f\x41\x3c\xda\x85\x8f\x83\xa9\x45\x27\xe8\xd2\x35\x03" +
	"\x64\x51\x64\xb8\x34\xf4\x5d\x1b\x79\x36\xa6\x04\xed\xdf\x46\xd7\xe4\x20\x78\x0c\x42\xe2\x54\x07\xda\x5a\xfc\x48" +
	"\x5d\x5a\x3d\xdb\xed\xe4\x8e\x55\x09\x4f\x4b\xc9\xa3\x1c\xde\x44\xd1\x63\x43\xbb\x55\xcb\x1e\xc5\xd2\x18\x35\xe8" +
	"\x73\xd3\xf3\x55\xcd\x00\x08\x1f\x41\xf8\x28\xa9\x01\xe1\xe3\x93\x17\x3e\x72\xa1\xa2\x45\x0d\x9f\xe0\x80\x30\x1c" +
	"\x3e\xf6\x5c\x73\x1c\xe3\x76\x6c\x51\xe2\x8f\x03\xa6\xb3\x1b\xfb\x24\x08\xb1\x1f\x06\x63\xc6\xaa\x7e\xcd\x54\xdf" +
	"\x31\x5f\x52\xc0\xfc\x31\x7f\xa2\x4f\x3f\x3f\x43\xff\x44\xc3\xa7\x21\x8f\xd4\x7b\xe8\x48\x29\x8b\xcc\xee\xc4\x8b" +
	"\xe4\x2e\xbc\x64\x77\x61\x7c\x43\xd6\x0b\x26\xeb\xa8\xe6\xae\x49\x26\xfb\xab\x94\x4b\xa6\x22\x1d\x20\xe2\x36\x44" +
	"\xc4\x25\x1a\xfa\x18\x07\xd8\x91\x49\x50\x38\x25\x65\xca\x0e\x88\xb9\xec\x59\x25\x31\x77\x36\x2f\x31\x37\x14\x84" +
	"\xb3\x40\xcc\x01\x31\x27\xd4\x00\x31\x07\xc4\x9c\x9c\x98\xdb\x49\x82\x0d\x48\xb4\xba\x15\xed\x1c\x89\xa6\x6c\xb0" +
	"\x4b\xc6\x79\x3b\x4f\x50\x89\x02\xaf\x59\x2d\xf3\x8e\x9b\xe9\xa9\x97\x60\x99\x07\xf4\x14\xd0\x53\x40\x4f\x69\x25" +
	"\x8b\x3b\x2e\xe6\xb2\x49\x78\xa5\x7d\x7b\x1a\x84\x92\x92\x48\xfa\x18\x53\x85\xe8\x9d\x6b\x4a\x14\xd5\x5b\x4b\x22" +
	"\xad\xd8\xbe\xae\x0b\x44\xd2\x53\x76\x60\x30\x89\x61\x39\xd8\x96\x5b\x07\x80\x7b\x43\x69\x26\xcb\x23\xa2\xe4\x1a" +
	"\xc6\x7a\x22\x6a\x6a\x99\x0c\xb2\x53\x9b\x2c\x05\xe4\x72\x45\x24\xc8\xae\x80\xd6\x02\x5a\x0b\x68\x2d\x2d\x88\x1c" +
	"\x2e\xb0\xa2\xae\x49\x52\x39\x95\xe1\x52\xd3\x0a\x2d\x97\x7e\xcd\xfe\xf5\xea\x4a\x7b\x4f\xb0\xf9\x78\xa5\xf5\x78" +
	"\xa3\x57\x57\x5a\x8c\x11\x63\xaa\x8c\xdb\x44\xce\xf8\x9a\x75\x10\x73\x55\x9b\xc8\x05\xec\x20\x17\x75\xad\xe8\x1f" +
	"\x9e\x29\xe9\xbe\x98\xe2\x43\x6c\x59\xc0\xab\x42\xb9\xa4\x25\xaa\xcf\xb1\x28\x50\x7c\xe0\xb2\x9a\xd4\x6d\x07\x4d" +
	"\x77\x3a\xaf\x60\x6c\x50\x75\x00\x07\x62\x0d\x88\x35\xb1\x06\x88\xb5\x27\x4f\xac\x15\x5d\x56\x8b\x72\x31\xb9\xaf" +
	"\x6a\x49\x72\xf6\x34\x44\x67\x8d\x4e\xaa\x4c\x78\x06\xee\xa9\x75\x2b\xba\xe5\x84\xd4\x36\x99\x80\x81\xe8\x6c\xfd" +
	"\x64\x96\x2e\xa0\xa6\x65\xcb\xce\xaa\x14\x02\x90\x63\x40\x8e\x89\x35\x40\x8e\x3d\x79\x72\x6c\x06\xa1\xd7\x5b\xe2" +
	"\xb8\xfe\xe3\xa5\x4f\x82\x20\xf2\xc9\xe2\x42\xb4\xea\xfb\x76\x4a\x9a\xa6\xf7\xfa\x87\xc3\x7a\x69\x1a\x5f\x1f\x94" +
	"\x2e\x10\x90\x83\xca\xc5\x2d\x93\x83\xf8\x01\xc8\xc1\x15\x91\x83\x40\xf0\x15\x67\xb2\x44\x82\xef\x78\xc5\x04\xdf" +
	"\xb0\x4a\x9b\x01\xc1\x07\x04\x9f\x58\x03\x04\x1f\x10\x7c\x39\x81\xf6\xda\x0a\x6e\x97\x47\xee\x95\xdf\x06\xc4\x5e" +
	"\x99\xd8\x8b\x57\x07\x48\xbd\xe6\xa5\x05\x52\x4f\x68\xb9\x16\xe7\xcf\xcb\x2c\x4e\x17\x72\x6f\x10\x65\x22\x6a\xf7" +
	"\x8e\xf8\x99\x13\x68\x38\xc5\x21\x9a\xe2\x3b\x82\x22\x1a\x18\x53\x62\x46\x36\x31\x91\x7b\xfd\x85\x18\x42\x34\x6e" +
	"\xa0\x23\x4b\x33\x59\x1e\x1d\x59\x95\xeb\x2d\x9d\x8e\xac\x4a\x26\x81\x8e\x04\x3a\x52\x52\x03\x74\xe4\xae\xd1\x91" +
	"\x1e\x31\xc6\x19\xe2\x8f\x3f\xf7\x0c\xd5\xea\x72\x77\x8a\xfa\x43\x4d\xe4\x5f\x80\x3e\x15\xd7\xae\x0b\xf4\xdf\xd2" +
	"\x08\xaf\x8d\xa7\xa7\xd0\x5b\xe4\xa7\x18\x9e\x55\xf1\x58\xfb\x04\x15\xef\x09\xa7\xa7\xd0\xa7\x00\x4f\xc4\xbd\x9b" +
	"\x3d\x43\x45\xa7\x83\x28\x57\xe8\xc2\x4f\xa1\x65\x5b\x7f\xb2\xe4\x2b\x08\x4f\xb0\x45\x83\x10\x31\xcf\xf0\x8c\x30" +
	"\xbc\xb8\xfc\x84\xfc\x64\x89\xaa\x2f\xab\x89\xab\x5c\x03\x13\xa2\xb0\xec\x5e\xae\x34\xad\x81\x89\x36\xc1\x31\xaa" +
	"\x91\xce\x6a\xa2\x13\x2f\x10\x78\x78\xde\xa8\xc1\x10\x13\x18\x62\x02\x27\x77\x71\x7c\x05\x8f\xd8\x3d\x6c\x78\xd1" +
	"\x38\x8a\x8f\x64\xc0\x8e\xe4\x08\xdf\x4d\x74\x07\x3d\x47\x79\x0b\x1a\x39\x71\xab\x51\x10\x39\xe8\x05\x0a\x0c\x6c" +
	"\x63\x9f\xd9\x64\x49\x9b\x2c\x68\x73\x15\xb3\xd2\xde\xf7\x8f\x92\xd9\xc8\x67\x84\x38\xea\xf5\xb1\x23\x5b\x81\xac" +
	"\xc5\x77\xe3\x71\xc6\x77\x48\xdb\x7c\x16\xc7\x82\x8a\xc8\x98\xc5\x81\x95\x34\x11\xb8\x80\x85\x86\x29\x23\x39\xdb" +
	"\x8d\x8f\xe1\x45\xd9\xf8\x84\x32\xc9\x9b\xe6\x8d\xb5\x1c\xef\xbd\x3c\xce\xb2\xeb\x9b\xc4\xff\xfe\x31\x66\x12\x19" +
	"\xb1\xf4\xe1\x42\xd6\xca\x73\x6d\xcb\x88\xf7\x5a\x33\xc9\x0d\x8e\x6c\x29\x6b\x54\x4f\x71\xf9\x24\x88\xec\xf0\xc7" +
	"\xb6\xe0\x15\x10\x9b\x18\x62\x7a\x33\xfe\xc8\xb7\x45\xbe\x99\x6d\xb6\x33\xe3\xeb\x14\xf5\x8a\x3d\x2d\xed\x2a\xb1" +
	"\x4d\x79\x77\x29\xe0\xb5\x1a\x6d\xf3\x67\x1d\x82\xa9\xe2\xab\x92\xd2\xcf\xad\x40\x2c\xc4\x13\x49\xe0\xe3\x2d\x88" +
	"\xad\x1d\x53\x23\x9f\x72\x04\x29\x50\x6b\xea\x60\xda\xeb\x8d\x93\x0d\x51\xb0\x5b\x45\xc1\xc6\xd7\x44\x2e\x7a\xe2" +
	"\xd5\x73\x07\xc9\xe6\x84\x97\x3c\x36\xce\xea\x03\x68\x2f\x3e\x2b\x45\x57\x3e\x2d\x45\xa5\x52\x9c\xd0\xe9\xd0\xdc" +
	"\x4f\x8b\x59\x72\xb8\xcd\xcf\x06\xf9\x25\x85\xed\x69\x2b\x86\xa9\x1a\xfd\x06\x18\xa6\x6a\x15\x30\x4c\x1d\x63\x98" +
	"\xf8\x81\x2b\xf1\x4c\x7e\xfc\x07\xd8\x1e\x60\x7b\x80\xed\xe1\x6d\x80\xed\xc9\xde\xbd\xad\x6c\x4f\x62\x4b\x0c\x9c" +
	"\x0f\x70\x3e\xc0\xf9\xa8\xe6\x05\x9c\x0f\xda\x1c\xe7\x63\x5a\xc1\x6d\x07\xf5\x44\x27\x2d\xd8\x9e\x2a\x3d\x0d\x6c" +
	"\x4f\xb5\x0a\xd8\x9e\x4e\xb0\x3d\x41\xe4\xec\x3b\xf8\x81\xa9\x7a\xc6\x37\x96\x4d\x78\xe2\x95\x71\x60\xfd\x49\xc6" +
	"\xd7\x8f\x21\x09\xbe\xde\x04\xf1\x05\xfc\xea\x3f\x57\x1a\x79\x08\xff\x18\x1c\xbd\xfc\xfc\xd7\x75\xe8\xdf\x04\x7f" +
	"\x3d\xdc\x04\x7f\xfd\x79\x13\x5c\x69\xdf\xd0\x01\xaa\xbe\x00\xdf\x61\xcb\x6e\xff\x86\x67\xe8\xfa\x11\xed\x9b\xe4" +
	"\xce\x32\x48\xcf\x73\xcd\x5e\x96\x12\xe6\x19\xaf\x2a\x97\x5d\xd1\x92\xa2\x6a\xf1\x19\xd4\x7d\xff\xd9\x15\x7d\x8e" +
	"\x5c\x8a\xf6\xb3\xb2\x1e\xf2\x5c\xf3\x19\x62\x4c\xdd\xd8\x26\x37\x21\x62\x9f\x7f\xc6\x57\x21\x6b\x36\xf6\x5c\x73" +
	"\x94\xc5\x4d\xb7\xe8\x8d\x3b\x02\x26\x12\x98\x48\x60\x22\x79\x1b\x60\x22\xb3\x77\x6f\x2b\x13\xc9\x7c\x14\x2e\xb0" +
	"\x87\x0d\x2b\x14\xc3\xbc\x01\xff\x08\xfc\x23\xf0\x8f\xc0\x3f\x2e\x87\x7f\xdc\xa0\xa6\xab\x0d\xcb\x77\x02\x2c\x1f" +
	"\xb0\x7c\xdb\xc0\xf2\xe5\x9a\x2e\xd3\x0a\x6e\xab\xb6\x81\x63\xcb\xc7\x21\xc9\xed\x00\xcb\xfc\x0b\x37\xed\x67\x36" +
	"\xfc\x23\xb0\x03\x04\x5e\x06\x78\x99\xa4\x0d\xf0\x32\xd9\xbb\xb7\x9a\x97\xf9\xf9\x57\xd0\x88\x01\x47\x03\x1c\xcd" +
	"\x56\x71\x34\x7b\x92\x4f\xc7\xd7\x49\x8c\x52\xc4\xf7\x6b\x81\x31\x25\x0e\xfe\x8d\xf8\x01\x57\x45\x15\x43\xed\x68" +
	"\x41\xf8\xc8\xd1\x81\x89\xfd\xdb\xc2\xf2\xe7\x78\xad\x58\x46\x1c\xcf\xc6\xa1\x45\x27\x95\xf9\x69\xb6\x15\x84\x65" +
	"\xa0\xff\x56\xec\xc7\xaf\xcb\x52\x8f\xcc\xa5\xd5\xbd\x3f\xd0\xcb\x87\x3a\xf5\x57\x2d\xfa\x8b\x55\x5f\xe7\x59\xc6" +
	"\x2d\x23\x54\x4b\x2f\x4d\x16\x21\xa3\x89\xc4\x13\xa6\x0d\x05\x46\x4b\xef\x0b\x45\x47\x62\x91\xee\x54\x4b\x86\x42" +
	"\x89\x2e\x16\x1d\xf5\xc5\x56\x02\x0a\x1b\x08\x25\x7a\xe9\x76\xfc\x5c\x5e\x9d\x98\x14\x70\x99\x62\x51\x36\xbf\x36" +
	"\xa3\x12\x87\x70\x2c\x0e\x41\x1c\xd5\xe0\xa5\x58\x24\x38\x5e\x9f\x08\x25\x47\xfd\xf2\x6c\x94\x9b\xfa\xa7\xcb\x48" +
	"\x7f\xad\x04\x87\x55\x67\xc3\x37\x04\xdb\x61\x71\x1c\x5a\xc4\x38\x52\xed\x3d\x39\x31\x4f\x9d\x8f\xb6\x69\x3a\xb7" +
	"\xb8\x58\x7f\x97\x83\x7e\x52\xc8\x8f\xd0\x1e\x62\x0a\x8c\x29\x7b\xe1\xe1\x97\xc0\xa5\x23\x56\xfe\xd7\x41\xd2\x2c" +
	"\x87\x2d\x0d\x53\xea\x86\x38\x5d\x73\x29\xec\x97\x26\x2d\xb9\x8d\x2c\x3b\xfc\x99\x4a\x1d\x3a\xcb\x22\x81\x83\x03" +
	"\xf4\x93\x8f\x6f\x30\xc5\xe8\xe0\x40\xbc\x99\x08\x55\xc6\x8d\x48\x42\x19\xa8\xea\x2c\xc3\xa5\x65\x8f\xed\x7e\x0f" +
	"\x0d\x74\xbd\x87\x06\xc3\x61\x0f\xe9\x12\x07\xeb\xd4\xe1\xff\x3c\x9f\x3e\xfa\x3b\x3a\xb7\x89\x2f\x84\xb4\x28\xdc" +
	"\xd3\x26\x0e\xa6\xd7\x2e\xf6\x2b\x24\xde\xb7\x46\x20\x50\x46\xc5\xd0\x26\x94\x84\x8c\x5c\x2e\xa3\x6b\x4e\x12\x7c" +
	"\xcc\xe8\x94\x02\xc5\x91\xc4\x79\x2d\x16\x84\xc4\xc7\x89\x3e\x5e\x1f\x0e\x07\x2f\x8f\xf5\x93\xe3\xc1\x69\x31\x65" +
	"\xa5\x94\x39\x2f\xb8\xc2\x16\x66\xd0\x39\x2f\xdf\x16\x4e\xbe\xd5\xd8\x15\x2d\x7c\x7c\x93\xb4\x26\x4b\x76\xf0\xed" +
	"\x40\x9a\xdb\xbf\x0d\xce\xce\x8c\x97\xc7\x8b\x44\x9f\xf9\x9b\xf9\xf2\x25\x3e\xc2\x2b\x09\x37\x43\x23\xe7\x9a\xf8" +
	"\xc8\xbd\x61\xee\xc3\x86\xeb\x8b\xe9\x04\x21\xb7\x2d\x42\xb5\x62\xcf\x99\x7c\xe4\x9b\x4f\xcf\x31\xe4\xb6\x85\xd0" +
	"\x2f\x10\xfa\x05\x42\xbf\x68\x62\xc0\xbf\x44\x27\xcc\xdc\xcf\x19\xb2\x66\x42\xc4\x57\x57\xda\x77\xf1\xdf\x2b\x4d" +
	"\x2a\x4d\x9c\x3f\xdc\x8b\x8c\xd7\x2d\x08\x14\x67\xda\xea\x96\x79\x6d\xe3\x6b\x48\xa9\xfa\xde\xcd\xe8\x7b\xf8\x6e" +
	"\xb2\x65\xd1\xf7\x16\x4a\x4c\xa6\xa0\x94\x56\x9e\x77\xa3\x4a\xb5\x0a\x02\xb1\x75\x92\x3e\x2d\x63\xe3\x6d\x98\xf2" +
	"\x19\x4a\x29\x1f\x79\x42\xda\x79\x02\xc1\x00\xe5\x03\x94\x8f\x58\x03\x94\xcf\x93\xa7\x7c\x1a\x02\xed\x54\xa9\x1e" +
	"\xf4\x3c\x86\xe7\x6d\xa1\x7d\xe2\x3b\xef\xb4\x3a\xda\x4a\xe4\x8c\x3a\x01\x08\x90\x3f\x8a\x01\x77\xdb\xd2\xaa\x22" +
	"\x79\x51\x18\x62\x55\x3f\x3d\x9f\x21\x96\xfc\x62\x3e\x9b\xe3\x62\x9e\x12\x6b\x32\x65\xdb\x3c\x38\xea\x7b\x0f\xd5" +
	"\x51\xb3\x7b\xfb\xe4\xa8\x7a\x33\xab\xad\xb4\x6c\x6b\x42\xcf\x83\x8f\x75\xc2\xe5\x76\x96\x5c\x4a\xb9\xf4\x0f\x8e" +
	"\x17\x3e\x2a\x5f\x10\xb7\xf8\x17\xf1\xdd\xa5\xdb\x82\xf9\xf1\x3a\x7d\xa8\x91\x8b\xd7\x51\x76\x89\x26\x3b\x9b\x9e" +
	"\xb4\xc1\x6b\x12\x18\x0b\x5a\x9b\x35\x92\x81\x2d\x8d\xcd\xaa\xb4\x32\x18\x9b\xad\xd5\xd8\x2c\x74\xbd\xdb\xfd\x61" +
	"\x8f\x65\x05\xf0\x71\x48\xf6\x0d\x97\x86\xd8\xa2\xc4\xe7\xf7\x65\x7c\x7b\x8c\x03\x62\xb8\xd4\x0c\xc6\x0c\x34\xbe" +
	"\x5a\x0e\x9e\x90\xff\x7a\x75\xa5\x5d\x69\xcc\x0b\xe7\xd5\x7f\xae\xb4\xff\xbb\x3d\x0d\xc6\x87\xcf\xaf\xb4\x5e\xde" +
	"\x3f\xae\x8b\x9b\x5d\xfe\xfa\xfa\x4a\xfb\xf6\xc7\xc0\xf9\xfc\xec\xca\x97\xbb\xea\xb0\xb6\x32\x7f\x1d\xa6\x4b\x1f" +
	"\xfb\xc4\xb3\xb1\x41\xf6\x1b\xbd\x77\xaa\xb7\x79\x0f\x5d\x69\xe9\xeb\xaf\xb4\xf8\xd7\x77\x3a\xff\xeb\xb9\x26\xff" +
	"\xc7\xfe\xe1\xf3\x67\x57\xda\xb3\x67\x28\xf5\x62\xe2\x63\x59\x34\xda\x6d\x10\x62\xb5\x95\x68\x99\x1f\x91\x86\xb9" +
	"\x9d\xd3\x10\x2c\x5b\x4c\x24\x37\x07\x73\x48\xe8\x5b\x46\x42\x92\xd7\xef\xf3\xec\x26\x60\x49\xf0\xdd\x97\xf3\x13" +
	"\x34\x9b\x31\x2c\xfa\xf8\xeb\x25\xd3\x59\x5c\xba\xa6\x70\xd5\x82\x45\x51\x17\x2c\x8a\x6a\x73\x9a\x22\xb4\x0d\x76" +
	"\x39\x60\x6f\x94\x76\xdc\xa8\x07\x05\xe8\x71\x6b\xb4\xb2\xcc\x1b\x17\xd4\xb2\xa5\xd2\x59\xd5\xb2\x2d\x5c\x51\x8e" +
	"\x4f\x41\x38\x09\xc2\x49\x10\x4e\x82\x70\x52\xad\x96\x4d\x82\xdc\xf1\xf8\x08\x4f\x4d\x33\xfb\xfe\xfc\x2d\x68\x66" +
	"\xcb\xa2\xc9\x54\x5c\xb3\x49\x32\x06\xb4\xb3\xa0\x9d\x5d\x5c\x3b\xdb\xc6\x17\x17\xec\xd2\x80\x00\x02\x02\x08\x08" +
	"\xa0\xfa\xa8\xbe\x5b\xaf\x9b\xad\x51\xcd\xa6\xd1\x3d\x41\x3b\xfb\xe4\xb4\xb3\x1b\x53\xbf\xd6\xdf\xbc\xb9\xfa\xf5" +
	"\xa8\xaf\x54\xbf\xce\x10\x17\x71\xb5\xea\xd7\x8d\xe8\x4e\x41\xf5\xb9\xab\xaa\xcf\x5c\x1b\x96\xde\x43\x4c\x21\xc6" +
	"\xd9\xef\x82\xc2\xf3\xdb\xd6\xe8\x2f\xaf\xaa\xce\xf1\x68\xb1\x8b\xb2\x9d\xfe\x31\xfd\xbe\x5c\xfb\xd8\x4a\x7d\xa8" +
	"\x2f\x90\xba\x73\x43\xfa\x43\xd7\x43\x43\x94\xdc\xe8\x3f\xd3\x90\xd0\x80\x80\x32\xb1\x5c\xdb\x21\x65\x62\x7e\x06" +
	"\x4c\x62\xc8\x54\x1e\xac\x15\x68\x0b\xd7\x35\xaf\xda\xe3\xbd\x59\x65\xe1\xc6\x5d\x64\xf5\xa3\x5a\xa8\xe7\x44\x5b" +
	"\x55\xf0\xd1\xda\x49\x36\xa2\xd4\xa2\x13\xf4\x81\xc9\x9e\x97\xe0\x24\xdb\x69\xb2\xbc\x20\x01\xac\xbe\x7f\x99\x14" +
	"\xfb\x6c\xdb\xfb\xb2\xc5\xf6\xce\x10\xb8\x6e\x1d\x34\xb9\xbc\x8a\x9d\x7d\x69\xd5\x62\xd6\x8c\x96\x49\xfe\x37\x25" +
	"\x97\x87\xe2\x22\x6e\x15\xc5\x8e\x70\x80\xfe\x24\x7e\x35\x51\x11\x50\xee\x73\x27\xb2\x8f\xc9\xcd\x44\x73\xe6\x4d" +
	"\x71\x40\x54\xf6\x85\x73\x85\x02\xaf\x12\xe3\xf1\xcb\x93\x58\xe7\xf1\xb7\x16\xb3\x10\x4c\xc2\x5e\xac\xdd\x3c\x30" +
	"\x1e\x79\xa3\x6d\xa0\x74\x6d\x77\x88\xa0\x8f\x69\xf7\xca\xed\x88\x2e\xdc\x48\xd4\x0c\x01\x41\xdf\x05\x82\x5e\x7d" +
	"\xb3\xa3\x8e\x10\xc5\xab\x88\x44\xd6\xfd\x59\x3f\x2d\xc3\x41\xa6\xf8\x68\x09\x91\xa9\xc4\xfc\xfc\x6e\x52\x2b\x31" +
	"\xaf\x88\xbc\x9b\x97\x60\x4e\x0f\xa1\x77\x6e\x48\x46\xc8\xb6\x1c\x2b\x44\x0e\x7e\x44\xe4\xc1\x20\xc4\x0c\x10\x93" +
	"\x72\x21\x8b\x22\x1c\xdf\x92\xc8\xe4\x5a\x4f\x14\xb8\x0e\x41\x99\x48\x2c\x40\xee\x0d\xb2\x42\x84\x4c\x97\x04\x88" +
	"\xba\x21\x9a\xe2\x3b\xc2\xdf\x16\x1c\x8a\xd6\x84\xb9\x56\x42\xef\x8b\x6a\x89\x06\xa2\x5a\x94\x6c\xcf\x4c\x54\x0f" +
	"\xea\xe3\x0a\xc5\x37\xef\x47\xcb\x21\x29\xcd\x23\xa7\xfa\xb8\xa1\x5e\x95\xd6\x51\xd2\x7b\x1e\x9e\x90\x64\xd6\x55" +
	"\xe3\x3e\x9f\x78\x04\x2b\x6e\x1c\x5e\xf7\xda\xf2\x89\x91\x6e\xd5\x9d\x40\xa1\x19\xbe\xcb\xd8\x13\xc9\x28\xe3\xa3" +
	"\xf4\x86\x60\x93\xd1\x77\xb2\x7a\x7e\xcd\x08\x2b\x6d\xb8\xb6\x94\x81\x31\xb9\x5f\x50\xb3\x2e\x90\x45\xe1\x6b\x79" +
	"\x18\x18\x57\x98\x5c\xab\xb2\xd3\xc0\x6c\x4c\x12\x3a\x59\x81\x32\x94\x66\x28\xac\x56\x61\x37\x22\xbe\x67\x06\x63" +
	"\x14\xd6\xf8\x6f\x86\x3e\x34\xf4\x13\x31\x02\xab\x2c\xae\xaa\x89\x43\x92\xd3\x5a\xbf\xff\xfe\xfb\xef\x07\x6f\xdf" +
	"\x1e\xbc\x7e\x8d\xde\xbc\x19\x39\xce\x28\x90\x92\x81\x6a\xb3\x14\x94\xc2\x5b\x0d\x95\x18\x57\xe7\xa1\xc4\xa4\x84" +
	"\x62\xdc\xe4\x93\xaf\xa4\x23\x3d\x1c\x86\xc4\x67\x80\x97\x8a\x6e\xa5\x1a\xc0\x12\x4d\x26\x5b\xaa\x23\xd9\x0d\x87" +
	"\x90\x76\xda\x6f\xb7\x7a\x99\xce\x33\xf4\x2d\x2a\x45\x9a\x2c\x88\x68\x66\x29\x65\x3c\x7e\xfa\xf0\x5a\xc0\x9d\x2d" +
	"\xae\xcd\x0c\x1a\xbb\x01\x8a\x6d\x2c\xa8\x50\x1d\xe0\x6e\x0c\x36\x6b\x8d\x6f\x50\x05\xb8\x3e\xca\x68\xc8\x26\x62" +
	"\x1f\x15\x01\x63\x6a\x99\x26\x91\xea\x34\x52\xc0\xe0\x74\xce\x22\x20\xa1\xf2\x97\x46\x00\x1b\xd5\x4e\x39\x6c\x1c" +
	"\x2d\x0a\x1b\xcc\x46\x0e\xfd\x4d\x1a\x98\xbc\x3d\x7c\xf0\xf0\x73\xab\x87\x8f\xf7\xe4\xdf\x11\x09\xa4\xf4\x34\x40" +
	"\x48\xb1\xd3\xf2\x21\x44\x6e\x97\xd5\x39\x08\xf9\x25\x26\x8c\x01\x3e\xd6\x0f\x1f\xdf\x77\x1f\x3e\xde\x12\x07\x6e" +
	"\x98\x59\xe1\x43\x26\xde\x98\x07\x3e\x5e\xaf\x1a\x3e\xb8\x32\x79\x51\xf8\x80\x1b\x66\x63\x10\xf2\xc3\x76\x40\x08" +
	"\xdc\x30\x1b\x82\x8f\x1f\xbb\x0f\x1f\xef\x49\x10\x62\x3f\x44\x52\xa9\x3d\x80\x48\xa5\xd3\xf2\x41\xe4\xa7\xcd\x10" +
	"\x21\x7b\x35\xeb\x33\xbf\x92\xb5\xa4\x1e\x65\xd2\xa1\x71\x39\xbe\xcb\xa8\x31\x8c\xc8\x28\x88\x9c\xb1\x8f\x43\xf2" +
	"\x55\x8c\x0c\xa3\x0e\x17\xd3\x4b\xbf\x97\x9a\x5d\x76\x38\x70\x4c\xc9\xee\xb2\x41\x29\xcc\x2c\x33\x24\x4d\x1a\xd5" +
	"\xc1\x69\x3c\x19\x99\x4e\x6d\x66\xbf\x86\x8b\x79\x30\x4c\x11\x2e\xca\xab\x7b\x45\xe3\x32\x7c\x37\x19\xbb\x77\xc4" +
	"\x1f\xc7\x98\x27\x57\xcf\xe7\x1b\xec\x27\x31\xf9\xc7\x3e\x27\x70\x82\x42\xec\xe1\xac\x55\x15\x2c\x72\x88\xa8\xec" +
	"\xd0\x1f\x7a\xdf\xf9\x9c\xaf\xfe\xb3\x1e\xba\xa2\xa5\x3d\x4b\xb6\x2c\xdd\xb1\x78\xc3\xfe\x27\xde\xb0\x2b\xea\xfa" +
	"\x28\xf2\xd0\x73\xd4\xcf\xf4\xf9\x5b\xb5\x7b\xa2\x57\xca\x5a\x77\x8f\xeb\x7d\x60\xef\xe6\xda\xbb\xef\x17\xdd\xbb" +
	"\x5a\x43\x75\x15\x32\x45\x32\xd4\xdb\x61\x9c\x5a\xb0\xb4\xd9\xaa\xdd\x9d\x4b\x21\xa1\x3e\x99\x4b\xc2\xb2\xa5\x50" +
	"\x02\x4b\x38\xac\xf1\x59\x2d\x03\x54\xf1\xc4\x66\x35\xc5\x73\x5b\xd9\xfa\x79\x8e\x77\xa3\x3f\x43\x37\x40\xe0\x87" +
	"\x2e\x81\x40\x82\xaa\x01\x00\xd6\x08\x00\x3f\x2e\x17\x00\x24\xdb\x9b\x18\xe5\xf9\x9c\xd1\x4b\xa3\x32\xb6\xd8\x57" +
	"\xcf\x35\x51\x82\xfb\x67\xc3\xc5\x2b\x33\xa9\x5c\x0e\x92\x5f\xce\x0e\x56\xad\x25\x6b\xed\x1d\x7f\x9a\x91\x01\xcb" +
	"\xad\x16\x35\xfd\xad\xe8\x14\xdc\xce\x2c\xf1\x82\x9b\x67\x23\x3f\xb1\x4c\xf4\x64\x2e\x46\x3e\xa6\x41\xbc\x66\xaa" +
	"\x15\xe3\x2d\x3c\xac\xce\x62\x9e\xa7\x5a\x66\xdd\xf7\x64\x93\x94\x27\x72\x2c\xe7\x1c\x5c\x6b\x1e\xc7\xd2\x0c\x24" +
	"\x06\x62\x76\x1a\x89\x43\x6a\xb0\x98\x1b\xbe\xd7\x18\x73\xdd\x39\xd2\x5c\xa3\x99\x31\x57\x5c\xdf\x74\xf6\xdb\x1a" +
	"\x70\x31\xd9\xc4\x8d\x45\xad\xd4\x2c\x88\x63\x05\x6e\x3c\xb9\x9f\x87\x0d\x62\xc5\x41\x2f\x21\xcd\xe2\x72\x9f\x92" +
	"\x90\x04\x63\xcb\x1d\x4f\xdd\x20\x94\x1f\xab\x14\x25\x8a\xf6\x53\x16\x35\xec\xc8\x24\xe7\x75\xf1\x05\x6a\xac\x06" +
	"\x35\x27\xb2\x43\x4b\xd9\x35\x0d\x7d\x11\x0f\x5d\x1c\x54\x21\x43\xa4\x20\x21\xd1\xfe\x1d\x11\xff\x71\xf9\x0b\x91" +
	"\xc3\xae\x60\xe2\xa0\xf9\x64\x42\x64\xd1\x29\x62\xe0\xbd\xb5\xbc\x4f\xbe\xfd\xe1\x91\x1a\xea\x8c\xfe\x2a\x13\xdf" +
	"\x10\x4f\x18\x30\x06\xff\x5f\x3a\x27\xf1\x03\x92\x43\x50\xa8\xa9\xeb\x98\x9c\x5d\xbe\x5e\x42\x75\x14\x90\x8f\xfc" +
	"\xd5\x12\x1b\xaf\xc2\x2f\x48\x8b\x2a\xbc\x09\xd2\xa2\x2e\x27\x2d\x2a\x73\x3d\xab\xcb\x89\x7a\xea\x10\xd3\x74\x4a" +
	"\x77\x42\x4d\x42\xd4\xa9\x87\x0f\x7c\x62\xb8\x8e\x43\xa8\xc9\xe2\x86\x40\x62\xd4\x27\x97\x18\xb5\x94\x07\xf5\xb8" +
	"\xaf\x9f\x1c\xeb\xfd\xfe\x60\x50\x58\xff\x27\x9e\x07\x55\x9f\x23\x11\xea\x5b\x4c\xf1\x84\x98\xe8\xd7\xeb\x2f\xc4" +
	"\x10\x36\x79\xae\x24\xa8\xb9\x0d\x7c\xbd\x61\xfa\xcf\xf4\xc6\x8e\x1e\x5e\x57\x0d\x32\x1a\x13\x57\x2c\x66\x3b\x2e" +
	"\xc6\x4a\x99\xdd\x21\xb3\x79\x2b\x84\x10\x29\x2d\x6c\xc2\x25\x54\xfd\xea\xcc\xba\xc5\x99\x99\x79\xba\x87\xda\xf9" +
	"\xcd\x65\xd5\xad\x32\xed\x9c\x4b\x21\xd7\xc6\x64\xb4\x6c\x10\xda\x44\x71\xd7\x1a\xa4\xfb\x6e\x7c\x34\xd0\xfe\xbb" +
	"\x94\x67\x95\xb2\xa0\xa0\x32\x2d\x76\x5a\xa2\x55\x70\x26\x2a\x58\x4c\x67\xda\x6c\x33\xbe\xb8\xe1\x16\xc0\xc5\x1a" +
	"\x55\xe9\x46\x2a\xe8\x20\x9e\x6d\x19\x58\xfa\xbd\x6e\xd9\xf5\x01\x78\xac\x11\x3c\x4c\x12\x58\x3e\x31\x01\x3c\x00" +
	"\x3c\xb2\x16\x05\xf0\xe0\xea\x0e\xee\x9f\xd8\x7d\x7b\x2d\x00\x8d\xf5\x83\x86\xaf\xb6\xb0\x05\xe0\x90\xb4\xdd\x0d" +
	"\xe0\x30\xbc\x68\x3d\x48\x03\xee\x93\xad\x83\x8b\x35\x61\x0c\x80\x8c\x99\x20\xa3\x9e\x15\x2d\x6c\xe1\x8b\xc3\xe7" +
	"\x2f\x9e\x8a\x5d\xae\xe1\x46\x34\xdc\x8f\xbc\xaf\x5f\xdc\xeb\x57\x57\x5a\xae\xea\x3a\xa0\xae\x49\x82\x2b\xed\xdb" +
	"\xbc\x7a\x74\xa6\xd0\xff\xfe\x51\x01\x05\xe2\x90\x10\x5f\x65\x1f\x3b\x2a\xc8\x61\x2d\xbe\x1b\x67\x7a\x1c\x71\x5f" +
	"\x25\xcb\x92\x75\xcc\xf4\xd0\x96\x43\x64\x3d\x85\x83\xb1\xd0\x30\x65\xd1\xab\xdb\x8d\x8f\x85\x8f\x93\x8d\xaf\x15" +
	"\x14\xb7\x32\x4e\x70\x7d\x93\xf8\xdf\x3f\x7e\xb4\x12\x21\xfe\x07\xa9\xb7\xac\xe7\xda\x96\xf1\xc8\x59\xa4\x1b\x1c" +
	"\xd9\x52\x7c\x95\x69\x52\x03\x62\x13\x23\x44\xb7\x16\x35\x7b\xe8\x4a\xe3\xa6\x20\x08\x07\x88\xdb\xf0\xf8\xae\x6d" +
	"\x13\xff\x4a\x43\x37\xbe\xeb\x20\x6c\x63\x87\x98\x78\x5c\x51\xb5\x1c\xe6\x2d\xb9\x3d\x08\xba\x7e\x4c\xde\xc5\x04" +
	"\x3b\xdc\x94\x24\x79\x35\x62\xb3\x88\x5b\xc4\x3b\x8a\x4c\x12\x18\x49\x4c\x12\xa9\x62\xdd\xc7\xf7\xa9\xa2\x53\x61" +
	"\xd7\x51\x1f\x7e\xca\x27\x41\x64\x87\x3f\x36\xc3\x3d\x5f\x08\x05\x6c\xc8\xe1\x45\x0e\x65\x6d\xe0\x2c\xb3\x18\x50" +
	"\xd4\x2b\x80\xad\x04\x6e\xc4\x36\xe5\xdd\xa5\x27\xa2\xd5\x68\x9b\x3f\xeb\x10\x2c\x48\x5b\x93\xaf\x4a\x4a\x3f\xb7" +
	"\x82\xfd\x4c\xcd\x3d\x1b\xda\xac\x6a\x38\x2e\x32\x20\x5c\xb3\x3d\x4c\xb1\x61\xe7\xd4\x4a\xc7\xa5\x42\xb9\x5a\xa9" +
	"\x1a\x5b\xb2\x85\x5a\x29\x5f\x6c\xf4\x3e\x31\x34\xe4\x2e\xad\x08\x53\x13\xbd\x2f\xe1\x87\x65\xe8\x9c\x76\x35\x61" +
	"\xa3\x4a\x87\x96\x5f\xe4\xd4\xa5\x02\x34\xef\x54\xb6\x46\xc1\x71\x7c\x15\xd9\x1a\xab\x29\x18\x20\x59\x51\xdd\x47" +
	"\x20\x59\x11\x24\x2b\xaa\x74\xeb\x42\xb2\xa2\x06\x95\xc1\x7c\x9c\x58\x03\x9b\x55\x1f\x00\x16\x98\xad\x5d\x64\xb6" +
	"\x12\x38\x1c\xa7\x70\xc8\xd9\xad\x2a\x74\xce\xc0\x74\xdd\x4f\x89\x4f\x50\xc6\x6f\xa1\x57\xe8\x1f\xdf\xd1\xe0\x1f" +
	"\x8c\x16\xcb\x18\xaf\xb8\x30\xef\xf3\x0f\xe0\xc3\x78\x1b\xe0\xc3\xb2\x77\xcf\xc7\x87\xb5\xcb\xf6\xfa\xba\x0c\xdd" +
	"\x2a\x9e\x00\xb2\x9d\x29\x06\xbc\xbb\x2c\x50\x9b\x9c\xf5\xc0\x04\xcd\xc0\x04\xcd\x93\xb1\x75\x86\x78\xb9\xfa\x4b" +
	"\x60\x95\x80\x55\x02\x56\x69\xab\x59\xa5\x06\xe3\xbb\x05\x33\x76\x24\x6f\x8d\xe9\xd8\x9c\x22\x1d\x07\x1e\x31\x32" +
	"\x9a\xf8\x6b\x91\x9a\xbd\xd2\xbe\xa3\xc1\x95\xd6\x43\xd2\x8e\xaf\xfe\x73\xa5\x15\x28\xdb\xc3\xe7\x57\x1a\xfa\xf6" +
	"\x0c\xb9\x3e\xd2\x0f\xf0\x75\x40\x68\xb8\xbf\xd6\x2f\x3f\xbb\xa2\x57\xf4\x7f\x50\xfc\xff\xea\x77\x03\x12\xce\xf0" +
	"\xb1\x80\x84\x73\xcc\x6d\x49\xdf\x58\x2c\xb3\x09\x30\xb6\xbb\xc8\xd8\x26\x58\xa3\xc2\xd8\x56\x71\x09\x30\xb6\xd5" +
	"\x3a\x60\x6c\xb7\x90\xb1\xcd\x9d\xf9\x45\x97\xcc\x99\x9d\xf9\x81\x2b\x2e\x70\xc5\xa9\x23\x3e\x70\xc6\xc0\x19\xaf" +
	"\x95\x33\x3e\x5d\x31\x67\x5c\xcd\x0a\x03\x9c\x31\x70\xc6\x62\x0d\x70\xc6\x5b\xc0\x19\xb3\xd0\x87\x3c\xb4\xd6\x52" +
	"\x78\x63\xbd\xdf\xef\xa3\xe7\xa8\x94\xd4\xb2\x4d\xdc\xc5\x8c\x36\x7e\x95\x71\x76\x9e\x6b\x4a\x58\xba\x46\x83\x50" +
	"\x60\xe8\x80\xa1\x53\x31\x74\x39\xb0\x6f\x8a\x75\x4b\xa5\x29\xbb\x13\xb6\x14\x18\xd3\x72\x37\x60\x4c\xd3\x5e\x0b" +
	"\x31\xa6\x09\xe7\xf9\xd1\x0d\xb1\x8d\x2e\x2e\x3f\x25\x07\x6c\xdf\xb1\x6c\x2b\x3e\x13\x55\x58\x04\x26\x34\xef\x0d" +
	"\x4c\x28\x30\xa1\xfc\x59\x21\x13\x5a\x8d\xf2\xb3\x74\x2e\xf4\x0c\xb8\x50\xe0\x42\x81\x0b\x7d\x32\x5c\x68\x1a\xe3" +
	"\x1b\xf8\x50\xe0\x43\x95\xe3\xdb\x52\x3e\xb4\x25\x38\x4a\x92\x89\x2c\x08\x90\xc0\x7d\x95\xbb\x01\xf7\x95\xf6\x5a" +
	"\x2e\xf7\x95\x40\x2e\xf0\x5f\xc0\x7f\xad\x8e\xff\xe2\x31\x68\x80\x01\x2b\x96\xd6\x30\x60\xc7\xab\x65\xc0\x06\x55" +
	"\x9e\x00\x18\x30\x60\xc0\xc4\x1a\x60\xc0\xb6\x81\x01\x73\x88\xb3\x4c\x35\x60\x4b\xbe\xab\x94\xcc\x07\x58\x2f\x60" +
	"\xbd\x56\xaf\x02\xcc\x01\x1d\xac\x37\xab\x0f\xb0\x69\x4f\x99\x4d\xab\x09\x25\x0a\xcc\x59\xde\x1b\x98\x33\x60\xce" +
	"\x92\x67\x85\xcc\x59\x95\x79\x5a\x3a\x73\x56\xe5\xa3\x80\x39\x03\xe6\x4c\xac\x01\xe6\x6c\x5b\x98\xb3\xa5\x6a\xc7" +
	"\x5a\xeb\x21\x80\x41\x03\x06\xad\xd8\x68\x4d\x0c\x5a\x0a\x7f\xc0\xa2\x55\x1f\x60\xd1\x76\x80\x45\x93\x07\xe8\x06" +
	"\x26\x2d\xef\x5d\xc3\xa4\xb1\xe8\xe1\x17\x29\x03\xf5\xb5\x7a\xc5\x5e\x63\x5f\xc1\x14\xb0\xfc\x80\xbf\x10\x3a\x09" +
	"\x59\xcc\xd2\x2a\x4d\x17\xd7\x12\x75\xd7\x4a\xaa\xc4\xb7\xd6\x03\x31\xc5\x44\x89\x1c\x47\x0b\x4c\x4d\x13\x67\x21" +
	"\x6a\x72\x66\x4f\x06\x57\x9f\x98\x6f\x4a\xac\xc9\x54\x96\x2a\x9a\xb3\x13\x35\xb6\x76\xda\x3f\x8f\xc5\xc4\xa4\x3c" +
	"\xff\xb4\x6c\x3a\xf8\x6e\xa2\xa4\xab\xf2\xcc\xc5\xf2\xfa\x98\xff\xf9\xc1\xf1\xc2\xc7\xda\x16\xff\x22\xbe\xab\x6c" +
	"\xe0\xe0\x07\x75\x9d\x45\xd5\x09\x70\x39\x09\x27\x4d\x60\xc9\x72\x96\x2b\x7b\xf2\xec\xbe\xad\xc8\xbf\x98\xae\x0c" +
	"\xe4\x4c\x5d\x5c\x75\x6f\x99\xa1\x24\xbb\xaf\x9a\x79\x13\xd8\x10\x09\x61\xae\x79\xc4\x37\x08\x0d\xf1\x44\x25\x8c" +
	"\xf0\xe2\x37\xf8\xd8\xb4\xa2\x40\x92\x31\xd0\x4b\xb9\x20\x59\x57\x9f\x50\x93\xf8\x2c\xf3\x9f\x76\x63\xbb\x02\xbe" +
	"\xe2\x34\x60\xca\xce\xb6\xc4\x48\x59\x7a\x80\x5f\xaf\x83\x18\x08\x63\x62\x00\x8d\x98\x15\x42\x14\xc4\xd3\x90\xe0" +
	"\x22\x23\xa5\xd6\xff\x36\xd4\xcf\x86\x86\x70\xdd\xcd\x94\x96\xa0\xfc\xdd\x34\x2c\x40\x66\x83\x5e\xff\xfd\x9b\x81" +
	"\x71\x76\x2c\xdc\x97\x4b\xfa\x7e\x4d\x66\x87\x7c\x04\x27\xe4\x7a\xb0\xe0\x08\xca\x81\x91\x47\x69\x24\xc0\x19\xd7" +
	"\x40\x46\xfb\x84\xc4\xf3\x88\xf9\x0b\x67\xe6\x04\x81\x4c\x0b\x4e\xd0\x20\x6a\x14\x1e\x84\xd8\xb8\x55\x80\x6a\xf9" +
	"\xcb\xd2\xc8\xd9\xb3\x70\x5a\xad\x53\xa3\xcb\x6d\x16\x33\x4a\x76\x9c\xfa\xd6\x14\xd8\xb4\xf8\xe7\x28\xff\x69\x78" +
	"\xd1\x98\x01\xfe\x38\x20\x86\x4b\xcd\x60\xcc\x10\xd2\x28\x88\x9c\xb1\x8f\x43\xa2\xe0\xdb\xd8\x6b\x18\xf3\xc6\x1d" +
	"\x7c\x50\xf9\x03\x19\x5b\xc7\x8a\xc4\x7a\xee\x68\xb4\x20\xa7\x97\xa4\x05\x96\x22\x4e\x76\xcb\x04\x21\x56\xdf\x07" +
	"\x6d\x99\x16\x7e\x19\xe5\x94\xf7\x0c\x78\x23\x23\xe9\x2f\xd6\x8d\x31\x5a\xc5\xcf\x46\xc0\x2e\x6f\x8a\x5d\xae\xc9" +
	"\x68\xbd\x19\x5f\xc6\x2b\x4d\xce\x27\x5f\x69\x87\x87\x95\x24\x18\x9c\x5b\x56\xf2\xc5\x39\xd3\x9c\xa4\xbd\xc8\xd8" +
	"\x69\x74\xfe\xee\x35\xfa\x8e\xb1\x34\x96\x1d\xca\x53\xc8\xcc\xc0\x27\xff\xbf\xad\xf8\xe4\x7a\x14\x02\xdc\x72\xe7" +
	"\xb8\xe5\x95\xd3\x32\x80\x1b\x01\x37\xa2\x26\xdc\x98\xc9\x10\xb7\x16\x3d\xfe\x02\xe8\xb1\xf0\xec\x24\x7a\x9c\x8b" +
	"\xd1\x02\xf4\xb8\x15\xe8\x51\xc5\xd3\xac\x21\x62\xff\x13\xa0\x1d\xff\x1f\x40\x8e\x85\x07\x90\x63\x01\x39\xca\xa3" +
	"\x10\x22\x40\x8d\xed\x87\xb9\x73\x94\xa3\x90\xcb\x64\x5b\xf1\xe2\x5b\xc0\x8b\x85\x67\x27\xf1\xa2\x9c\xa7\x06\xac" +
	"\xb8\xf0\x30\x77\x0e\x2b\x0a\x81\xb0\xb7\x15\x2b\xbe\x03\xac\x58\x78\x9e\x0c\x56\xdc\xab\xe9\x59\x9f\x0f\xbd\x68" +
	"\x97\x23\x8d\x6c\xed\x90\xf7\x64\x62\xb9\x54\xd9\xb9\x4d\x5c\xec\x2c\xa7\xec\xaf\xd7\x5f\xe2\xf3\x14\xb3\xed\x2c" +
	"\xbd\x6c\xee\x26\x8f\xee\x02\xf4\x9e\x1f\xaf\xa6\x7c\xb3\xae\x6b\x87\x96\x27\x33\xaa\x08\xa6\xd8\x67\xc9\x79\xa5" +
	"\xf6\x09\x81\xeb\x87\x52\xbb\x10\x06\x61\xe3\x74\xe7\x2c\x6a\x5a\x77\x96\x19\x55\x71\xb0\x60\xa4\x9a\xb4\x9f\xf8" +
	"\xd8\x9b\x56\x07\xf9\x80\x1f\x2c\xa9\x19\xcb\x75\x64\xdc\x72\xed\xa9\x2c\x6b\xbf\xe6\x24\x16\x0a\x0c\x91\x0b\xb5" +
	"\x89\x41\xb7\xb4\x67\x9d\x65\x46\x66\x7b\x51\x01\x9d\xea\x94\x1e\xf1\x43\x5b\xeb\x83\x42\x9e\x7e\x61\x41\x9b\x82" +
	"\x85\xb1\x16\x2c\xf2\xa3\x62\x32\x71\xb5\x3b\xf9\x1e\x07\x12\x63\x7b\xbe\x4c\xcc\x7c\x45\xd1\x95\xdb\xaf\x28\x2a" +
	"\x0b\xcb\x34\x07\x6d\xf1\x04\x67\x5d\x8b\x3b\x1e\x55\x60\x8c\x6d\x6b\xa2\xb6\x12\x62\xb5\xbf\x90\xbb\x6c\xaa\x7b" +
	"\xaa\x4f\x82\x05\xdb\xec\x16\x6c\xf5\x39\xc0\x1b\x2c\xd8\x84\xd5\x00\x13\xb6\x42\x1d\x98\xb0\x75\xc1\x84\x2d\x31" +
	"\xff\xdd\xa4\x15\x5b\x8d\x93\x68\x65\x08\x8b\x18\x71\x2d\x6d\x9c\xb3\x18\xbc\xad\x7c\xa4\x65\xf2\x0d\xe5\x02\xc9" +
	"\xf5\x2c\x6a\xed\x85\xb6\xdd\x96\x71\x41\xe4\xec\xe7\xe6\x67\x89\x53\x12\xb7\x79\xab\x73\x4d\x02\x13\xb7\x76\x78" +
	"\x65\xa5\x56\x6e\x4d\xc0\x0f\xc2\x27\x10\x3e\xa1\x3a\xe1\x53\x35\x62\xc7\x16\x8a\x9f\x40\x59\x59\x7c\x9e\x8c\xf8" +
	"\x69\x1d\x64\x0c\xa0\x47\x40\x8f\xa8\x09\x3d\x96\xfd\x65\xb7\x10\x41\xb6\xf3\x98\x05\x04\xd9\x34\xda\x2d\x46\x90" +
	"\x73\x73\x4f\x80\x21\xbb\x8d\x21\xd7\x60\xb5\xf1\x04\x48\x44\x29\xc0\x02\x06\x9c\x79\xb4\x5b\x8c\x01\xc1\x6e\x23" +
	"\x7b\x9e\x06\xe6\xdb\x38\x6d\xb8\xf5\x76\x1b\xaf\x01\x2b\x16\x9e\x9d\xc4\x8a\x4a\xba\x10\x10\xe3\xc2\xc3\xdc\x39" +
	"\xc4\xf8\x64\xcc\x7c\x7f\x00\xc4\x58\x78\x9e\x0c\x62\xdc\xab\xe9\xd9\x45\x83\xb6\xb7\x9c\x37\x07\x1b\x36\xb4\xa5" +
	"\x36\x6c\x0a\xbb\xa9\xfa\xb0\xbe\xac\x49\xf7\x2c\xba\x5a\x50\x15\x60\xc7\x96\x54\x2c\xcd\x8e\x6d\x4f\xf2\xe9\xf8" +
	"\x9a\x8a\x51\x55\xbc\x90\x47\x25\xcb\x2a\x2d\x30\xa6\xc4\xc1\xbf\x11\x3f\x88\xb1\x43\x39\x49\x8d\x16\x84\x8f\x1c" +
	"\xcd\x98\xd8\xbf\x2d\xf6\xca\xf0\x65\xb1\x8c\x38\x9e\x8d\x43\x8b\x4e\x2a\xf3\xd3\x6c\x2b\x10\x6f\x35\xc9\x0a\xd8" +
	"\x69\x88\x69\xe9\x99\xcc\x2d\xb9\x24\x70\x64\x05\xef\x5c\x5a\x43\xc2\x64\xa1\xf1\x14\x60\x94\xc5\xc6\x6b\x54\xb8" +
	"\xb7\xa5\x65\x63\x2a\xc8\xa2\x56\xc8\x97\x35\xa5\x77\x52\xba\x26\x30\xb0\x9d\x58\x35\x30\xc2\xa4\x47\x28\xbe\xb6" +
	"\xc9\xf8\xcd\xe5\x79\x39\xc6\xa6\x61\x47\x41\x48\xfc\x71\x10\xe2\x30\x0a\x78\x8c\x4d\x66\x11\x91\x50\x3e\x79\xbf" +
	"\x57\x6c\xee\x88\x11\xd0\xe8\xfa\xb1\x40\x44\x55\x3f\x76\xa5\xcd\x12\x6a\x33\x25\x0e\x45\x54\x6f\x51\xc3\x8e\x4c" +
	"\x72\x5e\x17\x99\x37\x39\x9e\xda\xbb\xf4\xe3\xe2\xfb\x9d\xc8\x0e\x2d\xe5\x1b\xd2\xd8\xd1\x54\x44\x7a\x9a\xeb\x85" +
	"\x8a\x0b\x54\x42\x6a\x6e\xe3\xd2\xe7\xe7\x56\x4c\xde\xeb\x93\x09\x91\x45\x92\x8e\xcf\xed\xad\xe5\x7d\xf2\xed\x0f" +
	"\x8f\xd4\x50\x5b\x1f\xaa\x2e\xf0\x10\x4f\xd8\x39\x0c\x52\xd2\x57\xf2\x01\xc9\xf9\x2f\xd4\xd4\x75\x4c\xee\x79\xbe" +
	"\x39\x42\x75\x14\x90\x8f\xfc\xd5\x8d\x96\x8d\x80\x3f\x12\xb8\x9a\x1b\x7e\x6b\xa1\xb4\x18\xb0\x77\x3e\x40\xef\xc9" +
	"\x6b\x37\x81\x7c\xce\xf9\x30\x3e\xb0\x51\xcc\x8b\x80\x02\x45\xef\x45\x91\xd0\xd3\xde\x3f\xc0\x60\xf9\xb3\xe3\x18" +
	"\x6c\xea\xde\xa3\x10\x4f\x10\x67\xa0\x90\x4b\x15\x90\xce\x4f\x41\x31\x98\xb8\x15\x4e\xd1\x2d\x79\x7c\x95\x89\x79" +
	"\xd2\x03\xe0\xde\xd3\x1a\xb8\x2f\xd6\x27\x55\x1c\x90\xff\xb1\x22\x3c\x93\x8f\x79\x5e\x24\x53\xf7\x86\x96\x88\xa6" +
	"\xd3\xcb\x0c\xe8\x20\x7f\x56\x8a\x0e\xd2\xe3\x7e\x2e\xcf\xfc\x91\x9d\xf6\xef\xc6\x63\x2c\x89\x06\xbe\x5c\xaa\x25" +
	"\x35\xfd\x5e\xfd\x55\xa7\xba\xb2\x0a\x40\x99\xb4\x0b\x5d\x6f\x9c\x03\xff\x58\x21\x3f\x2e\xdc\x94\xe9\x24\xe6\x23" +
	"\x60\x44\x70\x2f\x21\x16\xa9\xa4\x29\xc3\x2b\x9e\x2b\xba\x20\x64\x08\x45\xda\x35\xc5\x27\xd2\x9e\x33\x51\x2c\xbb" +
	"\xbc\x77\x80\xad\xf2\x67\x77\xb0\x55\x7a\xfd\x6d\x35\xc4\x6f\x08\x53\x65\x4b\x31\x27\xbe\xaa\xe9\x3f\x13\xd6\xda" +
	"\xd5\x3d\x04\x8c\x95\x3f\x45\xb1\x78\xae\xaa\xf9\x56\x14\x59\x73\x8d\x76\x49\x58\x9d\xe5\x4c\x73\xef\x0f\xf4\xb2" +
	"\x2a\x2a\x4d\x88\xe6\xde\x6b\xca\xd7\x79\x96\x71\xcb\x9c\x53\x4b\x2f\x4d\xb6\x25\xb3\x41\x10\xf5\x42\xda\x50\x70" +
	"\x78\xd6\x45\x1f\xe8\x23\xb1\x48\x17\x72\xd8\x88\x59\x6d\x74\xb1\xe8\xa8\x2f\xb6\x12\x14\x6f\x03\xa1\x44\x2f\x29" +
	"\x7c\x3f\x97\x57\xc7\x72\xc8\xb8\x70\x4a\xe7\x18\x95\x38\x84\x63\x71\x08\xe2\xa8\x06\x2f\xc5\x22\x21\xb3\xdf\x89" +
	"\x50\x72\xd4\x2f\xcf\x46\xb9\xa9\x7f\x72\xce\x5a\x2b\xa9\x40\x52\x15\x6c\x8c\x5a\x94\x4a\x56\x2d\x62\xce\xee\x9a" +
	"\x69\x9a\x8f\xc3\xc8\x2c\x1a\xc7\x68\x77\xb9\xd2\x25\x29\xfc\xb6\xb7\x87\xd0\x9d\x87\x0f\x2a\x99\xb5\xbe\x04\x2e" +
	"\x1d\xb1\x36\x7f\x1d\x24\x4d\x73\xf0\xd2\x30\xa5\x6e\x88\xd3\x65\x9f\x43\xf3\x72\x1d\x59\x76\xf8\x33\x95\x29\xc9" +
	"\xc4\x30\x04\x3f\xf9\xf8\x06\x53\x2c\x06\x22\x40\x48\xe3\xc8\x56\x85\xe3\x6b\x8c\x4c\x34\xcb\x70\x69\x39\x2b\x60" +
	"\xbf\x87\x06\xba\xde\x43\x83\xe1\xb0\x87\x74\x49\x12\xbf\xf4\xca\x38\xcf\xa7\x8f\xfe\x8e\xce\x6d\xe2\x0b\x49\xf9" +
	"\x0a\x78\xc4\xc4\xc1\xf4\xda\xc5\x7e\xc5\x70\xa1\x19\x57\x10\xd3\x0a\xa5\xb3\xd3\x26\x94\x84\xcc\x08\xa4\x4c\xf7" +
	"\x70\x5d\xf6\xc7\x4c\xc1\x5e\x40\x9c\x49\x04\x84\x61\xb1\x24\x24\x3e\x4e\x08\x11\x7d\x78\xdc\xd7\x4f\x8e\xfb\x2f" +
	"\xcf\x4e\x4e\x4f\x0b\x6d\x64\x4e\xf9\x9a\x87\x29\x11\xf0\x49\x35\x4f\xae\x6b\xdb\xd8\x0b\x88\x2a\xff\x6d\x43\xac" +
	"\x08\x11\x2a\x66\x8e\x15\x51\x9f\xec\x88\x2f\x47\x35\x06\x41\x3e\x33\xd1\x3a\x22\x39\x7b\x6f\x31\xc5\x13\x62\x26" +
	"\xd6\x0f\x62\x2e\xc6\x64\xd3\xfd\x22\xc6\x6e\x48\x29\xcc\x92\x3d\x4a\xbf\xda\x8a\xa8\xd4\xe2\xfb\xd9\xb7\xbc\x94" +
	"\xa6\xac\x56\xdf\x14\x92\x81\xe9\x7d\x31\x1b\xd8\x5c\x61\x3b\xf4\xd3\x19\xb6\x42\x6f\xde\x8a\x6a\x40\x06\x65\x34" +
	"\x08\x0f\x4f\x48\x32\x1b\x89\x95\x4a\x60\xc4\x44\x8d\x3c\xf8\x44\x30\x75\xef\xdf\x10\x6c\xb2\xbb\x52\x56\xcf\xa9" +
	"\x0d\x61\x11\x0c\x57\x12\xec\x24\x59\xf6\x36\x29\x83\x99\x4a\x7b\xd6\xa8\x10\x1f\x65\x06\x24\x1c\x22\x48\x6e\xdd" +
	"\xf5\xfb\xef\xbf\xff\x7e\xf0\xf6\xed\xc1\xeb\xd7\xe8\xcd\x9b\x91\xe3\x8c\x02\xa9\x9d\x86\x87\xc3\x90\xf8\xb4\xee" +
	"\xbd\x29\xdc\x4e\x2d\xd3\x24\x82\xb1\xd3\x4c\xd6\x9a\xb2\xd7\xb3\xf0\x06\x49\xfc\x0e\x85\x7d\x83\x32\xe1\x35\xab" +
	"\xe5\xb9\xad\x5f\x0e\x7b\x68\xf8\x92\xff\xd7\x3f\x94\x64\xb6\x2e\xb4\x6d\x91\x07\x3b\x6f\x3d\xec\xf7\x90\x7e\x32" +
	"\xe8\xa1\xf8\x0b\xfd\xc3\xb3\x93\x67\xa2\xbd\x97\xcc\x8a\x6b\xae\xed\x28\x58\xa0\x08\x24\x73\x53\xbe\x65\x54\xd9" +
	"\x4f\x2b\x18\x27\xcc\x80\x74\x57\xeb\xcc\xc5\x90\x64\xdf\x25\x2d\x22\x6a\x85\xdc\xc4\xd2\x98\x70\x4b\x20\x00\x8e" +
	"\x2d\x01\x0e\x46\xaf\xac\x18\x2c\x82\x69\x8c\x36\x01\x24\xb6\x04\x24\x54\x22\x06\x00\x13\x00\x93\x7a\x30\x01\x08" +
	"\x01\x08\x29\x40\x48\xaa\xdf\xe8\x3e\x58\x94\x4c\x71\xd0\x3b\xc5\x98\x01\x50\x8a\x9d\x96\x8f\x4a\x90\xc2\x98\x69" +
	"\x26\x70\x09\x42\xdf\xa2\x93\xd5\x82\xcb\xa5\xef\x32\xbf\x86\xfd\xcc\x7e\x54\x1a\xfd\x0b\xe0\xa5\xd8\x69\xc9\x44" +
	"\xeb\x12\x48\x92\xb5\x80\x8a\x6b\x02\x3e\xd9\xc0\xc5\xd3\x7d\xc8\xb8\xc8\x74\x7b\x00\x1f\x6b\x86\x0f\xb5\x3e\xb7" +
	"\x73\x50\xf2\xce\x35\x09\x00\xc8\xda\x2f\x98\x78\x4d\x17\x82\x0d\x1a\x39\xd7\x72\xf8\x5a\xe6\xdd\xc2\x7c\x9b\x01" +
	"\x30\xd6\x79\xb3\xa8\x96\xbc\x5b\x68\x63\xa7\x80\xa2\x7e\x7f\x0b\xbb\xf7\xe2\xf0\xf9\x8b\xcd\x1c\xeb\xbd\x9a\x49" +
	"\xcc\x16\x18\x39\x0d\x76\x6c\xb8\x11\x0d\xf7\x23\xef\xeb\x17\xf7\xfa\xd5\x95\x76\x1b\x5d\x13\x9f\x92\x90\x04\x07" +
	"\x31\xf2\x0a\x5a\x44\x24\x66\x7a\x63\x49\x13\x08\x76\xb1\x89\x60\x17\xad\x02\x38\xaf\x30\xe6\x45\x66\xd8\x85\x03" +
	"\x74\xa5\x95\xe2\x5d\xab\x04\xc2\x71\xd3\xdc\x61\x51\xd6\x8c\xbf\xac\xcc\xde\x17\xa3\x6e\xc7\xf5\x9e\x6b\xf6\x50" +
	"\x0c\xb3\x59\x49\xfc\xa3\xc7\xec\x63\xe3\x79\xc4\xed\x73\x15\x56\x5b\x7b\xb9\xc5\x9c\x89\x7a\x25\xeb\xdc\xde\x5c" +
	"\x56\x6f\xab\x08\x6d\xa9\x3a\xb2\x10\xa3\x63\xcb\x62\x74\x54\x4d\x45\x32\x66\x50\xb4\x16\xf1\x31\x0d\x62\xac\xad" +
	"\x02\x00\xde\xc2\xc3\xea\x84\x22\x39\x06\x65\xdd\x0b\x75\x2b\xb5\x39\x59\x89\x51\x89\x58\xfa\x20\x37\x35\x69\x69" +
	"\x54\x52\x31\x17\xea\x9e\x51\x89\x68\xcf\x04\x46\x25\xf2\xa1\xef\x14\xcd\xbb\x69\x46\xc8\xa2\xe9\xe5\xdb\x7d\xed" +
	"\x4e\x12\x7e\x88\x9d\x5e\x80\x91\xf5\x4a\x51\xd2\x34\x2c\xca\x00\x41\xcb\xe4\xbd\x4c\x62\x2c\x6e\x7e\x74\x71\xf9" +
	"\x09\x5d\xb8\xbe\x7c\xb4\x00\x2b\xc5\x4e\xf5\x61\x92\x66\x87\x15\xc3\x8b\xc6\x86\x6a\xe9\xbb\x25\x7b\x03\xb9\xec" +
	"\x76\x5a\xab\x81\xf0\x4d\xde\x1a\x84\x6f\x20\x7c\x93\x75\x04\xe1\x5b\xd6\x68\x85\xc2\xb7\xe7\xf5\x62\x2d\x95\x3a" +
	"\x0a\xe4\x4b\xe5\x6e\x20\x5f\x4a\x7b\x55\xe5\x4b\x31\xb9\xd2\x29\xd1\xd2\x86\x3d\xbf\x4e\x4a\x85\x52\xc9\xd0\x89" +
	"\x20\x00\x6a\x74\xfc\xca\x4d\x3a\xb2\x08\xb8\x2c\x8f\x3b\x73\xb5\x6e\x08\x79\x3b\xbb\x53\xd8\x53\x4c\x00\x7d\xb2" +
	"\xf8\xd6\x9e\xd6\x6e\x6d\x43\xfe\xe7\xb3\x6a\x21\xa4\x7f\xce\xeb\x20\xfd\xb3\xea\x54\xac\x33\xfd\xf3\xc5\xe5\x27" +
	"\x8e\x55\x94\x6c\x86\xb6\xa4\xdc\xcf\x65\x8c\xc5\xbf\xdc\xa1\x94\xcf\xb2\xe1\x75\x2a\xd3\xf3\xa5\x4f\x4c\xcb\xc8" +
	"\x07\xc7\x32\xeb\xa2\x7d\x8b\x22\x7d\xe8\xa8\x2d\x86\xf9\x22\x9e\x91\x81\x39\x90\x4b\xe2\x0b\xc8\x7b\xa8\x68\xa0" +
	"\x38\x5e\x7c\x92\xa5\x24\xcf\x2f\x97\x3f\xc3\xc8\xf3\x88\x7f\xed\x46\xd4\xdc\x81\xc9\xda\xee\xfd\xee\x4c\x96\xcd" +
	"\xd0\x6c\x9a\xe0\xe0\x4c\x3f\x93\xea\xc3\xbb\x3f\xc1\x2a\xe8\x3e\xe5\xb9\x56\x21\xb7\xbb\x73\xad\xe5\x75\xb6\x3b" +
	"\x67\xbd\xde\xef\xf7\xd1\xf3\xdc\x8c\x66\x9c\x9a\x9d\x8c\xcb\x59\xe6\x47\xf9\x4f\xc3\x8b\x92\xac\xf6\x01\x31\x5c" +
	"\x6a\x06\x63\x46\x98\x8d\x82\xc8\x19\xfb\x38\x24\xb5\x69\xee\x95\x59\xee\x5b\x25\xb9\x6f\x10\x6a\x75\x3f\xc7\x7d" +
	"\x2d\xf1\xb4\xa4\x04\xf7\x33\x91\x4d\x90\x83\xaa\xdb\x92\xc1\x06\xa0\x5d\xa1\x4c\xd0\x4f\x44\x08\x3c\x65\x69\x7c" +
	"\xea\xdb\xa6\xa1\x4a\xce\x70\x12\x33\x6e\xe2\x63\x1a\xd9\xd8\xb7\xc2\x47\xf4\x0a\xfd\xe3\xa8\x5f\xcc\x3f\x55\x08" +
	"\xf5\xc6\x7a\xa5\x75\x85\xd0\x94\x71\xbd\xe7\x9a\x90\xe6\x19\x24\x96\xad\x4e\xcc\x0a\xd2\xf9\x35\xf2\x76\x80\x45" +
	"\x01\x8b\xf2\x46\x4a\x2c\x9a\x40\xcf\x2e\xe1\x51\x48\x8b\x5a\x7c\x76\x12\x8f\xce\x2e\x82\x9a\x0b\x95\xce\x71\xe6" +
	"\x1d\x82\x83\xc8\x27\x0e\x97\x83\x73\xfb\x1f\x2f\x1b\xad\xec\x7b\xb3\x62\x89\x16\xaf\xac\x62\x0b\x06\x7d\x55\xf4" +
	"\x90\xbf\x42\x85\x1a\x6e\x2d\x6a\xc6\x87\xd8\xc7\xf7\xfc\x78\x2b\x71\x85\x43\x42\xdf\x32\xf8\x91\x17\xf9\xb8\x5c" +
	"\x44\xdd\x79\xdc\x02\x89\xe8\x8b\xcf\xe2\xa7\xbc\xfd\x2d\x7f\x4b\x32\xe8\x96\xda\xf3\xb0\xa0\xd4\xc4\xc7\x9c\x45" +
	"\xd6\x5e\xa9\x1a\x65\xe1\xcb\x2d\xef\x40\x3f\x19\x1c\x0c\x8e\x0e\xf4\x83\x33\xfd\x30\x0a\x0e\x08\x0e\xc2\x83\xc1" +
	"\xa1\xe1\x3a\x5e\x14\x92\x43\x46\xd9\x50\x39\x65\x33\x0b\x7d\x12\x03\x79\x16\xd6\xfc\xfc\x9d\xec\x7a\x2a\xce\x90" +
	"\xad\xfb\x52\x66\x68\x78\x51\x4b\xda\x65\xf9\xb8\xb6\xa5\x30\x7c\xd9\x68\x57\x71\x7e\x9f\x22\xd6\x65\x2b\x3c\x66" +
	"\x4b\xdc\x5d\xec\xcb\xd0\x2f\x73\x1a\xfb\xe7\x2b\x44\xdd\xfb\x7d\x29\x14\xcc\x80\x80\x7f\x04\x04\x5c\x78\x00\x01" +
	"\xb7\x19\xf9\x4e\x22\xe0\x96\x0a\x3a\x40\xc0\x73\x23\x60\xb6\xc2\x3b\x87\x80\x7f\x02\x04\x5c\x78\x00\x01\xb7\x19" +
	"\xf9\x4e\x22\xe0\x1a\xe5\x32\x20\xdd\xe5\xcb\x1a\x8e\xfb\x5d\x40\xb7\xcb\x95\x36\xfc\x00\xb8\xb6\xf0\x00\xae\x6d" +
	"\x33\xf2\x9d\xc4\xb5\xed\xec\x97\x00\xed\xae\x4e\xd8\xd0\x0d\xf4\xbb\x74\x6a\xf7\x0d\x60\xe0\xc2\x03\x18\xb8\xcd" +
	"\xc8\x77\x12\x03\xb7\xb3\xaa\x04\x0c\xbc\x3a\x69\xc3\x13\xc5\xc0\x3f\x03\x06\x2e\x3c\x80\x81\xdb\x8c\x7c\x0b\x31" +
	"\x70\xe9\xb7\xe0\x69\x59\x17\x2b\x80\x01\xff\x8f\x3c\x51\xaa\x24\x44\x57\x5c\xfb\x9e\x4c\x14\xd9\x7a\x59\xf5\x87" +
	"\xa9\x75\x13\xaa\x7a\x0b\x3e\x9e\x17\x97\x9f\x46\xa8\x60\x5e\xdc\x43\xf9\x8d\xd0\x93\xb8\x7c\xb2\xfb\x20\xbe\x28" +
	"\x1c\xcb\xb6\x0c\xd7\x17\x92\x06\x68\x61\x96\x96\x51\x70\x27\x0c\xa6\xd8\x57\xf9\xcb\xd6\xa5\xc1\x65\x3b\x32\x4e" +
	"\x0f\x94\x45\x4d\xeb\xce\x32\xa3\x2a\x64\x55\x1d\xf4\xd2\xf6\x2c\x59\x64\x75\x94\x0f\xf8\xc1\x92\x3a\x70\x5e\x47" +
	"\xc6\x2d\x37\x96\x97\xe6\xda\x76\x12\xe7\xbc\x50\x16\x0a\x2c\x4d\x9c\x29\xed\x59\xe7\x94\x98\xb9\x1d\x56\x0c\x65" +
	"\xaa\x53\x7a\xc4\x0f\x6d\x1d\xef\x0a\x31\x2d\x8e\x24\x08\x24\x37\x78\xa7\x2e\x95\x1a\x92\xa7\x89\xa7\x15\x81\x3e" +
	"\x6c\x77\xf2\x3d\x0e\x54\xe1\x4e\xb8\xe7\xa6\xa2\x2b\x77\xdd\x54\x54\x16\x96\x69\x0e\xba\x26\x9f\x56\x16\x46\xa9" +
	"\x73\x53\x13\x5d\x4b\x9b\x30\xc6\xa3\x0a\x58\xb1\x6d\x4d\xd4\x6e\xb0\xac\xf6\x17\x72\x97\xcd\x75\x4f\xf5\x49\xf0" +
	"\xd0\x9e\xd9\x43\x5b\x1f\xd6\x9e\xd4\x06\x17\x6d\x61\x35\xc0\x47\xbb\x50\x07\x3e\xda\x1b\xf7\xd1\x1e\x21\x1e\xf3" +
	"\x8e\x33\x84\x6b\xf7\xd2\x4e\x3e\xde\x61\x47\xed\x64\x84\x9d\xf5\xd5\x2e\x6e\xdf\x93\x75\xea\x2d\x4d\x72\x07\x3c" +
	"\xb6\x4b\xf3\xdd\x01\xa7\x6d\x11\x88\xbb\xeb\xdf\xbb\x12\x18\x7e\xe2\xd3\x05\xef\xed\x0e\x78\x6f\xe7\x4e\xd2\x49" +
	"\x98\x5b\x2e\x60\x64\xdc\x13\xb8\x61\x2b\xdc\xb0\x9b\xe9\xa3\x15\x39\x62\x37\x51\x46\xe0\x45\xd8\x6e\x98\x3b\xec" +
	"\x45\xc8\x7d\xb1\x13\x40\xda\x11\x37\x42\x70\xf5\x29\x3e\x3b\xe9\x46\x38\x3b\x07\x07\xb8\x14\x70\x29\x6f\xd4\xe8" +
	"\x91\xbd\x5b\xd8\x14\x9c\xb2\x8b\xcf\x4e\x62\xd3\xb9\x64\x4d\xe0\x97\xbd\x2e\xbf\x6c\x91\x95\xeb\x3c\x52\x81\x88" +
	"\x39\xc5\x07\x6c\x43\xda\x8c\x7c\x0b\x6d\x43\xd6\x29\xeb\x06\x0b\xbd\x35\x3b\x64\xaf\x05\xed\x2e\xdd\x2a\x0f\x3c" +
	"\x53\x8a\x0f\x60\xde\x36\x23\xdf\x55\xcc\x0b\x9e\xd8\x42\x63\xc0\xbc\xe5\xf5\x80\x00\x18\xb2\x6e\x80\x79\x01\xf3" +
	"\xaa\x67\xb6\x98\xfe\x1f\xb0\xed\xda\x5c\xb0\xb7\x50\xb0\x00\x41\x2e\x8a\x0f\x20\xd9\x36\x23\xdf\x55\x24\x0b\xbe" +
	"\xd7\xd5\xc6\x1d\xf1\xbd\xde\x4e\xfa\x16\x3c\xae\x8b\x0f\xa0\xde\x36\x23\xdf\x55\xd4\x0b\x4e\xd7\xd5\xc6\x80\x7a" +
	"\xab\x2b\x02\xae\xd6\xb2\x6e\x80\x7a\x77\x17\xf5\x96\x7e\x77\xda\xd5\xfa\x2d\x43\x23\x33\x79\x5b\x83\x6f\x75\x5e" +
	"\xdb\x4d\xdf\x6a\x85\xab\x6f\x6e\xc8\xde\x51\x27\x64\xf0\xaf\x2e\x74\x5c\xbd\x7f\xf5\x9e\xe4\xd3\xf1\x55\x1d\xa3" +
	"\xa7\x78\x35\x8f\x4a\x1e\xbf\x5a\x60\x4c\x89\x83\x7f\x23\x7e\xc0\x71\xb1\x7e\x5c\xac\x0c\x1f\x39\x6a\x31\xb1\x7f" +
	"\x5b\xec\x95\xd9\x75\x15\xcb\x88\xe3\xd9\x38\xb4\xe8\xa4\x32\x3f\xcd\xb6\x02\xf1\x66\x97\xac\x80\xfd\x5b\x82\xa4" +
	"\xa5\x27\x2f\xf7\x30\x96\x40\x4b\x48\x1e\x38\xf5\x38\xb1\xe8\x83\x0c\x50\x32\xfc\xcf\x5b\x34\x01\x64\x5b\xe2\x57" +
	"\x33\xc9\x8d\x45\xb3\x8b\x2c\x86\x0b\x14\xe2\x09\xa7\x1f\x03\xe4\x52\x94\x12\x8f\x86\x1d\x05\x21\xf1\xc7\x41\x88" +
	"\xc3\x28\xe0\xa4\x65\x46\xc9\xa1\x7b\x2b\x9c\xa2\x5b\xf2\xf8\x2a\xa7\x36\x03\x03\xdb\x89\x1f\x4b\x42\xc2\x89\x5f" +
	"\x4f\x28\x6b\x11\xd7\x5a\xd4\xb0\x23\x93\x9c\xdb\x6a\xe7\xe6\xf4\xe8\x68\xef\xd2\x2f\x88\xef\x77\x22\x3b\xb4\x94" +
	"\x6f\x48\xf0\xa4\x46\xc5\xa3\xa9\xb9\x5e\xa8\xb8\xcf\x4a\xd4\xf6\x9a\xd7\x2b\x3f\x07\x03\x49\xdd\x84\xc4\xf8\x40" +
	"\xd2\x2d\xb8\xb5\xbc\x4f\xbe\xfd\xe1\x91\x1a\xb3\x5f\x7b\x21\x9e\x30\xb8\x0e\x52\x72\x5a\xf2\x01\xc9\x79\x2a\xd4" +
	"\xd4\x75\x4c\x6e\x47\xbe\xa2\x42\x75\x14\x90\x8f\xfc\xd5\x8d\x1e\xec\xab\x39\x8f\xc9\xe6\xd4\x9e\xc8\xb4\xcd\x76" +
	"\x9d\xc9\x8c\xe7\xab\x83\xc0\x94\xe9\x5a\xd1\xc9\x3d\xe7\x1f\xfe\xc0\xbe\x3b\xef\xe9\x0d\x14\xbd\x37\x7a\x82\x17" +
	"\x5c\x5d\x38\xe7\xf9\xb3\x96\x73\xce\x6e\xd5\x03\xf2\x80\x1d\xcf\x26\x07\x83\x83\x93\x87\xeb\x9b\xdb\xe6\x7b\x58" +
	"\xe8\xd1\x61\x1c\x50\x90\xb2\xb4\x07\xcd\x44\x0e\x23\x87\xf0\xb8\x0d\x2f\x59\x15\x82\xf0\x5c\x31\x16\x44\x4b\xb4" +
	"\x20\xed\xba\x3e\x9c\xb0\xe6\xd5\x06\x84\x91\x3f\xeb\x47\x18\xed\x11\x45\x97\x11\xc4\xca\xc0\x55\x2d\xe6\x5d\x11" +
	"\xda\xc8\xa6\x37\x2f\xf2\xa8\x79\xc1\xfa\x50\x48\x27\xf6\x03\x10\x4b\xfe\x14\xe5\x14\xb9\x84\xec\x5b\x51\x86\xc0" +
	"\x55\x3a\x25\xe9\xc1\x0d\x97\x9b\x6a\xd4\xbd\x3f\xd0\xcb\x12\x40\x2d\x74\x93\x9a\xff\x19\xf4\x1d\x4d\xf9\x4a\xcf" +
	"\x32\x6e\x59\x24\xab\xd2\x8b\x93\xad\xc9\xfc\x5e\x45\x91\x9c\x36\x14\xa2\xa3\xe9\x62\xc0\xb4\x23\xb1\x48\x77\xaa" +
	"\x25\x43\xa1\x44\x17\x8b\x8e\xfa\x62\x2b\x41\xe6\x39\x10\x4a\xf4\x92\x26\xe2\x73\x79\x85\x2c\x87\x8c\x0b\x67\x6e" +
	"\x8e\x51\x89\x43\x38\x16\x87\x20\x8e\x6a\xf0\x52\x2c\xaa\x92\x14\xda\x89\x50\x72\xd4\x2f\xcf\x46\xb9\xa9\x7f\xba" +
	"\x2c\x90\x89\x56\x92\x4b\xa5\xb2\xf0\xdf\x2e\xcf\xd5\x02\x6e\x2d\x62\x91\xf1\xb4\x13\xf3\xdf\x25\xd6\x54\xbb\xcb" +
	"\xc4\x60\x83\xa4\x90\x83\xec\x1e\x42\x77\x1e\x3e\x28\xfb\xd8\x1e\x24\x78\x82\x23\x85\xc3\x2f\x81\x4b\x47\xac\xf5" +
	"\x5f\x07\x49\xe7\x1c\xda\x34\x4c\xa9\x1b\xe2\x74\x17\xe6\x90\x8e\x5d\x47\x96\x1d\xfe\x4c\x65\x92\x4c\x31\x84\xe1" +
	"\x4f\x3e\xbe\xc1\x14\x8b\x41\x0c\x11\xd2\x08\xc5\xd7\xb6\x4a\x1d\x5b\xa7\xaa\xd5\x2c\xc3\xa5\x17\x69\x80\x1c\x7f" +
	"\x72\x8d\xf7\xfb\x3d\x34\xd0\xf5\x1e\x1a\x0c\x87\x3d\xa4\x8b\x6a\x44\x8d\xc7\x0e\x19\x21\xbd\x2f\x62\xa9\xf4\xae" +
	"\x38\xcf\x97\x06\xfd\x1d\x9d\xdb\xc4\x0f\x25\xf2\xa4\xf8\x42\x60\xd3\x97\xa0\xbb\x04\x23\x99\x38\x98\x5e\xbb\xd8" +
	"\xaf\xe8\xe5\x9a\xb1\x0e\x31\xad\x50\xba\x28\xda\x84\x92\x90\xe9\x38\xcb\x84\x0e\x57\x46\x7c\xcc\x54\x24\x85\x31" +
	"\xf1\xa0\x8b\xc3\x62\x41\x48\x7c\x9c\xd0\x19\xfa\xf0\xb8\xaf\x9f\x9c\xf6\xcf\x8e\x4e\xcf\x0a\x91\x21\xa5\x61\x00" +
	"\x35\x0f\x53\x22\x20\xa5\x4a\xc8\x4c\xc3\xb5\x6d\xec\x05\x2a\x75\x4c\x53\x74\x4a\x11\x96\x66\x8e\x4e\xd9\xaf\xa3" +
	"\x1d\x93\x10\x94\xd5\xa8\x87\xf9\xcc\x44\x5d\x57\x72\x80\xdf\x62\x8a\x27\xc4\x44\xbf\x5e\x7f\x21\x86\x00\x10\xd9" +
	"\x9e\xfb\xee\x7d\x71\xb7\xeb\xa2\x8b\x1a\xae\x1d\x39\x72\x0d\x5b\x2b\x9a\x51\x33\x49\x60\xf8\x96\x97\x92\x8c\xd5" +
	"\xea\x1b\x97\x86\x1f\xac\x3f\xd9\x2b\xf4\x7e\xff\xbf\xab\xf5\x0d\x5b\x71\x2c\xdd\x0a\xfd\x74\x86\xad\xd0\x9b\xb7" +
	"\xa2\x1a\x02\x52\x19\x7f\xd2\xc3\x13\x92\xcc\x46\xa2\x73\x0c\x0c\xdf\x65\x84\xa4\x24\xdc\x65\x7c\x52\xdf\x10\x6c" +
	"\xb2\x0b\x57\x56\xcf\xc9\x16\x61\x11\x0c\x57\x12\x5e\x35\x59\x76\x99\x1a\xa9\x3a\x3f\xa6\xac\x98\x35\x0e\xe5\x47" +
	"\x99\x02\x90\x43\x04\xc9\x6d\x17\x7e\xff\xfd\xf7\xdf\x0f\xde\xbe\x3d\x78\xfd\x1a\xbd\x79\x33\x72\x9c\x51\x20\x55" +
	"\x46\x79\x38\x0c\x89\x4f\xeb\xde\x9b\xc2\xed\xd4\x32\x4d\x22\xb8\xdb\xcf\x64\xdd\x23\x7b\x3d\x8b\x5f\x96\x44\x0c" +
	"\x55\xa8\xae\x8c\x34\xbe\xae\xcc\xcc\x80\xa3\xf5\xc1\xcb\x61\x0f\x0d\x5f\xf2\xff\xfa\x87\x67\x32\xfb\x90\xac\xed" +
	"\xd1\x49\x0f\xe9\x83\xb3\x1e\x7a\xd9\x8f\x1b\x9f\xd6\xb6\x1e\xf6\x7b\x48\x3f\x19\xf4\x50\xfc\x85\xfe\xe1\xd9\xc9" +
	"\x33\x51\x17\x2f\xb3\x8c\x98\x6b\x3b\x0a\xba\x53\x81\xf6\x66\xda\x3f\xcf\xb3\xe8\xe4\x23\xdf\x11\x99\x7e\xb0\xb0" +
	"\x9f\x56\x30\xae\x11\x65\xd7\x2a\xff\x91\x64\xdf\x25\x2d\x22\x6a\xa5\xda\xce\x09\x57\x77\x02\x70\x6c\x09\x70\x30" +
	"\x4a\x66\xc5\x60\x11\x4c\x63\xb4\x09\x20\xb1\x25\x20\xa1\x12\x36\x00\x98\x00\x98\xd4\x83\x09\x40\x08\x40\x48\x01" +
	"\x42\x52\x21\x63\xf7\xc1\xa2\xa4\x8c\x46\xef\x14\x63\x06\x40\x29\x76\x5a\x3e\x2a\x41\x0a\x75\xfe\x4c\xe0\x12\x84" +
	"\xbe\x45\x27\xab\x05\x97\x4b\xdf\x8d\x39\x7b\xb4\x9f\x99\x1f\xa9\x23\x32\x03\xbc\x24\x9d\x96\x4c\xb4\x2e\x81\x24" +
	"\x59\x0b\xa8\xb8\x26\xe0\x93\x0d\x5c\x3c\xdd\x87\x8c\xdc\xe4\x1d\xe0\x63\xcd\xf0\xa1\x56\xf1\x76\x0e\x4a\xde\xb9" +
	"\x26\x01\x00\x59\xfb\x05\x23\x77\x4a\x9a\x01\x36\x68\xe4\x5c\xcb\xe1\x6b\x99\x77\x0b\xf3\x12\x04\xc0\x58\xe7\xcd" +
	"\xa2\x5a\xf2\x6e\xa1\x8d\x9d\x02\x8a\xfa\xfd\x2d\xec\xde\x8b\xc3\xe7\x2f\x36\x73\xac\xf7\x6a\x26\x31\x5b\xee\x92" +
	"\x3c\x1f\x49\x44\xc3\xfd\xc8\xfb\xfa\xc5\xbd\x7e\x75\xa5\xdd\x46\xd7\xc4\xa7\x24\x24\xc1\x41\x8c\xbc\x82\x2b\xed" +
	"\x9b\x94\x27\x29\xe4\x0e\x61\x6a\x63\x49\x13\x88\xd2\xbe\x89\x28\xed\xad\x52\xad\xac\x30\x56\x7b\x66\x73\x86\x03" +
	"\x54\x72\x0f\xef\x21\x95\x40\x38\x6e\x9a\xfd\x90\x36\xe3\x2f\x2b\xb3\xf7\xc5\xe4\x38\x71\xbd\xe7\x9a\x3d\xc4\xdc" +
	"\xdc\xd3\x92\xf8\x47\x8f\x19\xa9\xc5\xf3\x88\xdb\xe7\x2a\x2c\x6e\x33\x27\xb7\xa7\x3b\x3c\x2c\xd8\xd2\x25\x96\x73" +
	"\x45\x43\xb7\xff\xa0\x17\xff\xf7\xc7\x1f\x9e\x6b\x7e\xfe\xfc\xdd\x8b\x1a\x2f\x73\x76\x00\xd0\xf5\x63\xad\xe1\x5d" +
	"\x4f\x65\x6d\xd7\x2b\x7d\xb5\x97\x2f\x2c\xdb\xbc\xf8\xb5\xcc\x7f\xdd\x24\x81\xc1\xf3\xd3\x20\x69\xaa\xa6\xa5\x87" +
	"\x84\x56\x1d\xf7\x27\xe4\xbd\x2e\xef\xbc\x7d\x11\xe6\xeb\x6f\x8b\xaa\x99\x49\xc6\x48\x8a\x96\x26\x3e\xa6\x41\x8c" +
	"\xf1\x55\x00\xc0\x5b\x78\x58\x9d\xfe\x34\xc7\xbe\xac\x7b\xa1\x6e\xa5\xf6\x2a\x2b\x31\x48\x11\x4b\x1f\xe4\x66\x2a" +
	"\x2d\x0d\x52\x2a\xa6\x46\xdd\x33\x48\x11\x6d\xa1\xc0\x20\x45\x3e\xf4\x9d\xa2\x97\x37\xcd\x44\x59\x34\xbd\xb8\xbb" +
	"\xaf\x19\xe2\xe1\x28\x10\x3b\xbd\x00\x23\xeb\x95\xc0\xa4\x99\x16\x95\x11\x14\x96\xc9\xb7\x65\x91\x1a\x16\x81\x96" +
	"\x8b\xcb\x4f\xe8\xc2\xf5\xe5\xa3\x05\x58\x29\x76\xca\x61\x45\x30\x9b\x9c\x0b\x56\x0c\x2f\x1a\x1b\xaa\xa5\xef\x96" +
	"\xdc\x0e\x64\xba\xdb\x69\xe9\x06\x82\x3b\x79\x6b\x10\xdc\x81\xe0\x4e\xd6\x11\x04\x77\x59\xa3\x15\x0a\xee\x9e\xd7" +
	"\x8b\xc4\x54\xaa\x2c\x90\x2f\x95\xbb\x81\x7c\x29\xed\x55\x95\x2f\xc5\xe4\x4a\xa7\x44\x4b\x1b\xf6\x1a\x3b\x29\x15" +
	"\x4a\x25\x43\x27\x82\x00\xa8\xd1\x69\xec\x7d\x92\x2b\x15\x7d\x62\x61\x6e\xc5\x28\x87\xc8\xbd\x41\xe7\x9e\x67\x5b" +
	"\x86\x3c\xe8\xe1\xec\x5e\x65\x8c\xe8\xb8\x48\x29\x87\xaf\xd5\x99\x5c\x63\x3f\x50\x2c\xb2\x89\x83\xa9\x3a\x93\x7f" +
	"\x5c\x4b\xd4\x5d\x2b\x0e\x9f\x6f\xad\x07\x62\x8a\xee\x9e\x1c\x2b\x0b\x7b\xd0\xb4\xbf\x27\x8b\xef\xef\x69\xed\xfe" +
	"\x4e\x89\x35\x99\x86\x32\x27\x3a\xb6\xf3\x67\xd5\xc2\xf4\xe6\x1c\x21\xed\x9f\xc7\xa2\xb7\x35\x4f\x9e\x2f\x8d\xaa" +
	"\x77\x37\x51\xba\xcf\xe7\x61\x2a\xe4\xf5\x53\xcb\x24\x3f\x38\x5e\xf8\x58\xdb\xe2\x5f\xc4\x77\x95\x0d\x78\x80\x41" +
	"\x45\x9d\xa5\x0e\xf7\x57\x17\x64\x32\x74\x43\xac\x0e\xe1\x90\x85\xa0\x6c\x0c\xeb\xa1\xd9\x16\x65\x2d\x25\x12\xd1" +
	"\xb8\xea\xde\x32\x43\x49\xd8\x02\xb5\x80\x36\xa6\x1d\x2e\x5d\x8b\x86\x09\x95\xcd\x89\x89\xea\x21\x26\xbe\x41\x68" +
	"\x88\x27\x44\x01\xda\x5e\xfc\x06\x1f\x9b\x56\x14\x48\xdc\x15\x59\xad\xea\x54\xf8\x84\x9a\xc4\x67\x52\x5e\xed\xc6" +
	"\x76\xab\x17\xbf\xc6\x83\x0f\xff\x7a\x47\x7c\xdf\x32\x67\x16\xcc\x16\x62\xa9\xa2\x11\xba\xb8\xfc\xc4\x91\x8c\x92" +
	"\xd7\x88\xfb\xfc\x6d\xa8\x9f\x0d\x8d\xe6\xa0\x25\xb3\xe4\x12\x8f\xbf\xcc\xdd\xaa\x6b\xbf\x7c\x33\x30\xce\x8e\xa5" +
	"\x16\x7c\x41\x48\x3c\x8f\x98\xbf\x58\x94\xcc\x1f\x9d\xb3\x76\x78\x35\x79\xce\xf3\x01\x9e\x90\xeb\xc1\x3a\x06\x58" +
	"\x0c\x82\x1e\x0f\x2e\x6a\xde\xb5\x9b\x33\x32\x30\x07\x72\x29\x7c\x01\x67\x0f\x15\x0d\x14\xa7\x8a\xcf\xcd\xc3\x06" +
	"\xc9\xde\xf0\x72\x26\xa2\xa2\xdc\x57\xb8\x31\x82\x10\x1b\xb7\x8a\xa3\x51\x5e\x52\x29\x1d\x31\x0b\x1b\x36\xfb\xe2" +
	"\x42\x2c\xf9\x99\x63\xc9\x97\x23\xc3\x1b\x5e\x94\x84\x85\x0f\x88\xe1\x52\x33\x18\xe7\xa8\xb4\xf3\x69\x91\xa4\x1b" +
	"\x0d\x01\xe2\x8b\x2f\x9c\x89\x19\x91\xbc\x00\x02\xc4\x6f\x3e\x40\x7c\x8b\x6b\xa9\x8c\x07\x2f\x7d\xd7\x21\xe1\x94" +
	"\x44\x52\x88\x4f\x85\x5d\x7a\xbf\xdf\x47\xcf\x51\x10\x39\xfb\xd9\x59\x1d\xa7\xe7\x79\x9c\x9d\x74\xf6\x73\x94\xff" +
	"\x14\x31\x06\x23\x1d\x47\x41\xe4\x8c\x7d\x1c\x92\xaf\xd9\xcb\x5e\x5d\x69\xdf\xd1\xa0\x68\x53\xf4\xea\x3f\x57\x5a" +
	"\x8c\x23\xe2\xb2\xf2\x07\xfe\xeb\xd5\x95\x26\x2f\xbd\xfc\xf5\x75\x0b\xb9\x5b\xfd\x21\x6f\x48\xb6\x6f\xd1\x20\xc4" +
	"\x6a\x92\xbd\xad\x20\x89\xf3\x0b\x39\xe6\x99\x81\xb4\xcb\x50\xda\xc5\xfa\x88\xba\xb9\xee\xce\xf6\x07\x0d\x84\x97" +
	"\x0b\x0a\x2f\x1b\x80\x76\x85\x62\xcb\x18\x25\x38\x04\xd3\x67\x9c\xba\xd8\x4f\x8a\xe3\xa2\x7d\x3f\x91\x85\x8c\x19" +
	"\x5c\xc5\xd8\xe0\x59\x95\x06\x29\xc7\xb3\x52\xd1\x21\xca\x9c\xb8\xf3\x98\x05\x56\x09\x8b\xdc\x4e\x30\x7d\x5b\x8f" +
	"\x99\xf6\xed\x7f\xc7\x06\xf7\x73\x02\x76\xcf\x9e\xe5\x0d\x65\xd5\x6b\x11\xce\xee\x0c\x7d\xf2\x54\x44\xb4\x2b\xe4" +
	"\x63\x01\x27\x03\x4e\xe6\x8d\xe6\xc2\xc9\x09\x64\xc5\x58\x19\x01\x5a\xae\xb6\x48\xd1\xb2\x8c\xe6\x07\xb4\x3c\xfb" +
	"\x68\x3b\x86\x96\xf7\x6a\x7a\x76\x22\x8f\xd6\xe5\xa7\x52\xea\x2c\x99\x1e\x69\xdf\xa2\xec\x8a\x70\x2c\xdb\x32\x5c" +
	"\x5f\x88\x5d\x00\xf9\xb3\x3a\x97\x3f\xeb\xa8\x96\x31\xa5\x2e\x95\x32\x7c\x90\x3b\x6b\x87\x72\x67\x15\xfb\x82\x9e" +
	"\x37\x2f\xae\x09\x39\x3a\xac\x3d\xa9\x0d\x8a\x5e\x61\x35\x40\xd3\x5b\xa8\x03\x4d\xef\xc6\x35\xbd\xe5\xbc\xc9\x6b" +
	"\xd7\xf5\x26\x1f\xef\xb0\xba\x37\x19\x61\x67\x35\xbe\xed\xb7\x0f\x94\xbe\xc5\x67\x59\xeb\x0b\x7a\xdf\x05\xf5\xbe" +
	"\x6b\xc9\x08\xbe\x5c\x6d\x2f\x48\x53\x8b\x0f\x68\x7b\xdb\x8c\x1c\xb4\xbd\xa9\xb6\x37\x88\x9c\xfd\x5c\xb9\x2a\x1e" +
	"\xff\x2e\xaa\x6d\x57\xaf\x97\x6d\xbe\x69\x56\xa4\x99\x6d\x22\xc1\x40\x11\xd0\x6e\x98\xa0\x08\xa8\x51\xce\x26\x40" +
	"\x06\x9a\x80\x6a\x0b\x30\x20\x93\xb5\x79\x32\x9a\x80\xd5\x72\x9e\x80\x9a\x01\x35\xf3\x46\x0b\xe9\x68\x01\x39\x83" +
	"\x9a\x36\xed\xb6\x4b\xc8\x79\xaf\xa6\x67\x17\xd4\xb4\x3c\xaa\x4c\x93\xa6\x16\xf4\xb2\x79\x6d\x37\xf5\xb2\x0a\x35" +
	"\x61\xce\x7c\x76\x54\x81\x09\xba\xd9\x42\xc7\xd5\xeb\x66\xf7\x24\x9f\x2e\x64\x57\xae\x64\xe1\xd5\x02\x63\x4a\x1c" +
	"\xfc\x5b\x96\xd0\x55\x3f\x2e\x56\x86\x8f\x1c\x87\x98\xd8\xbf\x2d\xf6\x92\x64\x45\xd6\x42\xe2\x78\x36\x0e\x2d\x3a" +
	"\x99\x2f\x73\xeb\x52\xd2\xa5\x27\x44\xc7\x41\x48\x82\x90\x4a\x21\x26\x93\x68\x55\x9a\x36\x81\xe8\xbc\x09\xd3\x39" +
	"\xc9\xa4\x8a\xed\xd9\xe3\x69\x66\xc7\x6f\x2e\xcf\x67\x8b\x36\x9a\xf4\xfb\xed\xf2\x1c\xbd\x62\x47\xac\x5d\x24\xd1" +
	"\x59\x02\x83\x2e\x27\x47\xfa\x3b\x65\xfe\x8c\x96\x39\xd2\x25\xdb\xd8\x36\x39\xfa\x16\xaf\x3d\xe4\x43\xcf\x9f\xca" +
	"\x59\x5c\x11\xe6\xb0\xea\xb1\x85\xb5\x7e\x0c\xd1\x2b\x00\xda\x8c\xa1\x88\xeb\x92\xf8\x73\x2e\x8a\x06\x19\x13\x95" +
	"\x7f\x66\x16\x70\x56\x06\x25\x5e\x3f\x8e\x29\xa5\xd4\x9a\x17\xcf\x28\x12\x42\x2d\x8c\x6b\x76\x61\x17\x01\x5b\xe5" +
	"\xcf\x5a\xb0\xd5\xb9\x60\x48\x84\x8a\xe8\x4a\x1a\x99\xed\xbb\xf1\x18\xcb\xe4\x50\x8d\xe2\xc6\xc5\x10\x5b\x26\x72" +
	"\x59\xd3\x39\x50\xc1\x73\xd2\x92\x17\xb2\xd6\x85\x03\x52\x90\x32\xcd\x81\xbd\x44\xa0\x2f\x61\x2f\x29\xb3\x98\x21" +
	"\x2f\x59\x02\xa9\x0c\x65\x49\xbb\xa6\x18\x4b\xda\x73\x26\x74\xf5\x94\xf7\x06\x70\x52\xfe\x34\xe1\xa4\x56\x38\x47" +
	"\x1f\x3a\xb5\x24\x52\x5c\xdf\x88\x4a\x94\x27\xa6\x8e\x93\xcf\x20\xbe\x24\x8f\xad\x85\x7d\x61\x9c\x32\xc1\x62\x72" +
	"\x0c\x98\x30\x4b\x2e\xbd\x6d\x9c\x7e\xc3\x02\x88\x12\xc7\x9a\x43\x29\xfb\x42\x2b\x78\x4c\x21\xc3\x70\x13\x03\x03" +
	"\xa5\x78\x20\xc7\xf5\xdf\x8a\xac\x3b\xd7\x1d\x94\x98\xf6\x1b\x2e\x97\xd4\xa8\x7b\x7f\xa0\x97\x05\x6f\x5a\xe8\x26" +
	"\x35\x9a\xf2\x75\x9e\x65\xdc\x32\xc3\xd3\xd2\x4b\x93\x33\x99\xa9\x7b\xc4\xad\xd2\x86\x82\x31\xb3\x2e\xda\x37\x1f" +
	"\x89\x45\x7a\x75\xed\x34\x61\x35\x25\x0b\xac\x1d\xf5\xc5\x56\x82\x98\x71\x20\x94\xe8\x25\xa9\xf6\xe7\xf2\xea\x58" +
	"\x0e\x19\xab\x40\xb1\xdd\xa8\xc4\x21\x1c\x8b\x43\x10\x47\x35\x78\x29\x16\x55\xaf\x08\xed\x44\x28\x39\xea\x97\x67" +
	"\xa3\xdc\xd4\x3f\x5d\x66\x22\xa9\x95\x44\x41\xa9\x9c\xf9\x92\xf8\xa8\x9c\xdb\x36\xbe\x4d\xb2\x50\x73\x65\x71\x73" +
	"\x49\x06\x15\x31\x23\x77\x0d\xdf\x9b\xd3\xe9\xbf\xef\x8b\x35\x77\xb9\x5c\x2a\x29\xe4\xc0\xbc\x87\xd0\x9d\x87\x0f" +
	"\xca\xaa\xa5\x83\xe4\xb2\x3a\xfc\x12\xb8\x74\xc4\xda\xfd\x75\x90\x74\xcb\xa1\x50\xc3\x94\xba\x21\x4e\x77\x67\x0e" +
	"\x41\xd5\x75\x64\xd9\xe1\xcf\x54\x1a\xe0\x4f\xf0\x44\xf8\xc9\xc7\x37\x98\x62\xd1\x17\x01\x21\x8d\x5f\xba\xaa\x5b" +
	"\xbe\xc6\x92\x53\xb3\x0c\x97\x5e\xa4\x26\xb9\x2c\x2e\x6e\xbf\x87\x06\xba\xde\x43\x83\xe1\xb0\x87\x74\x51\x55\xa5" +
	"\x71\xcb\x9c\x11\xd2\xfb\xe2\xb5\x95\xa2\xd7\xf3\x7c\x69\xd0\xdf\xd1\xb9\x4d\xfc\x50\x22\x7c\x09\xa6\xee\x3d\x9b" +
	"\xbe\xe4\xfe\x4b\x10\x91\x89\x83\xe9\xb5\x8b\x7d\x73\x56\x4c\x44\x4c\x2b\x94\x2e\x8a\x36\xa1\x24\x64\x7a\xb4\xf2" +
	"\x05\xc1\xf5\x02\x1f\x33\x6d\x45\x61\x4c\xdc\x77\xa2\x28\xcf\xb4\x42\xe2\xe3\x84\x3c\xd5\x87\xc7\x7d\xfd\xe4\xb4" +
	"\x7f\x74\xf4\xb2\xe8\xc9\x21\xb5\xe6\x2f\xc4\x54\x2c\xcc\xa0\x73\xc1\x22\xfb\x75\x77\x7e\xe2\x49\x52\x75\x5e\x68" +
	"\x11\x2d\xf2\x82\x1f\xab\x83\xff\xb5\x4c\x82\xd2\x40\x9d\xbf\x5e\x7f\x21\x86\x00\x1d\xf3\x44\x86\x5c\x38\x7f\x4b" +
	"\x4c\x06\xfa\x96\x97\xb2\x1d\x82\xcf\xcf\x2a\xd2\xbb\x48\x12\xb9\xd4\x38\xff\x34\xef\x4b\xd5\xad\xa3\x73\xe9\x5d" +
	"\xc4\xf9\x42\x7a\x17\xf9\xd0\x95\xee\x13\x4f\x31\xaa\xfa\xa6\x03\xed\xe7\xc9\xda\xa4\xbb\xba\xc4\xf4\x2e\x26\x31" +
	"\x26\x8b\x27\xed\x00\xe0\xd8\xaa\x2c\x0c\xeb\xc8\xfa\x03\x20\xb1\x46\x90\x50\x49\xab\x00\x4c\x00\x4c\xea\xc1\x04" +
	"\x20\x04\x20\xa4\x94\x9c\xdb\xdc\x12\xb0\x28\xcb\x64\x20\x15\xd4\x66\x50\x09\x52\xa8\x97\x3b\x97\x14\xea\xd2\x77" +
	"\x63\xce\x1e\xed\x67\x86\x3b\x52\xbb\x67\x80\x97\x62\xa7\x25\x13\xad\x4b\x20\x49\xd6\x02\x2a\xae\x09\xf8\x64\x03" +
	"\x17\x4f\xf7\x21\x23\x4b\x13\x0d\xf0\xb1\x6e\xf8\xc8\x34\xf4\xdd\x87\x12\xc8\x4d\xb9\xa9\x6c\xb7\x8b\xc1\xc6\x3a" +
	"\xf2\x96\x5e\x72\x7f\x35\x00\x8c\x75\xde\x2c\xaa\x25\xef\x16\xda\xd8\x29\xa0\x80\xb4\xa5\x90\xb6\x74\x69\xc3\xdc" +
	"\xd5\xb4\xa5\x59\x10\x28\x1c\xa0\x92\xf3\x71\x4f\xe9\x1c\x12\x37\xcd\x3d\x45\x64\xcd\xf8\xcb\xca\xec\x7d\x31\xc8" +
	"\x4c\x5c\xef\xb9\x66\x0f\xb1\x90\x58\x69\x49\xfc\xa3\xc7\x8c\x1a\xe3\x79\xc4\xed\x73\x15\xd6\xac\xa6\x97\x33\xb9" +
	"\x46\x97\x6c\x31\x17\x33\x0d\xef\x95\xbe\xdd\xcb\x97\x77\x06\xf3\x4c\xc8\x0a\x2b\x74\x03\xa7\xe9\xb4\x57\x35\x2b" +
	"\x6c\xc6\x4e\x76\x2a\x35\xec\x62\x56\x2b\x2b\x31\x4b\x11\x4b\x1f\xe4\xc6\x2a\x2d\xcd\x52\x2a\xd6\x47\xdd\x33\x4b" +
	"\x11\xcd\xa3\xc0\x2c\x45\x3e\xf4\x9d\xa2\x9a\x37\xcd\x4a\x59\x34\xbd\xbe\xbb\xaf\x1f\xe2\xf1\x21\x10\x3b\xbd\x00" +
	"\x23\xeb\x95\xc3\xa4\x71\x0b\x95\xf1\x0d\x96\xc9\xbd\x65\x71\x14\x16\x81\x96\x8b\xcb\x4f\xe8\xc2\xf5\xe5\xa3\x05" +
	"\x58\x29\x76\xca\x61\x45\x30\x0b\x9d\x0b\x56\x0c\x2f\x1a\x1b\xaa\xa5\xef\x96\xf4\x0e\x24\xbb\xdb\x69\xef\x06\xe2" +
	"\x3b\x79\x6b\x10\xdf\x81\xf8\x4e\xd6\x11\xc4\x77\x59\xa3\x15\x8a\xef\x9e\xd7\x0b\xc6\x54\x0a\x2d\x90\x2f\x95\xbb" +
	"\x81\x7c\x29\xed\x55\x95\x2f\xc5\xe4\x4a\xa7\x44\x4b\x1b\x76\x24\x3b\x29\x15\x4a\x25\x43\x27\x82\x00\xa8\xd1\x8f" +
	"\x2c\x73\x05\x65\x59\xa3\x65\xd9\xe2\xdc\x1b\x74\x21\x65\x9b\xe7\xf1\x2b\x83\x4c\x54\xd2\xbd\x3d\xad\xdd\xdb\x86" +
	"\x44\x54\x67\xd5\x42\xc8\x43\x95\xd7\x41\x1e\x2a\xd5\xa9\x58\x5b\x1e\xaa\xa6\xb4\xf4\x2b\xcd\x42\x55\x9b\x9c\x7e" +
	"\xf3\x29\xa8\x1a\x32\x35\x6f\x36\xff\x54\x3c\x38\x48\x3e\xb5\xa2\xe4\x53\xb5\x8b\x0b\x99\xa7\x16\xcc\x3c\x65\x78" +
	"\x51\x92\x77\x26\x20\x86\x4b\xcd\x60\x9c\xa3\xd2\xce\xe7\xa0\x82\x84\x11\xc5\x07\x72\x50\xb5\x19\x39\xe4\xa0\x4a" +
	"\x05\x5d\x7a\xbf\xdf\x47\xcf\x59\x9a\x84\xec\xac\x8e\xd3\xf3\x3c\x2e\xe7\x90\x1a\xe5\x3f\x45\x8c\xc1\x48\xc7\x51" +
	"\x10\x39\x63\x1f\x87\xa4\x90\xba\xea\x3f\x9d\xc9\x5d\xd5\x90\x85\x62\xf5\xa9\xad\x9a\x68\xbb\x15\x25\xb6\xaa\xa5" +
	"\xea\x20\x75\x4a\xb7\x25\x97\x1d\x4f\x9d\xc2\xb3\x5a\x19\x5e\xb4\xd1\xa4\x29\x25\xcb\xc0\x4e\x66\x4e\x81\x4c\x99" +
	"\xc5\xe7\xc9\x08\x69\x57\xc8\xcd\x02\x62\x06\xc4\xcc\x1b\x2d\x94\xd3\xca\xf0\xa2\xcd\x26\xb4\xea\x3e\x6e\x86\xac" +
	"\x56\xc5\xe7\xc9\xe0\xe6\xbd\x9a\x9e\x5d\xc8\x6a\x75\x71\xf9\xa9\x29\xa5\x15\xda\xb7\x28\xbb\x27\x1c\xcb\xb6\x0c" +
	"\xd7\x17\x02\x19\x40\x92\xab\xce\x25\xb9\x3a\xaa\x65\x51\xa9\x4b\xa5\xac\x1f\x24\xb8\xda\xa1\x04\x57\xc5\xbe\xa0" +
	"\xf2\xcd\x8b\x6b\xe2\x8f\x0e\x6b\x4f\x6a\x83\xce\x57\x58\x0d\x50\xfa\x16\xea\x40\xe9\xbb\x71\xa5\x6f\x73\xce\xfb" +
	"\x95\xaa\x7d\x9b\x32\xdf\x6f\x5e\xf3\xdb\x9c\x02\x7a\xb3\xca\xdf\xf6\xdb\x07\xfa\xdf\xe2\xb3\xac\xf5\x05\x15\xf0" +
	"\x82\x2a\xe0\xc4\x8b\x87\xeb\x74\x18\x29\xd7\x79\xc5\x2f\x88\x54\x8b\x0f\x28\x7e\xdb\x8c\x1c\x14\xbf\xa9\xe2\x37" +
	"\x88\x9c\xfd\x5c\xcd\x2a\x1e\xff\x4e\x6a\x70\x57\xaf\xa2\x6d\xbe\x6a\x56\xa4\xa4\x6d\xa2\xc1\x40\x1d\xd0\x6e\x98" +
	"\xa0\x0e\xa8\xd1\xd3\x26\x40\x36\xa7\x3e\xe0\xc9\x09\xfe\xc1\x74\xac\xf8\x3c\x19\xc1\xff\x6a\x19\x4d\x40\xc4\x80" +
	"\x88\x79\xa3\x85\xf4\xb2\x80\x8a\x11\xe8\x60\x9f\x3c\x2a\xde\xab\xe9\xd9\x05\x1d\x2c\x8f\x1c\xd3\xa4\x86\x05\xa5" +
	"\x6b\x5e\xdb\x4d\xa5\xab\x42\x07\x98\x33\x96\x1d\xd5\x4e\x82\xe2\xb5\xd0\x71\xf5\x8a\xd7\x3d\xc9\xa7\x0b\x59\xb6" +
	"\x2b\x49\x79\xb5\xc0\x98\x12\x07\xff\x96\x67\x70\x2d\x66\xe2\x64\xd1\xd7\xd8\x16\x60\xff\xb6\xd8\x4b\x92\x1d\x5b" +
	"\x0b\x89\xe3\xd9\x38\xb4\xe8\x64\xbe\x84\xad\xbb\x96\x71\x5f\x15\xd2\x33\xcd\xf2\xfe\x66\xd6\x2c\xef\x85\xec\xf0" +
	"\xaf\xd8\xa9\x6b\x17\x40\x74\xed\xa9\xf4\xdf\x29\x73\x67\xb4\x4b\xa8\x4f\x25\xd9\x6e\x67\xca\xa7\xbf\x95\x2b\x0f" +
	"\x89\xf2\xf3\xa7\x29\x51\x3e\xa0\x92\x0c\x96\x7f\x9b\x15\x96\x6b\x01\xb6\xcc\x65\xc5\x54\x64\xfe\x99\x59\x20\x5f" +
	"\x19\xb4\x78\xed\xc8\xa8\x94\x77\x6b\x4e\x84\xa4\x48\x1a\xb5\x30\x52\xda\x85\x3d\x04\xb4\x96\x3f\x80\xd6\xca\x68" +
	"\x2d\x13\xd6\xac\xe9\x1c\xa8\xe0\x39\x69\xc9\x0b\xab\x91\xd9\x0b\x42\xaa\x75\xe3\x2e\x59\x92\xa9\x76\x18\x4b\xda" +
	"\x73\x26\x74\xf5\x94\xf7\x06\x70\x52\xfe\x34\xe1\xa4\x56\x38\x47\x1f\x3a\x75\x38\x87\xd5\x37\xa2\x12\xe5\x89\xa9" +
	"\x93\x01\x64\x10\x5f\x92\xe4\xd6\xc2\xbe\x30\x4e\x99\x48\x32\x39\x06\x4c\x0c\x26\x97\xfb\x36\x4e\xbf\x61\x01\x44" +
	"\x59\x65\xcd\xa1\x94\x7d\xa1\x15\x3c\xa6\x90\x61\xb8\x89\xd9\x81\x52\xb0\x90\xe3\xfa\x6f\x45\xa6\x9f\xeb\x18\x4a" +
	"\xec\xfe\x0d\x97\x68\x6a\xd4\xbd\x3f\xd0\xcb\x22\x3b\x2d\x74\x93\x1a\x4d\xf9\x3a\xcf\x32\x6e\x99\x3d\x6a\xe9\xa5" +
	"\xc9\x99\xcc\xd4\x42\xe2\x56\x69\x43\xc1\xc6\x59\x17\xcd\x9e\x8f\xc4\x22\xbd\xba\x76\x9a\xb0\x9a\x92\x05\xd6\x8e" +
	"\xfa\x62\x2b\x41\x40\x39\x10\x4a\xf4\x92\x3c\xfc\x73\x79\x75\x2c\x87\x8c\x55\xa0\xd8\x6e\x54\xe2\x10\x8e\xc5\x21" +
	"\x88\xa3\x1a\xbc\x14\x8b\xaa\x57\x84\x76\x22\x94\x1c\xf5\xcb\xb3\x51\x6e\xea\x9f\x2e\xb3\x9c\xd4\x4a\x42\xa4\xcc" +
	"\x4b\x88\x5f\x15\x07\xff\x6b\x99\x04\xc5\x17\x49\x16\x83\xae\x2c\xa3\x2e\x09\xae\x22\x66\xf6\xae\x61\xd3\xfc\xf7" +
	"\x7d\x51\x92\xa0\xdd\xe5\xb2\xac\xa4\x90\x83\xf1\x1e\x42\x77\x1e\x3e\x28\x2b\x9f\x0e\xb2\x5b\xe7\xf0\x4b\xe0\xd2" +
	"\x11\x6b\xf9\xd7\x41\xd2\x31\x87\x40\x0d\x53\xea\x86\x38\xdd\x99\x39\xc4\x5b\xd7\x91\x65\x87\x3f\x53\x69\xe8\x3f" +
	"\xc1\x39\xe1\x27\x1f\xdf\x60\x8a\x45\xf7\x04\x84\x34\x7e\xe1\xaa\x6e\xf8\x1a\xe3\x4e\xcd\x32\x5c\x7a\x91\x5a\xe9" +
	"\xb2\x88\xb9\xfd\x1e\x1a\xe8\x7a\x0f\x0d\x86\xc3\x1e\xd2\x45\x05\x97\xc6\x6d\x75\x46\x48\xef\x8b\x57\x56\x8a\x5a" +
	"\xcf\xf3\xa5\x41\x7f\x47\xe7\x36\xf1\x43\x89\x84\x26\x98\xba\xf7\x6c\xfa\x92\xbb\x2f\x41\x42\x26\x0e\xa6\xd7\x2e" +
	"\xf6\xcd\x59\xb1\x10\x31\xad\x50\xba\x28\xda\x84\x92\x90\x69\xdf\xca\x97\x03\xd7\x26\x7c\xcc\x74\x1c\x85\x31\x09" +
	"\x81\x13\x35\x2b\x24\x3e\x4e\x48\x53\x7d\x78\xdc\xd7\x4f\x4e\xf5\xc1\xf1\xb0\x5f\xb8\x89\xa4\x06\xfe\x85\x68\x8b" +
	"\x85\x19\x74\x2e\x8c\x64\xbf\xee\xbe\x4f\x9c\x4b\xaa\xfe\x0c\x2d\xe2\x48\xa6\x51\x3b\x7f\xbd\xfe\x42\x0c\x01\x20" +
	"\xe6\x09\x15\xb9\x70\x32\x97\x98\xea\xf3\x2d\x2f\xe5\x32\x04\xcf\x9f\x55\xe4\x7a\x91\x64\x75\xa9\x71\x01\x6a\xde" +
	"\x8a\xaa\x73\x47\xe7\x72\xbd\x88\x9e\x50\x90\xeb\x45\x3e\x74\xa5\x13\xc5\x53\x0c\xb1\xbe\xe9\xa8\xfb\x79\xfe\x36" +
	"\xe9\xae\x2e\x31\xd7\x8b\x49\x8c\xc9\xe2\x19\x3c\x00\x38\xb6\x2a\x25\xc3\x3a\x52\x00\x01\x48\xac\x11\x24\x54\xc2" +
	"\x29\x00\x13\x00\x93\x7a\x30\x01\x08\x01\x08\x29\xe5\xeb\x36\xb7\x04\x2c\x4a\xaa\x50\xc8\x0b\xb5\x21\x54\x82\x14" +
	"\xda\xe4\xce\x65\x88\xba\xf4\xdd\x98\xb3\x47\xfb\x99\x3d\x8f\xd4\x40\x1a\xe0\xa5\xd8\x69\xc9\x44\xeb\x12\x48\x92" +
	"\xb5\x80\x8a\x6b\x02\x3e\xd9\xc0\xc5\xd3\x7d\xc8\xc8\x72\x46\x03\x7c\xac\x1b\x3e\x32\x85\x7c\xf7\xa1\x04\x12\x55" +
	"\x6e\x2a\xf5\xed\x62\xb0\xb1\x8e\x24\xa6\x97\xdc\x8d\x0d\x00\x63\x9d\x37\x8b\x6a\xc9\xbb\x85\x36\x76\x0a\x28\x20" +
	"\x87\x29\xe4\x30\x5d\xda\x30\x77\x35\x87\x69\x16\x0a\x0a\x07\xa8\xe4\x93\xdc\x53\x3a\x8d\xc4\x4d\x73\x0f\x12\x59" +
	"\x33\xfe\xb2\x32\x7b\x5f\x8c\x34\x13\xd7\x7b\xae\xd9\x43\x2c\x30\x56\x5a\x12\xff\xe8\x31\x1b\xc6\x78\x1e\x71\xfb" +
	"\x5c\x85\x35\xab\xa5\xe5\xfc\x8e\xd4\x8b\x59\x82\xf7\x4a\xdf\xee\xe5\xcb\x3b\x83\x35\x26\xa4\x88\x15\xba\x81\x77" +
	"\x75\xda\xab\x6a\x6c\x92\xb1\x93\x9d\xca\x13\xbb\x98\xd5\xca\x4a\xcc\x52\xc4\xd2\x07\xb9\xb1\x4a\x4b\xb3\x94\x8a" +
	"\xc1\x51\xf7\xcc\x52\x44\x8b\x28\x30\x4b\x91\x0f\x7d\xa7\xa8\xe6\x4d\xb3\x52\x16\x4d\xaf\xef\xee\xeb\x87\x78\x20" +
	"\x09\xc4\x4e\x2f\xc0\xc8\x7a\xe5\x30\x69\xf4\x42\x65\x20\x84\x65\x72\x6f\x59\xc0\x85\x45\xa0\xe5\xe2\xf2\x13\xba" +
	"\x70\x7d\xf9\x68\x01\x56\x8a\x9d\x72\x58\x11\xcc\x42\xe7\x82\x15\xc3\x8b\xc6\x86\x6a\xe9\xbb\x25\xbd\x03\xc9\xee" +
	"\x76\xda\xbb\x81\xf8\x4e\xde\x1a\xc4\x77\x20\xbe\x93\x75\x04\xf1\x5d\xd6\x68\x85\xe2\xbb\xe7\xf5\x82\x31\x95\x42" +
	"\x0b\xe4\x4b\xe5\x6e\x20\x5f\x4a\x7b\x55\xe5\x4b\x31\xb9\xd2\x29\xd1\xd2\x86\x7d\xc7\x4e\x4a\x85\x52\xc9\xd0\x89" +
	"\x20\x00\x6a\x74\x1d\xcb\xdc\x3f\x59\x16\x69\x59\xce\x38\xf7\x06\xa9\xa2\x48\xcd\xe3\x59\x06\x19\xa9\xa4\xbb\x7b" +
	"\x5a\xbb\xbb\x0d\x09\xa9\xce\xaa\x85\x90\x8f\x2a\xaf\x83\x7c\x54\xaa\x53\xb1\xb6\x7c\x54\x4d\x89\xea\x57\x9a\x8d" +
	"\xaa\x36\x5d\xfd\xe6\x53\x51\x35\xa4\x6d\xde\x6c\x1e\xaa\x78\x70\x90\x84\x6a\x45\x49\xa8\x6a\x17\x17\x32\x50\x2d" +
	"\x98\x81\xca\xf0\xa2\x24\xff\x4c\x40\x0c\x97\x9a\xc1\x38\x47\xa5\x9d\xcf\x45\x05\x99\x24\x8a\x0f\xe4\xa2\x6a\x33" +
	"\x72\xc8\x45\x95\x8a\xba\xf4\x7e\xbf\x8f\x9e\xb3\xfc\x09\xd9\x59\x1d\xa7\xe7\x79\x5c\x4e\x25\x35\xca\x7f\x8a\x18" +
	"\x83\x91\x8e\xa3\x20\x72\xc6\x3e\x0e\x49\x27\x53\x58\x35\xa4\xa7\x58\x7d\x86\xab\x26\xda\x6e\x45\xf9\xad\x6a\xa9" +
	"\x3a\xc8\xa9\xd2\x6d\xd9\x65\xc7\x73\xaa\xf0\xe4\x56\x86\x17\xcd\x99\x4d\x65\xe2\x63\x1a\xd9\xd8\xb7\xc2\xc7\x98" +
	"\x40\x38\xea\xcb\x68\x8a\x27\x90\x64\x05\x32\x66\x16\x9f\x27\x23\xa6\x5d\x21\x37\x0b\x88\x19\x10\x33\x6f\xb4\x50" +
	"\xb2\x2b\xc3\x8b\xe6\xcd\x74\xb5\x2b\xb8\x19\x12\x60\x15\x9f\x27\x83\x9b\xf7\x6a\x7a\x76\x21\x01\xd6\xc5\xe5\xa7" +
	"\xa6\xec\x57\x68\xdf\xa2\xec\x9e\x70\x2c\xdb\x32\x5c\x5f\x08\x65\x00\xf9\xb0\x3a\x97\x0f\xeb\xa8\x96\x45\xa5\x2e" +
	"\x95\xb2\x7e\x90\x0b\x6b\x87\x72\x61\x15\xfb\x82\xca\x37\x2f\xae\x89\x40\x3a\xac\x3d\xa9\x0d\x3a\x5f\x61\x35\x40" +
	"\xe9\x5b\xa8\x03\xa5\xef\xc6\x95\xbe\xcd\xa9\xef\x57\xaa\xf6\x6d\x4a\x80\xbf\x79\xcd\x6f\x73\x6e\xe8\xcd\x2a\x7f" +
	"\xdb\x6f\x1f\xe8\x7f\x8b\xcf\xb2\xd6\x17\x54\xc0\x0b\xaa\x80\x13\x3f\x1e\xae\xd3\x61\xa4\x5c\xe7\x15\xbf\x20\x52" +
	"\x2d\x3e\xa0\xf8\x6d\x33\x72\x50\xfc\xa6\x8a\xdf\x20\x72\xf6\x73\x35\xab\x78\xfc\x3b\xa9\xc1\x5d\xbd\x8a\xb6\xf9" +
	"\xaa\x59\x91\x92\xb6\x89\x06\x03\x75\x40\xbb\x61\x82\x3a\xa0\x46\x4f\x9b\x00\x19\xe8\x03\xc0\xa2\x8c\x77\xdb\x25" +
	"\x7d\xc0\x6a\xf9\x4f\xc0\xcf\x80\x9f\x79\xa3\x85\xd4\xb5\x80\xa1\x41\x63\x5b\xea\xb6\x4b\x18\x7a\xaf\xa6\x67\x17" +
	"\x34\xb6\x3c\xd2\x4c\x93\xd2\x16\x54\xb4\x79\x6d\x37\x55\xb4\x0a\x8d\x61\xce\x86\x76\x54\x97\x09\x6a\xda\x42\xc7" +
	"\xd5\xab\x69\xf7\x24\x9f\x2e\x24\xe1\xae\xe4\xec\xd5\x02\x63\x4a\x1c\xfc\x5b\x9e\xe6\xf5\xb8\x58\x19\x3e\x72\x1c" +
	"\x62\x62\xff\xb6\xd8\x4b\x92\x3c\x5b\x0b\x89\xe3\xd9\x38\xb4\xe8\x64\xbe\x9c\xae\x4b\x49\xc8\x9f\x50\x1e\x07\x21" +
	"\x09\x42\x2a\x85\x98\x4c\xb8\x55\x69\xda\x04\xa2\x8b\x65\xdf\x57\xc5\xfb\x4c\x33\xbe\xbf\x99\x35\xe3\x7b\x21\x53" +
	"\xfc\x2b\x76\xc4\xda\x45\x17\x9d\x27\xad\xbe\x88\xc9\x4b\x69\xf5\xe5\x10\x9b\xe5\xd5\x57\xb9\x96\x17\xb2\xeb\xcb" +
	"\xdf\x90\x66\xc4\x95\x6c\xe3\x6c\xd9\xf5\xb7\x72\xed\x21\x6d\x7e\xfe\x34\xa5\xcd\x5f\x0a\xe6\x38\x17\xb4\xf4\xa8" +
	"\x88\x2e\xa4\xf1\x8f\xbe\x1b\x8f\xb1\x8c\xbd\x6b\xe4\xe2\x97\x8e\x4c\x7a\x05\x98\x9c\x31\x9e\x71\x0d\xc0\x96\x99" +
	"\xaa\x98\x68\xcc\x3f\x33\x0b\xe4\x2b\x63\x1a\xcf\x83\x8e\xc4\xf3\x50\x42\x47\x52\xca\x2c\xc3\x46\xa5\xb4\x5c\x6a" +
	"\x8c\x24\x7d\x49\x8a\x90\x14\x39\xa5\x16\x46\x4a\xbb\xb0\x87\x80\xd6\xf2\xa7\x0b\x68\x4d\x81\xc2\x96\x8c\xb0\x32" +
	"\xa9\xcb\x9a\x20\x5c\x05\xa9\x49\x4b\x5e\x58\x0d\xc9\x5e\x90\x36\xad\x1b\x2b\xc9\xb2\x4b\xb5\xc3\x45\xd2\x9e\x33" +
	"\x21\xa2\xa7\xbc\x37\x80\x6d\xf2\xa7\x09\xdb\xb4\xc2\x26\xfa\xd0\xa9\xc5\x26\x71\x7d\x23\x2a\x51\x9e\x98\x3a\x66" +
	"\x3e\x83\xf8\x92\x48\xb6\x16\xf6\x85\x71\xca\x64\x8b\xc9\x31\x60\xf2\x2c\xb9\x00\xb7\x71\xfa\x0d\x0b\x20\x0a\x1d" +
	"\x6b\x0e\xa5\xec\x0b\xad\xe0\x31\x85\x0c\xc3\x4d\xac\x0d\x94\x12\x82\x9c\x38\xfd\x56\xe4\xde\xb9\x0e\xa1\xc4\xb7" +
	"\xdf\x70\xd1\xa4\x46\xdd\xfb\x03\xbd\x2c\x7b\xd3\x42\x37\xa9\xd1\x94\xaf\xf3\x2c\xe3\x96\x99\xa1\x96\x5e\x9a\x9c" +
	"\xc9\x4c\xed\x23\x6e\x95\x36\x14\x4c\x9b\x75\xd1\xda\xf9\x48\x2c\xd2\xab\x6b\xa7\x09\xab\x29\x59\x60\xed\xa8\x2f" +
	"\xb6\x12\x24\x8d\x03\xa1\x44\x2f\x09\xb6\x3f\x97\x57\xc7\x72\xc8\x58\x05\x8a\xed\x46\x25\x0e\xe1\x58\x1c\x82\x38" +
	"\xaa\xc1\x4b\xb1\xa8\x7a\x45\x68\x27\x42\xc9\x51\xbf\x3c\x1b\xe5\xa6\xfe\xe9\x32\x83\x49\xad\x24\x0d\x4a\x45\xcd" +
	"\x97\x49\xea\x41\x9e\xcb\x25\xbe\x49\xb2\xe8\x73\x65\x69\x73\x49\x04\x15\x31\x73\x77\x0d\x9b\x26\x26\xf7\x45\x31" +
	"\x81\x76\x97\x8b\xa5\x92\xc2\x18\x90\x4d\x1c\x4c\xaf\x5d\xec\x9b\x9e\xef\xde\x59\x26\xf1\x83\xc3\x47\xec\xd8\x23" +
	"\xf4\xd7\x01\x6b\x85\x3d\x2b\x91\x67\xa5\xfd\xb2\x86\x23\xf6\xf3\x00\x99\x56\x10\x5f\x76\xaf\x89\x4d\xb8\xaa\xb4" +
	"\x88\x2f\x89\x69\xb1\xc8\x81\x25\xd1\xe5\x8d\x6b\x9b\xc4\x1f\xa5\xb7\x62\x52\xca\x02\x4c\x54\xca\x92\x6d\x1f\x65" +
	"\xd3\xf0\x70\x38\x1d\xa1\x17\x77\xd8\x7f\x61\x5b\xd7\x2f\x26\x3e\xbe\xc1\x14\xbf\xc8\xa6\x11\xbc\xa8\xbc\xc0\x9f" +
	"\xfc\x6c\xe6\x53\x8e\x4f\xf6\x08\xdd\x58\x36\xd9\xfb\xff\x03\x00\x00\xff\xff\x0e\x71\xfe\xa1\x8a\x4e\x04\x00")

func bindataConfigMapDashboardsconfigyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataConfigMapDashboardsconfigyaml,
		"ConfigMap/dashboards-config.yaml",
	)
}



func bindataConfigMapDashboardsconfigyaml() (*asset, error) {
	bytes, err := bindataConfigMapDashboardsconfigyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ConfigMap/dashboards-config.yaml",
		size: 282250,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1560334147, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataConfigMapGrafanadatasourcesyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4f\x6f\xdb\x3e\x0c\xbd\xe7\x53\xf0\xa7\x16\xc8\xa5\x89\x9a\xcb" +
	"\x0f\xad\x80\x1d\xd6\xf5\xb0\x0d\xd8\x1f\x60\x40\x2f\xc3\xb0\x32\x32\x1d\x6b\xb1\x25\x83\x94\xd3\x66\x5d\xbf\xfb" +
	"\x20\xb9\x4d\xb2\xc6\xc8\xb0\xad\x3e\x24\x96\xf8\xde\xa3\x48\x3e\x0b\x5b\x77\x45\x2c\x2e\x78\x03\xab\xd9\x68\xe9" +
	"\x7c\x61\xe0\x55\xf0\xa5\x5b\xbc\xc3\x76\xd4\x50\xc4\x02\x23\x9a\x11\x80\xc7\x86\x0c\x2c\x18\x4b\xf4\x38\x49\xbb" +
	"\x12\x3a\xb6\x24\x0f\x31\x69\xd1\x92\x81\x92\x0a\x62\x8c\x81\xd1\x8d\x1e\xa9\x0b\x8a\x31\x2c\xc9\x4f\xa5\x32\xf0" +
	"\x63\x32\x02\x00\x38\xfa\x4f\x77\xc2\x7a\xee\xbc\x26\xbf\x02\xa9\xfa\xdd\x9b\xca\xd5\xd4\xbf\x16\x21\xff\xaf\xb0" +
	"\xee\xe8\xc5\xb5\xc5\x08\x7a\x85\xac\xb9\xf3\x5a\xc8\x32\x45\xd1\xcb\x6e\x4e\xec\x29\x92\x4c\x5d\xd0\x42\xbc\x72" +
	"\x96\xd0\xda\xd0\xf9\xa8\x73\xca\xeb\x1d\x0d\x75\x41\xc8\xc4\x70\x7c\x97\xd7\xf7\x2a\xc7\xc8\x56\x01\x8e\xf3\x4e" +
	"\x5e\xdb\x16\x60\xa7\x3a\xdd\x72\x68\x28\x56\xd4\xc9\x74\x8d\x4d\x0d\xa0\x29\x5a\xfd\xd0\x87\x14\x5d\xb9\xd4\x3f" +
	"\xe7\x17\xfa\x00\x2d\x4b\x0b\x15\x30\x71\x30\x16\xdd\x9f\x44\x8f\x55\x9f\x58\x8d\xf5\x62\xfc\x0f\xc2\xb9\x39\x7f" +
	"\xcd\x3e\x2a\x82\x4f\xb5\x3f\x89\x6d\x46\x75\x97\x7f\xd3\xa3\xb6\x7e\x51\x06\x66\x27\xdb\xc0\x4e\x0e\x65\xe0\xf3" +
	"\x26\xf0\x2b\x7f\x03\x4f\x86\x51\x06\xd4\x1b\x5f\xd6\xdd\xed\xe5\x85\x3a\x79\x0a\x01\xd8\x67\xc5\x75\x9b\x59\x2e" +
	"\xb3\x8a\xb9\x3a\xd9\xc7\xa0\xb5\x24\xe9\x0c\xaa\xe5\x70\xbb\x1e\x82\x74\x5c\xa7\x78\x15\x63\x2b\x46\x6b\xac\xb1" +
	"\xa1\x02\x27\x8f\xaa\xd3\x1d\x0b\x4f\x65\x65\xcd\xd9\xe9\xd9\xff\x43\x3a\x2d\x8a\xdc\x04\x2e\x92\x18\x16\x8d\xf3" +
	"\x69\x63\x30\xa1\x10\x6f\x40\x43\x80\xd4\xbd\x39\x4a\x2e\xee\xab\xf3\x91\xd8\x63\x3d\x04\x9c\xa3\x38\xfb\xb2\x8b" +
	"\x95\x32\x50\x62\x2d\x34\x80\x71\x72\x49\x25\x76\x75\x3c\x80\xf9\x26\xc1\x5f\x62\x44\x65\x06\xa6\x93\x3a\x5d\xcb" +
	"\xa7\xa5\x6b\xaf\x88\x5d\xb9\x56\x06\x22\x3f\x7c\x1d\xbb\xcf\xfd\x80\x30\x13\x16\x1f\x7c\xbd\x1e\xce\xfd\x84\x71" +
	"\xc0\x18\x1f\x37\x5e\x1c\x6a\xc3\xa3\x11\xda\x83\xa8\x3f\xb7\xc2\x56\x6f\xb2\x3c\x93\x69\x68\xc9\x4b\xe5\xca\x38" +
	"\x69\x82\x77\x31\xb0\xf3\x8b\xec\x88\xf3\xd3\xf3\xd9\x73\x8c\x27\xb5\xf5\x99\xa6\xb3\x2f\x03\x7d\x5d\xaf\x09\x0b" +
	"\xe2\xf7\xd8\xd0\x2c\x95\x9a\x4e\x17\xd8\x7d\xc7\x98\x3e\xe2\x7d\xd6\xd0\x50\x85\x6c\xc7\xf4\xf6\x37\xa7\xda\x26" +
	"\xbb\x4a\x77\x5a\xce\xd6\xdf\x73\xea\x39\xac\xb3\x59\x7d\xc9\x6f\xf7\xfd\x62\x34\xca\x17\xc5\xcf\x00\x00\x00\xff" +
	"\xff\x2c\xa5\x46\xcd\xc8\x06\x00\x00")

func bindataConfigMapGrafanadatasourcesyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataConfigMapGrafanadatasourcesyaml,
		"ConfigMap/grafana-datasources.yaml",
	)
}



func bindataConfigMapGrafanadatasourcesyaml() (*asset, error) {
	bytes, err := bindataConfigMapGrafanadatasourcesyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ConfigMap/grafana-datasources.yaml",
		size: 1736,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1556071759, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAdmissioncontrollerdatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3b\x4e\x04\x41\x0c\x44\xf3\x3e\x85\x2f\x30\x48\x10\x76\x4a\x40" +
	"\x84\x40\x04\x43\x6c\xb9\x0b\x64\x6d\xff\xd6\xf6\xcc\xf9\x57\x2d\xcd\x86\xaf\xf4\xea\xf1\xd4\x1d\xe6\x3a\x7a\xa6" +
	"\xf3\x35\xdd\xb4\x97\x4c\xdf\x6b\xf1\x40\x8f\x7d\xd4\xa3\xe1\xbd\xb2\xb6\xd4\x10\x5c\x38\x38\x27\xa2\xce\x0d\x99" +
	"\xb8\x34\xf5\xf5\xdd\x64\xf4\xb0\x51\x2b\x6c\x5b\xca\xcb\x3c\xe5\xb2\x7c\xb2\x20\xd3\x1f\x0a\x8c\x63\x18\x6b\xf2" +
	"\x09\x59\x11\x16\x81\xfb\xe7\x28\xf0\x85\x44\x1b\xfd\x80\xcb\xaf\x69\xe0\xab\x0b\x12\x91\xc1\xc7\x61\xf2\x14\x0c" +
	"\xf7\x03\x1e\x17\x11\xf9\x0a\xfe\x23\xd3\xdb\x87\xd2\x23\x00\x00\xff\xff\x6f\xb5\x76\x7d\xcb\x00\x00\x00")

func bindataPersistentVolumeClaimAdmissioncontrollerdatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAdmissioncontrollerdatayaml,
		"PersistentVolumeClaim/admission-controller-data.yaml",
	)
}



func bindataPersistentVolumeClaimAdmissioncontrollerdatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAdmissioncontrollerdatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/admission-controller-data.yaml",
		size: 203,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1556274557, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAdmissioncontrollerlogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x31\x4e\x44\x31\x0c\x44\xfb\x9c\xc2\x17\xf8\x48\x50\xa6\xa5\xa0" +
	"\x42\x20\x8a\xa5\xb6\x9c\x61\x65\x91\xc4\xc1\xf6\xdf\xf3\xa3\x48\xbb\xe5\x1b\xbd\x79\xbc\xf4\x02\x0f\xb5\x59\xe9" +
	"\xf6\x5c\x7e\x75\xb6\x4a\x9f\x7b\x89\xc4\xcc\x8b\xf5\x73\xe0\xb5\xb3\x8e\x32\x90\xdc\x38\xb9\x16\xa2\xc9\x03\x95" +
	"\xb8\x0d\x8d\xfd\x3d\xc4\x66\xba\xf5\x0e\x3f\xba\x5d\x9f\xd6\x4d\xee\x52\x2c\x16\x54\xfa\x41\x83\x73\x9a\xb3\x96" +
	"\x58\x90\xdd\x60\x11\x44\xbc\x5b\x43\x6c\x24\x3a\xe8\x0b\xdc\xbe\x5d\x13\x1f\x53\x50\x88\x1c\x61\xa7\xcb\x43\x70" +
	"\xfc\x9d\x88\xbc\x13\x51\xec\xe0\x15\x95\x5e\xde\x94\xfe\x03\x00\x00\xff\xff\xcf\x90\x04\x04\xca\x00\x00\x00")

func bindataPersistentVolumeClaimAdmissioncontrollerlogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAdmissioncontrollerlogyaml,
		"PersistentVolumeClaim/admission-controller-log.yaml",
	)
}



func bindataPersistentVolumeClaimAdmissioncontrollerlogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAdmissioncontrollerlogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/admission-controller-log.yaml",
		size: 202,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1556274557, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaaidatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3d\x0e\xc2\x30\x14\x83\xf7\x9c\xe2\x5d\xa0\x48\x30\x66\x65\x60" +
	"\x42\x20\x86\x32\x5b\x89\x41\x4f\x34\x3f\xe4\xa5\x3d\x3f\x8a\x54\xc6\xcf\x9f\x6d\x54\x9d\xd9\x4c\x4b\xf6\xb2\x1d" +
	"\xdd\x47\x73\xf4\x72\x1f\x89\x75\xe6\x3e\x97\x65\x4d\x3c\x2f\xd0\xe4\x12\x3b\x22\x3a\xbc\x13\xc9\x48\xf4\x82\x05" +
	"\x89\x11\x13\x74\x1a\xe2\x50\xb7\xb0\x3b\xab\x08\xf4\xf2\x62\x64\x43\x2f\x0d\xea\xac\x32\x8c\x29\x42\xa0\xd9\xb5" +
	"\x44\xda\x40\x91\x49\x1e\x44\x7c\x36\xed\xbc\xe5\x40\x27\xd2\x68\x65\x6d\xe1\x5f\x68\xfc\xae\xb4\xbe\x93\x88\x8d" +
	"\xc3\x37\xbd\x9c\x2e\x2a\xbf\x00\x00\x00\xff\xff\x7a\x3d\x1c\x6c\xc1\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaaidatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaaidatayaml,
		"PersistentVolumeClaim/alameda-ai-data.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaaidatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaaidatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-ai-data.yaml",
		size: 193,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1556274557, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaailogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3b\x6e\xc3\x30\x10\x44\x7b\x9e\x62\x2f\xa0\x00\x49\xc9\x36\x45" +
	"\xaa\xc0\x86\x0b\xb9\x1e\x90\x63\x61\x61\xfe\xcc\xa5\x74\x7e\x83\x80\x5c\xbe\xf9\x3c\x34\x5d\xd9\x4d\x6b\xf1\x72" +
	"\x7c\xbb\xa7\x96\xe8\xe5\x3a\x13\x1b\x2c\x63\xad\x69\xcf\xfc\x4d\xd0\xec\x32\x07\x22\x06\xbc\x13\x29\xc8\xf4\x82" +
	"\x84\xcc\x88\x05\xba\xa4\xba\x7d\xb5\x23\x9c\x95\x35\x04\x7a\x79\x30\xb2\x63\xd4\x0e\x75\xd6\x18\xe6\x13\x21\xd0" +
	"\xec\xbf\x46\xda\x44\x91\x45\x6e\x44\xbc\x77\x1d\xbc\x94\x40\x27\xd2\x69\x75\xef\xe1\x33\xe8\x7c\xed\xb4\x71\x92" +
	"\x88\x4d\xe1\x46\x2f\x3f\x7f\x2a\xef\x00\x00\x00\xff\xff\x14\xd9\x87\x6f\xc0\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaailogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaailogyaml,
		"PersistentVolumeClaim/alameda-ai-log.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaailogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaailogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-ai-log.yaml",
		size: 192,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1556274557, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedadatahubdatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3b\xae\x02\x31\x10\x04\x73\x9f\xa2\x2f\xb0\x4f\x7a\x84\x4e\x09" +
	"\x88\x10\x88\x60\x89\x07\xbb\x01\x8b\xf5\x07\x8f\xbd\xe7\x47\x46\x4b\x34\xaa\x52\x4d\x4b\x09\x33\xab\x86\x9c\x2c" +
	"\xd6\x7f\xf3\x0a\xc9\x5b\x9c\x87\xd1\xc6\xd4\xe6\xbc\xf4\xc8\xfd\x22\x21\x9a\xc8\x26\x5e\x9a\x58\x03\x24\x89\xb4" +
	"\x90\x45\x22\xbd\x4c\xc3\x3e\xfb\xed\x7b\xff\xca\xea\xb6\x40\x8b\x38\x5a\xdc\xe9\x59\xa5\xe5\x2a\xc1\x68\xa1\x1b" +
	"\xff\xe2\x1c\x55\x8f\xd9\x53\x07\x02\x13\x2e\x14\x7f\xad\xa1\xf1\x94\x1c\x0d\x50\xa9\xb9\x57\xf7\x0b\x2a\xdf\x9d" +
	"\xda\x36\x02\x74\x0c\x3e\x68\xb1\x3b\x04\x7c\x02\x00\x00\xff\xff\x17\x75\x4a\xb4\xc6\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedadatahubdatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedadatahubdatayaml,
		"PersistentVolumeClaim/alameda-datahub-data.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedadatahubdatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedadatahubdatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-datahub-data.yaml",
		size: 198,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1556274557, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedadatahublogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3b\x6e\x02\x31\x14\x45\x7b\xaf\xe2\x6e\x60\x22\x25\xa5\xdb\x14" +
	"\xa9\x22\x10\xc5\x50\x3f\xec\xcb\x60\xe1\x1f\x7e\xf6\xac\x1f\x59\x1a\xca\x73\xee\x47\x6a\x58\xd9\x34\x94\x6c\xb1" +
	"\x7f\x9b\x67\xc8\xde\xe2\x3c\x8d\x76\xe6\xbe\x96\x38\x12\x7f\xa3\x84\x64\x12\xbb\x78\xe9\x62\x0d\x90\x25\xd1\x42" +
	"\xa2\x24\x7a\x59\xa6\x7d\x8c\xdb\x12\xcb\xf6\x55\x77\x77\xe4\x5a\xc5\xd1\xe2\x4e\xcf\x26\xbd\x34\x09\x46\x2b\xdd" +
	"\x9c\x8b\x73\x54\xfd\x2f\x9e\x3a\x11\x58\x70\xa1\xf8\x6b\x0b\x9d\xa7\xec\x68\x80\x46\x2d\xa3\xb9\x4f\xa1\xf1\x35" +
	"\xa8\xfd\x20\x40\xe7\xe1\x46\x8b\x9f\xbf\x80\x77\x00\x00\x00\xff\xff\xbc\x6e\xe4\x34\xc5\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedadatahublogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedadatahublogyaml,
		"PersistentVolumeClaim/alameda-datahub-log.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedadatahublogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedadatahublogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-datahub-log.yaml",
		size: 197,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1556274557, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaevictionerdatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x3d\x6a\x03\x41\x0c\xc5\xf1\x7e\x4e\xa1\x0b\x6c\x20\x29\xa7\x4d" +
	"\x91\x2a\x24\xb8\x58\xd7\x42\xf3\x6c\x84\x77\x3e\x2c\x69\xf7\xfc\x66\x60\x5d\xbe\xc7\x8f\x3f\x0f\x5d\x61\xae\xbd" +
	"\x65\x3a\x3e\xd3\x43\x5b\xc9\xf4\x3f\x1f\x0f\xb4\x58\xfb\xb6\x57\x7c\x6f\xac\x35\x55\x04\x17\x0e\xce\x89\xa8\x71" +
	"\x45\x26\xde\xb8\xa2\xf0\x82\x43\x25\xb4\x37\xd8\x32\xc1\xc7\x38\xe4\x34\x3e\x58\x90\xe9\x86\x02\xe3\xe8\xc6\x9a" +
	"\x7c\x40\x66\x82\x45\xe0\xfe\xdb\x0b\x7c\x4e\xa2\x85\x2e\xe0\x72\x35\x0d\xfc\x35\x41\x22\x32\x78\xdf\x4d\xde\xc0" +
	"\xf0\xdc\xe1\x71\x2e\x22\x9f\xc1\x3b\x32\x7d\xfd\x28\xbd\x02\x00\x00\xff\xff\x8f\x8f\x27\x58\xc9\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaevictionerdatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaevictionerdatayaml,
		"PersistentVolumeClaim/alameda-evictioner-data.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaevictionerdatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaevictionerdatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-evictioner-data.yaml",
		size: 201,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1556274557, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaevictionerlogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\xbd\x4a\x07\x41\x0c\x07\xfb\x7d\x8a\xbc\xc0\x09\x5a\x6e\x6b\x61" +
	"\x25\x8a\xc5\x59\x87\xec\xcf\x23\xb8\x5f\x26\xb9\x7b\x7e\x59\xb8\x7f\x39\xc3\x30\x3c\x75\x87\xb9\x8e\x9e\xe9\x7a" +
	"\x4e\xbf\xda\x4b\xa6\xcf\x65\x3c\xd0\x63\x1f\xf5\x6c\x78\xad\xac\x2d\x35\x04\x17\x0e\xce\x89\xa8\x73\x43\x26\xae" +
	"\xdc\x50\x78\xc3\xa5\x12\x3a\x3a\x6c\xab\xe3\x78\x9a\x97\xdc\x89\x4f\x16\x64\xfa\x41\x81\x71\x0c\x63\x4d\x3e\x21" +
	"\xeb\xc0\x22\x70\x7f\x1f\x05\xbe\x90\x68\xa3\x2f\x70\xf9\x36\x0d\x7c\x74\x41\x22\x32\xf8\x38\x4d\x1e\x81\xe1\xef" +
	"\x84\xc7\x4d\x44\xbe\x86\x07\x32\xbd\xbc\x29\xfd\x07\x00\x00\xff\xff\x7d\xd0\xec\x3a\xc8\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaevictionerlogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaevictionerlogyaml,
		"PersistentVolumeClaim/alameda-evictioner-log.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaevictionerlogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaevictionerlogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-evictioner-log.yaml",
		size: 200,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1556274557, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaexecutordatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\xbb\x6a\x03\x31\x10\x45\x7b\x7d\xc5\xfc\xc0\x06\x92\x52\x6d\x8a" +
	"\x54\xc1\xc6\xc5\xba\x1e\x46\xd7\x46\x78\xf5\xf0\xcc\x68\xf1\xe7\x1b\xc1\xba\x3c\xf7\x1e\x0e\xf7\xbc\x42\x2d\xb7" +
	"\x1a\x69\xff\x0e\x8f\x5c\x53\xa4\xf3\x5c\xcc\x51\x7d\x6d\xdb\x28\xf8\xdd\x38\x97\x50\xe0\x9c\xd8\x39\x06\xa2\xca" +
	"\x05\x91\x78\xe3\x82\xc4\x0b\x5e\x90\xe1\x4d\x97\x79\x7f\xf5\x5d\x0e\xc3\x3a\x0b\x22\xdd\x90\xa0\xec\x4d\x39\x07" +
	"\xeb\x90\x19\x60\x11\x98\xfd\xb7\x04\x9b\x48\xb4\xd0\x05\x9c\xae\x9a\x1d\xa7\x2a\x08\x44\x0a\x6b\x43\xe5\x23\x28" +
	"\x9e\x03\xe6\x07\x11\xd9\x0c\xde\x11\xe9\xe7\x2f\xd3\x3b\x00\x00\xff\xff\x1d\x89\x7b\x8b\xc7\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaexecutordatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaexecutordatayaml,
		"PersistentVolumeClaim/alameda-executor-data.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaexecutordatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaexecutordatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-executor-data.yaml",
		size: 199,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559697907, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaexecutorlogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\xbb\x4e\x04\x31\x0c\x45\xfb\x7c\x85\x7f\x60\x90\xa0\x4c\x4b\x41" +
	"\x85\x40\x14\x43\x6d\x39\x97\x51\x44\x5e\x6b\x3b\xa3\xfd\xfc\x55\xa4\xd9\xf2\x5c\x9d\x7b\x78\xe4\x1d\x6a\xb9\xb7" +
	"\x48\xe7\x6b\xf8\xcf\x2d\x45\xfa\x5e\x8b\x39\x9a\xef\xbd\xcc\x8a\xf7\xc2\xb9\x86\x0a\xe7\xc4\xce\x31\x10\x35\xae" +
	"\x88\xc4\x85\x2b\x12\x6f\xb8\x43\xa6\x77\xdd\x4a\x3f\x5e\xc6\x29\x97\x60\x83\x05\x91\xfe\x90\xa0\xec\x5d\x39\x07" +
	"\x1b\x90\xf5\x67\x11\x98\x7d\xf6\x04\x5b\x48\xb4\xd1\x0f\x38\xfd\x6a\x76\x7c\x35\x41\x20\x52\x58\x9f\x2a\x4f\x41" +
	"\x71\x9b\x30\xbf\x88\xc8\x56\xf0\x40\xa4\xb7\x8f\x4c\x8f\x00\x00\x00\xff\xff\x1a\xb9\x1e\xb0\xc6\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaexecutorlogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaexecutorlogyaml,
		"PersistentVolumeClaim/alameda-executor-log.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaexecutorlogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaexecutorlogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-executor-log.yaml",
		size: 198,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559697907, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaoperatordatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3d\xce\xc2\x30\x10\x44\x7b\x9f\x62\x2e\x90\x4f\xfa\x28\xdd\x52" +
	"\x50\x21\x10\x45\xa8\x57\xf6\x80\x2c\xe2\x1f\xbc\x9b\x9c\x1f\x59\x84\x72\xe6\x3d\x3d\x69\x69\x66\xd7\x54\x8b\xc7" +
	"\xf6\xef\x5e\xa9\x44\x8f\xeb\x78\xd4\x58\x6c\xae\xcb\x9a\x79\x5c\x24\x65\x97\x69\x12\xc5\xc4\x3b\xa0\x48\xa6\x87" +
	"\x2c\x92\x19\x65\xaa\x8d\x5d\xac\xf6\x69\xe0\xbf\xb6\x85\xdd\xd0\x26\x81\x1e\x0f\xc6\x2f\x97\xe4\xb4\x31\x8c\x80" +
	"\x84\x40\xd5\x73\x8d\xd4\x31\x81\x09\x37\x4a\xbc\xf7\x64\xbc\x94\x40\x07\x74\x6a\x5d\x7b\xf8\x09\x9d\xef\x95\x6a" +
	"\xfb\x02\x74\x04\x9f\xf4\x38\x9c\x12\x3e\x01\x00\x00\xff\xff\x75\x88\xf8\xa8\xc7\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaoperatordatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaoperatordatayaml,
		"PersistentVolumeClaim/alameda-operator-data.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaoperatordatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaoperatordatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-operator-data.yaml",
		size: 199,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1556274557, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaoperatorlogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3d\x0e\xc2\x30\x14\x83\xf7\x9c\xc2\x17\x28\x12\x8c\x59\x19\x98" +
	"\x10\x88\xa1\xcc\x4f\x89\xa9\x22\xf2\x47\x5e\xda\xf3\xa3\x88\x32\x7e\xf6\x67\x4b\x0d\x33\x9b\x86\x92\x2d\xb6\xa3" +
	"\x79\x87\xec\x2d\xee\x23\xd1\xce\xdc\xe7\x12\xd7\xc4\x73\x94\x90\x4c\x62\x17\x2f\x5d\xac\x01\xb2\x24\x5a\x48\x94" +
	"\x44\x2f\x53\xa9\x6c\xd2\x4b\x9b\x62\x59\x0e\x75\x73\xbb\xa0\x55\x1c\x2d\x5e\xf4\xbf\x5a\x82\xd1\x4a\x37\xf6\xe2" +
	"\x1c\x55\xaf\xc5\x53\x07\x02\x13\x1e\x14\xff\x6c\xa1\xf3\x96\x1d\x0d\xd0\xa8\x65\x6d\xee\x2f\x34\x7e\x56\x6a\xdf" +
	"\x09\xd0\x71\xb8\xd0\xe2\x74\x09\xf8\x06\x00\x00\xff\xff\xed\x6e\x78\xea\xc6\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaoperatorlogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaoperatorlogyaml,
		"PersistentVolumeClaim/alameda-operator-log.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaoperatorlogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaoperatorlogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-operator-log.yaml",
		size: 198,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1556274557, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedarecommenderdatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\xbd\x6a\x03\x31\x10\xc4\xf1\x5e\x4f\x31\x2f\x70\x81\xa4\x54\x9b" +
	"\x22\x55\x48\x70\x71\xae\x97\xd5\xd8\x08\x9f\x3e\xbc\xab\xbb\xe7\x37\x82\x73\x39\xc3\x8f\xbf\xf4\xbc\xd2\x3c\xb7" +
	"\x1a\x71\x7c\x86\x47\xae\x29\xe2\x7f\x3e\x3e\x58\xc7\xda\xb6\xbd\xf0\x7b\x93\x5c\x42\xe1\x90\x24\x43\x62\x00\xaa" +
	"\x14\x46\xc8\x26\x85\x49\x16\xa3\xb6\x52\x58\x13\x6d\x99\xe2\xa3\x1f\x7a\x22\xef\xa2\x8c\xb8\x31\xd1\x64\x34\x93" +
	"\x1c\xbc\x53\x67\x43\x54\xe9\xfe\xdb\x12\x7d\x4e\x60\xc1\x85\x92\xae\x96\x07\xff\xaa\x32\x00\x46\x6f\xbb\xe9\x1b" +
	"\x18\x9f\x3b\x7d\x9c\x0b\xf0\x19\xbc\x33\xe2\xeb\x27\xe3\x15\x00\x00\xff\xff\x58\x9e\x60\xa3\xca\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedarecommenderdatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedarecommenderdatayaml,
		"PersistentVolumeClaim/alameda-recommender-data.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedarecommenderdatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedarecommenderdatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-recommender-data.yaml",
		size: 202,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559611553, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedarecommenderlogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3d\x4e\xc6\x30\x10\x05\x7b\x9f\xe2\x5d\x20\x48\x50\xba\xa5\xa0" +
	"\x42\x20\x8a\x50\xaf\xd6\x8f\xc8\xc2\x7f\xec\x3a\x39\x3f\xb2\x94\xaf\x9c\xd1\x68\x64\xe4\x9d\xe6\xb9\xb7\x88\xeb" +
	"\x39\xfc\xe6\x96\x22\x3e\x97\xf1\xc9\x36\xf7\x5e\xce\xca\xd7\x22\xb9\x86\xca\x29\x49\xa6\xc4\x00\x34\xa9\x8c\x90" +
	"\x22\x95\x49\x36\xa3\xf6\x5a\xd9\x12\x6d\x2b\xfd\x78\x1a\x97\xde\x8d\x0f\x51\x46\xfc\x30\xd1\x64\x76\x93\x1c\x7c" +
	"\x50\xd7\x42\x54\xe9\xfe\xde\x13\x7d\x21\xb0\xe1\x8b\x92\xbe\x2d\x4f\x7e\x34\x65\x00\x8c\xde\x4f\xd3\x47\x60\xfc" +
	"\x3b\xe9\xf3\x26\xc0\xd7\xf0\x60\xc4\xcb\x5b\xc6\x7f\x00\x00\x00\xff\xff\x22\x62\xb1\xa9\xc9\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedarecommenderlogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedarecommenderlogyaml,
		"PersistentVolumeClaim/alameda-recommender-log.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedarecommenderlogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedarecommenderlogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-recommender-log.yaml",
		size: 201,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559611553, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimMyalamedagrafanaPVCyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x3d\x6a\xc4\x30\x14\xc4\xf1\x5e\xa7\x78\x17\xb0\x21\x29\xd5\xa6" +
	"\x48\x15\x12\x52\x78\xeb\x41\x1a\x1b\xb1\xd6\xc7\xbe\x27\x1b\xf6\xf6\x8b\xc0\x5b\xce\xf0\xe3\x8f\x96\x16\xaa\xa5" +
	"\x5a\xbc\x9c\x1f\xee\x9e\x4a\xf4\xf2\x37\x1e\xeb\x2c\x7d\xa9\xfb\x91\xf9\xb5\x23\x65\x97\xd9\x11\xd1\xe1\x9d\x48" +
	"\x41\xa6\x97\xfc\x9c\xb0\x23\x33\x62\xde\x14\x2b\x0a\xa6\x01\xe6\x76\x86\xcb\x58\x43\xa0\x97\x95\x91\x8a\x5e\x15" +
	"\xc9\x59\x63\x18\x09\x84\x40\xb3\x9f\x1a\x69\x63\x8a\x4c\xf2\x4f\xc4\x9b\xa6\xce\xdf\x12\xe8\x44\x94\x56\x0f\x0d" +
	"\x6f\xa0\x7c\x1c\xb4\x7e\x2d\x11\x1b\xc1\x8d\x5e\x3e\xbf\x93\xbc\x02\x00\x00\xff\xff\xa9\x9c\x3a\x4f\xc9\x00\x00" +
	"\x00")

func bindataPersistentVolumeClaimMyalamedagrafanaPVCyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimMyalamedagrafanaPVCyaml,
		"PersistentVolumeClaim/my-alamedagrafanaPVC.yaml",
	)
}



func bindataPersistentVolumeClaimMyalamedagrafanaPVCyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimMyalamedagrafanaPVCyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/my-alamedagrafanaPVC.yaml",
		size: 201,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1556274557, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimMyalamedainfluxdbPVCyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x3b\x6e\xc3\x30\x10\x84\xe1\x9e\xa7\xd8\x4e\x95\x84\xa8\x65\x9b" +
	"\x22\x55\x90\x20\x85\x52\xaf\xc9\x91\xb1\x30\x5f\xe6\x92\x82\x7d\x7b\x83\x80\x5c\xce\xe0\xc3\xcf\x45\x36\x54\x95" +
	"\x9c\x2c\x1d\xab\xb9\x49\xf2\x96\x7e\xc7\xa3\x0d\xa9\x6d\x39\xf4\x88\xcf\xc0\x12\x4d\x44\x63\xcf\x8d\xad\x21\x4a" +
	"\x1c\x61\x29\x3e\x67\x0e\x1c\xe1\x79\x91\xb4\x87\xfe\xf0\x97\x79\x88\xa5\x1c\xee\x44\x5a\xd8\xc1\xd2\x0e\x8f\xca" +
	"\x2d\x57\x16\xa3\x05\x6e\x34\xd8\x39\xa8\x7e\x67\x0f\x1d\x93\x68\xa6\x3f\xb0\xff\xaf\xd2\xf0\x93\x1c\x0c\x51\x85" +
	"\xe6\x5e\xdd\x1b\x54\xdc\x3b\xb4\x9d\x8b\x48\x47\xf0\x0a\x4b\xd3\xfa\xf1\x25\xd3\x2b\x00\x00\xff\xff\x4a\x54\xad" +
	"\xdd\xcc\x00\x00\x00")

func bindataPersistentVolumeClaimMyalamedainfluxdbPVCyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimMyalamedainfluxdbPVCyaml,
		"PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml",
	)
}



func bindataPersistentVolumeClaimMyalamedainfluxdbPVCyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimMyalamedainfluxdbPVCyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml",
		size: 204,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1556274557, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAdmissioncontrollerSVyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x41\xaa\xc3\x30\x0c\x44\xf7\x3e\xc5\x5c\x20\x90\xcf\xcf\xa2\xf8" +
	"\x14\x85\x42\xf7\xaa\x3d\x2d\xa6\x8e\x6d\x24\x91\xf3\x97\xf8\x00\xed\xee\x21\x31\xf3\x46\x46\xb9\x53\xad\xf4\x16" +
	"\x71\xfc\x85\x77\x69\x39\xe2\x46\x3d\x4a\x62\xd8\xe9\x92\xc5\x25\x06\xa0\xca\x83\xd5\x4e\x02\x64\x8c\x08\xc9\x7b" +
	"\xb1\x33\xb8\xa4\xde\x5c\x7b\xad\xd4\x00\x34\xd9\xf9\xf5\x69\x43\x12\x23\x9e\xcc\x54\xf1\xae\x52\x82\x0d\xa6\xb3" +
	"\x79\x74\xf5\xa9\x58\x26\x46\x6c\xdb\xff\x14\xba\xe8\x8b\x7e\x9d\xb7\xcb\xba\xae\x01\x30\x56\x26\xef\xfa\x63\xd1" +
	"\x27\x00\x00\xff\xff\xf4\xe7\x31\xb4\xe0\x00\x00\x00")

func bindataServiceAdmissioncontrollerSVyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAdmissioncontrollerSVyaml,
		"Service/admission-controllerSV.yaml",
	)
}



func bindataServiceAdmissioncontrollerSVyaml() (*asset, error) {
	bytes, err := bindataServiceAdmissioncontrollerSVyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Service/admission-controllerSV.yaml",
		size: 224,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1554685885, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAlamedadatahubSVyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x31\x0e\xc3\x20\x14\x43\x77\x4e\xe1\x0b\x44\x4a\x87\x2c\x5c\xa3" +
	"\x52\x77\x07\xdc\x16\x95\x04\xf4\xa1\x39\x7f\x45\xd4\x35\x9b\x65\x5b\xcf\x66\x4d\x0f\x59\x4b\x65\xf7\x38\x6e\xee" +
	"\x93\xf6\xe8\x71\x97\x1d\x29\xc8\x6d\xea\x8c\xec\xf4\x0e\xc8\x5c\x95\xdb\x50\x00\x6b\xf5\x60\xe6\xa6\xc8\x69\x14" +
	"\xde\xdf\xd5\x01\x3b\x37\x5d\xf9\xad\x32\xc8\xe3\xa9\x28\x63\x2f\xc6\xe4\x5a\x55\x18\xbc\x5a\xac\x9f\xe0\xe9\x4f" +
	"\x78\x59\x0d\xe7\xce\x48\x3c\x96\x79\x5e\x66\x07\x34\x65\x85\x5e\xec\xfa\xc3\x2f\x00\x00\xff\xff\x17\x03\xde\x3c" +
	"\xcd\x00\x00\x00")

func bindataServiceAlamedadatahubSVyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAlamedadatahubSVyaml,
		"Service/alameda-datahubSV.yaml",
	)
}



func bindataServiceAlamedadatahubSVyaml() (*asset, error) {
	bytes, err := bindataServiceAlamedadatahubSVyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Service/alameda-datahubSV.yaml",
		size: 205,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1554175225, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAlamedagrafanaSVyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x31\xaa\xc3\x30\x10\x44\x7b\x9d\x62\x2f\x60\xf0\xe7\x77\x3a\x45" +
	"\x20\x90\x7e\x22\x8d\x8d\x88\x2c\x2d\xab\xc5\xe7\x0f\x56\x95\xc6\xdd\xe3\x15\x6f\x06\x5a\x5e\xb4\x51\x7a\x8b\x72" +
	"\xfe\x85\x4f\x69\x39\xca\x93\x76\x96\xc4\x70\xd0\x91\xe1\x88\x41\xa4\xe2\xcd\x3a\x2e\x12\x81\x6a\x14\x54\x1c\xcc" +
	"\x58\x76\xc3\x86\x86\x20\xd2\x70\xf0\xce\x0f\x45\x62\x94\x8d\x99\x06\xef\x86\x12\x86\x32\x5d\x3d\xed\xe6\x33\xbc" +
	"\x4c\x8c\xf2\xbf\xae\xeb\xdc\x71\xd8\x4e\x7f\xfc\xca\xc1\xca\xe4\xdd\xee\x8f\xc8\x37\x00\x00\xff\xff\x1d\x9d\x3e" +
	"\xc2\xd3\x00\x00\x00")

func bindataServiceAlamedagrafanaSVyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAlamedagrafanaSVyaml,
		"Service/alameda-grafanaSV.yaml",
	)
}



func bindataServiceAlamedagrafanaSVyaml() (*asset, error) {
	bytes, err := bindataServiceAlamedagrafanaSVyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Service/alameda-grafanaSV.yaml",
		size: 211,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1554175225, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAlamedainfluxdbSVyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\x41\x0a\xc2\x30\x14\x44\xf7\x39\xc5\xbf\x40\x41\x37\x52\x72\x0a" +
	"\x41\x70\x3f\x4d\xa6\x12\x4c\x93\xf0\xf3\x2d\x1e\x5f\x9a\x95\x1b\xdd\x3d\x66\xe0\xcd\xa0\xa5\x3b\xb5\xa7\x5a\xbc" +
	"\xec\x67\xf7\x4c\x25\x7a\xb9\x51\xf7\x14\xe8\x36\x1a\x22\x0c\xde\x89\x64\x2c\xcc\xfd\x20\x11\xb4\xe6\x05\x19\x1b" +
	"\x23\xa6\x54\xd6\xfc\x7a\xc7\xc5\x89\x14\x6c\xfc\x59\xf4\x86\x40\x2f\x2b\x23\x15\x56\x15\xc9\xf5\xc6\x70\x18\x5b" +
	"\x55\x1b\xea\x69\xa0\x97\xf9\x34\x5f\xc6\x92\x41\x1f\xb4\xeb\x77\xd8\x99\x19\xac\xea\x9f\x2b\x9f\x00\x00\x00\xff" +
	"\xff\x1e\x34\xee\x61\xd5\x00\x00\x00")

func bindataServiceAlamedainfluxdbSVyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAlamedainfluxdbSVyaml,
		"Service/alameda-influxdbSV.yaml",
	)
}



func bindataServiceAlamedainfluxdbSVyaml() (*asset, error) {
	bytes, err := bindataServiceAlamedainfluxdbSVyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Service/alameda-influxdbSV.yaml",
		size: 213,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1554261951, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAdmissioncontrollerDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\x4b\x6f\xe3\x36\x10\xbe\xfb\x57\x0c\xf6\xb2\x27\x49\xde\xb6\x46" +
	"\x0b\x02\x3d\x68\x23\x2d\x1a\xd4\x4e\x84\xd8\x5d\x60\x4f\xc6\x98\x1a\x45\xc4\x52\x24\x97\xa4\x9c\xea\xdf\x17\xb4" +
	"\x6c\x47\x4a\xfc\x48\x0f\x01\x56\x27\xe1\x1b\x7e\x8f\xe1\x13\x8d\xf8\x4a\xd6\x09\xad\x18\xa0\x31\x2e\xd9\x7e\x9a" +
	"\x7c\x17\xaa\x64\x90\x91\x91\xba\x6b\x48\xf9\x49\x43\x1e\x4b\xf4\xc8\x26\x00\x0a\x1b\x62\x80\x65\x23\x5c\x60\x45" +
	"\x5c\x2b\x6f\xb5\x94\x64\xf7\x45\x67\x90\x13\x83\x8a\x4a\xb2\xe8\xb5\x45\x31\x01\x90\xb8\x21\xe9\x02\x1f\x82\x0d" +
	"\x03\x94\xd8\x50\x89\x3b\x80\xeb\xc6\x68\x45\xca\x9f\xd5\x45\xa5\xb4\x47\x2f\xb4\xda\x6b\x94\xe4\xb8\x15\xc6\xef" +
	"\x72\x67\x54\x09\x45\x0e\x6a\xfd\x04\x5e\x43\xb9\x0b\x0e\xbe\xa6\x73\x72\x00\x9e\x1a\x23\xd1\x53\x8c\xd2\xd4\x18" +
	"\x6b\x43\xca\xd5\xa2\xf2\xb1\xd0\xc9\x13\x0a\x1f\x55\xda\x46\x96\xb0\xec\x18\x7c\xf4\xb6\xa5\x8f\x13\x67\x88\x07" +
	"\x73\x4b\x46\x0a\x8e\x8e\xc1\xa7\x09\x80\x23\x49\xdc\x6b\xdb\xc7\x6a\xd0\xf3\x7a\x3e\xe8\xf5\xd0\xed\xe9\x1c\x87" +
	"\x14\x7b\xf2\x60\x96\xc3\x77\x71\xa6\xc3\x27\x47\x46\x97\xad\x00\x0e\xf9\xfb\x19\x57\x1e\x85\x22\x7b\x64\x47\xd7" +
	"\xed\x00\x44\x83\x8f\xc4\xe0\x47\x8b\x5d\x98\x28\x63\xb5\xa9\xc9\x3b\xaf\x6d\xb2\x5f\xcf\xe8\x99\xdf\x6e\x04\xdb" +
	"\x4e\xe3\x5f\xe3\x3f\xc6\xfc\xa2\x95\xb2\xd0\x52\xf0\x8e\xc1\x6d\x75\xa7\x7d\x61\xc9\x85\x5d\x76\x18\x65\xc9\xe9" +
	"\xd6\x72\x1a\x74\x16\xc0\x1f\x2d\x39\x3f\xc2\x00\xb8\x69\x19\xfc\x36\x6b\x46\x60\x43\x8d\xb6\x1d\x83\xdf\x67\x0b" +
	"\x71\x2c\x90\xda\x3e\x53\x0f\xcd\xde\xa5\x8b\x7c\x59\xa4\x37\xf9\x3a\xfc\x0d\x44\xb6\x28\x5b\xfa\x62\x75\x33\xb6" +
	"\xab\x04\xc9\xf2\x81\xaa\x31\xba\xc7\x0b\xf4\x35\x3b\x2e\x62\x7c\x3c\x0a\x00\xf0\xca\xb8\xb8\xcf\xde\xc9\xf2\x95" +
	"\x55\x3a\x4f\x17\x79\x96\xae\xd3\x6c\x71\xb3\x9a\xaf\xb3\xbc\x98\xdf\x7f\xcb\x7b\xfb\x5d\xef\xef\xd4\xf6\xd5\x20" +
	"\xe9\x2a\xfd\xeb\x9f\xcf\xeb\x34\xcb\x1e\xf2\xe5\xf2\x65\x0a\x06\x1f\x0e\x5b\x2a\xe8\xd6\xed\x26\x1e\xdc\x28\xb1" +
	"\xdb\x72\x36\x9b\x4e\x67\xd3\x0f\xd7\x7c\xf2\xbb\xf4\xf3\xfc\x55\x93\xc7\x53\x7d\x85\xbd\x9a\x2f\xd7\x37\xf9\xc3" +
	"\x6a\xfd\xe5\xf6\x94\x48\x42\x9e\x27\x5e\xba\x88\x93\xf5\x2e\xfc\xc5\xdc\xfa\xb7\x88\x16\x0f\xb7\x5f\xd3\x55\xbe" +
	"\xfe\x3b\xff\xf6\x76\xed\xef\xd4\x5d\xd3\xbe\x49\xff\x47\x5e\x8e\xa3\xb8\x5b\x2d\xdb\x86\x16\xba\x55\xc3\x73\x16" +
	"\x41\x13\x90\x7e\x9d\xc7\x02\x03\x83\x3e\xcc\xa9\x4a\xb8\x45\xef\x95\xec\x18\x54\x28\x1d\x4d\x86\x78\xb8\xb6\x5d" +
	"\x61\xf5\x86\x86\x7b\x8b\xfe\x7d\xbe\xa9\xfa\x8f\xeb\xa6\x41\x55\x8e\xc1\x08\x92\xd6\xd9\x44\x6a\x8e\x32\xd9\x08" +
	"\x95\x5c\xbc\xbb\x7a\x86\x09\x5e\x2f\xb0\x28\xf2\x9d\xa1\x3f\x8f\x79\x06\xe5\x0a\x85\x6c\x2d\xad\x6a\x4b\xae\xd6" +
	"\xb2\x64\xf0\xcb\x74\x50\x16\x4a\x78\x81\x32\x23\x89\xdd\x92\xb8\x56\xa5\x63\x30\x1b\x0c\x30\x64\x85\x2e\x4f\x94" +
	"\xa4\xd8\xd2\x4f\xd4\xfb\x21\xce\xfb\xb7\xde\xef\x31\xc7\xe0\xc5\xbb\x73\xf2\xe1\xd9\x1d\xfd\x28\xbc\x2f\xf8\x48" +
	"\x6f\x22\x48\xfd\x78\x66\xfc\xeb\xad\xe9\x88\x5b\xf2\xc3\x79\xed\x91\xbb\xb3\x0f\x61\xe4\xe5\x81\xee\xc8\x6e\x05" +
	"\xa7\x94\xf3\x70\x38\x2e\xbe\x9b\xe3\xa1\xe7\xd5\x27\xff\x05\x00\x00\xff\xff\x8a\xce\x88\x2d\x8c\x09\x00\x00")

func bindataDeploymentAdmissioncontrollerDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAdmissioncontrollerDMyaml,
		"Deployment/admission-controllerDM.yaml",
	)
}



func bindataDeploymentAdmissioncontrollerDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAdmissioncontrollerDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/admission-controllerDM.yaml",
		size: 2444,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559611553, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedaaiDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\x51\x6f\xd3\x30\x10\xc7\xdf\xfb\x29\x4e\x7b\x4f\x96\x0d\x55\x42" +
	"\x96\x78\x28\xca\x24\x90\x60\xab\xda\xc1\x2b\xba\x3a\xd7\xc6\xc2\xf6\x79\xb6\x13\xc8\xb7\x47\x4e\xdb\x2c\x49\x2b" +
	"\x40\x42\xe4\xf1\xee\xfe\xbf\xfb\xdb\x77\x0e\x3a\xf5\x95\x7c\x50\x6c\x05\xa0\x73\xe1\xb6\xbd\x5b\x7c\x57\xb6\x12" +
	"\x50\x92\xd3\xdc\x19\xb2\x71\x61\x28\x62\x85\x11\xc5\x02\xc0\xa2\x21\x01\xa8\xd1\x50\x85\x19\xaa\x53\x28\x38\x94" +
	"\x24\x60\x4f\x15\x79\x8c\xec\xfb\x84\xc6\x1d\xe9\x90\x54\x90\xe0\x83\xac\x0f\x48\x36\x8e\x2d\xd9\x38\xa3\xa1\xb5" +
	"\x1c\x31\x2a\xb6\x27\x65\x45\x41\x7a\xe5\x62\xef\xb1\xa4\xbd\xb2\x14\xa0\xe6\x1f\x10\x19\xaa\xde\x24\xc4\x9a\x52" +
	"\x03\xad\x64\x2f\x1c\x80\xec\x8e\x6e\x16\xc1\x91\x4c\x34\x4f\x7d\x51\x10\x70\xb7\x00\x08\xa4\x49\x46\xf6\xc7\x3e" +
	"\x06\xa3\xac\x3f\x8d\x2c\x4f\x4d\x1f\xdd\x45\x32\x4e\x63\xa4\x93\x64\x74\x31\xe9\xbb\x72\x39\xe9\xd3\x13\xe8\x35" +
	"\x2c\xc0\xd9\xe1\xf1\x6a\x6c\x44\x65\xc9\x0f\x9a\xec\x02\x9d\x91\x3d\x28\x4b\x03\x53\x19\x3c\x90\x80\x97\x06\xbb" +
	"\x5c\xf1\xad\xf3\xec\x6a\x8a\x21\xb2\xbf\x7d\x15\x89\xb6\xc8\xdf\xe4\x6f\xa7\xa2\x75\xa3\xf5\x9a\xb5\x92\x9d\x80" +
	"\x8f\xfb\x47\x8e\x6b\x4f\x21\x8d\xfd\x5c\xe5\x29\x70\xe3\x25\x8d\x4e\x90\x82\x2f\x0d\x85\x38\x89\x01\x48\xd7\x08" +
	"\xb8\x2f\x8a\xc2\x4c\xc2\x86\x0c\xfb\x4e\xc0\xfd\xb2\xf8\xac\x86\x0c\xd9\xf6\x55\x7d\x3e\xe1\xd3\xfa\x61\xb3\x7a" +
	"\x7e\xda\x7c\x5b\x95\xe5\xe6\x61\xbb\x1d\x71\x5a\xd4\x0d\x09\xb8\x99\x4f\x37\x1f\x6d\x5d\x1e\x5a\x29\x96\x45\xb1" +
	"\x2c\x6e\x2e\xd0\xe5\xea\x79\xf5\xe1\xcb\xfb\xbf\x20\xa7\x99\xd6\xcd\xee\x4f\x60\x4f\x58\xa5\x6d\x0c\x6b\xcf\x3b" +
	"\x12\x30\x22\xd2\x4f\x92\x93\x40\xbf\xf0\x06\xd3\xcb\x9a\x44\x33\x48\xb3\xda\x51\x1e\xea\x79\x22\xcb\x62\xe7\xe8" +
	"\xdd\xd0\x65\x9c\x57\x56\x45\x85\xba\x24\x8d\xdd\x96\x24\xdb\x2a\x08\x58\x8e\x2b\x1c\x79\xc5\xd5\xb5\x9c\x56\x2d" +
	"\xfd\x77\xd7\xe7\x26\xff\x66\xfa\x94\x6a\x59\x37\x66\xbc\x7f\x57\xde\x43\x9a\x59\x96\xf6\x1d\x0f\xf4\xbb\x3a\xcd" +
	"\x87\x59\x59\x20\xdf\x2a\x49\x2b\x29\xb9\xb9\xf8\x1d\x5d\x16\x3c\xce\x1f\xf9\xaf\x00\x00\x00\xff\xff\xee\x38\xb0" +
	"\x51\x44\x05\x00\x00")

func bindataDeploymentAlamedaaiDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedaaiDMyaml,
		"Deployment/alameda-aiDM.yaml",
	)
}



func bindataDeploymentAlamedaaiDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedaaiDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-aiDM.yaml",
		size: 1348,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559611553, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedadatahubDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x41\x6f\xea\x38\x10\xbe\xf3\x2b\xe6\xd6\x53\x08\x68\xd5\x15\xb5" +
	"\xb4\x87\x54\x61\xd5\x4a\x40\x11\x94\xdd\x77\x43\x83\x33\x10\xab\xb6\xc7\xb5\x9d\xb4\xfc\xfb\xa7\xd0\x42\x03\x85" +
	"\xd7\x1e\x9e\xf4\x72\x89\xf4\x79\xbe\x6f\xbe\x19\x8f\x07\x9d\xfa\x8f\x7c\x50\x6c\x05\xa0\x73\x21\xad\xfb\x9d\x27" +
	"\x65\x0b\x01\x39\x39\xcd\x5b\x43\x36\x76\x0c\x45\x2c\x30\xa2\xe8\x00\x58\x34\x24\x00\x35\x1a\x2a\x30\x69\xd0\xb2" +
	"\x5a\xbd\xe3\xc1\xa1\x24\x01\x6b\x2a\xc8\x63\x64\x8f\xaa\x03\xa0\x71\x45\x3a\x34\x54\x68\x32\x1c\xb8\x3b\x40\xb2" +
	"\x71\x6c\xc9\xc6\x73\x92\x68\x2d\x47\x8c\x8a\xed\x3b\xbd\xa0\x20\xbd\x72\x71\xe7\x36\xa7\xb5\xb2\x14\xa0\xe4\x17" +
	"\x88\x0c\xc5\xce\x2e\xc4\x92\x9a\x2c\x5a\xc9\x1d\xf1\x8c\x2a\x40\x24\xe3\x34\x46\xea\xa2\x76\x25\x76\xd9\x91\x0d" +
	"\xa5\x5a\xc7\xae\xe2\xf4\x05\x55\x4c\xd6\xec\x13\x4f\x58\x6c\x05\x5c\x45\x5f\xd1\x55\x27\x38\x92\x8d\x07\x4f\x3b" +
	"\xe9\x20\xa0\xdf\x01\x08\xa4\x49\x46\xf6\x6f\xee\x0c\x46\x59\x8e\x5a\xd5\x1e\xd7\xdb\xb2\xb0\x37\xf0\xce\x6b\x75" +
	"\xb7\xf9\x2e\x75\xb8\xf9\xf4\x91\xfc\xc5\x04\x00\x7b\xc3\x6f\x4d\xb6\x11\x95\x25\x7f\x20\x26\xbf\x4c\x02\xa0\x0c" +
	"\x6e\x48\xc0\x73\x85\xdb\xa6\x29\xce\xb3\x2b\x29\x86\xc8\x3e\x3d\xa1\x24\xd5\x4a\x89\xba\xd7\xfd\xab\x3b\x38\x66" +
	"\x4f\x2b\xad\xa7\xac\x95\xdc\x0a\xb8\x5f\x4f\x38\x4e\x3d\x85\x66\x98\xf6\x51\x9e\x02\x57\x5e\x52\xab\x9a\x06\x7c" +
	"\xae\x28\xc4\x23\x0c\x40\xba\x4a\xc0\x75\xcf\x1c\x81\x86\x0c\xfb\xad\x80\x7e\xaf\x37\x56\x87\x13\xb2\xf5\x07\x77" +
	"\x5f\x66\x36\xca\xc6\xc3\x3c\x5b\xe6\xd9\x63\x76\xb7\xb8\x5d\xde\x4f\xfe\x1d\x2d\x7e\xe4\xb7\xcb\x2c\xcf\x67\xc3" +
	"\xf9\xbc\xa5\x5b\xa3\xae\x48\x40\x19\xa3\x0b\x22\x3d\x54\xab\xec\x5a\x57\xaf\xc5\xaa\xdb\x9a\xed\x6e\xa8\xa5\x18" +
	"\xf4\x06\x7f\x7f\x3f\xdf\x62\x3e\x9c\x4d\xb2\xf1\xf0\x73\x42\x2c\x8c\xb2\xdf\x17\x9a\x66\xf3\xf9\xff\x0f\xb3\xfc" +
	"\x82\x90\xc3\x10\xbe\x14\x9b\xce\x1e\xc6\xc3\xc7\xbb\xe1\x62\xbe\x5c\xcc\x46\x97\x7b\xe0\x3c\x1b\x8a\x25\x55\x21" +
	"\x79\x1a\x84\x8f\xe7\x92\x18\xb6\x2a\xb2\x57\x76\xb3\x6b\xc5\x4d\xef\xa6\xdf\xba\x5d\x2c\x9a\xe7\x19\xa6\x9e\x57" +
	"\xd4\xbe\x4e\x7a\xfd\x98\xcc\xfd\x7c\x1a\x83\xb6\x38\x06\x13\x48\xab\xe0\x53\xcd\x12\x75\xba\x52\x36\x3d\x9d\xd1" +
	"\xb7\x20\xd7\xc8\x9f\x60\x49\x12\xb7\x8e\xfe\x39\x58\x68\x1d\x2b\xab\xa2\x42\x9d\x93\xc6\xed\x9c\x24\xdb\x22\x08" +
	"\xb8\x6e\x05\x38\xf2\x8a\x8b\x33\x47\x5a\xd5\xf4\x67\xeb\xd9\x3b\xf8\x0d\xe5\xd4\xac\x2b\x43\x9f\xd6\xc1\xe9\x3e" +
	"\xd8\xfd\x93\xe6\xd9\xe3\x86\xbe\x8a\xd5\xbc\x39\x09\x0d\xe4\x6b\x25\x29\x93\x92\xab\xf3\x1b\xfe\x73\xd4\xe4\xec" +
	"\x5e\xfa\x19\x00\x00\xff\xff\x14\xd4\xb3\x2d\xa6\x06\x00\x00")

func bindataDeploymentAlamedadatahubDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedadatahubDMyaml,
		"Deployment/alameda-datahubDM.yaml",
	)
}



func bindataDeploymentAlamedadatahubDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedadatahubDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-datahubDM.yaml",
		size: 1702,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559611553, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedaevictionerDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x4d\x4f\xe3\x3a\x14\xdd\xf7\x57\x5c\xb1\x61\x95\xa4\xe8\xbd\xea" +
	"\x3d\x59\x7a\x8b\xf0\x52\x69\x90\xa0\x53\x01\xc3\xb6\xba\x75\x6e\x89\x35\xb6\xaf\xb1\x9d\x30\xf9\xf7\x23\x17\x52" +
	"\x12\x28\x0c\x8b\x91\xc6\xab\xf6\x7e\x9d\x73\xee\x47\xd0\xa9\x3b\xf2\x41\xb1\x15\x80\xce\x85\xa2\x3b\x9b\x7d\x57" +
	"\xb6\x16\x50\x91\xd3\xdc\x1b\xb2\x71\x66\x28\x62\x8d\x11\xc5\x0c\xc0\xa2\x21\x01\xa8\xd1\x50\x8d\x19\x75\x4a\x46" +
	"\xc5\x96\xfc\xb3\x2b\x38\x94\x24\x60\x47\x35\x79\x8c\xec\x51\xcd\x00\x34\x6e\x49\x87\x94\x0d\x09\xe4\x90\xbe\x37" +
	"\x48\x36\x8e\x2d\xd9\xf8\x4e\x55\xb4\x96\x23\xa6\xbf\xcf\x15\x6a\x0a\xd2\x2b\x17\xf7\x9c\x2b\xda\x29\x4b\x01\x1a" +
	"\x7e\x84\xc8\x50\xef\x49\x43\x6c\xe8\x78\x31\x80\x48\xc6\x69\x8c\x94\xa3\x76\x0d\xe6\xec\xc8\x86\x46\xed\x62\xae" +
	"\xb8\x78\x44\x15\xb3\x1d\xfb\xcc\x13\xd6\xbd\x80\xd3\xe8\x5b\x3a\x9d\x05\x47\x32\x41\x7b\x72\x5a\x49\x0c\x02\xce" +
	"\x66\x00\x81\x34\xc9\xc8\xfe\x89\x94\xc1\x28\x9b\xcb\x91\xce\xa9\xd2\x29\x8b\x81\xc3\x73\xea\xa8\xbb\xe9\x7d\xd0" +
	"\xe1\xf4\xf4\x04\xe4\x23\x18\x80\x81\xf9\x53\x9f\x6d\x44\x65\xc9\x1f\x72\xb3\x5f\x41\x01\x28\x83\xf7\x24\xe0\xa1" +
	"\xc5\x3e\x35\xc8\x79\x76\x0d\xc5\x10\xd9\x17\x6f\xb3\xb2\x76\xab\x44\x37\xcf\xff\xca\xff\x9d\x16\x58\xb7\x5a\xaf" +
	"\x59\x2b\xd9\x0b\xb8\xd8\xad\x38\xae\x3d\x85\xb4\x58\x43\x94\xa7\xc0\xad\x97\x34\x92\x95\x8c\x0f\x2d\x85\x38\xb1" +
	"\x01\x48\xd7\x0a\xf8\x7b\x61\x26\x46\x43\x86\x7d\x2f\xe0\x9f\xc5\x95\x3a\x38\xc8\x76\x2f\xa9\x83\xd6\xf2\xb2\xbc" +
	"\x5a\x56\xe5\x66\x79\x77\xf1\xff\xed\xc5\xd7\xd5\xf2\x7a\x53\x95\xb7\xe5\x97\x6f\xe7\x9b\xb2\xaa\xae\x97\x37\x37" +
	"\xa3\xc2\x1d\xea\x96\x04\x9c\x0c\x52\xd3\x94\x9a\x76\x9b\x8f\xb6\x3b\x0f\x9d\x14\x8b\xf9\x7c\x31\x3f\xf9\x0c\xd6" +
	"\xf0\x73\xb3\x5c\x95\xe7\x97\xcb\x23\x58\x69\xe5\x4e\x46\x8d\xc1\x3a\xed\x77\x58\x7b\xde\xd2\xb8\x13\xf4\xe3\x65" +
	"\xb4\xc3\x80\x8d\x41\x5b\x4f\x8d\x19\x14\x6d\xf0\x85\x66\x89\xba\xd8\x2a\x5b\x1c\x19\xf2\x53\x9c\x4b\x08\xaf\x6c" +
	"\x59\x16\x7b\x47\xff\x1d\x58\x8c\xdc\xca\xaa\xa8\x50\x57\xa4\xb1\xbf\x21\xc9\xb6\x0e\x02\x16\xa3\x00\x47\x5e\x71" +
	"\x7d\xc4\xa5\x55\x47\x7f\x5c\xd2\x40\xe2\x37\x28\xea\x58\xb7\x86\xde\x5c\xd5\x91\xb3\xda\x2f\x50\x96\xae\x07\xef" +
	"\xe9\x13\xe1\x9a\xef\x5f\x45\x07\xf2\x9d\x92\x54\x4a\xc9\xed\xbb\x5f\xcc\xb7\x81\xab\xf7\xee\xfc\x67\x00\x00\x00" +
	"\xff\xff\x69\x44\xf4\x37\xff\x05\x00\x00")

func bindataDeploymentAlamedaevictionerDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedaevictionerDMyaml,
		"Deployment/alameda-evictionerDM.yaml",
	)
}



func bindataDeploymentAlamedaevictionerDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedaevictionerDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-evictionerDM.yaml",
		size: 1535,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559611553, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedaexecutorDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x41\x52\xf3\x30\x0c\x85\xf7\x39\x85\x2e\x90\xe4\xef\xfc\x1b\xc6" +
	"\xbb\xce\xb0\xa4\x4c\x57\xec\x55\x47\x4d\x3d\xd8\x96\xb1\xe5\x40\x6e\xcf\x98\xb4\x25\xa1\x04\xd0\xca\x63\xe9\x3d" +
	"\x7f\x4f\xc6\x60\x9e\x28\x26\xc3\x5e\x01\x86\x90\xda\x61\x53\x3d\x1b\xdf\x29\xb8\xa7\x60\x79\x74\xe4\xa5\x72\x24" +
	"\xd8\xa1\xa0\xaa\x00\x3c\x3a\x52\x80\x16\x1d\x75\x58\xd3\x1b\xe9\x2c\x1c\xcf\x8d\x14\x50\x7f\x76\xab\x14\x48\x17" +
	"\x4d\x22\x4b\x5a\x38\x96\x33\x80\x43\xd1\xa7\x07\x3c\x90\x4d\xd3\x05\x94\x97\xbf\xf5\x8c\x14\xac\xd1\x98\x14\x6c" +
	"\x2a\x00\x21\x17\x2c\x0a\x9d\x6d\x66\x50\xa5\xec\xc2\x71\xdd\x13\xe0\x82\xf5\x71\xa6\x38\x18\x4d\x5b\xad\x39\x7b" +
	"\x79\x5c\x0b\x57\x4a\xb3\x17\x34\x9e\xe2\xf5\x91\x7a\x7d\x1b\x53\x19\x87\x3d\x29\x78\xc9\x38\x36\x86\xdb\x10\x39" +
	"\x9c\x48\x92\x70\x6c\xbf\x6a\xea\x7c\x30\x6a\xf8\xd7\xfc\x6f\xee\x96\xf2\x7d\xb6\x76\xcf\xd6\xe8\x51\xc1\xd6\xbe" +
	"\xe2\x98\xae\xfd\x81\x6d\x76\xb4\x2b\xe4\xb3\xe0\xeb\x5c\xb5\x66\x7f\x34\xfd\x6c\x12\xc0\x15\xf5\x1e\xe5\xa4\xa0" +
	"\x25\xd1\x17\xae\xf6\x48\x1d\x45\x14\x8e\x68\xce\x7a\xc3\xbe\x9d\x0c\x9a\xd1\xd9\x85\x49\xca\x87\xc9\xe2\xa6\x3f" +
	"\x21\xce\xe8\x56\xd9\xca\x5f\xd6\x65\x35\xd8\xd3\xef\xd3\x96\xfb\xbf\x0f\xdf\xc4\x9e\x2e\x76\x18\xd4\x22\xc6\x8f" +
	"\xf2\xf7\x00\x00\x00\xff\xff\x51\xd5\x7d\x61\x2a\x03\x00\x00")

func bindataDeploymentAlamedaexecutorDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedaexecutorDMyaml,
		"Deployment/alameda-executorDM.yaml",
	)
}



func bindataDeploymentAlamedaexecutorDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedaexecutorDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-executorDM.yaml",
		size: 810,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559697907, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedagrafanaDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\xb1\x8e\xe3\x36\x10\xed\xfd\x15\x03\x37\xd7\x44\xb2\xf7\xee\xd2" +
	"\xa8\x0b\x6e\x9b\x00\xf1\xc1\x45\x90\x26\x48\x31\x4b\x8d\x4d\x66\x49\x0e\x43\x8e\xbc\x30\x82\xfc\x7b\x20\xad\x2c" +
	"\x4b\xb6\xe8\xb5\x8b\x73\x63\x80\xf3\xde\x9b\x99\x47\x72\x44\x0c\xe6\x0f\x8a\xc9\xb0\xaf\x00\x43\x48\xab\xc3\xd3" +
	"\xe2\xd5\xf8\xba\x82\x67\x0a\x96\x8f\x8e\xbc\x2c\x1c\x09\xd6\x28\x58\x2d\x00\x3c\x3a\xaa\x00\x2d\x3a\xaa\xb1\xd8" +
	"\x47\xdc\xa1\xc7\x7e\x3d\x05\x54\x54\xc1\x8e\x6a\x8a\x28\x1c\xd1\x2c\x00\x2c\xbe\x90\x4d\x2d\x15\xda\x0c\x03\xb7" +
	"\x5b\x50\xec\x02\x7b\xf2\x32\x27\x89\xde\xb3\xa0\x18\xf6\x3d\xbd\xa6\xa4\xa2\x09\xd2\x55\xfb\x4c\x3b\xe3\x29\x81" +
	"\xe6\x37\x10\x86\xba\x2b\x17\x44\x53\x9b\xc5\x1a\xd5\x11\xe1\xac\x06\x20\xe4\x82\x45\xa1\x12\x6d\xd0\x58\x72\x20" +
	"\x9f\xb4\xd9\x49\x69\x78\xf5\x86\x46\x8a\x1d\xc7\x22\x12\xd6\xc7\x0a\x3e\x49\x6c\xe8\xd3\x22\x05\x52\x6d\xee\x48" +
	"\x9d\x64\xaa\xe0\x69\x01\x90\xc8\x92\x12\x8e\xef\x55\x39\x14\xa5\x7f\x1b\x75\x79\xd9\xe9\xa8\xa5\x53\x09\x3d\x73" +
	"\xe4\x6b\xfb\xb3\xf7\x89\x00\x9c\xca\x6a\x7f\xc6\x1b\xf9\xc6\x5e\xd0\x78\x8a\x03\xb9\xe8\x37\x6a\x4f\x22\xfc\x4a" +
	"\x7e\xd0\x34\x0e\xf7\x54\xc1\x12\x6d\x30\x9e\x96\xc3\xba\x62\xe7\xb0\xdd\xf7\x3f\x97\x49\x2f\x7f\x5a\xae\x92\x26" +
	"\x6b\x57\x27\x7e\x99\xf4\xf2\xaf\x01\x7c\x60\xdb\x38\xda\x70\xe3\x65\x54\x6e\x01\xae\x5d\xd9\xa2\xe8\x0a\xde\xf9" +
	"\x43\x0c\xce\xf5\x14\x9d\x60\x31\x8d\x4f\xb9\xad\x29\x89\x9b\xa8\x28\x5d\x29\xcc\xc5\xa6\x6c\x12\xb5\xea\xdd\x5a" +
	"\x85\xc8\x07\xd3\x1e\x6f\xe3\xf7\x37\x65\x43\x64\x47\xa2\xa9\x49\xc5\x19\xb6\x38\x79\x93\xb5\x77\xb4\x29\x23\x77" +
	"\x4f\xd9\xfb\xff\xea\xe7\xf2\x6b\xf9\x65\x0a\xda\x36\xd6\x6e\xd9\x1a\x75\xac\xe0\xd7\xdd\x77\x96\x6d\xa4\xd4\x5e" +
	"\xb6\x13\x2a\x70\x1c\x9b\xdb\xe6\x1c\xea\xd8\x72\x94\x0a\xbe\xac\xd7\xeb\x51\xfc\xd4\x89\x16\x09\x93\xe5\x10\x59" +
	"\x58\xb1\xad\xe0\xf7\x6f\xdb\x21\x12\xa9\xb7\x62\x9c\xc3\x1a\x67\xa6\x59\x01\x54\x68\x2a\xf8\xbc\x5e\xbb\xc9\xaa" +
	"\x23\xc7\xf1\xd8\x05\x36\x66\x14\x89\xf4\x4f\x43\x69\x56\xe3\x29\xa7\xf1\x34\xd1\x98\x3f\x5c\x97\x9b\x7c\xc0\xb8" +
	"\xb2\xe6\x65\xd8\xe8\x1a\x93\x7e\x61\x8c\x75\x5a\x8d\x07\xcc\xd4\x9a\x33\xa8\xf8\x3b\xb1\xcf\x8a\x3f\x78\x82\xee" +
	"\x39\x43\x0f\x25\x39\x55\x79\xab\x85\x8e\x52\x53\x4c\xb0\x18\xfb\x36\xb9\x8f\xf7\x95\x45\x2e\xc8\xf1\xd9\xc4\x0a" +
	"\xfe\xfd\xef\x8a\xdc\x57\xd8\x31\x8b\xd4\x0e\xf5\x3d\x65\x41\x96\xf7\x33\x18\xc5\x7e\x67\xf6\x1b\x0c\xd3\x33\x61" +
	"\x84\xdc\xc5\x31\x29\xe0\x95\x8e\xe7\xa1\x55\x26\x3d\x09\x03\x84\xce\xba\x5c\xfc\xba\xe2\xdc\x6d\xcf\x8f\xa1\x4c" +
	"\xb1\x35\xed\xb0\xb1\xb2\xe1\x9a\x2a\xf8\xfa\x79\x7d\x67\x27\x67\xeb\xcb\x23\x3a\x3b\xdb\xcd\x2d\xcc\xfd\x1d\xcd" +
	"\x8f\xc5\x4c\x37\x57\xb7\xe1\x1d\x77\x67\x53\xca\x36\x49\x28\x6a\x42\x2b\xba\xbc\xb8\x48\xe7\xbe\x3e\x80\xf5\x62" +
	"\x9e\x6b\xfa\x48\xe9\x16\xa6\x97\xd1\x01\x8b\x48\xed\x47\x8c\x7c\xdd\x7d\xfa\xf3\x72\xf7\x60\x7b\xd9\xc3\x03\xb2" +
	"\xf7\x60\xb3\xb2\x45\xef\xd6\x23\xf2\x79\x4e\x3e\xcd\xf0\x4c\x7b\x28\xd1\x0d\x56\x3e\x55\x3f\x86\x93\x42\xfb\x60" +
	"\x5f\x37\x99\xb7\x27\xf9\x0f\x3a\xf2\xd7\x53\x37\x7f\x9f\x3f\xc6\xe6\x26\x79\x0f\x49\x14\x0f\x46\xd1\x2f\x4a\xb5" +
	"\x5f\x8b\xf9\x17\xe0\x25\xea\xfb\xec\xb3\xfc\xff\x00\x00\x00\xff\xff\x5f\x6d\xb4\x24\xde\x0b\x00\x00")

func bindataDeploymentAlamedagrafanaDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedagrafanaDMyaml,
		"Deployment/alameda-grafanaDM.yaml",
	)
}



func bindataDeploymentAlamedagrafanaDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedagrafanaDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-grafanaDM.yaml",
		size: 3038,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1560334147, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedainfluxdbDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x94\xc1\x4e\xe3\x30\x10\x86\xef\x7d\x8a\x11\x7b\xe0\x94\x86\x9e\x56" +
	"\xf2\x2d\xd0\xb0\x44\x0b\x25\x6a\x53\x76\xf7\x54\x4d\x93\x09\xb5\x70\x6c\xcb\x9e\x14\xfa\xf6\x2b\x87\x16\x42\x69" +
	"\x01\xed\xfa\x50\x55\xe3\xf9\xbf\x7f\x26\xb6\x07\xad\xbc\x23\xe7\xa5\xd1\x02\xd0\x5a\x1f\xaf\x47\x83\x07\xa9\x2b" +
	"\x01\x63\xb2\xca\x6c\x1a\xd2\x3c\x68\x88\xb1\x42\x46\x31\x00\xd0\xd8\x90\x00\x54\xd8\x50\x85\x91\xd4\xb5\x6a\x9f" +
	"\xaa\xe5\x76\xc3\x5b\x2c\x49\x40\x4d\x15\x39\x64\xe3\x50\x0e\x00\x14\x2e\x49\xf9\xa0\x85\x60\xf1\x22\xee\x02\xa5" +
	"\x69\xac\xd1\xa4\xf9\x20\x13\xb5\x36\x8c\x2c\x8d\xde\xea\x2b\xf2\xa5\x93\x96\xbb\x7a\xc7\x54\x4b\x4d\x1e\x56\xe6" +
	"\x11\xd8\x40\xd5\x15\x0c\xbc\xa2\x60\xa3\x64\xd9\x09\xa1\x87\x03\x60\x6a\xac\x42\xa6\x21\x2a\xbb\xc2\xa1\xb1\xa4" +
	"\xfd\x4a\xd6\x3c\x94\x26\x7e\x44\xc9\x51\x6d\x5c\xe4\x08\xab\x8d\x80\x53\x76\x2d\x9d\x0e\xbc\xa5\x32\x98\x3b\xea" +
	"\x98\x5e\xc0\x68\x00\xe0\x49\x51\xc9\xc6\x3d\x97\xd5\x20\x97\xab\xeb\x5e\x9f\xfb\xbd\xf6\x9b\xda\xd5\xb0\x95\xf6" +
	"\xbe\x6d\x58\xea\x8b\x14\x80\x5d\x61\x61\x7d\x03\x4f\x65\xeb\x24\x6f\x2e\x8c\x66\x7a\xe2\xd7\x0d\x00\xd7\xea\xc4" +
	"\xcf\x3d\x39\x01\xa3\xb3\xb3\xb3\xed\x4e\x69\x34\xa3\xd4\xe4\x5e\xcc\xa2\xed\xe1\xbe\x71\x09\x4b\x36\x78\xdf\x8b" +
	"\x8b\xd1\xf0\x7b\x84\xca\x4a\x4d\x6f\x53\xf2\x56\xa9\xdc\x28\x59\x6e\x04\x64\xf5\xc4\x70\xee\xc8\x87\x0b\xb4\xcb" +
	"\x22\xbd\x7e\xed\x6c\x67\x97\x4d\x2e\xaf\xe7\xbf\xc7\xe7\x8b\x69\x9a\xdf\x4e\x8b\x6c\xf2\x63\x31\xce\x66\xc9\xf9" +
	"\x75\x3a\x7e\xc9\x05\x58\xa3\x6a\x49\xc0\x49\x38\x94\x93\xe3\x8c\xab\xa2\xc8\xbb\x9f\xd9\x22\x9d\xfc\x3f\xe3\x22" +
	"\x9d\x16\xd9\x65\x76\x91\x14\xe9\x01\x4e\x4c\x5c\xc6\xac\x7c\x6c\x9d\x5c\x23\x53\xf8\x3f\x2c\x1d\x7f\x8d\x9d\x4f" +
	"\xb3\xbb\xa4\x48\x17\x3f\xd3\x3f\x5f\x65\x3f\xd0\xe6\x33\x76\x32\x2f\xae\xfe\xbd\xf5\x64\x7c\x93\x4d\x16\xf3\x59" +
	"\x3a\x3d\xa0\xc5\xaa\x91\xfa\x53\x71\x9e\xcc\x66\xbf\x6e\xa7\x87\xcc\x3b\x80\x45\xef\x3f\x80\x1c\xf1\x6e\x3d\xb9" +
	"\x4f\x54\x1f\x39\x07\xf9\x5b\xe3\xb5\x51\x6d\x43\x37\xa6\xd5\xec\xfb\x77\xb2\x09\x91\x1c\x79\x25\x60\xff\x08\x7a" +
	"\xdc\xc3\x53\x30\x62\xe5\x7b\x49\x61\x8e\xdc\x6a\xb5\x11\x50\xa3\xf2\x74\xc4\x64\x8d\x2e\x56\x72\x19\xbf\x7b\x75" +
	"\xb0\xf7\x1c\xa3\x30\x26\x22\x1f\xc6\xea\x7d\xbf\x16\xdf\x2e\x9f\x51\x7b\x84\xe7\x0e\x8f\xbe\xee\x43\xb8\x77\x39" +
	"\xca\xdc\x1f\x49\xf9\xb0\x77\x4f\xa5\x23\x16\xfd\x22\xbb\xc8\xe4\xa8\xf4\x6f\x00\x00\x00\xff\xff\x94\x54\x36\xb6" +
	"\x88\x06\x00\x00")

func bindataDeploymentAlamedainfluxdbDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedainfluxdbDMyaml,
		"Deployment/alameda-influxdbDM.yaml",
	)
}



func bindataDeploymentAlamedainfluxdbDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedainfluxdbDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-influxdbDM.yaml",
		size: 1672,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1557129813, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedaoperatorDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x0c\x72\xd9\x93\x24\xa7\x45\x80" +
	"\x82\x37\xb5\x72\xd1\x05\x36\x89\x90\xa4\xbd\x06\x63\x6a\x14\x11\x25\x39\x5c\x92\x92\xeb\x7f\x5f\xd0\xb2\xbd\x92" +
	"\x3f\x5a\xa0\x40\x57\x27\x61\xf8\xde\xbc\x99\xe1\xe3\xa0\x53\x7f\x90\x0f\x8a\xad\x00\x74\x2e\x94\xe3\x7d\xf6\xa7" +
	"\xb2\xad\x80\x9a\x9c\xe6\x9d\x21\x1b\x33\x43\x11\x5b\x8c\x28\x32\x00\x8b\x86\x04\xa0\x46\x43\x2d\xe6\xec\xc8\x63" +
	"\x64\x7f\x38\x08\x0e\x25\x09\xe8\xa8\x9d\xc2\xa8\x32\x00\x8d\x1b\xd2\x21\x71\x21\x49\x9c\xc8\xfb\x80\x64\xe3\xd8" +
	"\x92\x8d\x57\x73\xa2\xb5\x1c\x31\x2a\xb6\x07\x7e\x4b\x41\x7a\xe5\xe2\xbe\xde\x9a\x3a\x65\x29\x40\xcf\x5b\x88\x0c" +
	"\xed\xbe\x60\x88\x3d\x25\x19\xad\xe4\x9e\x78\x2d\x2d\x40\x24\xe3\x34\x46\x2a\x50\xbb\x1e\x0b\x76\x64\x43\xaf\xba" +
	"\x58\x28\x2e\xb7\xa8\x62\xde\xb1\xcf\x3d\x61\xbb\x13\xf0\x29\xfa\x81\x3e\x65\xc1\x91\x4c\x45\x78\xda\xe7\x0e\x02" +
	"\xee\x33\x80\x40\x9a\x64\x64\x3f\x95\x67\x30\xca\xfe\xcb\xac\xdf\x65\xc7\xf3\x1a\x8e\x15\x1c\x88\xb3\x09\xa7\xef" +
	"\xe6\x94\xd3\xa7\x17\x02\xb7\x25\x00\x8e\x35\x4f\x93\xb6\x11\x95\x25\x7f\x62\xe6\xff\x2c\x03\xa0\x0c\x7e\x90\x80" +
	"\xaf\x03\xee\xd2\x60\x9c\x67\xd7\x53\x0c\x91\x7d\x79\xce\xc9\x87\x8d\x12\xe3\xaa\xf8\xb1\xf8\x69\x49\x6f\x06\xad" +
	"\x1b\xd6\x4a\xee\x04\x7c\xee\x9e\x38\x36\x9e\x42\x32\xd5\x11\xe5\x29\xf0\xe0\x25\xcd\x1a\x4a\xc1\xaf\x03\x85\xb8" +
	"\x88\x01\x48\x37\x08\xb8\x5f\x99\x45\xd0\x90\x61\xbf\x13\xf0\xc3\xea\x51\x9d\x0e\xc8\x8e\xdf\xa8\xc7\x3e\x9f\xaa" +
	"\xc7\xf5\x6b\x53\xfd\xb2\x7e\x4f\x7f\xb3\x24\x23\xea\x81\x7e\xf5\x6c\x96\x72\x9d\x22\xdd\xbe\x50\xb7\x8c\x1e\xe2" +
	"\x0d\xc6\x5e\x9c\xee\xad\x38\xb9\x1f\x00\x2e\x84\x9b\xe7\xfa\x7f\x92\xbc\x90\xaa\xbe\x54\x8f\xeb\xba\x7a\x7f\x6e" +
	"\xd6\x2f\xd5\xdb\xf3\xcb\x7b\x5d\xbd\x55\xbf\xfd\xfe\xf3\x7b\x55\xd7\x2f\xeb\xd7\xd7\xf3\x12\x04\xdc\x1d\xaf\x32" +
	"\x25\xed\x87\x4d\x31\x7b\xbd\x45\x18\xa5\x78\x58\xad\x1e\x56\x77\x27\xe2\xc8\x7a\x30\xf4\xc8\x83\x9d\x5f\xcf\x51" +
	"\xdf\x71\xab\x6c\xc7\x33\x19\x93\x90\x53\xe9\x25\x45\x59\x5e\x22\xd2\x3b\x7b\xb6\x7a\x27\xa0\x43\x1d\x28\x9b\xc7" +
	"\xd3\x03\x0f\x8d\xe7\x0d\xcd\x47\x42\x7f\x7d\xf3\xf5\xf4\x49\x36\x06\x6d\xbb\x0c\xe6\x50\x0e\xc1\x97\x9a\x25\xea" +
	"\x72\xa3\x6c\x69\xd0\xe2\x07\xf9\x33\x50\x9e\x9f\x94\x72\x97\xa4\x66\xe7\xca\xaa\xa8\x50\xd7\xa4\x71\xf7\x4a\x92" +
	"\x6d\x1b\x04\x3c\xcc\x00\x1d\x2a\x3d\x78\x7a\xeb\x3d\x85\x9e\x75\x9b\x8c\x38\x3b\x76\xe4\x15\xb7\x57\x98\x5a\x8d" +
	"\xf4\x5d\x7a\x3b\x0a\x7d\xaf\xd6\x26\x7f\x5c\x2c\x99\x8b\x2d\xb3\xf7\x5b\x9e\x96\x09\x7e\xd0\xbf\x82\x35\x7f\xdc" +
	"\xc0\x9e\xfb\xa9\xe5\xad\xdd\xa2\x6f\xab\xe6\xf3\x7c\x62\x2a\x92\x59\xac\x93\x1c\xdc\xde\x94\x77\xd3\x3a\xbd\xfb" +
	"\xcf\xef\x70\xe2\x1f\x80\x81\xfc\xa8\x24\x55\x52\x26\xdb\xdf\xdc\xad\x4b\xd8\xd3\xd5\x35\x9c\x70\xd9\xdf\x01\x00" +
	"\x00\xff\xff\x6f\x3d\xb2\x4b\xa0\x07\x00\x00")

func bindataDeploymentAlamedaoperatorDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedaoperatorDMyaml,
		"Deployment/alameda-operatorDM.yaml",
	)
}



func bindataDeploymentAlamedaoperatorDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedaoperatorDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-operatorDM.yaml",
		size: 1952,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559611553, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedarecommenderDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x31\x6e\xeb\x30\x0c\x86\x77\x9f\x82\x17\xb0\xfd\x82\xb7\x14\xda" +
	"\x0a\x74\x6c\x80\x4c\xdd\x19\x99\x71\x84\x52\xa2\x2a\xd1\x29\x7c\xfb\x42\x70\x9c\xda\x48\xeb\x86\x93\x20\xf1\xff" +
	"\xf0\x51\xc4\xe8\xde\x28\x65\x27\xc1\x00\xc6\x98\xdb\xcb\xae\x7a\x77\xa1\x33\xf0\x42\x91\x65\xf4\x14\xb4\xf2\xa4" +
	"\xd8\xa1\xa2\xa9\x00\x02\x7a\x32\x80\x8c\x9e\x3a\xac\x13\x59\xf1\x9e\x42\x47\xe9\xfa\x96\x23\x5a\x32\x70\xa2\x8e" +
	"\x12\xaa\x24\x74\x55\x8e\x64\x4b\x34\x13\x93\x55\x49\xe5\x0c\xe0\x51\xed\xf9\x15\x8f\xc4\x79\xba\x80\x22\xf0\x1b" +
	"\x3a\x51\x64\x67\x31\x1b\xd8\x55\x00\x4a\x3e\x32\x2a\x5d\x49\x0b\xbd\x52\xbc\x82\x6e\x62\x01\x66\xb9\x52\x56\x82" +
	"\xa2\x0b\x94\x6e\xe1\x7a\x73\xde\xa9\x9c\xc7\x9e\x0c\x7c\x0c\x38\x36\x4e\xda\x98\x24\x9e\x49\xb3\x4a\x6a\x7f\x88" +
	"\xd5\xc3\xd1\x99\xcb\xbf\xe6\x7f\xf3\xb4\x26\x1c\x06\xe6\x83\xb0\xb3\xa3\x81\x67\xfe\xc4\x31\xdf\xde\x2f\xc2\x83" +
	"\xa7\xbd\x0c\x41\x17\x63\x6d\xda\xd5\x56\xc2\xc9\xf5\x8b\x66\x00\x5f\x00\x07\xd4\xb3\x81\x96\xd4\xce\x76\xed\x62" +
	"\x57\xdf\x08\x54\x27\xa1\x9d\x28\x8d\x8a\xe7\x15\x2a\x0f\xc7\x09\x74\xdf\x30\xc9\x2e\x3c\xb7\x2c\xcb\xda\xea\xf2" +
	"\x55\xd8\xd3\x43\x01\x96\x7e\xee\x5f\xfa\xc0\x43\xe1\xbb\x3f\x99\x2e\xf6\x18\xcd\x6a\xba\xbf\x08\x5f\x01\x00\x00" +
	"\xff\xff\xb2\xe8\x1d\x34\x35\x03\x00\x00")

func bindataDeploymentAlamedarecommenderDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedarecommenderDMyaml,
		"Deployment/alameda-recommenderDM.yaml",
	)
}



func bindataDeploymentAlamedarecommenderDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedarecommenderDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-recommenderDM.yaml",
		size: 821,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559611553, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}


//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"CustomResourceDefinition/alamedarecommendationsCRD.yaml": bindataCustomResourceDefinitionAlamedarecommendationsCRDyaml,
	"CustomResourceDefinition/alamedascalersCRD.yaml":         bindataCustomResourceDefinitionAlamedascalersCRDyaml,
	"CustomResourceDefinition/alamedascalersV2CRD.yaml":       bindataCustomResourceDefinitionAlamedascalersV2CRDyaml,
	"ClusterRole/admission-controllerCR.yaml":                 bindataClusterRoleAdmissioncontrollerCRyaml,
	"ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml": bindataClusterRoleAggregatealamedaadmineditalamedaCRyaml,
	"ClusterRole/alameda-datahubCR.yaml":                      bindataClusterRoleAlamedadatahubCRyaml,
	"ClusterRole/alameda-evictionerCR.yaml":                   bindataClusterRoleAlamedaevictionerCRyaml,
	"ClusterRole/alameda-executorCR.yaml":                     bindataClusterRoleAlamedaexecutorCRyaml,
	"ClusterRole/alameda-grafanaCR.yaml":                      bindataClusterRoleAlamedagrafanaCRyaml,
	"ClusterRole/alameda-operatorCR.yaml":                     bindataClusterRoleAlamedaoperatorCRyaml,
	"ServiceAccount/admission-controllerSA.yaml":              bindataServiceAccountAdmissioncontrollerSAyaml,
	"ServiceAccount/alameda-aiSA.yaml":                        bindataServiceAccountAlamedaaiSAyaml,
	"ServiceAccount/alameda-datahubSA.yaml":                   bindataServiceAccountAlamedadatahubSAyaml,
	"ServiceAccount/alameda-evictionerSA.yaml":                bindataServiceAccountAlamedaevictionerSAyaml,
	"ServiceAccount/alameda-executorSA.yaml":                  bindataServiceAccountAlamedaexecutorSAyaml,
	"ServiceAccount/alameda-grafanaSA.yaml":                   bindataServiceAccountAlamedagrafanaSAyaml,
	"ServiceAccount/alameda-operatorSA.yaml":                  bindataServiceAccountAlamedaoperatorSAyaml,
	"ClusterRoleBinding/admission-controllerCRB.yaml":         bindataClusterRoleBindingAdmissioncontrollerCRByaml,
	"ClusterRoleBinding/alameda-datahubCRB.yaml":              bindataClusterRoleBindingAlamedadatahubCRByaml,
	"ClusterRoleBinding/alameda-evictionerCRB.yaml":           bindataClusterRoleBindingAlamedaevictionerCRByaml,
	"ClusterRoleBinding/alameda-executorCRB.yaml":             bindataClusterRoleBindingAlamedaexecutorCRByaml,
	"ClusterRoleBinding/alameda-grafanaCRB.yaml":              bindataClusterRoleBindingAlamedagrafanaCRByaml,
	"ClusterRoleBinding/alameda-operatorCRB.yaml":             bindataClusterRoleBindingAlamedaoperatorCRByaml,
	"Secret/admission-controller-tls.yaml":                    bindataSecretAdmissioncontrollertlsyaml,
	"Secret/alameda-influxdb.yaml":                            bindataSecretAlamedainfluxdbyaml,
	"ConfigMap/alameda-executor-config.yaml":                  bindataConfigMapAlamedaexecutorconfigyaml,
	"ConfigMap/alameda-recommender-config.yaml":               bindataConfigMapAlamedarecommenderconfigyaml,
	"ConfigMap/dashboards-config.yaml":                        bindataConfigMapDashboardsconfigyaml,
	"ConfigMap/grafana-datasources.yaml":                      bindataConfigMapGrafanadatasourcesyaml,
	"PersistentVolumeClaim/admission-controller-data.yaml":    bindataPersistentVolumeClaimAdmissioncontrollerdatayaml,
	"PersistentVolumeClaim/admission-controller-log.yaml":     bindataPersistentVolumeClaimAdmissioncontrollerlogyaml,
	"PersistentVolumeClaim/alameda-ai-data.yaml":              bindataPersistentVolumeClaimAlamedaaidatayaml,
	"PersistentVolumeClaim/alameda-ai-log.yaml":               bindataPersistentVolumeClaimAlamedaailogyaml,
	"PersistentVolumeClaim/alameda-datahub-data.yaml":         bindataPersistentVolumeClaimAlamedadatahubdatayaml,
	"PersistentVolumeClaim/alameda-datahub-log.yaml":          bindataPersistentVolumeClaimAlamedadatahublogyaml,
	"PersistentVolumeClaim/alameda-evictioner-data.yaml":      bindataPersistentVolumeClaimAlamedaevictionerdatayaml,
	"PersistentVolumeClaim/alameda-evictioner-log.yaml":       bindataPersistentVolumeClaimAlamedaevictionerlogyaml,
	"PersistentVolumeClaim/alameda-executor-data.yaml":        bindataPersistentVolumeClaimAlamedaexecutordatayaml,
	"PersistentVolumeClaim/alameda-executor-log.yaml":         bindataPersistentVolumeClaimAlamedaexecutorlogyaml,
	"PersistentVolumeClaim/alameda-operator-data.yaml":        bindataPersistentVolumeClaimAlamedaoperatordatayaml,
	"PersistentVolumeClaim/alameda-operator-log.yaml":         bindataPersistentVolumeClaimAlamedaoperatorlogyaml,
	"PersistentVolumeClaim/alameda-recommender-data.yaml":     bindataPersistentVolumeClaimAlamedarecommenderdatayaml,
	"PersistentVolumeClaim/alameda-recommender-log.yaml":      bindataPersistentVolumeClaimAlamedarecommenderlogyaml,
	"PersistentVolumeClaim/my-alamedagrafanaPVC.yaml":         bindataPersistentVolumeClaimMyalamedagrafanaPVCyaml,
	"PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml":        bindataPersistentVolumeClaimMyalamedainfluxdbPVCyaml,
	"Service/admission-controllerSV.yaml":                     bindataServiceAdmissioncontrollerSVyaml,
	"Service/alameda-datahubSV.yaml":                          bindataServiceAlamedadatahubSVyaml,
	"Service/alameda-grafanaSV.yaml":                          bindataServiceAlamedagrafanaSVyaml,
	"Service/alameda-influxdbSV.yaml":                         bindataServiceAlamedainfluxdbSVyaml,
	"Deployment/admission-controllerDM.yaml":                  bindataDeploymentAdmissioncontrollerDMyaml,
	"Deployment/alameda-aiDM.yaml":                            bindataDeploymentAlamedaaiDMyaml,
	"Deployment/alameda-datahubDM.yaml":                       bindataDeploymentAlamedadatahubDMyaml,
	"Deployment/alameda-evictionerDM.yaml":                    bindataDeploymentAlamedaevictionerDMyaml,
	"Deployment/alameda-executorDM.yaml":                      bindataDeploymentAlamedaexecutorDMyaml,
	"Deployment/alameda-grafanaDM.yaml":                       bindataDeploymentAlamedagrafanaDMyaml,
	"Deployment/alameda-influxdbDM.yaml":                      bindataDeploymentAlamedainfluxdbDMyaml,
	"Deployment/alameda-operatorDM.yaml":                      bindataDeploymentAlamedaoperatorDMyaml,
	"Deployment/alameda-recommenderDM.yaml":                   bindataDeploymentAlamedarecommenderDMyaml,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op: "open",
					Path: name,
					Err: os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op: "open",
			Path: name,
			Err: os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}


type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"ClusterRole": {Func: nil, Children: map[string]*bintree{
		"admission-controllerCR.yaml": {Func: bindataClusterRoleAdmissioncontrollerCRyaml, Children: map[string]*bintree{}},
		"aggregate-alameda-admin-edit-alamedaCR.yaml": {Func: bindataClusterRoleAggregatealamedaadmineditalamedaCRyaml, Children: map[string]*bintree{}},
		"alameda-datahubCR.yaml": {Func: bindataClusterRoleAlamedadatahubCRyaml, Children: map[string]*bintree{}},
		"alameda-evictionerCR.yaml": {Func: bindataClusterRoleAlamedaevictionerCRyaml, Children: map[string]*bintree{}},
		"alameda-executorCR.yaml": {Func: bindataClusterRoleAlamedaexecutorCRyaml, Children: map[string]*bintree{}},
		"alameda-grafanaCR.yaml": {Func: bindataClusterRoleAlamedagrafanaCRyaml, Children: map[string]*bintree{}},
		"alameda-operatorCR.yaml": {Func: bindataClusterRoleAlamedaoperatorCRyaml, Children: map[string]*bintree{}},
	}},
	"ClusterRoleBinding": {Func: nil, Children: map[string]*bintree{
		"admission-controllerCRB.yaml": {Func: bindataClusterRoleBindingAdmissioncontrollerCRByaml, Children: map[string]*bintree{}},
		"alameda-datahubCRB.yaml": {Func: bindataClusterRoleBindingAlamedadatahubCRByaml, Children: map[string]*bintree{}},
		"alameda-evictionerCRB.yaml": {Func: bindataClusterRoleBindingAlamedaevictionerCRByaml, Children: map[string]*bintree{}},
		"alameda-executorCRB.yaml": {Func: bindataClusterRoleBindingAlamedaexecutorCRByaml, Children: map[string]*bintree{}},
		"alameda-grafanaCRB.yaml": {Func: bindataClusterRoleBindingAlamedagrafanaCRByaml, Children: map[string]*bintree{}},
		"alameda-operatorCRB.yaml": {Func: bindataClusterRoleBindingAlamedaoperatorCRByaml, Children: map[string]*bintree{}},
	}},
	"ConfigMap": {Func: nil, Children: map[string]*bintree{
		"alameda-executor-config.yaml": {Func: bindataConfigMapAlamedaexecutorconfigyaml, Children: map[string]*bintree{}},
		"alameda-recommender-config.yaml": {Func: bindataConfigMapAlamedarecommenderconfigyaml, Children: map[string]*bintree{}},
		"dashboards-config.yaml": {Func: bindataConfigMapDashboardsconfigyaml, Children: map[string]*bintree{}},
		"grafana-datasources.yaml": {Func: bindataConfigMapGrafanadatasourcesyaml, Children: map[string]*bintree{}},
	}},
	"CustomResourceDefinition": {Func: nil, Children: map[string]*bintree{
		"alamedarecommendationsCRD.yaml": {Func: bindataCustomResourceDefinitionAlamedarecommendationsCRDyaml, Children: map[string]*bintree{}},
		"alamedascalersCRD.yaml": {Func: bindataCustomResourceDefinitionAlamedascalersCRDyaml, Children: map[string]*bintree{}},
		"alamedascalersV2CRD.yaml": {Func: bindataCustomResourceDefinitionAlamedascalersV2CRDyaml, Children: map[string]*bintree{}},
	}},
	"Deployment": {Func: nil, Children: map[string]*bintree{
		"admission-controllerDM.yaml": {Func: bindataDeploymentAdmissioncontrollerDMyaml, Children: map[string]*bintree{}},
		"alameda-aiDM.yaml": {Func: bindataDeploymentAlamedaaiDMyaml, Children: map[string]*bintree{}},
		"alameda-datahubDM.yaml": {Func: bindataDeploymentAlamedadatahubDMyaml, Children: map[string]*bintree{}},
		"alameda-evictionerDM.yaml": {Func: bindataDeploymentAlamedaevictionerDMyaml, Children: map[string]*bintree{}},
		"alameda-executorDM.yaml": {Func: bindataDeploymentAlamedaexecutorDMyaml, Children: map[string]*bintree{}},
		"alameda-grafanaDM.yaml": {Func: bindataDeploymentAlamedagrafanaDMyaml, Children: map[string]*bintree{}},
		"alameda-influxdbDM.yaml": {Func: bindataDeploymentAlamedainfluxdbDMyaml, Children: map[string]*bintree{}},
		"alameda-operatorDM.yaml": {Func: bindataDeploymentAlamedaoperatorDMyaml, Children: map[string]*bintree{}},
		"alameda-recommenderDM.yaml": {Func: bindataDeploymentAlamedarecommenderDMyaml, Children: map[string]*bintree{}},
	}},
	"PersistentVolumeClaim": {Func: nil, Children: map[string]*bintree{
		"admission-controller-data.yaml": {Func: bindataPersistentVolumeClaimAdmissioncontrollerdatayaml, Children: map[string]*bintree{}},
		"admission-controller-log.yaml": {Func: bindataPersistentVolumeClaimAdmissioncontrollerlogyaml, Children: map[string]*bintree{}},
		"alameda-ai-data.yaml": {Func: bindataPersistentVolumeClaimAlamedaaidatayaml, Children: map[string]*bintree{}},
		"alameda-ai-log.yaml": {Func: bindataPersistentVolumeClaimAlamedaailogyaml, Children: map[string]*bintree{}},
		"alameda-datahub-data.yaml": {Func: bindataPersistentVolumeClaimAlamedadatahubdatayaml, Children: map[string]*bintree{}},
		"alameda-datahub-log.yaml": {Func: bindataPersistentVolumeClaimAlamedadatahublogyaml, Children: map[string]*bintree{}},
		"alameda-evictioner-data.yaml": {Func: bindataPersistentVolumeClaimAlamedaevictionerdatayaml, Children: map[string]*bintree{}},
		"alameda-evictioner-log.yaml": {Func: bindataPersistentVolumeClaimAlamedaevictionerlogyaml, Children: map[string]*bintree{}},
		"alameda-executor-data.yaml": {Func: bindataPersistentVolumeClaimAlamedaexecutordatayaml, Children: map[string]*bintree{}},
		"alameda-executor-log.yaml": {Func: bindataPersistentVolumeClaimAlamedaexecutorlogyaml, Children: map[string]*bintree{}},
		"alameda-operator-data.yaml": {Func: bindataPersistentVolumeClaimAlamedaoperatordatayaml, Children: map[string]*bintree{}},
		"alameda-operator-log.yaml": {Func: bindataPersistentVolumeClaimAlamedaoperatorlogyaml, Children: map[string]*bintree{}},
		"alameda-recommender-data.yaml": {Func: bindataPersistentVolumeClaimAlamedarecommenderdatayaml, Children: map[string]*bintree{}},
		"alameda-recommender-log.yaml": {Func: bindataPersistentVolumeClaimAlamedarecommenderlogyaml, Children: map[string]*bintree{}},
		"my-alamedagrafanaPVC.yaml": {Func: bindataPersistentVolumeClaimMyalamedagrafanaPVCyaml, Children: map[string]*bintree{}},
		"my-alamedainfluxdbPVC.yaml": {Func: bindataPersistentVolumeClaimMyalamedainfluxdbPVCyaml, Children: map[string]*bintree{}},
	}},
	"Secret": {Func: nil, Children: map[string]*bintree{
		"admission-controller-tls.yaml": {Func: bindataSecretAdmissioncontrollertlsyaml, Children: map[string]*bintree{}},
		"alameda-influxdb.yaml": {Func: bindataSecretAlamedainfluxdbyaml, Children: map[string]*bintree{}},
	}},
	"Service": {Func: nil, Children: map[string]*bintree{
		"admission-controllerSV.yaml": {Func: bindataServiceAdmissioncontrollerSVyaml, Children: map[string]*bintree{}},
		"alameda-datahubSV.yaml": {Func: bindataServiceAlamedadatahubSVyaml, Children: map[string]*bintree{}},
		"alameda-grafanaSV.yaml": {Func: bindataServiceAlamedagrafanaSVyaml, Children: map[string]*bintree{}},
		"alameda-influxdbSV.yaml": {Func: bindataServiceAlamedainfluxdbSVyaml, Children: map[string]*bintree{}},
	}},
	"ServiceAccount": {Func: nil, Children: map[string]*bintree{
		"admission-controllerSA.yaml": {Func: bindataServiceAccountAdmissioncontrollerSAyaml, Children: map[string]*bintree{}},
		"alameda-aiSA.yaml": {Func: bindataServiceAccountAlamedaaiSAyaml, Children: map[string]*bintree{}},
		"alameda-datahubSA.yaml": {Func: bindataServiceAccountAlamedadatahubSAyaml, Children: map[string]*bintree{}},
		"alameda-evictionerSA.yaml": {Func: bindataServiceAccountAlamedaevictionerSAyaml, Children: map[string]*bintree{}},
		"alameda-executorSA.yaml": {Func: bindataServiceAccountAlamedaexecutorSAyaml, Children: map[string]*bintree{}},
		"alameda-grafanaSA.yaml": {Func: bindataServiceAccountAlamedagrafanaSAyaml, Children: map[string]*bintree{}},
		"alameda-operatorSA.yaml": {Func: bindataServiceAccountAlamedaoperatorSAyaml, Children: map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
