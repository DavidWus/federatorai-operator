// Code generated by go-bindata.
// sources:
// ClusterRole/admission-controllerCR.yaml
// ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml
// ClusterRole/alameda-datahubCR.yaml
// ClusterRole/alameda-evictionerCR.yaml
// ClusterRole/alameda-operatorCR.yaml
// ClusterRoleBinding/admission-controllerCRB.yaml
// ClusterRoleBinding/alameda-datahubCRB.yaml
// ClusterRoleBinding/alameda-evictionerCRB.yaml
// ClusterRoleBinding/alameda-operatorCRB.yaml
// ConfigMap/grafana-datasources.yaml
// CustomResourceDefinition/alamedarecommendationsCRD.yaml
// CustomResourceDefinition/alamedascalersCRD.yaml
// Deployment/admission-controllerDM.yaml
// Deployment/alameda-datahubDM.yaml
// Deployment/alameda-evictionerDM.yaml
// Deployment/alameda-grafanaDM.yaml
// Deployment/alameda-influxdbDM.yaml
// Deployment/alameda-operatorDM.yaml
// PersistentVolumeClaim/my-alamedagrafanaPVC.yaml
// PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml
// Service/admission-controllerSV.yaml
// Service/alameda-datahubSV.yaml
// Service/alameda-grafanaSV.yaml
// Service/alameda-influxdbSV.yaml
// ServiceAccount/admission-controllerSA.yaml
// ServiceAccount/alameda-datahubSA.yaml
// ServiceAccount/alameda-evictionerSA.yaml
// ServiceAccount/alameda-operatorSA.yaml
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _clusterroleAdmissionControllercrYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\x31\x6f\xbc\x30\x0c\xc5\x77\x24\xbe\x43\x74\x3b\xfc\xf5\xdf\x2a\xd6\x0e\xdd\x3b\x74\x37\x89\x01\x8b\x10\x47\xb6\x73\x55\xfb\xe9\x2b\xca\xa9\xb0\x50\xdd\xa9\xd9\x5e\xe4\x97\xdf\x7b\x31\x64\x7a\x43\x51\xe2\xd4\x39\xe9\xc1\xb7\x50\x6c\x62\xa1\x4f\x30\xe2\xd4\xce\x4f\xda\x12\xff\xbb\xfe\xaf\xab\x99\x52\xe8\xdc\x73\x2c\x6a\x28\xaf\x1c\xb1\xae\x16\x34\x08\x60\xd0\xd5\x95\x73\x09\x16\xec\xdc\x80\x01\x05\x8c\x05\xa8\x81\xb0\x90\xae\x4f\x37\x9e\x93\x09\xc7\x88\x52\x57\x52\x22\xea\xb7\xa3\x71\x90\xe9\x45\xb8\xe4\x4d\xaf\xa7\x71\x97\x1f\x9b\xe0\x48\x6a\x72\x4c\x72\xd9\xe6\x04\x95\x8b\x78\x3c\xfa\x96\x62\x60\x94\xc6\x77\xec\x27\xe6\xd9\x73\x1a\x68\x2c\x9b\x5b\xb7\xb1\x2b\x4a\x7f\xb4\x8c\x68\xbb\xf0\x82\x60\xb8\xeb\x92\xc3\x4d\x9f\xe4\xfc\x25\x4b\xe6\x70\x0f\x32\x92\x1e\x54\x06\xf3\xd3\x39\x0f\x72\xd6\x73\xa2\x60\x8e\xe4\x41\xd1\x74\xbf\x0c\x98\x23\x7f\x2c\x98\xec\x91\x34\x8f\xd7\xbd\xc1\xd7\x9f\xde\x37\xfd\x77\xe4\xda\xb8\xe5\x8c\x49\x27\x1a\xac\x25\x3e\x4f\xb0\x37\xdd\xf6\x7e\x2f\xfc\x2b\x00\x00\xff\xff\xb5\x2b\xfb\x62\xff\x02\x00\x00")

func clusterroleAdmissionControllercrYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleAdmissionControllercrYaml,
		"ClusterRole/admission-controllerCR.yaml",
	)
}

func clusterroleAdmissionControllercrYaml() (*asset, error) {
	bytes, err := clusterroleAdmissionControllercrYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole/admission-controllerCR.yaml", size: 767, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleAggregateAlamedaAdminEditAlamedacrYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\xbf\x6a\x33\x31\x10\xc4\x7b\xc3\xbd\x83\x70\x7f\xf7\xf1\x75\xe1\xda\x14\xe9\x53\xa4\x9f\x93\x86\xf3\x62\xfd\x39\x56\x2b\x07\xf2\xf4\x41\xbe\xd8\xee\x42\x02\xe9\x7e\xec\xce\xec\x8c\x84\x4d\xde\xa8\x55\x4a\x9e\x9d\x2e\xf0\x13\x9a\x9d\x8a\xca\x07\x4c\x4a\x9e\xce\x4f\x75\x92\xf2\xef\xf2\x7f\x38\x9c\x25\x87\xd9\x3d\xc7\x56\x8d\xfa\x5a\x22\x87\x43\xa2\x21\xc0\x30\x0f\x07\xe7\x32\x12\x67\x87\x75\x55\xae\x30\x8e\x88\x48\x0c\x18\x11\x92\xe4\x91\x41\xec\x36\xea\xea\x88\x85\xb1\x5e\x8d\xee\x9b\xe0\xc7\x39\x2b\xfb\xa5\xd9\x1d\x4d\x1b\x8f\xbf\x72\xf6\xf4\x87\x51\x5b\x64\x8f\x1e\x1d\x36\x79\xd1\xd2\xb6\xbd\xc8\xe8\xd0\xac\x54\x8f\x28\x79\x9d\x7c\xc9\x06\xc9\xd4\x3a\x41\xfa\x5a\x59\x4b\x53\xcf\xbb\x78\x7f\x4d\xd7\x53\x6b\x9f\x5d\xa8\xcb\x6d\xbb\xd2\x76\x88\x52\xbf\xc8\x2b\x61\xdc\xb9\x6d\xe1\xce\x81\x91\x9d\xff\xa6\x8f\xd2\x97\x94\x98\xc3\xf5\x3b\x7e\xd2\xeb\x1d\xe6\x4f\x9f\x01\x00\x00\xff\xff\xc6\xe3\x80\x4c\x09\x02\x00\x00")

func clusterroleAggregateAlamedaAdminEditAlamedacrYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleAggregateAlamedaAdminEditAlamedacrYaml,
		"ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml",
	)
}

func clusterroleAggregateAlamedaAdminEditAlamedacrYaml() (*asset, error) {
	bytes, err := clusterroleAggregateAlamedaAdminEditAlamedacrYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml", size: 521, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleAlamedaDatahubcrYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\x31\x4f\xc3\x40\x0c\x85\xf7\x48\xf9\x0f\x56\x99\x13\xc4\x86\xb2\x32\xb0\x22\x06\x76\x37\xf7\xda\x58\xcd\x9d\x0f\xdb\x57\x09\x7e\x3d\x4a\x8b\xaa\x76\xba\xf3\xf3\xd3\xf7\x6c\x73\x95\x2f\x98\x8b\x96\x89\x6c\xcf\xf3\xc8\x2d\x16\x35\xf9\xe5\x10\x2d\xe3\xe9\xd5\x47\xd1\xe7\xf3\x4b\xdf\x9d\xa4\xa4\x89\xde\xd6\xe6\x01\xfb\xd4\x15\x7d\x97\x11\x9c\x38\x78\xea\x3b\xa2\xc2\x19\x13\x1d\x90\x60\x1c\x6a\x2c\x03\xaf\x9c\x91\x78\xd8\x2c\x4b\xdb\xf7\x9d\xb5\x15\x3e\xf5\xdd\x13\x7d\xc0\xb2\xf8\x16\x4b\x07\x35\xfa\x6e\xb0\x1f\xaa\xa6\x19\xb1\xa0\x39\xb5\x92\x60\x17\xa4\x57\x9e\x41\x5a\x51\x7c\x91\x43\x0c\x59\x8b\x84\x9a\x94\x23\xf5\xdd\x40\x5c\xe5\xdd\xb4\x55\x9f\x68\x1b\x62\xa0\xdd\x6e\x7b\x0d\xae\xcd\x66\xdc\xe4\x1b\xca\xb7\xfa\x0c\xdb\xdf\x5a\x47\xc4\x23\xe9\x2a\x73\x0b\xf5\x99\x57\x29\xc7\x71\xd6\x12\x2c\x05\xe6\x23\xcb\x23\xff\xdf\x7c\x5d\xd5\x30\x6b\xce\x28\xe9\x72\xbd\xbb\xa8\xbb\xa4\xed\xd3\x6a\xe2\xc0\x5f\x00\x00\x00\xff\xff\xcf\xba\x16\xbd\x7c\x01\x00\x00")

func clusterroleAlamedaDatahubcrYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleAlamedaDatahubcrYaml,
		"ClusterRole/alameda-datahubCR.yaml",
	)
}

func clusterroleAlamedaDatahubcrYaml() (*asset, error) {
	bytes, err := clusterroleAlamedaDatahubcrYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole/alameda-datahubCR.yaml", size: 380, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleAlamedaEvictionercrYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\xb1\x6a\xc4\x30\x10\x44\x7b\x81\xfe\x41\xb8\x97\x43\xba\xa0\x36\x45\xfa\x14\xe9\xd7\xd6\xe4\x6e\xb1\xac\x15\xab\x95\x8b\xfb\xfa\xc3\x77\xb8\x9a\xc7\x83\x79\xd4\xf8\x0f\xda\x59\x6a\x0a\xba\xd0\x3a\xd3\xb0\xbb\x28\x3f\xc8\x58\xea\xbc\x7d\xf5\x99\xe5\xe3\xf8\xf4\x6e\xe3\x9a\x53\xf8\x2e\xa3\x1b\xf4\x57\x0a\xbc\xdb\x61\x94\xc9\x28\x79\x17\x42\xa5\x1d\x29\xfc\x23\x43\xc9\x44\x89\x23\x15\xda\x91\x29\xe2\xe0\xf5\xac\x41\xbd\xd3\x51\xd0\x93\x77\x31\x50\xe3\x1f\x95\xd1\xfa\xeb\x1d\xc3\x34\x9d\xab\xe8\x32\x74\xc5\x65\x9b\xe4\x7e\xd2\x01\x5d\x2e\x77\x83\xbd\x21\xa3\xc0\xf0\x0c\x00\x00\xff\xff\x3e\x0a\xb4\xb7\xc3\x00\x00\x00")

func clusterroleAlamedaEvictionercrYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleAlamedaEvictionercrYaml,
		"ClusterRole/alameda-evictionerCR.yaml",
	)
}

func clusterroleAlamedaEvictionercrYaml() (*asset, error) {
	bytes, err := clusterroleAlamedaEvictionercrYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole/alameda-evictionerCR.yaml", size: 195, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleAlamedaOperatorcrYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\xb1\x6e\xdb\x30\x10\xdd\x0d\xf8\x1f\x88\x74\xb6\x82\x6e\x85\xd7\x0e\x5d\x8b\x0e\xdd\xcf\xe4\x93\x7c\x30\xc5\x63\xef\x48\xa7\xc9\xd7\x17\xb2\x64\x47\x41\x99\x22\x69\x81\x4e\x3e\x9c\x49\xbe\x77\xf7\xde\x13\x65\xfe\x0e\x35\x96\xb4\x77\x7a\x20\xdf\x51\x2d\x47\x51\x7e\xa2\xc2\x92\xba\xd3\x27\xeb\x58\xee\xcf\x1f\xb7\x9b\x13\xa7\xb0\x77\x9f\x63\xb5\x02\xfd\x26\x11\xdb\xcd\x88\x42\x81\x0a\xed\xb7\x1b\xe7\x12\x8d\xd8\xbb\x1e\x01\x4a\x45\x94\x78\x47\x91\x46\x04\xda\x49\x9e\x5b\xdb\x8d\xd6\x08\xdb\x6f\x37\x3b\x47\x99\xbf\xa8\xd4\x6c\x97\xbb\x3b\x77\x77\x37\xfd\x2a\x4c\xaa\x7a\x5c\xbb\x49\x02\x6c\x2e\xb3\x84\xa5\x52\xe4\xc8\xfe\xc2\xcf\x4b\x2a\x2a\x31\x42\x2f\xff\x9d\xa1\x87\xeb\xd5\x01\x65\x2e\x22\xdb\x52\x3d\x50\xf1\xc7\x16\x38\xe5\x6c\x2d\xf8\x05\xc9\x50\x16\xe8\x80\x1c\xe5\x71\x44\x2a\xef\xc0\x9b\x4a\xaf\xa0\x82\xb9\xae\x39\xdc\xea\xfc\x7c\x24\x20\x62\x6a\xb7\xe9\x75\x92\x91\xec\xc8\x7d\xe9\x58\x5a\x5c\x9f\xa9\x79\x49\x3d\x0f\xff\xb6\x90\x5a\xc4\x3c\x45\x4e\x43\x37\xed\x98\x38\x41\xad\x23\x6e\x21\x2f\x32\x4f\xe7\x17\x1d\x6e\x3d\x85\x97\x71\x44\x0a\x17\xb5\xfe\xeb\xce\xfe\x7e\x82\xfb\x9e\x13\x45\x7e\x6a\x98\xea\x4a\xe3\x83\xfb\x0a\x1d\xd9\xa6\xdc\xb8\x5e\xd4\xfd\xa8\xd0\x47\x97\x55\x46\x94\x23\xaa\xb9\x9a\x02\xf4\x92\x09\xcb\xe4\xe1\x6e\xf2\xed\x46\x49\x5c\x44\x39\x0d\xee\x25\x71\xd7\x4e\xc2\xd2\xbe\x3d\xb5\x22\xe5\x56\x6b\x6c\xd9\x86\xf1\xb3\x20\x4d\x24\x6d\x49\x72\x6b\x7a\x5f\xad\xc8\x78\xed\x06\xf4\x9c\xf8\xcf\x72\xb5\x94\x79\x6b\xa4\x0d\x5e\xf1\x7b\x7c\xd6\x4f\xae\x3c\x30\x1b\xa3\x31\x5b\x58\xb6\xaf\x18\xd8\x8a\xae\xbf\x56\x2d\xd4\x33\x45\x9e\x4c\x98\x86\x07\x1c\x8e\x22\xa7\x39\x24\x55\xdb\xc6\x7c\x83\x0b\x5f\x63\xf6\xda\xd4\x7a\xe6\x17\xda\xbd\x0b\xe8\x57\x00\x00\x00\xff\xff\x47\xf1\xf1\x0d\xa6\x05\x00\x00")

func clusterroleAlamedaOperatorcrYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleAlamedaOperatorcrYaml,
		"ClusterRole/alameda-operatorCR.yaml",
	)
}

func clusterroleAlamedaOperatorcrYaml() (*asset, error) {
	bytes, err := clusterroleAlamedaOperatorcrYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole/alameda-operatorCR.yaml", size: 1446, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingAdmissionControllercrbYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8e\x31\x4e\xc0\x30\x0c\x45\xf7\x48\xb9\x43\x2e\xd0\x22\x36\x94\x0d\x18\xd8\x8b\xc4\xee\x26\x2e\x98\xa6\x76\xe4\x38\x1d\x38\x3d\x6a\x45\x07\x04\x42\x62\xfe\xf6\x7b\x0f\x2a\xbd\xa0\x36\x12\x8e\x41\x67\x48\x23\x74\x7b\x13\xa5\x0f\x30\x12\x1e\xd7\xbb\x36\x92\xdc\xec\xb7\xde\xad\xc4\x39\x86\xc7\xd2\x9b\xa1\x4e\x52\xf0\x81\x38\x13\xbf\x7a\xb7\xa1\x41\x06\x83\xe8\x5d\x08\x0c\x1b\xc6\xb0\x60\x46\x05\x13\x05\x1a\x20\x6f\xd4\x0e\xc3\x90\x84\x4d\xa5\x14\x54\xef\x54\x0a\x4e\xb8\x9c\x3f\x50\xe9\x49\xa5\xd7\x3f\x12\x8e\xb3\x1f\x05\xff\xf1\xb5\x3e\xbf\x63\xb2\x76\x0a\x87\x2f\xd6\x33\xea\x4e\x09\xef\x53\x92\xce\x76\x2c\x17\xf0\x77\xc8\xb5\xb7\x0a\xe9\xbb\xf5\x33\x00\x00\xff\xff\xf1\x2b\x30\x0e\x48\x01\x00\x00")

func clusterrolebindingAdmissionControllercrbYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingAdmissionControllercrbYaml,
		"ClusterRoleBinding/admission-controllerCRB.yaml",
	)
}

func clusterrolebindingAdmissionControllercrbYaml() (*asset, error) {
	bytes, err := clusterrolebindingAdmissionControllercrbYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding/admission-controllerCRB.yaml", size: 328, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingAlamedaDatahubcrbYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\xb1\x6a\xc3\x30\x10\xc6\xf1\x5d\xa0\x77\xd0\x0b\xd8\xa5\x5b\xd1\xd6\x76\xe8\xee\x42\xf7\xb3\x74\xae\xaf\x96\x75\xe2\x74\xf2\xd0\xa7\x0f\x4e\x02\x21\x18\x42\xe6\xfb\xdf\xf7\x83\x42\x3f\x28\x95\x38\x7b\x27\x23\x84\x1e\x9a\xce\x2c\xf4\x0f\x4a\x9c\xfb\xe5\xad\xf6\xc4\x2f\xdb\xab\x35\x0b\xe5\xe8\xdd\x67\x6a\x55\x51\x06\x4e\xf8\x41\x39\x52\xfe\xb5\x66\x45\x85\x08\x0a\xde\x1a\xe7\x32\xac\xe8\xdd\x84\x11\x05\x94\x05\xa8\x83\x04\x2b\x46\xe8\xf6\x64\x6e\xa3\x35\xc2\x09\x07\x9c\xce\x39\x14\xfa\x12\x6e\xe5\x81\xbe\x67\x07\xfc\x49\xaa\xb6\xf1\x0f\x83\x56\x6f\x4d\x77\x1d\xf9\x46\xd9\x28\xe0\x7b\x08\xdc\xb2\xde\x76\x0e\xbf\x97\x43\x2d\x10\xee\x95\x53\x00\x00\x00\xff\xff\x4c\xd6\xf1\xee\x33\x01\x00\x00")

func clusterrolebindingAlamedaDatahubcrbYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingAlamedaDatahubcrbYaml,
		"ClusterRoleBinding/alameda-datahubCRB.yaml",
	)
}

func clusterrolebindingAlamedaDatahubcrbYaml() (*asset, error) {
	bytes, err := clusterrolebindingAlamedaDatahubcrbYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding/alameda-datahubCRB.yaml", size: 307, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingAlamedaEvictionercrbYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\x31\x6e\xc3\x30\x0c\x45\x77\x01\xba\x83\x2e\x60\x17\xdd\x0a\x6d\x6d\x87\xee\x2e\xd0\x9d\x96\xe8\x86\xb1\x2c\x0a\x14\xe5\x21\xa7\x0f\x9c\x04\x08\x82\x04\x41\x66\xf2\xbd\xf7\xa1\xd0\x1f\x4a\x25\xce\xde\xc9\x08\xa1\x87\xa6\x3b\x16\x3a\x80\x12\xe7\x7e\xfe\xa8\x3d\xf1\xdb\xfa\x6e\xcd\x4c\x39\x7a\xf7\x9d\x5a\x55\x94\x81\x13\x7e\x51\x8e\x94\xff\xad\x59\x50\x21\x82\x82\xb7\xc6\xb9\x0c\x0b\x7a\x37\x61\x44\x01\x65\x01\xea\x20\xc1\x82\x11\x3a\x5c\x29\x6c\x52\x14\x6b\x84\x13\x0e\x38\x9d\x08\x28\xf4\x23\xdc\xca\x93\x01\xdb\xdb\x5d\xff\xf5\x5a\x6d\xe3\x1e\x83\x56\x6f\x4d\x77\xf1\xfc\xa2\xac\x14\xf0\x33\x04\x6e\x59\xaf\xaa\x47\xf8\xf9\x56\x0b\x84\xdb\xd6\x31\x00\x00\xff\xff\x22\x7a\x42\xcd\x3c\x01\x00\x00")

func clusterrolebindingAlamedaEvictionercrbYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingAlamedaEvictionercrbYaml,
		"ClusterRoleBinding/alameda-evictionerCRB.yaml",
	)
}

func clusterrolebindingAlamedaEvictionercrbYaml() (*asset, error) {
	bytes, err := clusterrolebindingAlamedaEvictionercrbYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding/alameda-evictionerCRB.yaml", size: 316, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingAlamedaOperatorcrbYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\xb1\x6a\xc3\x30\x10\x06\xe0\x5d\xa0\x77\xd0\x0b\xd8\xa5\x5b\xd1\xd6\x76\xe8\xee\x42\xf7\xb3\x74\x6e\x2e\x96\x75\xe2\x74\xf2\x90\xa7\x0f\x89\x03\x21\x18\x42\xd6\xbb\xff\xff\x3f\x28\xf4\x87\x52\x89\xb3\x77\x32\x42\xe8\xa1\xe9\x81\x85\x4e\xa0\xc4\xb9\x9f\x3f\x6a\x4f\xfc\xb6\xbe\x5b\x33\x53\x8e\xde\x7d\xa7\x56\x15\x65\xe0\x84\x5f\x94\x23\xe5\x7f\x6b\x16\x54\x88\xa0\xe0\xad\x71\x2e\xc3\x82\xde\x4d\x18\x51\x40\x59\x80\x3a\x48\xb0\x60\x84\x8e\xcb\x76\xb2\x46\x38\xe1\x80\xd3\x35\x0f\x85\x7e\x84\x5b\x79\xc2\x5f\x62\x3b\xfd\x55\xab\xb6\xf1\x88\x41\xab\xb7\xa6\xbb\xad\xfc\xa2\xac\x14\xf0\x33\x04\x6e\x59\xef\x43\xfb\xf2\xf6\xa9\x05\xc2\xa3\x73\x0e\x00\x00\xff\xff\x3b\x4d\x10\x29\x36\x01\x00\x00")

func clusterrolebindingAlamedaOperatorcrbYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingAlamedaOperatorcrbYaml,
		"ClusterRoleBinding/alameda-operatorCRB.yaml",
	)
}

func clusterrolebindingAlamedaOperatorcrbYaml() (*asset, error) {
	bytes, err := clusterrolebindingAlamedaOperatorcrbYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding/alameda-operatorCRB.yaml", size: 310, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configmapGrafanaDatasourcesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\x4f\x8f\xda\x30\x10\xc5\xef\x91\xf2\x1d\x46\x3e\xf3\xa7\x5c\x2a\xe4\x5b\x5b\x2e\x1c\xaa\x1e\x2a\x71\xa9\xaa\x6a\x88\x27\xe0\xe2\xd8\xd6\x8c\x43\x89\xba\x7c\xf7\x95\x61\x09\x2c\xeb\x5c\x12\xcf\xfc\xde\xf3\x9b\x09\x46\xbb\x21\x16\x1b\xbc\x86\xe3\xa2\xae\x0e\xd6\x1b\x0d\xdf\x82\x6f\xed\xee\x3b\xc6\xba\xea\x28\xa1\xc1\x84\xba\xae\x00\x3c\x76\xa4\x61\xc7\xd8\xa2\xc7\x69\x2e\x4b\xe8\xb9\x21\xb9\x35\x25\x62\x43\x1a\x5a\x32\xc4\x98\x02\xa3\xad\xab\x51\x1d\x39\x74\x94\xf6\xd4\xcb\x6c\xc0\xce\x69\x78\x99\xe6\x32\xc0\xff\xeb\x2b\x3f\xea\x1e\x48\x69\x58\x4c\x1e\x3a\x0f\xd7\x29\x0d\xbf\xee\x9d\x27\x8b\x51\x10\x78\xb7\x36\x4f\x2e\x63\x33\xa7\x55\x1a\xd4\xda\xb7\xae\x3f\xad\xbe\xaa\xc9\x33\x02\x50\x90\xa5\x21\x5e\x64\xf6\x22\x33\x5b\x55\xf2\xc6\xa6\x21\xc9\x21\x55\xe4\x70\x1a\x8a\x4c\xcf\x2e\x03\xfb\x94\xa2\xe8\xf9\x1c\x1d\x76\x64\x70\x7a\xf3\x9d\x3d\xac\x70\x26\xc7\x46\x2f\x3f\x2d\x3f\x17\x8d\x22\x8a\xfc\x0b\x9c\x07\x55\x68\x3a\xeb\x73\xa1\x7c\xa5\x10\x8f\x54\x91\xc8\x2b\xde\xa2\x5c\x26\xfc\x63\x7d\x22\xf6\xe8\x8a\xe4\x16\xc5\x36\x5f\xfa\xb4\x57\x1a\x5a\x74\x42\x25\xc8\xca\x8a\x5a\xec\x5d\x52\x1a\x12\xf7\x45\xe6\xaf\x04\xbf\xc2\x84\x4a\x97\xfe\x61\xde\xb8\x93\x9f\x07\x1b\x37\xc4\xb6\x1d\xde\x8c\x3e\x82\xe7\x92\x37\x13\x9a\x1f\xde\x0d\xb7\x8c\xef\x91\xf3\xfd\xf8\xfb\xfa\x79\xbe\x9e\x5e\x03\x00\x00\xff\xff\x85\x43\xb9\xc1\x14\x03\x00\x00")

func configmapGrafanaDatasourcesYamlBytes() ([]byte, error) {
	return bindataRead(
		_configmapGrafanaDatasourcesYaml,
		"ConfigMap/grafana-datasources.yaml",
	)
}

func configmapGrafanaDatasourcesYaml() (*asset, error) {
	bytes, err := configmapGrafanaDatasourcesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ConfigMap/grafana-datasources.yaml", size: 788, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _customresourcedefinitionAlamedarecommendationscrdYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4d\x8f\x13\x31\x0c\xbd\x57\xea\x7f\xb0\x7a\xef\x40\xc5\x05\xcd\x6d\x05\x17\x2e\x2b\xb4\x48\x7b\x41\x1c\xdc\xc4\x74\xc3\x26\x71\x70\x3c\x15\xfb\xef\x51\x92\xce\x4e\x4b\xa7\xc3\xfa\x34\xf3\xfc\xe2\xe7\x4f\x4c\xee\x91\x24\x3b\x8e\x3d\x60\x72\xf4\x47\x29\x96\xbf\xdc\x3d\x7f\xcc\x9d\xe3\x77\xc7\xdd\x9e\x14\x77\xeb\xd5\xb3\x8b\xb6\x87\x4f\x43\x56\x0e\x0f\x94\x79\x10\x43\x9f\xe9\xa7\x8b\x4e\x1d\xc7\xf5\x2a\x90\xa2\x45\xc5\x7e\xbd\x02\xf0\xb8\x27\x9f\xeb\x27\x80\xe1\xa8\xc2\xde\x93\x6c\x95\xd9\x8f\xa1\x7b\xd8\xec\xba\xf7\x9b\xc2\x89\x18\xa8\x07\xf4\x18\xc8\xa2\x90\xe1\x10\x28\x5a\xd4\x9a\x08\x0e\xca\xd9\xa0\x77\xf1\xd0\x95\x50\xe8\x22\x49\xee\xd0\xad\x57\x39\x91\xa9\x22\x07\xe1\x21\xf5\xb0\x40\x6d\x22\x63\x4a\xad\x98\xbb\x26\xf8\x70\x21\xd8\x08\xc9\x0f\x82\xfe\x56\x4e\x85\x93\x0d\x27\xea\xe1\xbe\x44\x4d\x68\xc8\x16\xf0\x88\xde\x35\xce\x49\x88\x13\xc5\xbb\xaf\x5f\x1e\x3f\x7c\x33\x4f\x14\xf0\x84\x02\x24\xe1\x44\xa2\xee\x35\xa3\x62\x67\xc3\x98\x40\x00\x7d\x29\x42\x59\xc5\xc5\xc3\x84\xd7\x12\xfe\x4f\xbb\x18\xcb\x25\x95\xf7\xbf\xc8\xe8\x84\xbf\x76\x73\xb4\xd9\x24\xc7\x89\xb6\xde\xfe\xe3\x00\x70\x4a\xe1\x1a\x5d\x88\xd5\xac\x6e\xc0\x9c\xe3\x56\x5d\x93\xc9\x69\x19\xe7\x03\xdf\x2a\x76\x7a\xfd\x7b\x70\x42\x76\xe6\xf1\xb6\x66\x75\x8d\x2f\x05\x6c\x3e\x14\xc1\x97\x73\xd7\xac\xca\xf6\xac\x8f\x6f\x98\x8e\xa2\x0e\x79\x71\x8c\xc7\xf1\x92\x8f\x3b\xf4\xe9\xa9\x5c\xed\xd9\x2b\x34\x86\x92\x92\xbd\xbf\xba\x83\xcd\xe6\x72\xe9\xdb\xbf\xe1\x68\xeb\x6d\xe7\x1e\xbe\xff\xa8\x2b\xaf\x2c\x64\x4f\x2b\x5a\xd1\xbf\x01\x00\x00\xff\xff\xa6\x65\x21\x8a\x3f\x04\x00\x00")

func customresourcedefinitionAlamedarecommendationscrdYamlBytes() ([]byte, error) {
	return bindataRead(
		_customresourcedefinitionAlamedarecommendationscrdYaml,
		"CustomResourceDefinition/alamedarecommendationsCRD.yaml",
	)
}

func customresourcedefinitionAlamedarecommendationscrdYaml() (*asset, error) {
	bytes, err := customresourcedefinitionAlamedarecommendationscrdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "CustomResourceDefinition/alamedarecommendationsCRD.yaml", size: 1087, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _customresourcedefinitionAlamedascalerscrdYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\xbd\x8e\x2b\x37\x0f\xed\x17\xd8\x77\x20\xfc\x15\xdb\x7c\xb6\xb3\x48\x13\x4c\x11\xe0\xc2\x49\xb1\x08\x72\x11\xec\x06\xb7\x09\x52\xd0\x12\xc7\x66\x56\x22\x15\x89\x63\xc4\x79\xfa\x40\x1a\xff\xdb\x7b\xe1\x00\x51\x35\x3a\x12\x0f\xa9\x43\x52\x1a\x4c\xfc\x85\x72\x61\x95\x0e\x30\x31\xfd\x65\x24\x75\x56\x66\xef\xdf\x95\x19\xeb\x7c\xf3\xbc\x24\xc3\xe7\xc7\x87\x77\x16\xdf\xc1\x62\x28\xa6\xf1\x95\x8a\x0e\xd9\xd1\x0f\xd4\xb3\xb0\xb1\xca\xe3\x43\x24\x43\x8f\x86\x1d\x00\xc0\xe3\x03\x40\xc0\x25\x85\xd2\xd5\x4f\x00\xa7\x62\x59\x43\xa0\x3c\x35\xd5\xb0\xa7\xef\x60\xf2\x3c\xfb\x66\x52\xf7\x08\x46\xea\x00\x03\x46\xf2\x58\x1c\x06\xca\x65\x86\x83\x69\xfd\x66\x59\xcd\x2a\x05\xb2\x34\x98\x1f\x1f\x4a\x22\xd7\xc8\x57\x59\x87\xd4\xc1\x57\xb6\x8e\xe4\xfb\x50\xc6\x83\x7c\x1a\x1d\xbd\x35\x47\xe3\x42\x0a\x43\xc6\x70\x19\x43\x5d\x2b\x4e\x13\x75\xf0\xb9\xb2\x24\x74\xe4\x2b\xb8\xc1\xc0\x1e\xeb\xe1\x77\xc4\x9a\x48\x3e\xfd\xf2\xf2\xe5\xdb\x37\xb7\xa6\x88\x3b\x14\x20\x65\x4d\x94\x8d\x0f\x11\xd4\x71\x22\xfc\x11\x04\xf0\x54\x5c\xe6\xd4\x58\xe1\xfb\xe9\xe9\x12\xc0\x53\x65\x1f\x8d\xc0\x57\xe9\xa9\x80\xad\x09\x36\x23\x46\x1e\x4a\xf3\x0c\xda\x83\xad\xb9\x40\xa6\x94\xa9\x90\x18\x8e\x39\x3a\x25\xd3\x1e\x50\x40\x97\x7f\x90\xb3\x19\xbc\x51\xae\x2c\x50\xd6\x3a\x04\x5f\xd3\xb5\xa1\x6c\x90\xc9\xe9\x4a\xf8\xef\x03\x75\x01\xd3\xe6\x33\xa0\x51\xb1\x73\x4a\x16\xa3\x2c\x18\xaa\x34\x03\xfd\x1f\x50\x3c\x44\xdc\x42\xa6\xea\x04\x06\x39\xa1\x6b\x5b\xca\x0c\x7e\xd6\x4c\xc0\xd2\x6b\x07\x6b\xb3\x54\xba\xf9\x7c\xc5\xb6\xaf\x3e\xa7\x31\x0e\xc2\xb6\x9d\xb7\x02\xe2\xe5\x60\x9a\xcb\xdc\xd3\x86\xc2\x1c\x13\x4f\x5b\xa0\x62\xad\x62\xa3\xff\x5f\xde\x15\x66\x79\x3a\x8d\xcc\xb6\x35\x7b\xc5\x32\xcb\xea\x88\xb7\x3a\xb8\x5f\xfb\x9f\x58\x3c\x70\x01\xdc\x11\x8d\x27\x38\x4a\x5c\xa1\x2a\xcc\xeb\x8f\x6f\xbf\xc2\x3e\x8e\x96\x86\x0b\xdd\x9b\xe2\x47\xbb\x72\x14\xbf\x6a\xc5\xd2\x53\x1e\xb3\xd7\x67\x8d\x8d\x92\xc4\x27\x65\xb1\x36\x71\x81\x49\x2e\x84\x2f\xc3\x32\xb2\xd5\x7c\xff\x39\x50\xb1\x9a\xa4\x19\x2c\x50\x44\x0d\x96\x04\x43\xf2\x68\xe4\x67\xf0\x22\xb0\xc0\x48\x61\x81\x85\xfe\x6b\xe9\xab\xc8\x65\x5a\x45\xbd\x47\xfc\xc3\x6d\x71\xbd\x75\x14\xe8\x88\x1f\x1a\x7d\x3f\x6e\xf6\x53\x1d\xee\xec\x72\xba\xd5\x5e\x1f\x07\x54\x07\x09\x2e\x03\x7d\x60\xb0\x54\x0d\x84\x17\x4d\x94\x34\xb0\xdb\x5e\x59\x90\x0c\xf1\x0a\x9c\x42\xb1\xca\x7f\x8d\x3b\x8d\x09\x9d\xdd\x1f\x68\xa1\x40\xce\x34\x5f\xf9\x38\x2b\xe1\xa7\x97\x98\x34\x1b\x8a\x75\xf0\x3a\x08\x4c\x22\xbe\xd3\xa4\x36\x70\xa6\x15\x09\x65\x34\x02\xa7\x9e\x00\x7b\xa3\x0c\x51\x3d\xf7\xdb\xb1\x8e\x6b\xf9\x71\xa0\xa7\xdb\x31\x5d\xa6\x08\x5a\xe5\x71\xa6\xf3\x86\x9a\x1e\x02\x3d\x47\x47\x9d\xef\xc8\xbc\xa1\x0d\xe5\xbe\xdc\xef\x2e\xed\xc5\xe1\x9d\xb9\xd2\xe6\x43\xd3\x51\xb8\x14\x74\x1b\x49\xcc\xa9\xf4\xbc\xba\xb5\xe7\xe3\xd3\x5f\x72\xfc\x7b\xeb\x9b\xfa\x8d\x6a\x9d\xd0\x7e\x6d\x71\x17\xf7\xbd\x09\xbb\xc4\x37\xfb\xbf\x80\xcd\x33\x86\xb4\xae\x2f\xfe\x89\xfc\xe8\x1c\x25\x23\xff\xf9\xea\x1d\x9d\x4c\xce\x1f\xcf\x71\xee\x54\x7c\xfb\x2f\x28\x1d\xfc\xf6\x7b\x7b\x42\x4d\x33\xf9\x5d\x4f\x36\xf4\x9f\x00\x00\x00\xff\xff\xae\x07\x76\xea\x7b\x08\x00\x00")

func customresourcedefinitionAlamedascalerscrdYamlBytes() ([]byte, error) {
	return bindataRead(
		_customresourcedefinitionAlamedascalerscrdYaml,
		"CustomResourceDefinition/alamedascalersCRD.yaml",
	)
}

func customresourcedefinitionAlamedascalerscrdYaml() (*asset, error) {
	bytes, err := customresourcedefinitionAlamedascalerscrdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "CustomResourceDefinition/alamedascalersCRD.yaml", size: 2171, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAdmissionControllerdmYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\x41\x6f\xe2\x3a\x10\xc7\xef\x48\x7c\x87\x51\x2f\x3d\x25\xa1\x7a\x8f\x3e\x3d\xdf\x52\x92\x6a\xab\x05\x8a\x80\xad\xd4\x13\x9a\x3a\x93\x8d\x55\xc7\x4e\x6d\x27\x15\xdf\x7e\x65\x68\x68\xd2\x42\xe9\xfa\x04\x33\xf6\xef\xff\x9f\xc9\xd8\x58\x89\x07\x32\x56\x68\xc5\x00\xab\xca\x46\xcd\xd5\x70\xf0\x2c\x54\xc6\x20\xa1\x4a\xea\x6d\x49\xca\x0d\x07\x25\x39\xcc\xd0\x21\x1b\x0e\x00\x14\x96\xc4\x00\xb3\x52\x58\x7f\x30\xe0\x5a\x39\xa3\xa5\x24\xd3\x66\x6d\x85\x9c\x18\xe4\x94\x91\x41\xa7\x0d\x0a\x9f\x41\xa5\xb4\x43\x27\xb4\xb2\x3b\x0e\x40\x46\x96\x1b\x51\xb9\x9d\x7c\x42\xb9\x50\x64\xa1\xd0\xaf\xe0\x34\x64\x3b\x79\x70\x05\x9d\x94\x02\x70\x54\x56\x12\x1d\x85\x28\xab\x02\x43\x5d\x91\xb2\x85\xc8\x5d\x28\x74\xf4\x8a\xc2\x05\xb9\x36\x81\x21\xcc\xb6\x0c\x2e\x9d\xa9\xe9\x72\x38\xb0\x15\xf1\x9d\xbe\xa1\x4a\x0a\x8e\x96\xc1\x95\xff\x6b\x49\x12\x77\xda\xbc\x79\x2b\xd1\xf1\x62\x8a\x4f\x24\x5b\xb7\xe0\x3b\x74\xba\xf0\xd6\x4b\x7b\xbe\xdb\x32\xbf\xbe\x6e\x9b\x5f\xb2\xaf\x76\x46\x0f\xe0\x50\x89\x5f\x3e\x89\x42\x91\x79\x07\x04\xdf\xd0\x04\x10\x25\xfe\x26\x06\x2f\x35\x6e\x7d\xdb\x2a\xa3\xab\x82\x9c\x75\xda\x44\x28\xb1\xa4\x0c\x83\x77\x80\x29\x48\xb2\x66\x14\xfe\x13\x5e\x7f\x20\x2c\x6a\x29\x17\x5a\x0a\xbe\x65\x70\x97\xcf\xb5\x5b\x18\xb2\xbb\xe1\x69\xb7\x19\xb2\xba\x36\x9c\xba\x15\x02\x48\x51\x0a\xd7\x0f\x01\xf0\xaa\x66\x70\x3d\x2a\xfb\xd1\x92\x4a\x6d\xb6\x0c\xfe\x1f\xcd\x44\x37\x63\xe8\xa5\x26\x7b\x1c\xf2\xef\xf8\x04\xe4\xbf\x71\x17\x42\xaa\xe9\x9c\x6e\x1b\x17\x4f\xe3\x59\x9a\xc4\x9b\x38\x99\x4d\xd6\xd3\x4d\x92\x2e\xa6\xf7\x8f\x69\xb2\x99\xc7\xb3\x74\xb5\x88\x27\x69\x17\xdd\xa0\xac\xe9\xd6\xe8\xf2\x83\x8d\x5c\x90\xcc\x96\x94\x7f\x08\xbf\x25\x16\xe8\x0a\x76\x18\x96\xf0\x70\x7b\xce\x9b\x89\xd7\xf1\x8f\x5f\x37\x9b\x38\x49\x96\xe9\x6a\xf5\xc9\x09\x83\x8b\xf6\xf3\x79\x72\x51\x3f\x85\x9d\xfb\x18\xda\x86\xb3\xf1\x68\x34\x1e\x5d\x9c\x55\x4a\xe7\xf1\xcd\xf4\x73\xa9\x0c\x2e\x73\x94\xd6\x5f\xa9\x33\x80\xf5\x74\xb5\x99\xa4\xcb\xf5\xe6\xf6\xee\x28\x27\x22\xc7\x23\x27\x6d\xc0\xc9\x38\xeb\x7f\x85\xdc\xb8\x6f\x61\x17\xcb\xbb\x87\x78\x9d\x6e\x7e\xa6\x8f\x7f\x41\x7f\xa6\xed\x59\xfa\x24\xfe\xda\x73\x83\x26\x32\xb5\x8a\x2c\x71\x43\xce\x46\xcf\xf5\x13\x19\x45\x8e\xac\xbf\x45\x96\x4c\x23\x38\x21\xe7\xba\x56\xae\xfd\x1b\x70\xec\x57\xd6\x68\x59\x97\x34\xf3\x7b\x6c\x6f\xfe\x4a\x1f\xda\xcf\x46\xdf\x7f\xd7\xca\xde\xf7\xd1\x94\x7f\xf3\xee\x95\xdc\x32\xd8\x7d\xa3\x36\xb5\xd7\xfb\xfc\x42\x1c\x61\xec\xeb\xea\x0d\xed\x3e\x34\x3f\xf9\xa6\x04\x4e\x1e\x00\x6f\x15\xc7\xfb\x06\x7c\xfd\x06\xf5\xf7\x9e\xe6\xff\x09\x00\x00\xff\xff\x0b\xa8\x02\x30\xad\x06\x00\x00")

func deploymentAdmissionControllerdmYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAdmissionControllerdmYaml,
		"Deployment/admission-controllerDM.yaml",
	)
}

func deploymentAdmissionControllerdmYaml() (*asset, error) {
	bytes, err := deploymentAdmissionControllerdmYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment/admission-controllerDM.yaml", size: 1709, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAlamedaDatahubdmYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4d\x4f\xe3\x3c\x10\xbe\x57\xea\x7f\x98\x1b\xa7\xa4\xa9\x5e\x81\xc0\xb7\xa0\xf4\x15\x48\x6d\xa9\x5a\xba\xbb\xb7\x6a\x70\xa6\xc4\xc2\x5f\xd8\x93\xb0\xfd\xf7\xab\x44\x1b\x48\x51\xcb\x8a\xb9\x79\xc6\xcf\x87\x1f\x8d\xd1\xab\x1f\x14\xa2\x72\x56\x00\x7a\x1f\x27\xcd\x74\x3c\x7a\x51\xb6\x14\x50\x90\xd7\xee\x60\xc8\xf2\x78\x64\x88\xb1\x44\x46\x31\x1e\x01\x58\x34\x24\x00\x35\x1a\x2a\x31\x69\xdb\x55\xfd\xd4\x0f\xa2\x47\x49\x02\xf6\x54\x52\x40\x76\x01\x55\x3b\x41\x6b\x1d\x23\x2b\x67\x63\x47\x01\x50\x52\x94\x41\x79\xee\x94\x0b\xda\x2b\x4b\x11\x2a\xf7\x06\xec\xa0\xec\x94\x81\x2b\x6a\x3d\x69\x25\x3b\xe4\x29\x45\x00\x26\xe3\x35\x32\xa5\xa8\x7d\x85\xa9\xf3\x64\x63\xa5\xf6\x9c\x2a\x37\x79\x43\xc5\xc9\xde\x85\x24\x10\x96\x07\x01\x17\x1c\x6a\xba\x18\x8f\xa2\x27\xd9\xd9\x08\xd4\xb1\x47\x01\xd3\xf6\x18\x49\x93\x64\x17\xfe\x5a\x34\xc8\xb2\x9a\xe3\x13\xe9\xde\x34\xb4\x7e\x4e\x3e\xbd\xb7\xd1\x43\x87\x79\xb5\x75\x36\xb3\xb6\xf4\xb1\xc6\x79\x15\x80\x77\xeb\x6d\x49\x67\x19\x95\xa5\xf0\x81\x4d\xbe\x56\x02\x50\x06\x9f\x49\xc0\x6b\x8d\x87\x36\x22\x1f\x9c\xaf\x88\x23\xbb\x30\xf9\x84\x49\x42\x45\x5a\x34\x59\xfa\x5f\x7a\xf5\x09\xbf\xaa\xb5\x5e\x39\xad\xe4\x41\xc0\xfd\x7e\xe9\x78\x15\x28\x76\x8b\xd2\x5f\x0b\x14\x5d\x1d\x24\x0d\x5f\x05\xa0\x95\x51\x7c\xdc\x02\x90\xbe\x16\x30\xcd\x32\x73\xdc\x36\x64\x5c\x38\x08\x98\x5e\x66\x0b\x35\x1c\x05\x7a\xad\x29\x9e\xa6\xb9\x3c\xcb\x92\x1d\xb1\x90\x6d\x06\xf0\x3e\xb4\x7c\x9e\x2f\x66\x45\xbe\x2b\xf2\xc7\xfc\x6e\x7b\xbb\xbb\x5f\xfe\x3f\xdf\xfe\x2a\x6e\x77\x79\x51\xac\x67\x9b\xcd\x90\xba\x41\x5d\x93\x80\x8a\xd9\x47\x31\x79\xcf\x4e\xd9\xbd\xae\x7f\x97\x4f\xe9\xe0\x03\xa4\xb1\x91\xe2\x3a\xbb\xbe\xfa\x86\xe2\x76\x33\x5b\x2f\xf3\xc5\xec\x84\x24\x96\x46\xd9\x6f\x50\xad\xf2\xcd\xe6\xe7\xc3\xba\x38\x47\xe5\x31\xc6\x7f\xd3\xad\xd6\x0f\x8b\xd9\xe3\xdd\x6c\xbb\xd9\x6d\xd7\xf3\x2f\x92\xf0\xc1\x19\xe2\x8a\xea\x98\xbc\x5c\xc7\x8f\x0f\x99\x18\x67\x15\xbb\xa0\xec\x73\x17\xc8\x4d\x76\x33\xed\x69\x22\x85\x46\x49\xca\xa5\x74\xb5\xe5\xb3\xdb\x7b\x7c\x6d\x79\x6a\xd1\xff\x04\x00\x00\xff\xff\x3b\xd3\x5e\x24\xd0\x04\x00\x00")

func deploymentAlamedaDatahubdmYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAlamedaDatahubdmYaml,
		"Deployment/alameda-datahubDM.yaml",
	)
}

func deploymentAlamedaDatahubdmYaml() (*asset, error) {
	bytes, err := deploymentAlamedaDatahubdmYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment/alameda-datahubDM.yaml", size: 1232, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAlamedaEvictionerdmYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xcf\x6e\xdb\x30\x0c\xc6\xef\x01\xf2\x0e\x44\x2f\x3d\xd9\x71\xb1\xa5\xc3\x74\x73\x67\x03\x0b\x90\x66\x41\xdb\xf5\x1a\xb0\x32\x3d\x0b\xd3\xbf\x4a\xb4\x0b\xbf\xfd\x60\x63\xee\x9c\xad\xc9\xaa\x93\x2d\x92\xdf\x8f\xfc\x44\xf4\xea\x91\x42\x54\xce\x0a\x40\xef\xe3\xaa\xbb\x5a\x2e\x7e\x2a\x5b\x09\x28\xc8\x6b\xd7\x1b\xb2\xbc\x5c\x18\x62\xac\x90\x51\x2c\x17\x00\x16\x0d\x09\x40\x8d\x86\x2a\x4c\xa8\x53\x92\x95\xb3\x14\xa6\x58\xf4\x28\x49\x40\x4d\x15\x05\x64\x17\x50\x0d\x11\xb4\xd6\x31\x0e\x99\x71\x54\x01\xa8\x28\xca\xa0\x3c\x8f\xf0\x82\x6a\x65\x29\x42\xe3\x5e\x80\x1d\x54\x23\x1c\xb8\xa1\x13\x20\x00\x26\xe3\x35\x32\xa5\xa8\x7d\x83\xa9\xf3\x64\x63\xa3\x6a\x4e\x95\x5b\xbd\xa0\xe2\xa4\x76\x21\x09\x84\x55\x2f\xe0\x92\x43\x4b\x97\xcb\x45\xf4\x24\x47\x7a\x20\xaf\x95\xc4\x28\xe0\x6a\xf8\x8d\xa4\x49\xb2\x0b\xbf\x3b\x33\xc8\xb2\xd9\xe2\x13\xe9\xa9\x57\x18\xdc\x39\x35\xf4\xd4\xc9\x54\x3d\x37\x6b\x38\xe7\x0c\x1b\x8e\x3e\x26\x9d\x65\x01\xbc\xce\x30\x1c\xe9\x2c\xa3\xb2\x14\xfe\x94\x27\xff\xe5\x01\x28\x83\x3f\x48\xc0\x73\x8b\xfd\x60\x97\x0f\xce\x37\xc4\x91\x5d\x58\xfd\x5b\x96\x84\x86\xb4\xe8\xb2\xf4\x43\x7a\xfd\x97\xc4\xbe\xd5\x7a\xef\xb4\x92\xbd\x80\x4d\xbd\x73\xbc\x0f\x14\xc7\x8d\x99\xd2\x02\x45\xd7\x06\x49\xf3\xf1\x00\xb4\x32\x8a\x8f\xaf\x00\xa4\x6f\x05\x5c\x67\xe6\xf8\xd6\x90\x71\xa1\x17\xf0\x39\xbb\x55\xf3\x48\xa0\xe7\x96\xe2\xdb\x22\x1f\xd7\x27\x44\x3e\xad\xe7\x22\x64\xbb\x59\xf5\xe4\x5b\xbe\xcd\x6f\xcb\x22\x3f\x94\x8f\x9b\x2f\x0f\x9b\x6f\xbb\xf2\xee\x50\xe4\x0f\xf9\xd7\xef\x37\x87\xbc\x28\xee\xca\xfb\xfb\xb9\x76\x87\xba\x25\x01\x17\x93\x6d\xc3\xc3\x37\xed\x53\x3a\xdb\xfe\x34\x76\x52\xac\xb3\x6c\x9d\x5d\xbc\x8b\x36\x7d\x1e\xca\x5d\x7e\xb3\x2d\xdf\xa2\xd5\xa8\x23\xbd\xaa\x45\x0a\x9d\x92\x94\x4b\xe9\x5a\xcb\xe7\x5e\xfe\x38\x73\x77\x62\x4f\x7e\x05\x00\x00\xff\xff\xa3\xd3\x1c\xdf\x15\x04\x00\x00")

func deploymentAlamedaEvictionerdmYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAlamedaEvictionerdmYaml,
		"Deployment/alameda-evictionerDM.yaml",
	)
}

func deploymentAlamedaEvictionerdmYaml() (*asset, error) {
	bytes, err := deploymentAlamedaEvictionerdmYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment/alameda-evictionerDM.yaml", size: 1045, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAlamedaGrafanadmYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x3f\x6f\xdb\x3e\x10\xdd\x0d\xf8\x3b\xdc\x96\x49\x96\x9d\xe4\xb7\x70\xfd\x65\x29\x50\x17\x1a\x8a\xee\x17\xea\x64\x11\x25\x79\xec\xf1\xe4\xc0\x28\xfa\xdd\x0b\x2a\x56\x2c\x25\xae\xdb\x5b\x04\xdd\x9f\xf7\x1e\x1f\x8f\x98\xdc\x37\x92\xec\x38\x1a\xc0\x94\x72\x7d\xdc\xad\x57\xdf\x5d\x6c\x0d\x3c\x51\xf2\x7c\x0a\x14\x75\xbd\x0a\xa4\xd8\xa2\xa2\x59\xaf\x00\x22\x06\x32\x80\x1e\x03\xb5\x58\x1d\x04\x3b\x8c\x38\x15\x72\x42\x4b\x06\x3a\x6a\x49\x50\x59\xd0\x95\x0a\xc6\xc8\x8a\xea\x38\xe6\x11\x02\xa0\xa5\x6c\xc5\x25\x1d\x99\x9f\xa8\x73\x91\x32\xf4\xfc\x02\xca\xd0\x8e\xcc\xa0\x3d\x15\x4d\xde\xd9\x71\x12\x66\x4c\x00\x4a\x21\x79\x54\xda\xa0\x4f\x3d\x6e\x38\x51\xcc\xbd\xeb\x74\xe3\xb8\x7e\x41\xa7\x55\xc7\x52\x09\x61\x7b\x32\x70\xa7\x32\xd0\xdd\x7a\x95\x13\xd9\x91\x5e\x68\x44\xcd\x06\x76\xe5\x37\x93\x27\xab\x2c\x67\x69\x01\xd5\xf6\x9f\xf1\x99\xfc\x24\xb6\x04\xa6\x74\xf5\xd0\x93\x90\x69\x78\xee\x54\x09\xff\xaf\x40\x00\x6f\xfa\x4a\x58\x8e\x8a\x2e\x92\x5c\x66\xab\xb3\xf5\x8b\xa1\x12\x2e\xe0\xe1\x92\xaf\xcf\x5f\xf3\xdf\xe6\x71\xf3\xf0\xae\xab\x19\xbc\x6f\xd8\x3b\x7b\x32\xf0\xa9\xfb\xc2\xda\x08\xe5\xf1\x8e\xa7\xb6\xc4\xa2\x73\xbd\x85\xf7\x4d\x4c\xc3\xa2\x06\x1e\xb6\xdb\xed\xbc\x61\xda\x89\x5e\x35\x2d\xf3\x49\x58\xd9\xb2\x37\xf0\xf5\xff\xe6\x52\x12\xca\x3c\x88\xa5\x25\x8f\x77\xc1\xbd\xa3\x06\xb0\x69\x30\x70\xbf\xdd\x86\x65\x3a\x50\x60\x39\x8d\x95\xbd\x9b\x97\x84\x7e\x0c\x94\xaf\xc3\xec\xfe\x08\xb3\x5b\xc2\x1c\xd9\x0f\x81\xf6\x3c\xc4\x0f\x56\x84\x92\x6c\x50\x7b\x03\xf5\x11\xa5\xf6\xee\xb9\xfe\x70\x21\x17\x4b\xce\xa5\x2a\x97\xb7\x70\xa0\x65\x4b\x1e\x9e\x5f\x91\xae\x00\x2c\x99\x48\xed\xc4\x52\x27\xe1\xa3\x2b\x4f\xd6\xc5\x43\x5d\x76\xed\xec\xe5\x2d\xfa\x2b\x6d\xaf\x67\x9c\x1f\xaf\xfa\xbb\x66\x0a\x49\x4f\x4f\x4e\x0c\xfc\xfc\x35\x1f\xb4\x1c\x3b\x77\xd8\x63\x7a\x67\x7b\x4b\x1d\x0e\x5e\xf7\xdc\x92\x81\xc7\xfb\xab\x5b\x73\x43\xe3\xcd\x26\xf8\x1d\x00\x00\xff\xff\x5e\xfc\x4e\x4a\xbd\x04\x00\x00")

func deploymentAlamedaGrafanadmYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAlamedaGrafanadmYaml,
		"Deployment/alameda-grafanaDM.yaml",
	)
}

func deploymentAlamedaGrafanadmYaml() (*asset, error) {
	bytes, err := deploymentAlamedaGrafanadmYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment/alameda-grafanaDM.yaml", size: 1213, mode: os.FileMode(438), modTime: time.Unix(1553570743, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAlamedaInfluxdbdmYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4f\x4f\xe3\x3a\x10\xbf\x57\xea\x77\x18\xf1\x0e\x9c\xda\xd2\xd3\x93\x7c\x2b\x34\x3c\xa2\x07\x25\xea\x1f\xde\xdb\x53\x35\x4d\x26\xc4\xc2\xb1\x2d\x7b\x52\x88\x56\xfb\xdd\x57\x0e\x64\x49\x4b\x5b\x90\x76\xe7\x50\x35\x9e\xf9\xfd\x19\xdb\x63\xb4\xf2\x81\x9c\x97\x46\x0b\x40\x6b\xfd\x68\x3b\xee\xf7\x9e\xa4\xce\x04\x4c\xc9\x2a\x53\x97\xa4\xb9\xdf\x2b\x89\x31\x43\x46\xd1\xef\x01\x68\x2c\x49\x00\x2a\x2c\x29\xc3\x81\xd4\xb9\xaa\x5e\xb2\x4d\x9b\xf1\x16\x53\x12\x90\x53\x46\x0e\xd9\x38\x94\x21\x83\x5a\x1b\x46\x96\x46\xfb\x86\x03\x20\x23\x9f\x3a\x69\xb9\x91\x9e\x52\x2e\x35\x79\x28\xcc\x33\xb0\x81\xac\x91\x06\x2e\x28\x98\x52\x32\x6d\x90\xd0\x95\x02\x60\x2a\xad\x42\xa6\x21\x2a\x5b\xe0\xd0\x58\xd2\xbe\x90\x39\x0f\xa5\x19\x3d\xa3\xe4\x41\x6e\xdc\xc0\x11\x66\xb5\x80\x73\x76\x15\x9d\xf7\x7b\xde\x52\xda\xe8\x3b\x6a\x68\xbd\x80\x71\xf8\xf4\xa4\x28\x65\xe3\xde\xbc\x95\xc8\x69\x71\x8b\x1b\x52\xad\xdb\x10\x68\xed\xe1\xb6\x5b\x27\x2d\xba\xbb\x59\x21\xd4\x97\x99\x00\x7e\x39\x0c\xf1\x17\x78\x4a\x2b\x27\xb9\xbe\x32\x9a\xe9\x85\x3b\x19\x00\x57\xe9\x89\x5f\x79\x72\x02\xc6\x17\x17\x17\x6d\x2a\x35\x9a\x51\x6a\x72\xef\x8a\x83\xb7\x33\xdb\x95\x0a\x21\x4b\x7c\xec\x24\xc4\x78\xf8\xf7\x00\x95\x95\x9a\xf6\x6a\x92\x4a\xa9\xc4\x28\x99\xd6\x02\xe2\x7c\x66\x38\x71\xe4\x9b\xbb\xd1\x96\x91\xde\x76\x5a\x6c\x25\xe3\xd9\xf5\xed\xea\xff\xe9\xe5\x7a\x1e\x25\xf7\xf3\x65\x3c\xfb\x67\x3d\x8d\x17\x93\xcb\xdb\x68\xfa\x5e\x0c\xb0\x45\x55\x91\x80\xb3\x70\x4e\x67\x27\x58\x6e\x96\xcb\xa4\xf9\x59\xac\xa3\xd9\x9f\x60\xb9\x8a\xe6\xcb\xf8\x3a\xbe\x9a\x2c\xa3\x43\x4c\x23\xe2\x74\xc4\xca\x8f\xac\x93\x5b\x64\x0a\xff\x87\xa9\xe3\x2f\xb2\x27\xf3\xf8\x61\xb2\x8c\xd6\xff\x46\xdf\xbe\xcc\xfe\x44\xf5\xa7\xec\x93\xd5\xf2\xe6\x77\x36\x60\x32\xbd\x8b\x67\xeb\xd5\x22\x9a\x1f\x42\x63\x56\x4a\xfd\x39\x3c\x99\x2c\x16\xff\xdd\xcf\x0f\x1a\x68\x28\x2c\x7a\x7f\x8a\xe6\x98\x7e\xe5\xc9\x7d\x86\x3b\xa9\x1e\x08\xf6\xc4\xb7\x46\x55\x25\xdd\x99\x4a\xb3\xdf\xb9\xa6\x65\x58\x4a\x90\x0b\x01\xfb\xc7\xd1\xa5\xde\x7d\xf4\xc2\x78\x17\xd5\x66\xc0\xca\x77\x8b\xc2\x6b\x73\xaf\x55\x2d\x20\x47\xe5\xe9\x98\xcc\x16\xdd\x48\xc9\xcd\xe8\xe3\x38\xc2\xde\xa0\x0e\x7c\x78\x41\x1f\x77\x9c\xf8\x6a\xf3\xca\xb3\x0f\x7f\x6d\xf1\xf8\xd4\x7f\x24\xa3\xd2\x72\x3d\x95\x4e\xc0\xf7\x1f\xfb\xa8\x93\xad\x7a\x4a\x1d\xb1\xd8\xb1\xd5\x2c\xcd\x8e\x61\x7f\x06\x00\x00\xff\xff\xc4\x49\x1a\x66\x69\x06\x00\x00")

func deploymentAlamedaInfluxdbdmYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAlamedaInfluxdbdmYaml,
		"Deployment/alameda-influxdbDM.yaml",
	)
}

func deploymentAlamedaInfluxdbdmYaml() (*asset, error) {
	bytes, err := deploymentAlamedaInfluxdbdmYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment/alameda-influxdbDM.yaml", size: 1641, mode: os.FileMode(438), modTime: time.Unix(1553578436, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAlamedaOperatordmYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\x4d\x6f\xdb\x3c\x0c\xbe\x07\xc8\x7f\x20\x7a\xe9\x29\x8e\xd3\xf7\xed\x0e\xba\x79\x70\x80\x0d\xe8\x47\x90\x76\xbb\x06\xac\xcc\xcc\xc2\x24\x51\x95\x68\x17\xf9\xf7\x83\xbc\x79\xb3\x8b\x64\xe3\xcd\x24\x9f\x0f\x3f\x14\x06\xf3\x95\x62\x32\xec\x15\x60\x08\x69\xdd\x6f\x96\x8b\xef\xc6\x37\x0a\x6a\x0a\x96\x4f\x8e\xbc\x2c\x17\x8e\x04\x1b\x14\x54\xcb\x05\x80\x47\x47\x0a\xd0\xa2\xa3\x06\x57\x1c\x28\xa2\x70\x1c\x27\x29\xa0\x26\x05\x47\x6a\x7e\xf6\xd1\xe4\x09\x7a\xcf\x82\x62\xd8\xa7\x81\x03\xa0\xa1\xa4\xa3\x09\x32\x48\xd7\x74\x34\x9e\x12\xb4\xfc\x06\xc2\xd0\x0c\xd2\x20\x2d\x65\x53\xd6\xe8\x01\x79\x56\x12\x40\xc8\x05\x8b\x42\x05\xda\xd0\x62\xc1\x81\x7c\x6a\xcd\x51\x0a\xc3\xeb\x37\x34\xb2\x3a\x72\x5c\x45\xc2\xe6\xa4\xe0\x5a\x62\x47\xd7\xcb\x45\x0a\xa4\x07\x1f\x91\x06\xfa\xa4\x60\x93\x3f\x13\x59\xd2\xc2\xf1\x97\x47\x87\xa2\xdb\x3b\x7c\x21\x3b\xba\x86\x6c\xe8\xfc\xcf\x8f\x3e\x46\xec\x34\xb2\x5c\x97\x63\xcb\x65\xe7\x2a\x7f\xd1\x01\xf8\xed\x3e\x97\x66\x2f\x68\x3c\xc5\x3f\xe0\xd5\x3f\xb4\x00\x8c\xc3\x6f\xa4\xe0\xb5\xc3\x53\x8e\x29\x44\x0e\x2d\x49\x12\x8e\xeb\xf7\xa0\x55\x6c\xc9\xaa\xbe\x2c\xfe\x2b\x3e\xbc\x23\xd8\x75\xd6\xee\xd8\x1a\x7d\x52\xf0\xf9\xf8\xc0\xb2\x8b\x94\x86\xf7\x32\xae\x45\x4a\xdc\x45\x4d\xd3\x1f\x03\xb0\xc6\x19\x99\xb7\x00\x74\xe8\x14\xdc\x94\x6e\xde\x75\xe4\x38\x9e\x14\xfc\x5f\xde\x9b\xe9\x24\xd2\x6b\x47\xe9\x3c\xc9\xe6\x12\xc9\xcd\x8c\x84\x7c\x3f\x41\x8f\x99\x55\x77\xd5\xfd\xb6\xae\x0e\x8f\xbb\xed\xbe\x7a\x7e\xdc\x1f\xea\xea\xb9\xfa\xf4\xe5\xe3\xa1\xaa\xeb\xfd\xf6\xe9\x69\xca\xdc\xa3\xed\x48\xc1\xd5\x18\x59\x3e\x77\xdb\xbd\x14\x93\xb7\x5f\xa4\x5e\xab\xdb\xb2\xbc\x2d\xaf\x46\x64\xa2\xd8\x1b\x4d\x95\xd6\xdc\x79\xb9\x7c\xa5\xf9\xde\xc3\xd9\x8b\xe6\xbd\x1f\x01\x00\x00\xff\xff\xb8\x2c\xfd\x0e\xc3\x03\x00\x00")

func deploymentAlamedaOperatordmYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAlamedaOperatordmYaml,
		"Deployment/alameda-operatorDM.yaml",
	)
}

func deploymentAlamedaOperatordmYaml() (*asset, error) {
	bytes, err := deploymentAlamedaOperatordmYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment/alameda-operatorDM.yaml", size: 963, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _persistentvolumeclaimMyAlamedagrafanapvcYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8c\xbd\x4a\xc6\x40\x14\x44\xfb\x85\x7d\x87\xfb\x02\x5f\x40\xcb\x6d\x2d\xac\x44\xb1\x88\xf5\xb0\x3b\x09\x8b\xd9\x1f\xef\xdd\x04\x7c\x7b\x49\x20\x96\xe7\xcc\x70\xd0\xf3\x4c\xb5\xdc\x6a\x90\xe3\xc9\xbb\xef\x5c\x53\x90\x8f\x53\xd9\x60\x1d\x73\xdb\xf6\xc2\x97\x0d\xb9\x78\x57\x38\x90\x30\x10\xbc\x13\xa9\x28\x0c\x52\x7e\x1f\xd8\x50\x98\x30\xad\x8a\x05\x15\x53\x3f\xe2\xbd\x5b\x47\x64\x90\x85\x89\x8a\xd1\x14\xd9\x3b\xeb\x8c\x57\x00\x31\xd2\xec\xad\x25\xda\xc5\x22\x0f\xf9\x24\xd2\x97\xe6\xc1\xf7\x1a\x79\x4a\xa5\xb5\x5d\xe3\xff\x45\xf9\xb3\xd3\xc6\x8d\x22\x76\x66\x57\x06\x79\x7e\xcd\xf2\x17\x00\x00\xff\xff\x51\x19\x4f\x94\xce\x00\x00\x00")

func persistentvolumeclaimMyAlamedagrafanapvcYamlBytes() ([]byte, error) {
	return bindataRead(
		_persistentvolumeclaimMyAlamedagrafanapvcYaml,
		"PersistentVolumeClaim/my-alamedagrafanaPVC.yaml",
	)
}

func persistentvolumeclaimMyAlamedagrafanapvcYaml() (*asset, error) {
	bytes, err := persistentvolumeclaimMyAlamedagrafanapvcYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "PersistentVolumeClaim/my-alamedagrafanaPVC.yaml", size: 206, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _persistentvolumeclaimMyAlamedainfluxdbpvcYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8c\x3f\x4b\xc0\x30\x10\x47\xf7\x40\xbe\xc3\x6d\x9d\x5a\xec\x9a\xd5\xc1\x49\x14\x87\x3a\x9f\xc9\xaf\x72\x98\x7f\xe6\x92\xa2\xdf\x5e\x5a\xa8\xe3\x7b\x3c\x1e\x57\xd9\xd0\x54\x4a\x76\x74\xac\xd6\x7c\x49\x0e\x8e\x5e\x4f\xa5\x1d\xb9\x6f\x25\x8e\x84\xc7\xc8\x92\xac\x49\xe8\x1c\xb8\xb3\xb3\x86\x28\x73\x82\xa3\xf4\x3b\x73\xe4\x84\xc0\x8b\xe4\x3d\x8e\x9f\xf0\xb1\xd4\xc3\xdf\x81\x56\xf6\x70\xb4\x23\xa0\x71\x2f\x8d\xc5\x1a\xad\xf0\xd7\x81\xbd\x87\xea\x73\x09\xd0\x8b\x89\x66\x7a\x03\x87\xf7\x26\x1d\x2f\xd9\xe3\x94\x0d\x5a\x46\xf3\xff\x49\xc3\xf7\x80\xf6\x1b\x89\xf4\xdc\x7e\xc2\xd1\xb4\x3e\x3c\xc9\xf4\x17\x00\x00\xff\xff\x64\x55\x34\x22\xd1\x00\x00\x00")

func persistentvolumeclaimMyAlamedainfluxdbpvcYamlBytes() ([]byte, error) {
	return bindataRead(
		_persistentvolumeclaimMyAlamedainfluxdbpvcYaml,
		"PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml",
	)
}

func persistentvolumeclaimMyAlamedainfluxdbpvcYaml() (*asset, error) {
	bytes, err := persistentvolumeclaimMyAlamedainfluxdbpvcYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml", size: 209, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceAdmissionControllersvYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x41\x6a\xf4\x30\x0c\x85\xf7\x81\xdc\xc1\x17\x70\xfe\xfc\x74\x16\xc5\xa7\x28\x14\xba\x57\x9d\x37\x33\xa2\x8e\x64\x24\x31\xe7\x2f\x71\x98\x5d\x4b\x77\xf6\x7b\x8f\xef\x13\x75\xfe\x80\x39\xab\x94\xf4\xf8\x3f\x4f\x5f\x2c\x5b\x49\xef\xb0\x07\x57\xcc\xd3\x8e\xa0\x8d\x82\xca\x3c\xa5\x44\x22\x1a\x14\xac\xe2\xe3\x9f\x92\x9f\xbb\x85\x5a\xbf\xd3\xa2\x1d\xe2\x77\xbe\xc6\xc2\xfa\x6f\x54\x72\xcb\x15\x16\xd9\x51\x0d\x91\x85\x76\x94\x44\xdb\xce\x7e\x18\x73\x55\x09\xd3\xd6\x60\x39\x9a\x1f\xc8\x46\x9f\x68\x4f\x3a\xf5\xfe\xf3\xfa\xa8\x7f\x67\x3d\x5b\xef\x54\x51\xd2\x15\x1b\x8c\x42\x8d\x78\x9e\xbc\xa3\x0e\x7a\x57\x8b\xd3\x93\xc7\xbb\xa4\xcb\xe5\xe5\xd4\x06\xd9\x0d\xf1\x36\xc2\xd7\x75\x5d\x8f\xd4\xd1\x50\x43\xed\xaf\xcb\xbe\x03\x00\x00\xff\xff\x01\x77\x18\xd4\x4f\x01\x00\x00")

func serviceAdmissionControllersvYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceAdmissionControllersvYaml,
		"Service/admission-controllerSV.yaml",
	)
}

func serviceAdmissionControllersvYaml() (*asset, error) {
	bytes, err := serviceAdmissionControllersvYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/admission-controllerSV.yaml", size: 335, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceAlamedaDatahubsvYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\x31\xae\xc3\x20\x10\x44\x7b\x24\xee\xb0\x17\xb0\xe4\x5f\xb8\xe1\x1a\x5f\xfa\xfd\x18\xe6\x27\x28\xd8\xac\x16\xe2\xf3\x47\xd8\x69\x93\x6e\xb5\x6f\xf4\x66\xa0\xf9\x8f\xd6\x72\xdd\x83\x1c\x3f\xde\x3d\xf2\x9e\x82\xfc\xd2\x8e\x1c\xe9\xdd\xc6\x8e\x84\x8e\xe0\x9d\x48\xc1\xca\xd2\xce\x53\x04\xaa\x41\x50\xb0\x31\x61\x1a\x91\xfb\x73\x1d\x64\xc7\xc6\x8f\xa0\x29\x22\x83\xfc\x33\xd1\xd0\xab\x21\x7b\xd7\x94\xf1\x74\x6a\xb5\x7e\xd9\xa7\xb7\xe5\x66\x1a\xaf\xb6\xc1\x82\x2c\xf3\xbc\xcc\xe3\xd1\x58\x18\x7b\xb5\x2f\x5b\x5e\x01\x00\x00\xff\xff\x70\x2e\x3b\x66\xd9\x00\x00\x00")

func serviceAlamedaDatahubsvYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceAlamedaDatahubsvYaml,
		"Service/alameda-datahubSV.yaml",
	)
}

func serviceAlamedaDatahubsvYaml() (*asset, error) {
	bytes, err := serviceAlamedaDatahubsvYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/alameda-datahubSV.yaml", size: 217, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceAlamedaGrafanasvYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\x41\x0a\xc2\x30\x10\x45\xf7\x81\xdc\x61\x2e\x50\xa8\xb8\xcb\x29\x04\xc1\xfd\x37\xf9\x2d\xc1\x34\x09\x93\xa1\xe7\x17\xdb\x95\x0b\xdd\x3d\xe6\xc1\x9b\x8f\x9e\x1f\xd4\x91\x5b\x0d\xb2\x5f\xbc\x7b\xe5\x9a\x82\xdc\xa9\x7b\x8e\xf4\x6e\xa3\x21\xc1\x10\xbc\x13\x29\x78\xb2\x8c\x03\x45\xd0\x7b\x10\x14\x6c\x4c\x98\x56\xc5\x82\x8a\x8f\xa9\xd8\xf8\x53\x8c\x8e\xc8\x20\x0b\x13\x15\xd6\x14\xd9\xbb\xd1\x19\x8f\x66\x6f\x6a\x67\x7d\x3a\x38\xc8\x75\x9e\xe7\xf3\x9b\x41\x57\xda\xed\xeb\x3a\x58\x18\xad\xe9\x9f\x41\xf2\x0e\x00\x00\xff\xff\x45\x9d\xf7\x51\xdf\x00\x00\x00")

func serviceAlamedaGrafanasvYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceAlamedaGrafanasvYaml,
		"Service/alameda-grafanaSV.yaml",
	)
}

func serviceAlamedaGrafanasvYaml() (*asset, error) {
	bytes, err := serviceAlamedaGrafanasvYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/alameda-grafanaSV.yaml", size: 223, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceAlamedaInfluxdbsvYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xce\x41\x6a\xc4\x30\x0c\x05\xd0\x7d\x20\x77\xf0\x05\x9c\xb6\x9b\x32\xf8\x14\x85\x42\xf7\x3f\xf6\xcf\xc4\xd4\xb1\x8d\xa4\x19\x7a\xfc\x92\x84\x52\xa6\x8b\xee\x6c\xfd\xcf\x93\xd0\xf3\x07\x45\x73\xab\xc1\xdd\x5f\xc6\xe1\x33\xd7\x14\xdc\x3b\xe5\x9e\x23\xc7\x61\xa3\x21\xc1\x10\xc6\xc1\x39\xd4\xda\x0c\x96\x5b\xd5\xe3\xef\x9c\x9e\xbd\x09\xa5\xaf\x98\x5a\x67\xd5\x35\x2f\x36\xe5\xf6\x74\x44\xf5\xea\x23\xc5\xbc\x32\x0a\xcd\x57\x6c\x0c\x0e\x05\x1b\x13\xfc\xee\xae\xb7\xd9\x5b\xd1\x5d\x2b\x98\x59\x7e\x60\xf4\xfe\x5b\xcc\x75\x29\xb7\xaf\x34\xef\xd1\x23\xf1\x37\xd1\x8e\xc8\xe0\x16\x26\x0a\xac\x09\xf2\x38\x68\x67\x3c\xd4\xde\xc4\x4e\xdf\x1f\xef\xe0\x2e\xcf\x97\xd7\x73\x9f\x41\xae\xb4\xb7\x87\xa9\xb2\x30\x5a\x93\xff\x4e\xfa\x0e\x00\x00\xff\xff\x0a\x5a\xba\x64\x3f\x01\x00\x00")

func serviceAlamedaInfluxdbsvYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceAlamedaInfluxdbsvYaml,
		"Service/alameda-influxdbSV.yaml",
	)
}

func serviceAlamedaInfluxdbsvYaml() (*asset, error) {
	bytes, err := serviceAlamedaInfluxdbsvYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/alameda-influxdbSV.yaml", size: 319, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountAdmissionControllersaYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcb\x31\x0a\x42\x31\x0c\x06\xe0\xbd\xd0\x3b\xe4\x02\x0e\xae\xd9\x3c\x83\xe0\x1e\xd2\x5f\x08\xbe\x26\x8f\x34\xf6\xfc\xe2\xf0\xe6\x8f\x4f\x4e\x7b\x21\x97\x85\x33\xed\x7b\x6f\x1f\xf3\xc1\xf4\x44\x6e\x53\x3c\x54\xe3\xeb\xd5\xdb\x44\xc9\x90\x12\xee\x8d\xc8\x65\x82\x49\xc6\xb4\xf5\x7f\x37\x0d\xaf\x8c\xe3\x40\x5e\xba\x4e\x51\x30\xbd\x31\x90\x52\x91\x62\xbf\x00\x00\x00\xff\xff\xd9\x4c\xcf\x12\x67\x00\x00\x00")

func serviceaccountAdmissionControllersaYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountAdmissionControllersaYaml,
		"ServiceAccount/admission-controllerSA.yaml",
	)
}

func serviceaccountAdmissionControllersaYaml() (*asset, error) {
	bytes, err := serviceaccountAdmissionControllersaYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/admission-controllerSA.yaml", size: 103, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountAlamedaDatahubsaYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xc9\xb1\x0d\x02\x31\x0c\x05\xd0\x3e\x52\x76\xf0\x02\x14\xb4\xee\x98\x01\x89\xfe\x93\x7c\x84\x05\x71\x4e\x3e\x5f\xe6\x47\x14\xd7\xbe\x87\xcd\x1e\x8c\xdd\xa6\xab\xac\x6b\x2d\x1f\xf3\xae\x72\x67\x2c\x6b\xbc\xb5\x36\x0f\xcf\x5a\x06\x13\x1d\x09\xad\x45\xc4\x31\xa8\x82\x2f\x06\x3b\x2e\x7f\x7e\x1f\xcf\x33\xf6\x0d\x8d\x2a\x2f\x76\x06\x72\x06\xec\x17\x00\x00\xff\xff\xdb\x23\xc6\x56\x62\x00\x00\x00")

func serviceaccountAlamedaDatahubsaYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountAlamedaDatahubsaYaml,
		"ServiceAccount/alameda-datahubSA.yaml",
	)
}

func serviceaccountAlamedaDatahubsaYaml() (*asset, error) {
	bytes, err := serviceaccountAlamedaDatahubsaYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/alameda-datahubSA.yaml", size: 98, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountAlamedaEvictionersaYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xc9\xb1\x0d\x02\x31\x0c\x05\xd0\x3e\x52\x76\xf0\x02\x14\xb4\xee\x98\x01\x89\xfe\xcb\xf9\x48\x16\xc4\x39\xf9\x4c\xe6\xa7\xba\xfa\xe1\xf0\x17\xf3\xf4\x15\x2a\xfb\xde\xdb\xc7\x63\xa8\x3c\x99\xdb\x8d\x0f\xb3\xf5\x8b\xea\x6d\xb2\x30\x50\xd0\xde\x44\x02\x93\x2a\xf8\x62\x72\xe0\xc6\xed\x56\xbe\x82\x79\xd9\x79\xc0\xa8\xf2\xe6\x60\xa2\x56\xc2\xff\x01\x00\x00\xff\xff\xd8\xfc\xd0\xd8\x65\x00\x00\x00")

func serviceaccountAlamedaEvictionersaYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountAlamedaEvictionersaYaml,
		"ServiceAccount/alameda-evictionerSA.yaml",
	)
}

func serviceaccountAlamedaEvictionersaYaml() (*asset, error) {
	bytes, err := serviceaccountAlamedaEvictionersaYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/alameda-evictionerSA.yaml", size: 101, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountAlamedaOperatorsaYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xc9\x31\x0a\x42\x31\x0c\x06\xe0\xbd\xd0\x3b\xe4\x02\x0e\xae\xd9\x3c\x83\xe0\xfe\xd3\xfe\x42\xd0\x26\x25\x2f\xbe\xf3\x3b\x88\xeb\xf7\x61\xdb\x83\x79\x58\xb8\xca\x79\xed\xed\x65\x3e\x55\xee\xcc\xd3\x06\x6f\x63\xc4\xc7\xab\xb7\xc5\xc2\x44\x41\x7b\x13\x71\x2c\xaa\xe0\x8d\xc5\x89\x4b\x6c\x26\x2a\xf2\x3f\xc7\xc6\xa0\xca\x93\xf3\xe7\xb0\x6f\x00\x00\x00\xff\xff\x5b\xca\x2a\xec\x63\x00\x00\x00")

func serviceaccountAlamedaOperatorsaYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountAlamedaOperatorsaYaml,
		"ServiceAccount/alameda-operatorSA.yaml",
	)
}

func serviceaccountAlamedaOperatorsaYaml() (*asset, error) {
	bytes, err := serviceaccountAlamedaOperatorsaYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/alameda-operatorSA.yaml", size: 99, mode: os.FileMode(438), modTime: time.Unix(1553562565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ClusterRole/admission-controllerCR.yaml":                 clusterroleAdmissionControllercrYaml,
	"ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml": clusterroleAggregateAlamedaAdminEditAlamedacrYaml,
	"ClusterRole/alameda-datahubCR.yaml":                      clusterroleAlamedaDatahubcrYaml,
	"ClusterRole/alameda-evictionerCR.yaml":                   clusterroleAlamedaEvictionercrYaml,
	"ClusterRole/alameda-operatorCR.yaml":                     clusterroleAlamedaOperatorcrYaml,
	"ClusterRoleBinding/admission-controllerCRB.yaml":         clusterrolebindingAdmissionControllercrbYaml,
	"ClusterRoleBinding/alameda-datahubCRB.yaml":              clusterrolebindingAlamedaDatahubcrbYaml,
	"ClusterRoleBinding/alameda-evictionerCRB.yaml":           clusterrolebindingAlamedaEvictionercrbYaml,
	"ClusterRoleBinding/alameda-operatorCRB.yaml":             clusterrolebindingAlamedaOperatorcrbYaml,
	"ConfigMap/grafana-datasources.yaml":                      configmapGrafanaDatasourcesYaml,
	"CustomResourceDefinition/alamedarecommendationsCRD.yaml": customresourcedefinitionAlamedarecommendationscrdYaml,
	"CustomResourceDefinition/alamedascalersCRD.yaml":         customresourcedefinitionAlamedascalerscrdYaml,
	"Deployment/admission-controllerDM.yaml":                  deploymentAdmissionControllerdmYaml,
	"Deployment/alameda-datahubDM.yaml":                       deploymentAlamedaDatahubdmYaml,
	"Deployment/alameda-evictionerDM.yaml":                    deploymentAlamedaEvictionerdmYaml,
	"Deployment/alameda-grafanaDM.yaml":                       deploymentAlamedaGrafanadmYaml,
	"Deployment/alameda-influxdbDM.yaml":                      deploymentAlamedaInfluxdbdmYaml,
	"Deployment/alameda-operatorDM.yaml":                      deploymentAlamedaOperatordmYaml,
	"PersistentVolumeClaim/my-alamedagrafanaPVC.yaml":         persistentvolumeclaimMyAlamedagrafanapvcYaml,
	"PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml":        persistentvolumeclaimMyAlamedainfluxdbpvcYaml,
	"Service/admission-controllerSV.yaml":                     serviceAdmissionControllersvYaml,
	"Service/alameda-datahubSV.yaml":                          serviceAlamedaDatahubsvYaml,
	"Service/alameda-grafanaSV.yaml":                          serviceAlamedaGrafanasvYaml,
	"Service/alameda-influxdbSV.yaml":                         serviceAlamedaInfluxdbsvYaml,
	"ServiceAccount/admission-controllerSA.yaml":              serviceaccountAdmissionControllersaYaml,
	"ServiceAccount/alameda-datahubSA.yaml":                   serviceaccountAlamedaDatahubsaYaml,
	"ServiceAccount/alameda-evictionerSA.yaml":                serviceaccountAlamedaEvictionersaYaml,
	"ServiceAccount/alameda-operatorSA.yaml":                  serviceaccountAlamedaOperatorsaYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"ClusterRole": &bintree{nil, map[string]*bintree{
		"admission-controllerCR.yaml":                 &bintree{clusterroleAdmissionControllercrYaml, map[string]*bintree{}},
		"aggregate-alameda-admin-edit-alamedaCR.yaml": &bintree{clusterroleAggregateAlamedaAdminEditAlamedacrYaml, map[string]*bintree{}},
		"alameda-datahubCR.yaml":                      &bintree{clusterroleAlamedaDatahubcrYaml, map[string]*bintree{}},
		"alameda-evictionerCR.yaml":                   &bintree{clusterroleAlamedaEvictionercrYaml, map[string]*bintree{}},
		"alameda-operatorCR.yaml":                     &bintree{clusterroleAlamedaOperatorcrYaml, map[string]*bintree{}},
	}},
	"ClusterRoleBinding": &bintree{nil, map[string]*bintree{
		"admission-controllerCRB.yaml": &bintree{clusterrolebindingAdmissionControllercrbYaml, map[string]*bintree{}},
		"alameda-datahubCRB.yaml":      &bintree{clusterrolebindingAlamedaDatahubcrbYaml, map[string]*bintree{}},
		"alameda-evictionerCRB.yaml":   &bintree{clusterrolebindingAlamedaEvictionercrbYaml, map[string]*bintree{}},
		"alameda-operatorCRB.yaml":     &bintree{clusterrolebindingAlamedaOperatorcrbYaml, map[string]*bintree{}},
	}},
	"ConfigMap": &bintree{nil, map[string]*bintree{
		"grafana-datasources.yaml": &bintree{configmapGrafanaDatasourcesYaml, map[string]*bintree{}},
	}},
	"CustomResourceDefinition": &bintree{nil, map[string]*bintree{
		"alamedarecommendationsCRD.yaml": &bintree{customresourcedefinitionAlamedarecommendationscrdYaml, map[string]*bintree{}},
		"alamedascalersCRD.yaml":         &bintree{customresourcedefinitionAlamedascalerscrdYaml, map[string]*bintree{}},
	}},
	"Deployment": &bintree{nil, map[string]*bintree{
		"admission-controllerDM.yaml": &bintree{deploymentAdmissionControllerdmYaml, map[string]*bintree{}},
		"alameda-datahubDM.yaml":      &bintree{deploymentAlamedaDatahubdmYaml, map[string]*bintree{}},
		"alameda-evictionerDM.yaml":   &bintree{deploymentAlamedaEvictionerdmYaml, map[string]*bintree{}},
		"alameda-grafanaDM.yaml":      &bintree{deploymentAlamedaGrafanadmYaml, map[string]*bintree{}},
		"alameda-influxdbDM.yaml":     &bintree{deploymentAlamedaInfluxdbdmYaml, map[string]*bintree{}},
		"alameda-operatorDM.yaml":     &bintree{deploymentAlamedaOperatordmYaml, map[string]*bintree{}},
	}},
	"PersistentVolumeClaim": &bintree{nil, map[string]*bintree{
		"my-alamedagrafanaPVC.yaml":  &bintree{persistentvolumeclaimMyAlamedagrafanapvcYaml, map[string]*bintree{}},
		"my-alamedainfluxdbPVC.yaml": &bintree{persistentvolumeclaimMyAlamedainfluxdbpvcYaml, map[string]*bintree{}},
	}},
	"Service": &bintree{nil, map[string]*bintree{
		"admission-controllerSV.yaml": &bintree{serviceAdmissionControllersvYaml, map[string]*bintree{}},
		"alameda-datahubSV.yaml":      &bintree{serviceAlamedaDatahubsvYaml, map[string]*bintree{}},
		"alameda-grafanaSV.yaml":      &bintree{serviceAlamedaGrafanasvYaml, map[string]*bintree{}},
		"alameda-influxdbSV.yaml":     &bintree{serviceAlamedaInfluxdbsvYaml, map[string]*bintree{}},
	}},
	"ServiceAccount": &bintree{nil, map[string]*bintree{
		"admission-controllerSA.yaml": &bintree{serviceaccountAdmissionControllersaYaml, map[string]*bintree{}},
		"alameda-datahubSA.yaml":      &bintree{serviceaccountAlamedaDatahubsaYaml, map[string]*bintree{}},
		"alameda-evictionerSA.yaml":   &bintree{serviceaccountAlamedaEvictionersaYaml, map[string]*bintree{}},
		"alameda-operatorSA.yaml":     &bintree{serviceaccountAlamedaOperatorsaYaml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
