// Code generated by go-bindata. DO NOT EDIT.
// sources:
// CustomResourceDefinition/alamedarecommendationsCRD.yaml
// CustomResourceDefinition/alamedascalersCRD.yaml
// ClusterRole/admission-controllerCR.yaml
// ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml
// ClusterRole/alameda-datahubCR.yaml
// ClusterRole/alameda-evictionerCR.yaml
// ClusterRole/alameda-grafanaCR.yaml
// ClusterRole/alameda-operatorCR.yaml
// ServiceAccount/admission-controllerSA.yaml
// ServiceAccount/alameda-aiSA.yaml
// ServiceAccount/alameda-datahubSA.yaml
// ServiceAccount/alameda-evictionerSA.yaml
// ServiceAccount/alameda-grafanaSA.yaml
// ServiceAccount/alameda-operatorSA.yaml
// ClusterRoleBinding/admission-controllerCRB.yaml
// ClusterRoleBinding/alameda-datahubCRB.yaml
// ClusterRoleBinding/alameda-evictionerCRB.yaml
// ClusterRoleBinding/alameda-grafanaCRB.yaml
// ClusterRoleBinding/alameda-operatorCRB.yaml
// Secret/admission-controller-tls.yaml
// Secret/alameda-influxdb.yaml
// ConfigMap/dashboards-config.yaml
// ConfigMap/grafana-datasources.yaml
// PersistentVolumeClaim/admission-controller-data.yaml
// PersistentVolumeClaim/admission-controller-log.yaml
// PersistentVolumeClaim/alameda-ai-data.yaml
// PersistentVolumeClaim/alameda-ai-log.yaml
// PersistentVolumeClaim/alameda-datahub-data.yaml
// PersistentVolumeClaim/alameda-datahub-log.yaml
// PersistentVolumeClaim/alameda-evictioner-data.yaml
// PersistentVolumeClaim/alameda-evictioner-log.yaml
// PersistentVolumeClaim/alameda-operator-data.yaml
// PersistentVolumeClaim/alameda-operator-log.yaml
// PersistentVolumeClaim/my-alamedagrafanaPVC.yaml
// PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml
// Service/admission-controllerSV.yaml
// Service/alameda-datahubSV.yaml
// Service/alameda-grafanaSV.yaml
// Service/alameda-influxdbSV.yaml
// Deployment/admission-controllerDM.yaml
// Deployment/alameda-aiDM.yaml
// Deployment/alameda-datahubDM.yaml
// Deployment/alameda-evictionerDM.yaml
// Deployment/alameda-grafanaDM.yaml
// Deployment/alameda-influxdbDM.yaml
// Deployment/alameda-operatorDM.yaml

package assets


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}


type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataCustomResourceDefinitionAlamedarecommendationsCRDyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x53\x3d\x8f\xdb\x30\x0c\xdd\xf5\x2b\x88\xec\x71\x6b\x74\x29\xbc\x1d" +
	"\xda\xa5\xcb\xa1\xb8\x02\xb7\x14\x1d\x18\x89\xcd\xb1\x27\x8b\x2a\x45\x07\xbd\x7f\x5f\xd8\x8a\xf3\x71\x89\x13\x4e" +
	"\xf6\x13\xf5\xde\xe3\x87\x30\xf3\x33\x69\x61\x49\x1d\x60\x66\xfa\x67\x94\xc6\xbf\xd2\xbc\x7e\x2e\x0d\xcb\x87\x5d" +
	"\xbb\x21\xc3\xd6\xbd\x72\x0a\x1d\x7c\x19\x8a\x49\xff\x44\x45\x06\xf5\xf4\x95\x7e\x73\x62\x63\x49\xae\x27\xc3\x80" +
	"\x86\x9d\x03\x88\xb8\xa1\x58\xc6\x2f\x00\x2f\xc9\x54\x62\x24\x5d\x9b\x48\x9c\x69\x3b\x58\xb5\xcd\xc7\x95\x03\x48" +
	"\xd8\x53\x07\x18\xb1\xa7\x80\x4a\x5e\xfa\x9e\x52\x40\x9b\x3c\xe0\x60\x52\x3c\x46\x4e\xdb\x66\x64\x42\x4e\xa4\xa5" +
	"\x41\x76\x25\x93\x1f\x15\xb6\x2a\x43\xee\x60\x39\xb1\x2a\xec\xdd\xd4\x22\x1e\xaa\xd8\xd3\x99\xd8\x74\x9e\xe3\xa0" +
	"\x18\x97\xec\x38\x80\xe2\x25\x53\x07\x8f\x23\x65\x46\x4f\xc1\x01\xec\x30\x72\xcd\xa8\x22\x92\x29\x3d\x7c\xff\xf6" +
	"\xfc\xe9\x87\x7f\xa1\x1e\x2b\x08\x90\x55\x32\xa9\xf1\xec\x65\x8c\x93\xee\x1f\x30\x00\x7b\x1b\x35\x8a\x29\xa7\xed" +
	"\x01\x9e\xac\xdf\x4b\x3a\x9d\xc2\x79\xa2\x6c\xfe\x90\xb7\x03\x3c\xb7\x6f\x8e\x6b\xe6\xe6\xf1\xd5\x5e\x9e\xe3\x00" +
	"\x6c\xd4\x5f\x80\xcb\x44\x35\xa6\x61\x5f\xc1\x17\xca\x39\x86\xee\x37\xee\x2a\xeb\x42\x8d\xc7\xbb\x7f\x07\x56\x0a" +
	"\x97\x57\xd7\x93\xa1\x0b\xf8\x06\x5b\x3d\x42\x55\x7c\x73\xb7\x15\xd6\x27\xbd\xbb\x3b\x0d\x43\x1b\xca\x8d\xa1\xed" +
	"\xe6\x27\xba\x6b\x31\xe6\x17\x6c\xdd\xf1\x0a\x7a\x4f\xd9\x28\x3c\xbe\x5f\xf3\xd5\xea\x6c\xa7\xa7\x5f\x2f\x29\x4c" +
	"\x0f\xb6\x74\xf0\xf3\xd7\xb8\xd0\x26\x4a\x61\xbf\x84\x13\xf8\x3f\x00\x00\xff\xff\xc3\x68\x72\x63\x12\x04\x00\x00" +
	"")

func bindataCustomResourceDefinitionAlamedarecommendationsCRDyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataCustomResourceDefinitionAlamedarecommendationsCRDyaml,
		"CustomResourceDefinition/alamedarecommendationsCRD.yaml",
	)
}



func bindataCustomResourceDefinitionAlamedarecommendationsCRDyaml() (*asset, error) {
	bytes, err := bindataCustomResourceDefinitionAlamedarecommendationsCRDyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "CustomResourceDefinition/alamedarecommendationsCRD.yaml",
		size: 1042,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553062567, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataCustomResourceDefinitionAlamedascalersCRDyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\xc1\x6e\x23\x37\x0c\xbd\xcf\x57\x10\xee\x21\x97\x7a\xdc\xa0\x97" +
	"\x62\x0e\x05\x16\x6e\x0f\x41\xd1\x45\x91\x14\x7b\x29\x7a\xa0\x25\x8e\xad\x46\x22\x55\x89\x32\xd6\xfd\xfa\x42\x1a" +
	"\xdb\xc9\xcc\xc6\xd8\x14\xa8\x4e\xa3\x37\xe2\x23\xf5\x48\x8a\x18\xdd\x27\x4a\xd9\x09\x0f\x80\xd1\xd1\x67\x25\xae" +
	"\xbb\xdc\x3f\xff\x90\x7b\x27\x9b\xe3\xfd\x8e\x14\xef\xbb\x67\xc7\x76\x80\x6d\xc9\x2a\xe1\x91\xb2\x94\x64\xe8\x27" +
	"\x1a\x1d\x3b\x75\xc2\x5d\x20\x45\x8b\x8a\x03\x00\x40\x07\xe0\x71\x47\x3e\x0f\x5d\xdd\x1a\x61\x4d\xe2\x3d\xa5\xb5" +
	"\x8a\xf8\x0b\xf5\x00\xab\xfb\xfe\xbb\x55\x07\xc0\x18\x68\x00\xf4\x18\xc8\x62\x36\xe8\x29\xe5\x1e\x8b\x4a\xfd\x76" +
	"\xbc\xef\x2b\x03\x3a\x6e\xb0\xeb\x72\x24\x53\x99\xf7\x49\x4a\x1c\xe0\xf6\xc1\x89\xf9\x1c\xc5\x74\x81\x0f\x93\x93" +
	"\xa7\xe6\xa4\xe1\xd1\x97\x84\x7e\xe9\xbe\x03\xc8\x46\x22\x0d\xf0\xb1\x52\x44\x34\x64\x3b\x80\x23\x7a\x67\xb1\xde" +
	"\x78\x22\x95\x48\xfc\xe1\xb7\x87\x4f\xdf\x3f\x99\x03\x05\x9c\x40\x80\x98\x24\x52\x52\x77\xf1\x5d\xd7\x2b\xa5\xaf" +
	"\x18\x80\xa5\x6c\x92\x8b\x8d\x11\x7e\x5c\xbf\xfa\x03\x70\x57\x99\x27\x13\xb0\x55\x6a\xca\xa0\x07\x82\xe3\x84\x91" +
	"\x85\xdc\xbc\x82\x8c\xa0\x07\x97\x21\x51\x4c\x94\x89\xb5\x45\x38\xe3\x92\x11\x90\x41\x76\x7f\x91\xd1\x1e\x9e\x28" +
	"\x55\x12\xc8\x07\x29\xde\xd6\x04\x1d\x29\x29\x24\x32\xb2\x67\xf7\xcf\x95\x39\x83\x4a\x73\xe9\x51\x29\xeb\x8c\xd1" +
	"\xb1\x52\x62\xf4\x55\x93\x42\xdf\x02\xb2\x85\x80\x27\x48\x54\x7d\x40\xe1\x57\x6c\xed\x48\xee\xe1\x57\x49\x04\x8e" +
	"\x47\x19\xe0\xa0\x1a\xf3\xb0\xd9\xec\x9d\x5e\x4a\xcd\x48\x08\x85\x9d\x9e\x36\xad\x62\xdc\xae\xa8\xa4\xbc\xb1\x74" +
	"\x24\xbf\xc1\xe8\xd6\x2d\x4e\xd6\x56\x9e\xc1\x7e\x93\xce\x65\x98\xef\x5e\x05\xa6\xa7\x9a\xb4\xac\xc9\xf1\xfe\x0a" +
	"\xb7\xdc\xbf\x57\xf5\x5f\x1c\x5b\x70\x19\xf0\xcc\x32\x45\xff\x22\x6e\x85\xaa\x26\x8f\x3f\x3f\xfd\x0e\x97\x18\x5a" +
	"\x02\xe6\x8a\x37\xad\x5f\xcc\xf2\x8b\xec\x55\x26\xc7\x23\xa5\x29\x6d\x63\x92\xd0\x18\x89\x6d\x14\xc7\xda\x36\xc6" +
	"\x3b\xe2\xb9\xe4\xb9\xec\x82\xd3\x9a\xe7\xbf\x0b\x65\xad\xd9\xe9\x61\x8b\xcc\xa2\xb0\x23\x28\xd1\xa2\x92\xed\xe1" +
	"\x81\x61\x8b\x81\xfc\x16\x33\xfd\xdf\xa2\x57\x7d\xf3\xba\x0a\xfa\x75\xd9\xaf\x8f\xc2\x17\x07\x27\x71\xae\xf0\xa5" +
	"\xa3\x2f\xeb\xad\xfe\xa9\xcb\xcc\x9e\x9f\x37\xda\xe9\x66\x28\x75\x11\xe3\xce\x13\x7d\x26\x53\xf4\xa6\xdd\x4e\xc4" +
	"\x13\xce\x9b\x27\x8a\x77\xe6\xb4\x3c\x4f\x5c\xc2\x12\x5b\x43\xd6\xea\xe4\x0b\xd8\x48\x88\x68\xf4\xbd\xa1\x66\xf2" +
	"\x64\x54\xd2\x92\x7f\x56\xb8\x77\x0f\x21\x4a\x52\x64\x1d\xe0\xb1\x30\xac\x02\x3e\xd3\xaa\xb6\x6c\xa2\x3d\x31\x25" +
	"\x54\x02\x23\x96\x00\x47\xa5\x04\x41\xac\x1b\x4f\x53\xf9\xd6\xb2\x73\x9e\xee\xde\x0c\x68\x91\x1d\x68\x05\xe7\x12" +
	"\xcd\x7a\x68\x7d\x0d\xf2\xab\xd9\x55\xd4\x92\xdf\x93\xdf\xf3\x1b\xbc\xbd\x0e\x8c\xe5\xfd\x6f\x19\x4e\xda\x44\x2f" +
	"\xa7\x40\xac\x46\x78\x74\xfb\x37\x8e\xdc\xbc\xe0\x92\xe1\xbf\xda\xde\xf8\xb5\x80\x8f\x97\x49\x7b\xbc\x47\x1f\x0f" +
	"\x78\xdf\xbd\x48\x83\xc6\x50\x54\xb2\x1f\x97\x13\x6b\xb5\x9a\x8d\xa9\xb6\x35\xc2\xb6\xcd\xdd\x3c\xc0\x1f\x7f\xd6" +
	"\x59\xa5\x92\xc8\x9e\x1b\x62\x02\xff\x0d\x00\x00\xff\xff\xc7\x3f\x75\xd9\xda\x07\x00\x00")

func bindataCustomResourceDefinitionAlamedascalersCRDyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataCustomResourceDefinitionAlamedascalersCRDyaml,
		"CustomResourceDefinition/alamedascalersCRD.yaml",
	)
}



func bindataCustomResourceDefinitionAlamedascalersCRDyaml() (*asset, error) {
	bytes, err := bindataCustomResourceDefinitionAlamedascalersCRDyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "CustomResourceDefinition/alamedascalersCRD.yaml",
		size: 2010,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1558937075, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAdmissioncontrollerCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x52\x3d\x6f\x85\x30\x0c\xdc\xf9\x15\xd1\xdb\xa1\xea\x56\xb1\x76\xe8" +
	"\xde\xa1\xbb\x5f\xe2\x07\x16\x21\x8e\x6c\xe7\xf5\xe3\xd7\x57\x40\x05\x0c\x45\x45\x6a\xa6\x9c\x74\x97\xbb\x8b\x0d" +
	"\x99\xde\x50\x94\x38\xb5\x4e\xae\xe0\x1b\x28\xd6\xb3\xd0\x17\x18\x71\x6a\x86\x27\x6d\x88\x1f\xee\x8f\xd5\x40\x29" +
	"\xb4\xee\x39\x16\x35\x94\x57\x8e\x58\x8d\x68\x10\xc0\xa0\xad\x9c\x4b\x30\x62\xeb\x6e\x18\x50\xc0\x58\x80\x6a\x08" +
	"\x23\xe9\xf4\x6e\xed\x39\x99\x70\x8c\x28\x95\x94\x88\x3a\xf1\x6b\x07\x99\x5e\x84\x4b\x9e\xe1\x74\x6a\x77\x59\x35" +
	"\x82\x1d\xa9\xc9\x3e\xc3\x65\xa6\x09\x2a\x17\xf1\xb8\x53\x8d\xc5\xc0\x28\x75\xef\x78\xed\x99\x07\xcf\xe9\x46\x5d" +
	"\x59\xb4\x3a\xb3\xee\x28\xd7\x9d\xa0\x43\x5b\xef\x5e\x10\x0c\x57\x58\x72\xd8\xc3\x80\x11\x67\xf8\x7b\xdc\xc3\x48" +
	"\x99\xc3\x9f\xce\x91\x74\x03\x19\xcc\xf7\x47\x3e\xf8\x61\x98\x74\x6d\xb3\xb0\xb2\x1e\x99\x0b\xe6\x48\x1e\x14\x4d" +
	"\x77\x45\x72\xe4\xcf\x11\x93\x9d\xcd\x75\x36\xc9\xf1\x27\xfc\xe4\x98\xc6\xb0\x6d\xc0\xbf\xec\xa7\xd6\x0d\x67\x4c" +
	"\xda\xd3\xcd\x1a\xe2\x23\xeb\xad\xee\xb2\x0d\xa7\x5c\xbf\x03\x00\x00\xff\xff\xf4\x88\xe0\xed\x0a\x03\x00\x00")

func bindataClusterRoleAdmissioncontrollerCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAdmissioncontrollerCRyaml,
		"ClusterRole/admission-controllerCR.yaml",
	)
}



func bindataClusterRoleAdmissioncontrollerCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAdmissioncontrollerCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/admission-controllerCR.yaml",
		size: 778,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1558936681, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAggregatealamedaadmineditalamedaCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x4f\xbd\x4e\xf4\x30\x10\xec\xfd\x14\xab\xeb\x93\x4f\x5f\x87\xdc\x52" +
	"\xd0\x53\xd0\xef\xd9\xa3\xdc\xea\x6c\x6f\xb4\x5e\x1f\x12\x4f\x8f\x2e\x21\xd0\x81\x90\xa8\x3c\xf2\xce\x2f\xaf\xf2" +
	"\x02\xeb\xa2\x2d\x92\x9d\x39\xcd\x3c\xfc\xa2\x26\x6f\xec\xa2\x6d\xbe\x3e\xf4\x59\xf4\xdf\xed\x7f\xb8\x4a\xcb\x91" +
	"\x1e\xcb\xe8\x0e\x7b\xd6\x82\x50\xe1\x9c\xd9\x39\x06\xa2\xc6\x15\x91\x78\x59\x0c\x0b\x3b\x26\x2e\x5c\x91\x79\xe2" +
	"\x5c\xa5\x4d\xc8\xe2\xc7\x57\x20\x2a\x7c\x46\xe9\x77\x19\x7d\x93\xf9\x65\xe6\xba\xfb\x44\x3a\xb9\x0d\x9c\x7e\x23" +
	"\xbc\x47\x7f\xea\x6c\x14\xf4\x18\x26\xe2\x55\x9e\x4c\xc7\xba\x95\x98\x88\x87\x6b\x4f\x5c\xa4\x2d\x73\xd2\xe6\x2c" +
	"\x0d\xd6\x67\x96\x40\x64\xe8\x3a\x2c\xe1\xa0\xee\x2b\xee\x6c\x58\x0f\x44\x37\xd8\xf9\xe3\xb6\xc0\xb7\xb7\x48\xdf" +
	"\x41\x32\xb0\x63\x83\x63\xcd\x07\xcc\x28\x70\xfc\x45\x0b\x43\xd2\x5a\xd1\xf2\xb6\xff\xa7\x36\xaf\xec\xe9\xf2\x1e" +
	"\x00\x00\xff\xff\x36\x9a\x6e\xc2\xf0\x01\x00\x00")

func bindataClusterRoleAggregatealamedaadmineditalamedaCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAggregatealamedaadmineditalamedaCRyaml,
		"ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml",
	)
}



func bindataClusterRoleAggregatealamedaadmineditalamedaCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAggregatealamedaadmineditalamedaCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml",
		size: 496,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553062567, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAlamedadatahubCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\x31\x4f\xc3\x40\x0c\x85\xf7\xfb\x15\x56\x99\x13\xc4\x86\xb2\x32" +
	"\xb0\x22\x06\x76\x37\xf7\xda\x58\xcd\x9d\x0f\xdb\x57\x09\x7e\x3d\x6a\xaa\x16\x75\xb2\xf4\xfc\xf4\x7d\xb2\xb9\xc9" +
	"\x17\xcc\x45\xeb\x44\xb6\xe7\x79\xe4\x1e\x8b\x9a\xfc\x72\x88\xd6\xf1\xf4\xea\xa3\xe8\xf3\xf9\x25\x9d\xa4\xe6\x89" +
	"\xde\xd6\xee\x01\xfb\xd4\x15\xa9\x20\x38\x73\xf0\x94\x88\x2a\x17\x4c\x74\x40\x86\x71\xa8\xb1\x0c\xbc\x72\x41\xe6" +
	"\xe1\xd2\x58\xfa\x3e\x59\x5f\xe1\x53\x7a\xa2\x0f\x58\x11\xbf\x18\xe9\xa0\x46\xdf\x1d\xf6\x43\xcd\xb4\x20\x16\x74" +
	"\xa7\x5e\x33\x6c\x03\x7a\xe3\x19\xa4\x0d\xd5\x17\x39\xc4\x50\xb4\x4a\xa8\x49\x3d\x52\x1a\x88\x9b\xbc\x9b\xf6\xe6" +
	"\x13\x25\xa2\x81\x76\xbb\x44\x64\x70\xed\x36\xe3\x16\xde\x31\x9e\x88\xce\xb0\xfd\x6d\x71\x44\x3c\x30\xb6\x90\x7b" +
	"\xa8\xcf\xbc\x4a\x3d\x8e\xb3\xd6\x60\xa9\x30\x1f\x59\x1e\xc8\xd7\xea\xf5\x3c\xc3\xac\xa5\xa0\xe6\xed\x5d\xff\x92" +
	"\xbb\xe3\x32\x7b\xcb\x1c\xf8\x0b\x00\x00\xff\xff\x44\xa5\x3d\x5d\x6a\x01\x00\x00")

func bindataClusterRoleAlamedadatahubCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAlamedadatahubCRyaml,
		"ClusterRole/alameda-datahubCR.yaml",
	)
}



func bindataClusterRoleAlamedadatahubCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAlamedadatahubCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/alameda-datahubCR.yaml",
		size: 362,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAlamedaevictionerCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x31\x6b\x03\x31\x0c\x46\x77\xff\x0a\x91\xfd\xae\x74\x2b\x5e\x3b" +
	"\x74\xef\xd0\x5d\xb1\xbf\xa6\x22\xb6\x75\x48\x72\x86\xfe\xfa\x72\xe1\x86\xc2\x4d\x82\x87\xf4\x78\xe2\x4d\xbe\x60" +
	"\x2e\x3a\x32\xd9\x95\xcb\xca\x33\x7e\xd4\xe4\x97\x43\x74\xac\xf7\x37\x5f\x45\x5f\x1e\xaf\xe9\x2e\xa3\x66\x7a\x6f" +
	"\xd3\x03\xf6\xa9\x0d\xa9\x23\xb8\x72\x70\x4e\x44\x83\x3b\x32\x7d\xa3\xc2\x38\xd4\x58\x16\x6e\xdc\x51\x79\xc1\x43" +
	"\xca\xae\x82\x25\x9b\x0d\x9e\xd3\x42\xbc\xc9\x87\xe9\xdc\x7c\x3f\x5d\xe8\x72\x49\x44\x06\xd7\x69\x05\x07\xdb\xb4" +
	"\x7a\x22\x7a\xc0\xae\x07\xb9\x21\x9e\xb3\xa2\x21\x70\xb6\xf0\x0c\xf5\xc2\x4d\xc6\x6d\x2d\x3a\x82\x65\xc0\x7c\x65" +
	"\x39\xcb\x8f\xb6\x7d\x1b\xe6\xff\x91\xa1\x68\xef\x18\xf5\xf9\xfe\xb9\xe0\x2f\x00\x00\xff\xff\x1e\xb7\xab\xd4\x2f" +
	"\x01\x00\x00")

func bindataClusterRoleAlamedaevictionerCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAlamedaevictionerCRyaml,
		"ClusterRole/alameda-evictionerCR.yaml",
	)
}



func bindataClusterRoleAlamedaevictionerCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAlamedaevictionerCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/alameda-evictionerCR.yaml",
		size: 303,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1555988180, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAlamedagrafanaCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\xa1\x6e\xc5\x30\x0c\x46\x61\xee\xa7\xb0\x2e\x4f\xa7\xb1\x29\x74" +
	"\x60\x7c\x60\xfc\xbf\x8d\xdb\x59\x4d\xe3\xc8\x4e\x0a\xf6\xf4\xd3\x05\xa5\xe7\x48\x1f\xba\xfe\x88\x87\x5a\xcb\xec" +
	"\x4f\xac\x0b\xe6\xf8\x35\xd7\x3f\x0c\xb5\xb6\x1c\x1f\xb1\xa8\xbd\x5d\xef\x74\x68\x2b\x99\x3f\xeb\x8c\x21\xfe\x6d" +
	"\x55\xe8\x94\x81\x82\x81\x4c\xcc\x0d\xa7\x64\xde\xa4\x88\x63\x98\x43\x13\x2a\x4e\x29\x48\xbb\x63\x43\x03\xf9\xac" +
	"\x12\x99\x12\xa3\xeb\x97\xdb\xec\x91\x99\x98\x13\x3f\x1e\xc4\xec\x12\x36\x7d\x95\x3b\xbe\xbc\xe8\x58\x25\x88\xf9" +
	"\x12\x7f\xde\x63\x97\xf1\x1f\x00\x00\xff\xff\x37\xd4\xd9\xbf\xb3\x00\x00\x00")

func bindataClusterRoleAlamedagrafanaCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAlamedagrafanaCRyaml,
		"ClusterRole/alameda-grafanaCR.yaml",
	)
}



func bindataClusterRoleAlamedagrafanaCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAlamedagrafanaCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/alameda-grafanaCR.yaml",
		size: 179,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1555988180, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAlamedaoperatorCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\xbb\x92\xdb\x30\x0c\xec\xf5\x15\x9c\x4b\x6d\xdd\xa4\xcb\xb8\x4d" +
	"\x91\x36\x93\x22\x3d\x4c\xae\x64\x8c\x29\x82\x01\x41\x5f\xee\xbe\x3e\xa3\xc7\xc9\x4e\xe4\x24\x37\x2e\xae\xf2\x0e" +
	"\x68\x72\x17\xd8\x85\x28\xf3\x77\x68\x61\x49\x7b\xa7\x07\xf2\x2d\x55\x3b\x8a\xf2\x0b\x19\x4b\x6a\x4f\x9f\x4a\xcb" +
	"\xf2\x78\xfe\xd8\x9c\x38\x85\xbd\xfb\x1c\x6b\x31\xe8\x37\x89\x68\x06\x18\x05\x32\xda\x37\xce\x25\x1a\xb0\x77\x1d" +
	"\x02\x94\x4c\x94\x78\x47\x91\x06\x04\xda\x49\x9e\x4b\x8d\xd6\x88\xb2\x6f\x76\x8e\x32\x7f\x51\xa9\xb9\x8c\x17\x77" +
	"\xee\xe1\xa1\x71\x4e\x51\xa4\xaa\xc7\x52\x4b\x12\x50\x26\x94\x25\xcc\x40\x91\x23\xfb\x49\x95\x97\x64\x2a\x31\x42" +
	"\xc7\xa3\x33\xf4\xb0\x5c\xeb\x61\xd3\x6f\xe4\x32\x83\x27\x32\x7f\xdc\x52\x52\xce\x65\x4b\xba\x30\x14\xd8\xcc\x18" +
	"\x90\xa3\x3c\x0f\x48\xf6\x36\x9a\x11\x79\x05\x19\x26\x58\x73\x78\x85\x79\x3d\x0f\x88\x30\xdc\x56\xd4\x4a\x46\x2a" +
	"\x47\xee\xac\x65\xd9\xca\xbb\xc8\xf1\x92\x3a\xee\xef\xed\xbd\x9a\x14\x4f\x91\x53\xdf\x8e\x83\x24\x4e\xd0\xd2\x12" +
	"\x6f\x19\x17\x0b\xc7\x7f\xcf\xa3\x5e\x4b\x0a\x2f\xc3\x80\x14\x26\x3f\xde\x61\x3c\xf7\x8a\x7e\xec\x38\x51\xe4\x97" +
	"\x4d\x54\x16\xfa\x0f\xee\x2b\x74\xe0\x32\x2e\x80\xeb\x44\xdd\x8f\x0a\x7d\x76\x59\x65\x80\x1d\x51\x8b\xab\x29\x40" +
	"\xa7\x7c\x97\x4c\x1e\x6e\x35\x69\x37\x48\x62\x13\xe5\xd4\xbb\xdf\x14\xbb\x5b\xb1\x9e\x8b\xeb\x33\x17\x35\x6e\x9d" +
	"\xd9\x8d\x50\x30\x7e\x1a\xd2\x28\xae\x2c\xab\xb8\x6d\xd8\xd7\x62\x32\xbc\x16\x03\x3a\x4e\xfc\x0f\x57\xb6\x16\xbc" +
	"\x69\x23\x0b\xbc\xe2\xcf\x45\xb8\x7a\xeb\xe2\xf1\x64\xfb\xb6\x97\xb0\x4c\x59\xd1\x73\x31\xbd\xfe\xbc\x6c\xd9\xce" +
	"\x14\x79\xcc\x56\xea\x9f\x70\x38\x8a\x9c\xe6\xc8\x57\xbd\x95\xb7\xff\xc5\x6b\xcd\xe1\xdf\xd2\x75\xbb\x5f\x3d\xf3" +
	"\xb5\x4f\x77\x51\xfd\x0a\x00\x00\xff\xff\x62\xfe\x79\x2f\x5e\x05\x00\x00")

func bindataClusterRoleAlamedaoperatorCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAlamedaoperatorCRyaml,
		"ClusterRole/alameda-operatorCR.yaml",
	)
}



func bindataClusterRoleAlamedaoperatorCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAlamedaoperatorCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/alameda-operatorCR.yaml",
		size: 1374,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556265604, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAdmissioncontrollerSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x31\xaa\x42\x41\x0c\x05\xd0\x7e\x56\x91\x0d\xfc\xe2\xb7\xe9\x5c" +
	"\x83\x60\x7f\xc9\x5c\x21\xf8\x26\x79\x64\xe2\x5b\xbf\x08\xd6\x87\x83\xd3\x1f\xac\xed\x19\x2a\xd7\xff\x78\x79\x4c" +
	"\x95\x3b\xeb\x72\xe3\xcd\x2c\xdf\xd1\x63\xb1\x31\xd1\xd0\x21\x12\x58\x54\xc1\x5c\xbe\xbf\xe9\xcf\x32\xba\xf2\x38" +
	"\x58\x3f\xdc\x27\x8c\x2a\x4f\x4e\x16\x3a\x0b\xfe\x09\x00\x00\xff\xff\x7e\x31\x7e\x77\x63\x00\x00\x00")

func bindataServiceAccountAdmissioncontrollerSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAdmissioncontrollerSAyaml,
		"ServiceAccount/admission-controllerSA.yaml",
	)
}



func bindataServiceAccountAdmissioncontrollerSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAdmissioncontrollerSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/admission-controllerSA.yaml",
		size: 99,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAlamedaaiSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\x31\x0e\x02\x41\x08\x05\xd0\x7e\x4e\xc1\x05\x2c\x6c\xe9\x3c\x83" +
	"\x89\xfd\x0f\x7c\x13\xa2\xc3\x6c\x58\x9c\xf3\xdb\x6c\xfb\x70\xc4\x8b\x75\xc6\x4a\x95\x7d\x1f\x9f\x48\x57\x79\xb2" +
	"\x76\x18\x1f\x66\xeb\x97\x3d\x26\x1b\x8e\x86\x0e\x91\xc4\xa4\x0a\xbe\x98\x74\xdc\x10\x17\x9d\x07\x8c\x2a\x6f\x3a" +
	"\x0b\xbd\x0a\xf1\x0f\x00\x00\xff\xff\xaa\xc4\x7e\xde\x59\x00\x00\x00")

func bindataServiceAccountAlamedaaiSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAlamedaaiSAyaml,
		"ServiceAccount/alameda-aiSA.yaml",
	)
}



func bindataServiceAccountAlamedaaiSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAlamedaaiSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/alameda-aiSA.yaml",
		size: 89,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1554197916, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAlamedadatahubSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\xb1\x0d\x02\x31\x0c\x05\xd0\x3e\x53\x78\x01\x0a\x5a\x77\xcc\x80" +
	"\x44\xff\x89\x3f\xc2\x82\x38\x27\x9f\x2f\xf3\x23\xa4\x6b\x1f\x36\x7f\x30\x77\x9f\xa1\xb2\xae\xed\xe3\x61\x2a\x77" +
	"\xe6\xf2\xce\x5b\xef\xf3\x88\x6a\x83\x05\x43\x41\x9b\x48\x60\x50\x05\x5f\x0c\x1a\x2e\x7f\x7d\x1f\xcf\xd3\xf7\x0d" +
	"\x9d\x2a\x2f\x1a\x13\x35\x13\xfe\x0b\x00\x00\xff\xff\x06\xa1\x23\x4a\x5e\x00\x00\x00")

func bindataServiceAccountAlamedadatahubSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAlamedadatahubSAyaml,
		"ServiceAccount/alameda-datahubSA.yaml",
	)
}



func bindataServiceAccountAlamedadatahubSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAlamedadatahubSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/alameda-datahubSA.yaml",
		size: 94,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAlamedaevictionerSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x31\x0e\x02\x41\x08\x05\xd0\x7e\x4e\xc1\x05\x2c\x6c\xe9\x3c\x83" +
	"\x89\xfd\x0f\xf3\x4d\x88\x0e\x6c\x58\x9c\xf3\xdb\x6c\xfd\x70\xf8\x8b\x75\x7a\x86\xca\xbe\x8f\x8f\xc7\x54\x79\xb2" +
	"\xb6\x1b\x1f\x66\xf9\x8b\x1e\x8b\x8d\x89\x86\x0e\x91\xc0\xa2\x0a\xbe\x58\x9c\xb8\x71\xbb\xb5\x67\xb0\x2e\x3a\x0f" +
	"\x18\x55\xde\x9c\x2c\x74\x16\xfc\x1f\x00\x00\xff\xff\x58\x7c\x98\x9a\x61\x00\x00\x00")

func bindataServiceAccountAlamedaevictionerSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAlamedaevictionerSAyaml,
		"ServiceAccount/alameda-evictionerSA.yaml",
	)
}



func bindataServiceAccountAlamedaevictionerSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAlamedaevictionerSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/alameda-evictionerSA.yaml",
		size: 97,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAlamedagrafanaSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\xb1\x0d\xc2\x40\x0c\x05\xd0\xfe\xa6\xf0\x02\x14\xb4\xee\x98\x01" +
	"\x89\xfe\xcb\xfe\x41\x16\x9c\x2f\x72\x4c\xe6\xa7\x49\xfb\xb0\xc7\x8b\x75\xc4\x4a\x95\xf3\x3e\x3e\x91\xae\xf2\x64" +
	"\x9d\x61\x7c\x98\xad\x5f\xf6\x98\x6c\x38\x1a\x3a\x44\x12\x93\x2a\xf8\x62\xd2\x71\x7b\x17\x36\x24\x2e\x3f\x76\x18" +
	"\x55\x36\x3a\x0b\xbd\x0a\xf1\x0f\x00\x00\xff\xff\x5c\xef\x2c\xe0\x5e\x00\x00\x00")

func bindataServiceAccountAlamedagrafanaSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAlamedagrafanaSAyaml,
		"ServiceAccount/alameda-grafanaSA.yaml",
	)
}



func bindataServiceAccountAlamedagrafanaSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAlamedagrafanaSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/alameda-grafanaSA.yaml",
		size: 94,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1555988180, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAlamedaoperatorSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x31\x0e\x02\x41\x08\x05\xd0\x7e\x4e\xc1\x05\x2c\x6c\xe9\x3c\x83" +
	"\x89\xfd\xcf\xf0\x4d\x88\x0e\x4c\x58\xdc\xf3\x5b\x68\xfb\x1e\xb6\x3f\x58\x87\x67\xa8\x9c\xd7\xf1\xf2\x30\x95\x3b" +
	"\xeb\xf4\xc9\xdb\x9c\xf9\x89\x1e\x8b\x0d\x43\x43\x87\x48\x60\x51\x05\x6f\x2c\x1a\x2e\xb9\x59\xe8\xac\x7f\x1c\x1b" +
	"\x93\x2a\x4f\xda\x8f\xe1\xdf\x00\x00\x00\xff\xff\x01\x08\xdb\x27\x5f\x00\x00\x00")

func bindataServiceAccountAlamedaoperatorSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAlamedaoperatorSAyaml,
		"ServiceAccount/alameda-operatorSA.yaml",
	)
}



func bindataServiceAccountAlamedaoperatorSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAlamedaoperatorSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/alameda-operatorSA.yaml",
		size: 95,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleBindingAdmissioncontrollerCRByaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\xb1\x4e\xc4\x30\x0c\xc6\xf1\x3d\x4f\xe1\x17\x68\x11\x1b\xca\x06" +
	"\x0c\xec\x45\x62\x77\x13\x17\x4c\x53\x3b\x72\x9c\x0e\x3c\x3d\xaa\x44\x07\x74\xa7\xd3\xcd\x9f\xbe\xff\x0f\x2b\x7f" +
	"\x90\x35\x56\x89\x60\x33\xa6\x11\xbb\x7f\xa9\xf1\x0f\x3a\xab\x8c\xeb\x53\x1b\x59\x1f\xf6\xc7\xb0\xb2\xe4\x08\xaf" +
	"\xa5\x37\x27\x9b\xb4\xd0\x0b\x4b\x66\xf9\x0c\x1b\x39\x66\x74\x8c\x01\x40\x70\xa3\x08\x0b\x65\x32\x74\x35\xe4\x01" +
	"\xf3\xc6\xed\xc8\x0f\x49\xc5\x4d\x4b\x21\x0b\xa6\x85\x26\x5a\x8e\x07\x56\x7e\x33\xed\xf5\x86\x1e\x00\x2e\xf0\xfb" +
	"\xad\xd6\xe7\x6f\x4a\xde\x0e\x6c\xf8\x0b\xbd\x93\xed\x9c\xe8\x39\x25\xed\xe2\x01\xe0\xac\x5d\x2d\x9c\x73\xab\x98" +
	"\xfe\x8b\xbf\x01\x00\x00\xff\xff\x96\x62\xb4\x2f\x3d\x01\x00\x00")

func bindataClusterRoleBindingAdmissioncontrollerCRByamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleBindingAdmissioncontrollerCRByaml,
		"ClusterRoleBinding/admission-controllerCRB.yaml",
	)
}



func bindataClusterRoleBindingAdmissioncontrollerCRByaml() (*asset, error) {
	bytes, err := bindataClusterRoleBindingAdmissioncontrollerCRByamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRoleBinding/admission-controllerCRB.yaml",
		size: 317,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleBindingAlamedadatahubCRByaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\x31\xae\xc2\x30\x0c\xc6\xf1\x3d\xa7\xc8\x05\xda\xa7\xb7\xa1\x6c" +
	"\xc0\xc0\x5e\x24\x76\x37\x71\xa9\x69\x1a\x47\x8e\xd3\x81\xd3\xa3\x0a\x84\x04\x48\x88\xd5\xfa\xfc\xff\x41\xa6\x13" +
	"\x4a\x21\x4e\xce\x4a\x0f\xbe\x85\xaa\x23\x0b\x5d\x41\x89\x53\x3b\x6d\x4a\x4b\xfc\xb7\xfc\x9b\x89\x52\x70\x76\x1f" +
	"\x6b\x51\x94\x8e\x23\xee\x28\x05\x4a\x67\x33\xa3\x42\x00\x05\x67\xac\x4d\x30\xa3\xb3\x03\x06\x14\x50\x16\xa0\x06" +
	"\x22\xcc\x18\xa0\x59\x17\x63\xed\x8d\x70\xc4\x0e\x87\x75\x0c\x99\x0e\xc2\x35\x7f\x81\x8d\xb5\x1f\xee\x4f\x4c\xa9" +
	"\xfd\x05\xbd\x16\x67\x9a\x47\xe1\x88\xb2\x90\xc7\xad\xf7\x5c\x93\x3e\x23\xef\x8f\xf7\x7b\xc9\xe0\x5f\x85\x5b\x00" +
	"\x00\x00\xff\xff\xc4\x91\x85\x3b\x28\x01\x00\x00")

func bindataClusterRoleBindingAlamedadatahubCRByamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleBindingAlamedadatahubCRByaml,
		"ClusterRoleBinding/alameda-datahubCRB.yaml",
	)
}



func bindataClusterRoleBindingAlamedadatahubCRByaml() (*asset, error) {
	bytes, err := bindataClusterRoleBindingAlamedadatahubCRByamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRoleBinding/alameda-datahubCRB.yaml",
		size: 296,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleBindingAlamedaevictionerCRByaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\x31\x0e\xc2\x30\x0c\x85\xe1\x3d\xa7\xc8\x05\x5a\xc4\x86\xb2\x01" +
	"\x03\x7b\x91\xd8\xdd\xc4\x05\xd3\x34\x8e\x1c\xa7\x03\xa7\x47\x15\x08\x09\x81\x10\xb3\xfd\xfe\x0f\x32\x9d\x50\x0a" +
	"\x71\x72\x56\x7a\xf0\x2d\x54\xbd\xb0\xd0\x0d\x94\x38\xb5\xe3\xa6\xb4\xc4\xab\x79\x6d\x46\x4a\xc1\xd9\x7d\xac\x45" +
	"\x51\x3a\x8e\xb8\xa3\x14\x28\x9d\xcd\x84\x0a\x01\x14\x9c\xb1\x36\xc1\x84\xce\x0e\x18\x50\x40\x59\x80\x1a\x88\x30" +
	"\x61\x80\x06\x67\xf2\x4b\x11\xc5\x08\x47\xec\x70\x58\xfe\x21\xd3\x41\xb8\xe6\x1f\xb6\xb1\xf6\x83\xfe\x57\x2a\xb5" +
	"\xbf\xa2\xd7\xe2\x4c\xf3\x8c\x1c\x51\x66\xf2\xb8\xf5\x9e\x6b\xd2\x57\xe7\xcb\xf6\x71\x2a\x19\xfc\xbb\x73\x0f\x00" +
	"\x00\xff\xff\x2e\xae\x54\xf5\x31\x01\x00\x00")

func bindataClusterRoleBindingAlamedaevictionerCRByamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleBindingAlamedaevictionerCRByaml,
		"ClusterRoleBinding/alameda-evictionerCRB.yaml",
	)
}



func bindataClusterRoleBindingAlamedaevictionerCRByaml() (*asset, error) {
	bytes, err := bindataClusterRoleBindingAlamedaevictionerCRByamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRoleBinding/alameda-evictionerCRB.yaml",
		size: 305,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleBindingAlamedagrafanaCRByaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\x31\x4e\xc6\x30\x0c\xc5\xf1\x3d\xa7\xc8\x05\x5a\xc4\x86\xb2\x01" +
	"\x03\xfb\x87\xc4\xfe\x9a\xb8\xc5\x34\xb5\x23\xc7\xe9\xc0\xe9\x11\x02\x21\x01\x12\x62\xb5\xfc\xfe\x3f\x34\x7e\x22" +
	"\xeb\xac\x92\xa2\x2d\xc8\x33\x86\x3f\xab\xf1\x2b\x9c\x55\xe6\xfd\xa6\xcf\xac\x57\xe7\x75\xd8\x59\x4a\x8a\xf7\x75" +
	"\x74\x27\xbb\x68\xa5\x3b\x96\xc2\xb2\x85\x83\x1c\x05\x8e\x14\x62\x14\x1c\x94\xe2\x4a\x85\x0c\xae\x06\x9e\x50\x71" +
	"\x50\xc1\xb4\x19\x56\x08\x82\x69\xa5\x0b\xad\xef\xcf\x68\xfc\x60\x3a\xda\x1f\x70\x88\xf1\x97\xfb\x2f\xa6\x8f\xe5" +
	"\x85\xb2\xf7\x14\xa6\xcf\xc2\x23\xd9\xc9\x99\x6e\x73\xd6\x21\xfe\x15\xf9\x39\xfc\xb8\xf7\x86\xfc\x5d\x78\x0b\x00" +
	"\x00\xff\xff\x75\x1b\xd8\xd0\x28\x01\x00\x00")

func bindataClusterRoleBindingAlamedagrafanaCRByamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleBindingAlamedagrafanaCRByaml,
		"ClusterRoleBinding/alameda-grafanaCRB.yaml",
	)
}



func bindataClusterRoleBindingAlamedagrafanaCRByaml() (*asset, error) {
	bytes, err := bindataClusterRoleBindingAlamedagrafanaCRByamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRoleBinding/alameda-grafanaCRB.yaml",
		size: 296,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1555988180, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleBindingAlamedaoperatorCRByaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\xbd\x0a\xc2\x30\x10\xc0\xf1\x3d\x4f\x91\x17\x68\xc5\x4d\xb2\xa9" +
	"\x83\x7b\x05\xf7\x6b\x72\xd5\xb3\x69\x2e\x5c\x2e\x1d\x7c\x7a\x91\x8a\x20\x05\x71\xbd\x8f\xff\x0f\x32\x5d\x50\x0a" +
	"\x71\x72\x56\x7a\xf0\x2d\x54\xbd\xb1\xd0\x03\x94\x38\xb5\xe3\xae\xb4\xc4\x9b\x79\x6b\x46\x4a\xc1\xd9\x63\xac\x45" +
	"\x51\x3a\x8e\x78\xa0\x14\x28\x5d\xcd\x84\x0a\x01\x14\x9c\xb1\x36\xc1\x84\xce\x0e\x18\x50\x40\x59\x80\x1a\x88\x30" +
	"\x61\x80\x86\xf3\x32\x32\xc2\x11\x3b\x1c\x5e\xd7\x90\xe9\x24\x5c\xf3\x0f\xd9\x58\xbb\x82\xff\x73\x4a\xed\xef\xe8" +
	"\xb5\x38\xd3\xbc\x13\x67\x94\x99\x3c\xee\xbd\xe7\x9a\xf4\x53\x59\x7d\x2e\x8b\x92\xc1\x7f\x1b\xcf\x00\x00\x00\xff" +
	"\xff\xa8\xcd\x05\x0d\x2b\x01\x00\x00")

func bindataClusterRoleBindingAlamedaoperatorCRByamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleBindingAlamedaoperatorCRByaml,
		"ClusterRoleBinding/alameda-operatorCRB.yaml",
	)
}



func bindataClusterRoleBindingAlamedaoperatorCRByaml() (*asset, error) {
	bytes, err := bindataClusterRoleBindingAlamedaoperatorCRByamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRoleBinding/alameda-operatorCRB.yaml",
		size: 299,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataSecretAdmissioncontrollertlsyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x3d\x0a\x82\x41\x0c\x04\xd0\x3e\xa7\xc8\x05\xbe\xc2\x36\x97\xb0" +
	"\x10\xec\x87\xdd\x11\x82\xfb\x67\x36\x0a\xde\x5e\x44\xfb\xf7\x04\xcb\xaf\x8c\xed\x73\x98\xbe\x4e\x72\xf7\x51\x4d" +
	"\x2f\x2c\xc1\x94\xce\x44\x45\xc2\x44\x75\xa0\xd3\x14\xb5\xfb\xfe\xe2\xa3\xcc\x91\x31\x5b\x63\x1c\xd9\xf6\x1f\xec" +
	"\x85\x42\xd3\x1b\x2b\x03\x39\x03\x2e\xbf\x9f\xef\x45\xd3\xf3\xc2\xe3\xc9\x4f\x00\x00\x00\xff\xff\xc0\x89\x2c\x4b" +
	"\x73\x00\x00\x00")

func bindataSecretAdmissioncontrollertlsyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataSecretAdmissioncontrollertlsyaml,
		"Secret/admission-controller-tls.yaml",
	)
}



func bindataSecretAdmissioncontrollertlsyaml() (*asset, error) {
	bytes, err := bindataSecretAdmissioncontrollertlsyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Secret/admission-controller-tls.yaml",
		size: 115,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1554254667, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataSecretAlamedainfluxdbyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x31\x0e\xc2\x30\x0c\x05\xd0\x3d\xa7\xf0\x05\x3a\xb0\xfa\x12\x0c" +
	"\x48\xec\x9f\xfa\x57\xb2\x48\xd2\xe0\xb8\x08\x6e\xcf\x40\xe7\xa7\x87\xe1\x77\xc6\xf4\xbd\xab\xbc\x2f\xe5\xe9\xdd" +
	"\x54\x6e\x5c\x83\x59\x1a\x13\x86\x84\x16\x91\x8e\x46\x15\x54\x34\x1a\x16\xef\x5b\x3d\x3e\xf6\x58\xb2\xce\x13\xe7" +
	"\xc0\x4a\x95\x8d\xc6\x40\xee\x01\x2f\xff\x9b\xdf\x41\x95\xeb\xc0\xeb\xe0\x2f\x00\x00\xff\xff\x82\xf8\x7a\xe9\x6e" +
	"\x00\x00\x00")

func bindataSecretAlamedainfluxdbyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataSecretAlamedainfluxdbyaml,
		"Secret/alameda-influxdb.yaml",
	)
}



func bindataSecretAlamedainfluxdbyaml() (*asset, error) {
	bytes, err := bindataSecretAlamedainfluxdbyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Secret/alameda-influxdb.yaml",
		size: 110,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1554254667, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataConfigMapDashboardsconfigyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\xf9\x72\xdc\x36\xb6\xf7\xff\x7a\x0a\x5c\x4e\xee\x5c\xc9\xb7\x25" +
	"\x37\x5b\x6a\x2d\x5d\xe5\xa9\x52\xe4\x2c\xae\x8a\x1d\x7d\x5e\x32\x95\x89\x7c\xbb\x20\x12\xdd\x4d\x8b\xdb\x70\xd1" +
	"\x12\xc7\xf3\xec\x5f\x11\x5c\x41\x1c\x80\xec\x9d\x92\xd0\x55\x33\xb1\x08\x10\xc4\x72\x70\x70\x70\xb6\x1f\xf6\xad" +
	"\xdf\x48\x10\x5a\x9e\x3b\x42\xb7\xfa\xce\x8d\xe5\x9a\x23\x74\xe1\xb9\x13\x6b\xfa\x16\xfb\x3b\x0e\x89\xb0\x89\x23" +
	"\x3c\xda\x41\xc8\xc5\x0e\x19\x21\x13\x87\xb3\x6b\x0f\x07\x66\xb8\x6f\xd0\x6a\x59\x49\xe8\x63\x83\x8c\xd0\x84\x98" +
	"\x24\xc0\x91\x17\x60\x6b\x87\xbe\x88\xd0\x0e\x42\x86\x1d\x87\x11\x09\x66\x04\xdb\xd1\xec\xe0\x4b\xe8\xb9\x49\x83" +
	"\x08\xfd\xb5\x4f\xff\x83\xd0\xd7\xec\xbf\x08\x69\xd8\x75\xbd\x08\x47\x96\xe7\x86\xda\xa8\x52\x80\x90\x66\x5b\x61" +
	"\xa4\x8d\xd0\x1f\x95\x67\x88\xa9\x41\x6b\x5d\xc7\x96\x1d\xbd\x71\xb5\x11\xd2\x7b\xf5\xb2\xa4\x4b\xa1\x17\x07\x06" +
	"\xd1\x46\x48\xdb\xdf\x47\x3f\x05\x78\x82\x5d\x8c\xf6\xf7\x35\xae\x32\x71\xf1\xb5\x9d\x54\x8c\x82\x98\x70\xa5\x33" +
	"\xcb\x14\x96\x59\x86\xe7\x5e\x78\xb6\x17\x24\x5f\x09\xa6\xd7\x78\xb7\xdf\x43\x03\x5d\xef\xa1\xc1\x70\xd8\x43\xfa" +
	"\x1e\xff\xb1\x64\x0e\x93\xda\xe7\xe5\xf0\xd1\xdf\xd1\xb9\x4d\x82\x28\xe4\x6b\x47\x0f\x3e\xad\x5d\xac\x86\xc6\xd4" +
	"\xf8\x56\xf9\xeb\x73\xf1\xef\x6f\x65\x33\x1a\x31\xad\x08\x1c\x9d\x36\x75\x49\xf4\xc6\xd4\x46\xc8\x8d\x6d\xbb\xfa" +
	"\x3c\xc0\xfe\xec\xa3\xe7\xd9\x91\xe5\x6b\x23\xd4\xaf\x14\x59\x26\x3b\xd9\x9a\x6d\xb9\x37\xc9\xea\xfd\xf1\xb9\xf2" +
	"\xd0\xc7\x2e\xb1\xc3\xda\xfa\xb1\xab\xa7\x19\x9e\x6d\x63\x3f\x24\x49\x83\x13\x6c\x87\xb5\xa9\xd5\xa6\x81\x65\x5e" +
	"\x7a\x75\xc2\x48\xd7\x03\x5c\xf0\x3b\x6d\x84\x06\x47\xdc\xe3\x7b\x76\x04\xd9\xd3\x87\xe4\x29\x3b\x91\xb5\xef\xd3" +
	"\x91\x9e\xd6\x1e\x96\x03\xfb\x5c\x2b\x89\xac\x88\x4e\xb1\x76\x91\x6e\x00\xf4\x33\xdd\x01\xe8\x43\x84\xa3\xb8\xbe" +
	"\xac\xc5\xa2\x06\xde\x5d\x75\x39\x99\x3e\xd4\xe7\x0b\x1b\x33\xf2\xd1\x72\x88\x17\x47\xdc\x92\xa1\x6c\x46\xbd\xe0" +
	"\x7b\x6c\xdc\x4c\x03\x2f\x76\x45\xf3\x4a\x6b\xfd\x86\xed\x18\x26\xe9\xb4\xbc\xbe\x76\xb4\x84\x52\xf7\xe0\x68\xd8" +
	"\x43\xc3\xa3\xf4\x7f\xfd\x83\x33\x80\xbe\xd3\x7a\x87\x27\x3d\xa4\x0f\xce\x7a\xe8\xa8\x9f\x54\x3c\x15\xd6\x1c\xf6" +
	"\x7b\x48\x3f\x19\xf4\x50\xd2\x72\xff\xe0\xec\x64\x8f\xa5\xf0\xfa\x4c\xb3\x1b\xfb\x32\xf0\x1c\x12\xcd\x08\x3f\xc7" +
	"\x42\xba\xa7\xa5\x13\x2f\x70\x70\x32\x91\x9a\x4f\x02\x83\xb8\x51\xec\x5a\x51\xbd\x89\x29\x8e\xa7\x04\xa2\x40\x07" +
	"\xdf\xe7\x53\xc8\x13\xa2\x63\xb9\x79\x21\x4f\x78\xe1\xcc\xbb\x13\xf1\x92\x68\x16\x90\x70\xe6\xd9\xe6\x2f\xf8\x3a" +
	"\x25\x33\x79\xb5\xb7\x38\xb8\x21\x41\x5e\x4f\x4a\xcd\x0d\xbb\x69\x08\xee\xa6\x79\x36\x93\xde\xbc\x99\x06\xc7\xf5" +
	"\xa7\x6e\x44\x82\x5b\x6c\xc3\xe4\x0c\x71\x16\x94\x4e\xbe\xef\x5b\xee\xf4\x63\xba\x87\x74\x71\x29\x44\xc5\xf5\xe1" +
	"\x57\xf8\xf1\x6d\xb2\x68\x28\xf2\x50\x44\xee\xeb\xa4\x40\x2b\xde\xe6\x4b\x5e\x2b\xfa\x56\xaf\x2b\xf9\x48\x80\xdd" +
	"\x69\xab\x8f\x0c\xea\x1f\x91\x6e\x0a\x07\xdf\xbf\xc6\x11\xbe\xf4\x2c\x37\x4a\x86\xad\xf7\x6b\xcb\xa4\x25\x33\x4c" +
	"\x8b\xdf\x7a\xf4\x34\xd3\x0c\xcf\x75\x89\x11\x11\xb3\x4e\xf5\x49\xcd\x8f\x49\xef\xc0\x65\xf1\xbd\x30\x9a\x58\x09" +
	"\x21\x68\xf5\x17\xb3\xa2\x1f\x3d\x37\xfa\x60\xfd\x49\x3f\x32\xec\xff\x37\x57\x2b\x20\xa2\xf7\x69\x49\xc3\xeb\x74" +
	"\x02\xdf\x62\xbf\xe5\xe2\x4e\x02\xcf\x49\x5a\x4a\x46\x02\x4d\x77\x94\x0e\x54\x7b\xf7\xf2\x1c\x2c\xf6\x8a\x97\xe7" +
	"\x5a\x8f\xd0\xc7\xc1\x8d\x6d\xb9\x20\xf7\x98\x58\xb6\xcd\xca\x0c\x87\x7a\x0f\xe9\xfa\x69\x0f\xe9\xa7\x67\x09\x13" +
	"\xd4\x4f\x01\x6e\x39\x49\x7a\x01\x32\xf5\x74\xb7\x90\x6a\x9b\x69\x93\x83\x84\xb7\x9e\x1d\x02\x8d\x65\x7c\x88\x36" +
	"\x26\xdd\xba\x94\x87\x5e\x78\x76\xec\xb8\xd0\x9a\x45\x38\x98\x92\xa8\xe5\x62\x90\x7b\x9f\xf6\x6f\x37\x8c\x9d\xdd" +
	"\xd8\xff\xfa\xc5\xbb\x7e\xf5\x9f\x2b\xed\xe0\x05\xf6\xad\x90\x04\xb7\x24\x38\x78\x71\xa5\x7d\x43\xaf\x5e\x21\x7d" +
	"\x0f\xbd\x44\x86\x17\xbb\x91\xa4\xe2\x1e\x3f\x30\x86\xb5\x47\x96\x43\xc6\x21\x09\x2c\xc2\x0b\x56\x15\xfe\xf3\x23" +
	"\x36\x22\x3a\x71\x03\xa0\x52\x40\x26\x54\x46\xd2\x40\xfa\x08\x23\x92\x88\x48\xc7\xfd\xfe\x5c\xe4\x51\xb0\xf0\x64" +
	"\xe2\xb4\xfe\x01\x3d\xf9\x4e\xb9\xb9\xcd\x65\x8a\xf3\xcb\x37\xe8\x03\x1d\x76\x88\x3e\x5d\x72\xd5\x02\xec\x26\xf4" +
	"\x46\xdc\x08\x3e\xeb\x72\x69\x23\xb4\xdc\xa9\x4d\xc2\x08\x73\x07\x1d\x65\x3a\xd5\x8d\x77\xca\x6f\x3c\x5a\xa7\xfd" +
	"\xc6\xf3\x92\x79\xd1\x5e\x2d\xb0\xe7\x72\x0e\xb8\xc0\xb6\xa3\xaf\xbe\xcb\x58\x2d\xbe\x9d\xb6\x15\xae\xb0\x6d\xe1" +
	"\xf0\x22\x97\x7c\xbe\xd6\xf7\xc0\x35\xa6\xcf\x21\x71\x2a\x11\xcb\x7f\x21\xee\x34\xa2\x42\x69\x9d\xe9\x26\xa5\x44" +
	"\xfc\xea\x2a\x04\x19\x12\x04\x94\x76\xa1\x2f\x24\x8c\x06\x38\x22\x13\x61\x00\xe2\x4b\x05\x55\xea\x2c\x77\x1a\xe8" +
	"\xc7\x3d\x34\xe8\x27\x17\x9b\x93\x84\x50\x07\x27\x00\x43\x29\x5e\x1e\xd4\x5e\x3e\x3c\x4a\x78\xdb\x20\xfb\xbf\xfe" +
	"\xc1\x60\x50\x13\xf0\x56\x22\xab\xd4\xa7\x3e\x13\x56\x78\x11\xa6\xa5\xb0\x72\x38\xa8\x3f\x0d\xdf\x91\x3b\xc1\x3c" +
	"\xdb\x64\x4a\x5c\x70\x4a\xb1\x6d\x4d\xdd\xf3\xf0\x63\xb6\x7e\x30\xef\x4e\x08\x55\x54\x66\xc4\x41\xb6\xb1\xe1\xf2" +
	"\xe4\x6e\xfa\x83\xe3\x47\x0f\xd2\x1a\xff\x22\x81\x27\xac\xe0\xe0\x7b\x71\x99\xe5\x0a\xcb\x02\x6b\x3a\x8b\x3e\xa4" +
	"\x77\x63\xb8\x86\x54\xd8\xf5\x22\x2c\x3e\xce\xe8\x46\x0e\x5b\x1d\x50\xc9\xc9\x07\xcb\xca\xb4\xe8\xce\x32\x23\xe0" +
	"\xc2\x28\x16\x2f\x39\x41\x09\x10\x1d\xf2\x4b\x03\x9e\x0a\x06\xaf\xf9\x49\x0b\x01\x36\xad\x38\xe4\x69\x36\x2d\x15" +
	"\xf1\x85\x80\xb8\x26\x09\x08\xdd\x42\x13\xdb\xe3\x98\x75\x7a\xa0\xfd\x7a\x4b\x82\xc0\x32\x09\x38\x06\xaa\xa2\x11" +
	"\xb3\xa5\x30\xc2\xc6\x8d\xe0\xeb\xc9\x89\xe6\x13\xf3\x97\x54\x76\x81\x6a\x2c\x74\xe4\x87\xb1\x83\xae\x1f\x76\x2d" +
	"\x37\x8c\xb0\x6b\x90\x3d\xb4\x1b\xe0\x88\xec\x16\xe7\xf9\x38\x20\xff\x8e\x49\x18\x8d\xe9\x99\xff\xd5\xf0\x4c\x92" +
	"\x9c\xf8\xc3\x83\x83\x2b\xed\xdb\x1f\x43\xe7\xf3\x5e\x22\x10\xcc\xd7\x4a\xfa\xda\xfa\x45\x84\x74\xfb\xff\x58\xb4" +
	"\xf9\xf5\x6b\xde\xc1\x6f\xdf\xa0\x46\x5b\x8a\x14\x8b\x4b\x14\x80\x76\xc2\x21\x3f\xa6\x92\x30\x20\xd2\x27\xa5\xef" +
	"\xc9\x34\xd3\xc3\x81\x2f\x7f\x98\x59\x13\xc1\x85\x00\x90\x52\xd0\xfb\x74\x19\xd0\x0f\xc9\xe1\x84\xde\xe3\x88\x9b" +
	"\x5d\x2d\x2a\xf4\x4b\xfc\xed\x3a\x7c\x4f\x42\xcf\x8e\x23\xcb\x13\x73\x9f\x70\x86\x03\xaa\x3c\x02\xb9\x4b\xe8\x05" +
	"\x11\x78\x57\xa5\x8c\x65\x9c\x4b\x44\x96\x6b\x5a\xb7\x96\x19\x63\x5b\x7e\x24\xb1\x22\x16\xb8\x29\xb2\x16\xa9\xee" +
	"\xac\x3e\xd6\x7b\x7c\x6f\x81\xe7\xd9\x75\x6c\xdc\xa4\x5b\x89\x9f\xd8\x64\x22\x32\x0e\x94\xac\x80\x50\x8f\x08\xbe" +
	"\x29\xe3\xbc\x05\x6f\xfd\xe3\xb3\x74\xd0\x0f\xf8\xbe\xed\x15\xba\x8d\x36\x85\x56\xb4\xbd\xe9\xf7\x38\x04\xf5\x26" +
	"\xc5\x49\xa4\xe9\xe0\xb6\x28\x47\x54\xdf\x18\x2d\xae\xdf\x65\x07\xc3\x59\x42\x1a\x73\x77\x4d\xf2\x79\xe9\xbe\x7c" +
	"\x10\x2d\x3d\x95\x0c\xc4\x22\x41\x52\xfa\x0b\xb9\x25\xb9\x72\x64\x47\xf4\xc9\x47\xa0\x33\x04\x34\x7c\xcb\x2a\x0d" +
	"\x79\x35\xa4\x74\x15\xda\x8a\xda\x26\x09\x8d\xc0\xf2\x33\xc6\xa3\x5d\x04\x38\x9c\x59\xee\x14\x5d\x7a\x66\x88\x2c" +
	"\x17\x19\x9e\x1b\x05\x9e\x8d\x7c\x1b\xbb\x04\xed\xde\xc4\xd7\x64\x3f\x7c\x08\x23\xe2\xd4\x3b\xda\x5a\xfd\xe8\x7a" +
	"\x6e\x7d\x6f\xb7\xd3\x3b\xd6\x35\x3c\x2d\x35\x8f\x30\xbd\xf1\xaa\xc7\x86\x7a\xeb\xd6\x3d\xf2\x4f\x13\xd6\xa0\x2f" +
	"\x2c\xcf\xd7\x2d\x03\x4a\xf9\xa8\x94\x8f\x40\x89\x52\x3e\x3e\x79\xe5\x63\xaa\x54\xb4\x5c\x23\x20\x38\x24\x94\x87" +
	"\x8f\x7d\xcf\x1c\x27\xbc\x1d\x5b\x2e\x09\xc6\x21\xb5\xd9\x8d\x03\x12\x46\x38\x88\xc2\x31\xbd\xaa\x7e\x2d\x4c\xdf" +
	"\xc9\xbd\xa4\xc2\xf9\x93\xfb\x89\x3e\xfb\xbc\x87\xfe\x81\x86\x4f\x43\x1f\xa9\xf7\xd0\xa1\x50\x17\x59\x9c\x89\x17" +
	"\xd9\x59\x78\x49\xcf\xc2\xe4\x84\x94\x2b\x26\x65\x52\x73\xd7\x34\x93\xfd\x75\xea\x25\x73\x95\x8e\x12\xe2\xb6\x24" +
	"\xc4\x65\x16\xfa\x84\x07\xd8\xb1\x49\x50\x34\x23\xac\x64\xa7\x84\xb9\xe2\xb7\x4e\x61\xee\x6c\x51\x61\x6e\xc8\x29" +
	"\x67\x95\x30\xa7\x84\x39\xae\x44\x09\x73\x4a\x98\x83\x85\xb9\x67\x29\xb0\x29\x11\x4d\x36\xa3\x9d\x13\xd1\x84\x15" +
	"\x9e\x93\x73\xde\xb3\x17\xa8\x78\x85\xd7\xbc\x9e\x79\xc7\xcd\xf2\xd4\x91\xf2\xcc\x53\xf2\x94\x92\xa7\x94\x3c\xa5" +
	"\x31\x1e\x77\xa9\x9a\xcb\x26\xd1\x95\xf6\xed\x69\x08\x4a\x42\x21\xe9\x63\x22\x15\xa2\x77\x9e\x09\x18\xaa\x1f\xad" +
	"\x88\xb4\x66\xff\xba\x2e\x08\x49\x4f\x39\x80\xc1\x24\x86\xe5\x60\x1b\xf6\x0e\x50\xe1\x0d\xcc\x48\x56\x27\x44\xc1" +
	"\x16\x46\xb9\x10\x35\xb3\x4c\x4a\xd9\xb9\x4f\x96\x80\x72\x53\x43\xa4\xd2\x5d\x29\x59\x4b\xc9\x5a\x4a\xd6\xd2\xc2" +
	"\xd8\x49\x15\x56\xae\x67\x92\x5c\x4f\x65\x78\xae\x69\x45\x96\xe7\x7e\x2d\xfe\xf5\xea\x4a\x7b\x4f\xb0\xf9\x70\xa5" +
	"\xf5\xd2\x4a\xaf\xae\xb4\x84\x23\x26\x52\x59\xea\x13\x39\x67\x33\x9b\x10\xe6\xea\x3e\x91\x4b\xf8\x41\x2e\x1b\x5a" +
	"\xd1\x3f\x38\x13\xca\x7d\x89\xc4\x87\xe8\xb4\xa8\xa8\x0a\xe1\x94\x32\x52\x9f\x63\xb9\x4a\xe2\x53\x21\xab\x59\xd9" +
	"\xe3\x90\xe9\x4e\x17\x55\x8c\x0d\xea\x01\xe0\x4a\x58\x53\xc2\x1a\x5f\xa2\x84\xb5\x27\x2f\xac\x55\x43\x56\xab\x7a" +
	"\x31\x38\x56\x95\xd1\x9c\x3d\x0d\xd5\x59\x63\x90\x2a\x55\x9e\xa9\xf0\x54\xd9\x8c\x3e\x72\x41\xea\x31\xb9\x80\x29" +
	"\xd5\xd9\xe6\xc5\x2c\x9d\x63\x4d\xab\xd6\x9d\xd5\x25\x04\x25\x8e\x29\x71\x8c\x2f\x51\xe2\xd8\x93\x17\xc7\xe6\x50" +
	"\x7a\xbd\x25\x8e\x17\x3c\x5c\x06\x24\x0c\xe3\x80\x2c\xaf\x44\xab\xb7\xf7\xac\xb4\x69\x7a\xaf\x7f\x30\x94\x6b\xd3" +
	"\xd2\xf9\x41\xf9\x04\x29\x71\x50\x38\xb9\xac\x38\x88\xef\x95\x38\xb8\x26\x71\x50\x09\x7c\xd5\x91\xac\x50\xe0\x3b" +
	"\x5e\xb3\xc0\x37\xac\xcb\x66\x4a\xe0\x53\x02\x1f\x5f\xa2\x04\x3e\x25\xf0\x95\x02\xda\x6b\x2b\xbc\x59\x9d\xb8\xc7" +
	"\xb6\xa6\x84\x3d\x56\xd8\x4b\x66\x47\x89\x7a\xcd\x53\xab\x44\x3d\xae\xe6\x46\x82\x3f\x2f\x8b\x3c\x5d\xc8\x9b\x20" +
	"\x97\xaa\xa8\xbd\x5b\x12\x14\x41\xa0\xd1\x0c\x47\x68\x86\x6f\x09\x8a\xdd\xd0\x98\x11\x33\xb6\x89\x89\xbc\xeb\x2f" +
	"\xc4\xe0\xb2\x71\x2b\x39\x92\x19\xc9\xea\xe4\xc8\xba\x5e\x6f\xe5\x72\x64\x5d\x33\xa9\xe4\x48\x25\x47\x02\x25\x4a" +
	"\x8e\x7c\x6e\x72\xa4\x4f\x8c\x71\xc1\xf8\x93\xcf\xed\x21\xa9\x2d\xf7\x59\x49\x7f\xa8\x49\xfc\x0b\xd1\xa7\xea\xdc" +
	"\x75\x41\xfe\x5b\x99\xe0\xb5\x75\x78\x0a\xbd\x05\x3e\xc5\xf0\xac\xce\xc7\xda\x03\x54\xbc\x27\xa9\x3c\x85\x3e\x85" +
	"\x78\xca\xaf\xdd\xfc\x08\x15\x9d\x4e\xa2\x5c\x93\x0b\x3f\x45\x96\x6d\xfd\x49\xc1\x57\x10\x9e\x62\xcb\x0d\x23\x44" +
	"\x23\xc3\x0b\xc1\xf0\xe2\xf2\x13\x0a\xb2\x29\xaa\x37\x26\xc9\xab\x2c\xa1\x09\x5e\x59\x76\x07\x1b\x4d\x25\x34\xd1" +
	"\x26\x39\x46\x3d\xd3\x99\x24\x3b\xf1\x12\x89\x87\x17\xcd\x1a\xac\x72\x02\xab\x9c\xc0\xd9\x59\x9c\x1c\xc1\x23\x7a" +
	"\x0e\x1b\x7e\x3c\x8e\x93\x2d\x19\xd2\x2d\x39\xc2\xb7\x53\xdd\x41\x2f\x50\x59\xc3\x8d\x9d\xa4\xd6\x28\x8c\x1d\xf4" +
	"\x12\x85\x06\xb6\x71\x40\x7d\xb2\xc0\x2a\x4b\xfa\x5c\x25\x57\x69\xff\xfb\x07\x60\x34\xf0\x88\x50\xca\x7a\x03\xec" +
	"\x40\x33\x50\xd4\xf8\x6e\x3c\x2e\xee\x1d\x60\x9d\xcf\x7c\x5f\x50\x95\x19\xd3\x3c\xb0\x40\x15\xee\x16\xb0\x54\x37" +
	"\x21\x91\xb3\x5d\xff\x28\x5f\x84\xfa\xc7\x3d\x03\x5a\x5a\x34\xd7\x72\xb2\xf6\x70\x9e\x65\x2f\x30\x49\xf0\xfd\x43" +
	"\x72\x49\xa4\xc2\xd2\x87\x0b\xa8\x96\xef\xd9\x96\x91\xac\xb5\x66\x92\x09\x8e\x6d\xf0\x6a\x24\x97\xb8\x02\x12\xc6" +
	"\x76\xf4\x63\x5b\xf2\x0a\x89\x4d\x0c\x1e\xde\x2c\xfd\xc1\xcb\x02\x2f\x66\x9b\xe5\x2c\xee\x75\x82\x72\xc1\x9a\x32" +
	"\xab\x4a\x6c\x13\x7e\x1d\x24\xbc\x56\xbd\x6d\xfe\xac\x43\xb0\x2b\xf8\x2a\xf0\xf4\x73\x2b\x12\x8b\xf0\x14\x48\x7c" +
	"\xfc\x08\x72\x6b\x27\xd2\xc8\xa7\x92\x41\x72\xd2\x9a\x38\x99\xf6\x66\xf3\x64\xab\x2c\xd8\xad\xb2\x60\xe3\x6b\x02" +
	"\xab\x9e\xd2\xe2\x85\x93\x64\xa7\x82\x17\x9c\x1b\x67\xfd\x09\xb4\x97\x1f\x95\xe0\xd5\x74\x58\x82\x42\xa1\x3a\xa1" +
	"\xd3\xa9\xb9\x9f\xd6\x65\xc9\x49\x7d\x7e\xb6\x78\x5f\x12\xf8\x9e\xb6\xba\x30\xd5\xb3\xdf\xa8\x0b\x53\xbd\x48\x5d" +
	"\x98\x3a\x76\x61\x4a\x37\x1c\x73\x67\x0a\x92\xff\xa8\x6b\x8f\xba\xf6\xa8\x6b\x4f\x5a\x47\x5d\x7b\x8a\xb6\x1f\xeb" +
	"\xb5\x27\xf3\x25\x56\x37\x1f\x75\xf3\x51\x37\x1f\xd1\xb8\xd4\xcd\x07\x6d\xef\xe6\x63\x5a\xe1\x4d\x07\xed\x44\x27" +
	"\x2d\xae\x3d\x75\x79\x5a\x5d\x7b\xea\x45\xea\xda\xd3\x89\x6b\x4f\x18\x3b\xbb\x0e\xbe\xa7\xa6\x9e\xf1\xc4\xb2\x49" +
	"\x0a\xbc\x32\x0e\xad\x3f\xc9\xf8\xfa\x21\x22\xe1\xd7\x49\x98\x1c\xc0\xaf\xfe\x73\xa5\x91\xfb\xe8\x8f\xc1\xe1\xd1" +
	"\xe7\xbf\xae\xa3\x60\x12\xfe\x75\x3f\x09\xff\xfa\x73\x12\x5e\x69\xdf\xd0\x3e\xaa\x37\x80\x6f\xb1\x65\xb7\x6f\x61" +
	"\x0f\x5d\x3f\xa0\x5d\x93\xdc\x5a\x06\xe9\xf9\x9e\xd9\x2b\x20\x61\xf6\xd2\x22\xf6\xd9\x95\xcb\x18\xaa\x96\x1f\x81" +
	"\xec\xfb\x7b\x57\xee\x0b\xe4\xb9\x68\xb7\x78\xd6\x43\xbe\x67\xee\x21\x7a\xa9\x1b\xdb\x64\x12\x21\xfa\xf9\xbd\x74" +
	"\x16\x8a\x6a\x63\xdf\x33\x47\x45\xde\x74\xcb\x9d\x78\x23\x75\x89\x54\x97\x48\x75\x89\x4c\xeb\xa8\x4b\x64\xd1\xf6" +
	"\x63\xbd\x44\xd2\x18\x85\x0b\xec\x63\xc3\x8a\xf8\x34\x6f\xea\xfe\xa8\xee\x8f\xea\xfe\xa8\xee\x8f\xab\xb9\x3f\x6e" +
	"\xd1\xd2\xd5\xe6\xca\x77\xa2\xae\x7c\xea\xca\xf7\x18\xae\x7c\xa5\xa5\xcb\xb4\xc2\x9b\xba\x6f\xe0\xd8\x0a\x70\x44" +
	"\x4a\x3f\x40\xf6\xfe\x92\xba\xf6\x53\x1f\xfe\x91\xf2\x03\x54\x77\x19\x75\x97\xc9\xea\xa8\xbb\x4c\xd1\xf6\xa3\xbe" +
	"\xcb\xbc\xf9\x55\x59\xc4\xd4\x8d\x46\xdd\x68\x1e\xd5\x8d\x66\x07\xf8\x74\x72\x9c\x24\x2c\x85\x6f\x5f\x0b\x8d\x19" +
	"\x71\xf0\x6f\x24\x08\x53\x53\x54\x35\xd5\x8e\x16\x46\x0f\x29\x3b\x30\x71\x70\x53\x99\xfe\x92\xaf\x55\x9f\x11\xc7" +
	"\xb7\x71\x64\xb9\xd3\xda\xf8\x34\xdb\x0a\x23\x96\xe8\xbf\x55\xdf\x4b\x8f\x4b\xe6\x8d\x22\xa4\xd5\xbb\xdb\xd7\xd9" +
	"\x4d\x9d\xc7\xab\x56\xe3\xc5\xea\xcd\xf9\x96\x71\x43\x05\x55\xa6\xd1\x6c\x12\x0a\x99\x88\xdf\x61\xda\x90\xbb\x68" +
	"\xe9\x7d\xee\xd1\x21\xff\x48\x77\xea\x4f\x86\xdc\x13\x9d\x7f\x74\xd8\xe7\x6b\x71\x2c\x6c\xc0\x3d\xd1\x99\xd3\xf1" +
	"\x33\x3b\x3b\x89\x28\xe0\x51\xc3\x22\x34\xbe\x36\xbd\xe2\xbb\x70\xcc\x77\x81\xef\xd5\xe0\x88\x7f\xc4\x05\x5e\x9f" +
	"\x70\x4f\x0e\xfb\xec\x68\x84\x8b\xfa\xa7\x47\x45\x7f\x8d\xa1\xc3\x7a\xb0\xe1\xcf\x04\xdb\x51\xb5\x1f\x5a\x4c\x6f" +
	"\xa4\xda\x7b\x72\x62\x9e\x3a\x1f\x6d\xd3\x74\x6e\x70\xb5\xfc\xb6\x24\xfd\xec\x61\xba\x85\x76\x10\x35\x60\xcc\x68" +
	"\x83\x07\x5f\x42\xcf\x1d\xd1\xe7\x7f\xed\x67\xd5\x4a\xda\xd2\xb0\xeb\x7a\x11\xce\xe7\x1c\xa4\x7d\x66\xd0\xc0\x69" +
	"\x64\xd9\xd1\x1b\x17\x0c\xe8\x64\x55\x02\xfb\xfb\xe8\xa7\x00\x4f\xb0\x8b\xd1\xfe\x3e\x7f\x32\x11\x57\x98\x37\x22" +
	"\x4b\x65\x20\x2a\xb3\x0c\xcf\x65\x23\xb6\xfb\x3d\x34\xd0\xf5\x1e\x1a\x0c\x87\x3d\xa4\x03\x01\xd6\x79\xc0\xff\x79" +
	"\x39\x7c\xf4\x77\x74\x6e\x93\x80\x4b\x69\x51\x39\xa7\x4d\x1c\xce\xae\x3d\x1c\xd4\x44\xbc\x6f\x8d\x44\x20\xcc\x8a" +
	"\xa1\x4d\x5d\x12\x51\x71\x99\x65\xd7\xa9\x48\xf0\xb1\x90\x53\x2a\x12\x47\x96\xe7\xb5\xfa\x20\x22\x01\xce\xec\xf1" +
	"\xfa\x70\x38\x38\x3a\xd6\x4f\x8e\x07\xa7\x55\xc8\x4a\xf0\x72\x5e\x09\x85\xad\x8c\xa0\x73\x51\xbe\x2d\x82\x7c\xeb" +
	"\xb9\x2b\x5a\xc4\xf8\x66\xb0\x26\x2b\x0e\xf0\xed\x00\xcc\xed\xdf\x06\x67\x67\xc6\xd1\xf1\x32\xd9\x67\xfe\x66\x1e" +
	"\x1d\xe1\x43\xbc\x96\x74\x33\x6e\xec\x5c\x93\x00\x79\x13\x1a\x3e\x6c\x78\x01\x0f\x27\xa8\xb0\x6d\x11\x92\xaa\x3d" +
	"\xe7\x8a\x91\x6f\xde\x3d\xc7\x0a\xdb\x56\xa5\x7e\x51\xa9\x5f\x54\xea\x17\x8d\x4f\xf8\x97\xd9\x84\x69\xf8\x39\x65" +
	"\xd6\x54\x89\xf8\xea\x4a\xfb\x2e\xf9\xef\x95\x06\x6a\x13\x17\x4f\xf7\x02\xdd\x75\x2b\x0a\xc5\xb9\x96\xba\x25\xae" +
	"\x6d\x72\x0c\x09\x4d\xdf\xcf\x33\xfb\x1e\xbe\x9d\x3e\xb2\xec\x7b\x4b\x01\x93\x09\x24\xa5\xb5\xe3\x6e\xd4\xa5\x56" +
	"\x4e\x21\xb6\x49\xd1\xa7\x65\x6e\xbc\x2d\x4b\x3e\x43\x50\xf2\x81\x01\x69\x17\x49\x04\xa3\x24\x1f\x25\xf9\xf0\x25" +
	"\x4a\xf2\x79\xf2\x92\x4f\x43\xa2\x9d\xba\xd4\x83\x5e\x24\xf4\xfc\x58\x64\x9f\xe4\xcc\x3b\xad\xf7\xb6\x96\x39\x43" +
	"\xa6\x00\x51\xe2\x8f\xa0\xc3\xdd\xf6\xb4\xaa\x69\x5e\x04\x8e\x58\xf5\x4f\x2f\xe6\x88\x05\x1f\xcc\x67\x0b\x1c\xcc" +
	"\x33\x62\x4d\x67\x74\x99\x07\x87\x7d\xff\xbe\xde\x6b\x7a\x6e\x9f\x1c\xd6\x4f\x66\xb1\x97\x96\x6d\x4d\xdd\xf3\xf0" +
	"\xa3\x4c\xb9\xdc\xce\x93\x4b\xa8\x97\xfe\xc1\xf1\xa3\x07\x61\x03\x49\x8d\x7f\x91\xc0\x5b\xb9\x2f\x58\x90\xcc\xd3" +
	"\x07\x89\x5e\x5c\x26\xd9\x65\x96\xec\x62\x78\x60\x85\xd7\x24\x34\x96\xf4\x36\x6b\x14\x03\x5b\x3a\x9b\xd5\x65\x65" +
	"\xe5\x6c\xb6\x51\x67\xb3\xc8\xf3\x6f\x76\x87\x3d\x8a\x0a\x10\xe0\x88\xec\x1a\x9e\x1b\x61\xcb\x25\x41\x7a\x5e\x26" +
	"\xa7\xc7\x38\x24\x86\xe7\x9a\xe1\x98\x92\xc6\x57\xcb\xc1\x53\xf2\x5f\xaf\xae\xb4\x2b\x8d\x46\xe1\xbc\xfa\xcf\x95" +
	"\xf6\x7f\x37\xa7\xe1\xf8\xe0\xc5\x95\xd6\x2b\xdf\x4f\xca\x92\x6a\x97\xbf\xbe\xbe\xd2\xbe\xfd\x31\x70\x3e\xef\x5d" +
	"\x05\x70\xa8\x0e\xad\x0b\xc5\xeb\x50\x5b\xfa\x38\x20\xbe\x8d\x0d\xb2\xdb\x18\xbd\x53\x3f\xcd\x7b\xe8\x4a\xcb\x9b" +
	"\xbf\xd2\x92\xbf\xbe\xd3\xd3\xff\xfa\x9e\x99\xfe\x63\xf7\xe0\xc5\xde\x95\xb6\xb7\x87\xf2\x28\xa6\xb4\x2f\xcb\x66" +
	"\xbb\x0d\x23\x2c\xf6\x12\x65\xef\x23\x60\x9a\xdb\x05\x1d\xc1\x8a\xc9\x44\xb0\x3b\x98\x43\xa2\xc0\x32\x32\x91\x5c" +
	"\xbe\xce\xf3\xbb\x80\x65\xc9\x77\x8f\x16\x17\x68\xb6\xe3\x58\xf4\xf1\xd7\x4b\x6a\xb3\xb8\xf4\x4c\xee\xa8\x55\x1e" +
	"\x45\x5d\xf0\x28\x92\x62\x9a\x22\xf4\x18\xfc\x72\x94\xbf\x51\xfe\xe2\x56\x23\x28\x94\x1d\x57\x62\x95\xa5\xd1\xb8" +
	"\xca\x2c\xcb\x3c\x9d\xd7\x2c\xdb\x22\x14\xe5\xf8\x54\x29\x27\x95\x72\x52\x29\x27\x95\x72\x52\x6c\x96\xcd\x92\xdc" +
	"\xa5\xf9\x11\x9e\x9a\x65\xf6\xfd\xf9\x5b\x65\x99\x65\x55\x93\xb9\xba\x66\x9b\x62\x8c\xb2\xce\x2a\xeb\xec\xf2\xd6" +
	"\xd9\x36\xb1\xb8\xca\x2f\x4d\x09\x40\x4a\x00\x52\x02\x90\x3c\xab\xef\xa3\xb7\xcd\x4a\x4c\xb3\x79\x76\x4f\x65\x9d" +
	"\x7d\x72\xd6\xd9\xad\x99\x5f\xe5\x27\x6f\x69\x7e\x3d\xec\x0b\xcd\xaf\x73\xe4\x45\x5c\xaf\xf9\x75\x2b\xb6\x53\x65" +
	"\xfa\x7c\xae\xa6\xcf\xd2\x1a\x96\x9f\x43\xd4\x20\x96\x5e\xbf\x2b\x06\xcf\x6f\x8f\xc6\x7e\x79\x55\x0f\x8e\x47\xcb" +
	"\x1d\x94\xed\xec\x8f\xf9\xf7\x61\xeb\x63\x2b\xf3\xa1\xbe\x04\x74\xe7\x96\xec\x87\x9e\x8f\x86\x28\x3b\xd1\xdf\xb8" +
	"\x11\x71\x43\xa2\x8c\x89\x6c\x69\x87\x8c\x89\xe5\x1e\x30\x89\x01\x99\x3c\x68\x2d\x65\x2d\xdc\xd4\xb8\xa4\xdb\x7b" +
	"\xbb\xc6\xc2\xad\x87\xc8\xea\x87\x52\xaa\x4f\x85\xb6\xba\xe2\xa3\x75\x90\x6c\xec\xba\x96\x3b\x45\x1f\xa8\xee\x79" +
	"\x05\x41\xb2\x9d\x16\xcb\x2b\x1a\xc0\x7a\xfb\xab\x94\xd8\xe7\x5b\xde\xa3\x16\xcb\x3b\x47\xe2\xba\x4d\xc8\xe4\x70" +
	"\x11\xdd\xfb\x60\xd1\x72\xde\x8c\x96\x49\xfe\x99\x8b\xcb\x43\x7e\x12\x1f\x95\xc4\x8e\x70\x88\xfe\x24\x41\x1d\xa8" +
	"\x48\x49\xee\x0b\x03\xd9\x27\xe2\x66\x66\x39\xf3\x67\x38\x24\x22\xff\xc2\x85\x52\x81\xd7\x85\xf1\xa4\xf1\x2c\xd7" +
	"\x79\xf2\xad\xe5\x3c\x04\xb3\xb4\x17\x1b\x77\x0f\x4c\x7a\xde\xe8\x1b\x08\xce\xed\x33\x12\xe8\x13\xd9\xbd\x76\x3a" +
	"\xa2\x0b\x2f\xe6\x2d\x43\x4a\xa0\xef\x82\x40\x2f\x3e\xd9\x51\x47\x84\xe2\x75\x64\x22\xeb\xfe\xa8\x9f\x96\xe3\x20" +
	"\x35\x7c\xb4\xa4\xc8\x5c\x63\x7e\x7e\x3b\x95\x6a\xcc\x6b\x2a\xef\xe6\x29\x58\x30\x42\xe8\x9d\x17\x91\x11\xb2\x2d" +
	"\xc7\x8a\x90\x83\x1f\x10\xb9\x37\x08\x31\x43\x44\xb5\x5c\xc8\x72\x11\x4e\x4e\x49\x64\xa6\x56\x4f\x14\x7a\x0e\x41" +
	"\x85\x4a\x2c\x44\xde\x04\x59\x11\x42\xa6\x47\x42\xe4\x7a\x11\x9a\xe1\x5b\x92\xb6\x16\x1e\xf0\xde\x84\xa5\x55\x42" +
	"\xef\xf3\x66\x89\x06\xa1\x9a\xd7\x6c\xcf\x2d\x54\x0f\xe4\x79\x85\x92\x93\xf7\xa3\xe5\x90\x5c\xe6\x81\xa5\xbe\xd4" +
	"\x51\xaf\x2e\xeb\x08\xe5\x3d\x1f\x4f\x49\x36\xea\xba\x73\x5f\x40\x7c\x82\x05\x27\x4e\x5a\xf6\xda\x0a\x88\x91\x2f" +
	"\xd5\x2d\x27\xa1\x19\x81\x47\xaf\x27\x40\x2f\x93\xad\xf4\x33\xc1\x26\x95\xef\xa0\xf2\xf4\x98\xe1\x66\xda\xf0\x6c" +
	"\xf0\x02\x63\xa6\x71\x41\xcd\xb6\x40\x9a\x85\xaf\xe5\x66\xa0\xb7\xc2\xec\x58\x85\x76\x03\xf5\x31\xc9\xe4\x64\x01" +
	"\xcb\x10\xba\xa1\xd0\x52\x81\xdf\x08\xdf\xce\x1c\xce\x28\xb4\xf2\xdf\x0c\x7d\x68\xe8\x27\x7c\x06\x56\x28\xaf\xaa" +
	"\x89\x23\x52\xca\x5a\xbf\xff\xfe\xfb\xef\xfb\x6f\xdf\xee\xbf\x7e\x8d\x7e\xfe\x79\xe4\x38\xa3\x10\x14\x03\xc5\x6e" +
	"\x29\x28\xa7\x37\x89\x94\x98\x14\x97\xa9\xc4\x40\x41\x31\xa9\xf2\x29\x10\xca\x91\x3e\x8e\x22\x12\x50\xc2\xcb\x55" +
	"\xb7\xa0\x05\x90\x91\xc9\xa0\xa9\x3a\x84\x4e\x38\x84\xb4\xd3\x7e\xbb\xd9\x2b\x6c\x9e\x51\x60\xb9\x20\xd3\xa4\x49" +
	"\x44\x0b\x4f\x29\xe3\xe1\xd3\x87\xd7\x1c\xef\x6c\x71\x6c\x16\xd4\xd8\x0d\x52\x6c\xe3\x41\x85\x64\x84\xbb\x35\xda" +
	"\x94\x3a\xdf\xa0\x1a\x71\x7d\x84\x64\xc8\x26\x61\x1f\x55\x09\x63\x66\x99\x26\x01\x6d\x1a\x39\x61\xa4\x72\xce\x32" +
	"\x24\x21\x8a\x97\x46\x8a\x36\xea\x2f\x95\xb4\x71\xb8\x2c\x6d\x50\x1f\x39\xf4\x37\x30\x31\x79\x7b\xfa\x48\xd3\xcf" +
	"\xad\x9f\x3e\xde\x93\x7f\xc7\x24\x04\xe5\x69\x45\x21\xd5\x97\x56\x4f\x21\xb0\x5f\x56\xe7\x28\xe4\x97\x44\x30\x56" +
	"\xf4\xb1\x79\xfa\xf8\xbe\xfb\xf4\xf1\x96\x38\xea\x84\x99\x97\x3e\x20\xf5\xc6\x22\xf4\xf1\x7a\xdd\xf4\x91\x1a\x93" +
	"\x97\xa5\x0f\x75\xc2\x6c\x8d\x42\x7e\x78\x1c\x14\xa2\x4e\x98\x2d\xd1\xc7\x8f\xdd\xa7\x8f\xf7\x24\x8c\x70\x10\x21" +
	"\x50\x6b\xaf\x48\xa4\xf6\xd2\xea\x49\xe4\xa7\xed\x08\x21\x3b\x92\xf9\x59\xdc\xc8\xca\x98\x47\xa9\x76\x68\xcc\xe6" +
	"\x77\x19\x35\xa6\x11\x19\x85\xb1\x33\x0e\x70\x44\xbe\xf2\x99\x61\xc4\xe9\x62\x7a\xf9\xf7\x72\xb7\xcb\x0e\x27\x8e" +
	"\x61\xfc\x2e\x1b\x8c\xc2\xd4\x33\x03\xa8\xd2\x68\x0e\xce\xf3\xc9\x40\x36\xb5\xb9\xe3\x1a\x2e\x16\xe1\x30\x55\xba" +
	"\x60\x67\xf7\xca\x4d\x9e\xe1\xdb\xe9\xd8\xbb\x25\xc1\x38\xe1\x3c\xa5\x79\xbe\x5c\xe0\x20\xcb\xc9\x3f\x0e\x52\x01" +
	"\x27\xac\xe4\x1e\x2e\x6a\xd5\xc9\xa2\xa4\x88\xda\x0a\xfd\xa1\xf7\x9d\xcf\xe5\xec\xef\xf5\xd0\x95\xcb\xac\x59\xb6" +
	"\x64\xf9\x8a\x25\x0b\xf6\xbf\xc9\x82\x5d\xb9\x5e\x80\x62\x1f\xbd\x40\xfd\xc2\x9e\xff\xa8\x56\x8f\x8f\x4a\xd9\xe8" +
	"\xea\xa5\x76\x1f\xb5\x76\x0b\xad\xdd\xf7\xcb\xae\x9d\xd4\x51\x5d\xc4\x4c\x11\xc4\x7a\x3b\xcc\x53\x2b\x9e\x36\x8f" +
	"\x6a\x75\x17\x32\x48\x88\x77\xe6\x8a\xb8\x2c\x93\x4a\x60\x05\x9b\x35\xd9\xab\x2c\x41\x55\x77\x6c\x51\x52\xdd\xb7" +
	"\xb5\xa5\x5f\x64\x7b\x37\xc6\x33\x74\x83\x04\x7e\xe8\x12\x09\x64\xac\x5a\x11\xc0\x06\x09\xe0\xc7\xd5\x12\x00\xb0" +
	"\xbc\x99\x53\x5e\x90\x5e\xf4\xf2\xac\x8c\x2d\xd6\xd5\xf7\x4c\x94\xf1\xfe\xf9\x78\xf1\xda\x5c\x2a\x57\xc3\xe4\x57" +
	"\xb3\x82\x75\x6f\x49\xa9\xbf\xe3\x4f\x73\x5e\xc0\x4a\xaf\x45\x4d\x7f\xcb\x07\x05\xb7\x73\x4b\xbc\x48\xdd\xb3\x51" +
	"\x90\x79\x26\xfa\x50\x88\x51\x80\xdd\x30\x99\x33\xd1\x8c\xa5\x35\x7c\x2c\x46\x31\x2f\xa1\x96\xe9\xeb\x3b\xd0\x20" +
	"\x61\x20\x47\x16\x73\x70\xa3\x38\x8e\xcc\x08\x00\x07\x31\x3b\xcf\xc4\x01\x3a\x2c\x96\x8e\xef\x12\x67\xae\x5b\x07" +
	"\xc4\x1a\x2d\x9c\xb9\x92\xf2\xa6\xbd\xdf\xd6\x81\x8b\xea\x26\x26\x96\x6b\xe5\x6e\x41\x29\x57\x48\x9d\x27\x77\xcb" +
	"\xb4\x41\xf4\x71\xd8\xcb\x44\xb3\xe4\x79\xe0\x92\x88\x84\x63\xcb\x1b\xcf\xbc\x30\x82\xb7\x55\xce\x12\x79\xff\x29" +
	"\xcb\x35\xec\xd8\x24\xe7\xb2\xfc\x02\x12\xaf\x41\xcd\x89\xed\xc8\x12\xbe\x9a\xa7\xbe\x48\xba\xce\x77\xaa\x82\x10" +
	"\xc9\x69\x48\xb4\x7f\xc7\x24\x78\x58\xfd\x44\x94\xb4\xcb\xb9\x38\x68\x01\x99\x12\x28\x3b\x45\x42\xbc\x37\x96\xff" +
	"\x29\xb0\x3f\x3c\xb8\x86\x18\xd1\x5f\xe4\xe2\x1b\xe1\x29\x25\xc6\xf0\xff\xe5\x63\xe2\x3f\x00\x6c\x82\x4a\x89\xec" +
	"\xc5\x6c\xef\xa6\xf3\xc5\x15\xc7\x21\xf9\x98\x36\x0d\xf8\x78\x55\xfe\x52\xb0\xa8\x5c\x4b\x0a\x16\x75\x35\xb0\xa8" +
	"\x34\xf4\x4c\x86\x89\x7a\xea\x10\xd3\x74\x98\x33\x41\x02\x88\xea\x07\xc4\xb4\xa8\xf7\xe4\x7e\x40\x0c\xcf\x71\x88" +
	"\x6b\xd2\xf4\x21\x3c\x3e\x6a\x4e\x62\x42\x6c\x54\xe8\x34\xa9\xb9\x01\x0b\x51\x51\xe7\xc0\x44\x95\x21\xa2\x8a\xf1" +
	"\x50\xe7\x46\x43\x9d\x07\x0b\x55\x8e\x84\x5a\x39\xf7\x77\x6a\x2b\x2e\x42\x40\x85\xf1\x4f\x85\xe8\xa7\xa9\xbf\xad" +
	"\x5e\xf9\x9b\x85\x3e\x3d\x3d\x3b\x3a\x1d\x1e\x1f\xe9\xc3\xc2\x57\x00\xf0\xc5\x85\x60\x4f\x19\xb6\x22\x8d\xe7\x14" +
	"\x7a\x26\x43\xb1\x9c\xa0\x57\x32\xe4\x93\xcc\x01\x9d\x32\x22\x41\x36\x6c\xe6\xec\x11\x85\x6f\x56\x72\xc7\x60\x17" +
	"\x4f\x89\x89\x7e\xbd\xfe\x42\x8c\xda\x52\xc2\x61\x9b\x95\x8f\xd6\x27\x24\x77\x6a\x67\xbf\xc5\x12\xf3\x1b\x77\x62" +
	"\xc7\xf7\xaf\x59\xff\x0a\x29\x0a\x85\xdc\x0d\x5c\x3e\xd5\xf5\xe4\x60\x34\x0f\x4a\xdd\xab\x5a\x34\xd5\xba\x7c\xaa" +
	"\x99\xd8\x39\x81\x3b\x77\xd5\x99\xbb\x2e\xe4\x88\xbd\xb1\xe5\xbe\xd8\xb0\x27\x76\xe6\x87\xcd\x85\xbb\x96\xe8\x0c" +
	"\xc2\xd1\x08\x1c\xb0\xa1\xd0\x88\xd4\x2e\x08\x7a\x60\x2e\x60\x35\x6b\xf4\xea\xac\x7b\x6c\xb2\x32\x46\xaf\x65\x77" +
	"\xf9\x66\x9b\x0c\x97\x32\xb3\x65\x7b\xa3\xe5\x3c\x26\xcb\xb6\x06\x4b\x5e\x88\x5b\x60\xda\x65\xde\xb8\x4d\x86\xca" +
	"\xea\x9a\x59\xe1\x18\xdb\xd8\x21\x26\x06\x56\x4e\x6e\xa6\x6c\xf2\xc5\x2d\x4c\x94\x26\x31\xa6\x80\x25\x5b\x2d\x3e" +
	"\xda\xf2\xe2\x83\xfe\xfd\x2b\x5b\x76\xc0\x32\xad\x96\x1c\x6d\x79\xc9\xb3\xcd\x3e\x0e\x0d\x6c\x67\xda\x5a\xaa\x9d" +
	"\x53\x64\x00\xd4\x7c\x56\x64\xa0\x28\x00\xa8\xf9\x74\x29\x40\x18\xdf\xd5\x89\x65\x3f\x4f\xe9\xf3\x03\x25\x4f\xf4" +
	"\x0e\xec\xa7\x22\x84\x55\xb2\x02\x94\xb2\x82\xc5\xc9\x41\x10\xaa\xb7\x12\x72\xb8\x0c\xbc\xe4\x6e\x8b\x76\xdf\xe5" +
	"\xe7\x15\xa0\xbc\x55\xf4\xb0\x32\xa1\x70\x49\x91\x60\xad\xa4\xe0\x99\x8a\x1f\xac\xf9\x60\xe8\xe6\xca\x5f\xe4\x26" +
	"\x6c\xb5\xfe\xeb\x5c\xff\xc2\x53\xa0\x9b\x54\x40\xed\x05\x8a\x00\xd6\x79\x00\x80\xe6\xd8\xb6\x6b\x2f\xf0\x58\x5f" +
	"\x11\xef\xb7\x2d\x03\x30\x63\xaa\x85\x5f\x11\xe7\x87\xa7\xb7\x0b\xdb\xfe\x89\x2f\xba\x6c\x05\x2b\x2b\xf4\xf2\xe0" +
	"\xc5\xcb\xcd\x6e\xcd\x1d\x41\xb7\x85\x41\x24\xdc\x12\xe6\xce\x6c\x86\x17\xbb\xd1\x6e\xec\x7f\xfd\xe2\x5d\xbf\xba" +
	"\xd2\x4a\x9f\x8c\xfd\x84\xe1\x84\x57\xda\x37\x08\xda\xa2\xc1\xdd\x4b\xa3\x5e\x67\xdf\x3f\x80\xab\xcc\x3b\xef\xd0" +
	"\xd9\x0c\xb0\x23\x8a\x66\x42\x48\xfb\x6e\x5c\xb8\x19\xf0\x91\x46\x60\xac\x51\xd5\x45\xca\x72\x08\xff\x16\xe7\xf6" +
	"\xb3\x60\xd7\x20\x40\x85\xe6\x3e\xd1\x6c\xa6\x7c\x9f\x1a\x69\xb2\xd9\x4b\x4e\xf3\x02\x93\x04\xdf\x3f\x7c\xb4\x32" +
	"\xc3\xf2\x07\x3e\x69\x43\xce\x54\xa8\x19\x60\x82\x63\x1b\x80\x20\x2f\x9c\x79\x42\x62\x27\xb7\xbc\x2b\x2d\xf5\x43" +
	"\x44\x38\x44\xac\x03\x29\x12\xa9\x2f\x93\xaa\x15\x87\x44\xa0\x5a\xda\x18\x7b\xd9\x4d\x5a\x2c\x10\x92\x71\x98\xfc" +
	"\xbb\x57\x7a\x2d\xd2\x36\x3d\x93\xa4\x6e\x90\xc9\x28\x92\xfa\xa5\xc1\x04\x4d\x02\xcf\x29\x3e\x65\xd8\x71\x18\x15" +
	"\xee\x98\x07\x07\x45\xb7\x53\xc7\x48\x74\xfd\x50\x7e\x9e\xeb\x7e\xea\x62\x09\x94\x16\x4e\x98\x95\xbf\xb2\xc9\xa1" +
	"\x93\x9f\x34\x9b\x10\x1d\x32\x49\x68\x64\x19\xbd\x78\xb7\x34\x2d\xc0\x77\xb9\x93\x10\x9c\x94\x55\x9c\xb8\x51\x0b" +
	"\x48\x18\xdb\xd1\x8f\x4d\x1b\x31\x5d\x3b\x90\x78\x21\x72\x86\x36\x40\xf3\x16\x28\xfc\xeb\xc0\x52\x70\x1f\x30\x3b" +
	"\x81\xd8\x26\xf4\x2a\xb0\x41\x5b\xf4\xb0\xe9\x73\x0e\xc1\x2e\xf8\x35\xee\xd9\xe7\xc6\xcd\x58\x38\x80\xb5\xe5\xce" +
	"\x75\xe7\x80\xe2\xf2\x54\xf7\x0f\x90\x3b\x88\x36\xb9\x87\x8a\x9c\x43\xd7\xe2\x61\xb0\x62\x27\x82\xfa\xb3\x7b\xc8" +
	"\xb1\xa0\x85\x13\x01\xe3\xf6\xd1\x15\x27\x82\xba\x2f\x8a\x72\x22\x78\xf2\x32\xe4\x16\x9d\x08\xdc\xfc\xf8\xeb\xa6" +
	"\x35\x21\xc3\xe2\xa0\xfb\x4f\xd1\x40\xed\x95\x15\x6a\x0d\x98\xd0\xa2\xf5\xdd\x53\x0a\x9c\x8e\xc5\xa8\xe1\xe2\xf2" +
	"\x13\xba\xf0\x02\xa8\x87\x8a\x16\x84\xf9\x0f\xe6\xa6\x85\x22\x22\xb8\x9b\xba\x24\xa5\x47\xec\xb6\x77\x91\x52\x26" +
	"\x29\x65\x92\x52\x26\x29\x65\x12\x3b\xa8\xf9\x95\x49\x2f\xe4\x6a\x1a\xd8\xd8\xa1\xf4\x25\xcf\x5d\x5f\x92\x88\x07" +
	"\x5b\x57\x95\x6c\x25\x3a\xa5\x0a\x1b\x0b\x68\x3b\x4e\x6a\x6a\x8d\x86\xe0\x94\xd2\x68\xff\x3e\x4b\x43\x90\x26\xbc" +
	"\x44\xd8\x35\xd1\x7b\x26\x42\x4b\x03\x67\xab\x55\xe0\x8a\x0c\x69\x4c\x88\x33\x26\x43\x19\x93\x60\x8c\xf1\x91\x5d" +
	"\x6f\xad\x7b\x62\xd6\xe3\xba\x40\x14\x31\xf9\xb2\xd5\x91\xbd\xe6\x5a\xb6\x53\xe1\xb2\x95\x48\xbf\x1a\xbf\x9c\x67" +
	"\xec\xa3\x0a\xce\xd0\x3f\x8e\x6b\xd1\x92\x22\xa4\x31\x31\x86\x58\x25\x90\x1a\x2a\x9d\x59\x26\xf9\xc1\xf1\xa3\x07" +
	"\x49\xf9\xbf\x48\xe0\x09\x8a\x85\x98\xc0\x62\x44\x60\x31\x14\x8d\x0c\x3a\xac\x04\xa9\xa9\x47\xc9\x7e\xab\xab\xfe" +
	"\x40\xd4\x30\x31\x66\x98\x48\x5b\xd8\x8c\xf0\xdb\x80\x12\x26\xc3\x08\x93\x20\x84\xc9\xf1\xc1\x20\x74\xb0\x96\x12" +
	"\xf7\xaf\xd7\x61\x42\x58\xc9\x36\x47\x23\x24\x4e\xac\x9e\xca\xd9\xc9\x1b\x7f\x1b\xea\x67\x43\xc8\x09\x8d\x1d\x99" +
	"\xbe\xd8\x0d\x80\xe5\x3c\x69\x8f\x6c\x30\x8d\x66\xa5\x47\x93\x81\x71\x76\x0c\x38\x47\xd5\x7a\x04\x97\x43\x84\x91" +
	"\x4e\x2a\x03\x8a\xd6\x04\x4d\x37\xdf\x90\x02\x41\xee\xd8\xca\xa0\x4e\xc8\xf5\xa0\xbb\x83\xba\x2c\xc2\x79\xd3\x01" +
	"\xa5\x08\x35\xbb\x96\x8b\xf4\xa1\x23\xf2\x01\x4d\x17\xeb\x8c\x0c\xcc\x01\xa4\x9d\xae\x30\x7d\x1e\x4e\xbd\xe0\xfb" +
	"\xe0\xb0\x9a\x26\x85\xc5\xc6\x93\xa2\x39\xce\x3b\xe6\xd8\xf7\x49\x70\xed\xc5\xae\xf9\x2c\x87\x6f\x7b\x77\xcf\x79" +
	"\xf8\x74\xcc\xa6\x7c\xc8\x83\x33\xfd\x0c\xb0\xfd\x3e\xd6\x21\xd7\x09\xfe\x79\x8d\xbe\x4e\xef\x8f\x6d\xf4\xc2\x9b" +
	"\x96\x0c\x3e\x54\x0c\x1e\xda\x04\x1d\xda\x5e\x83\xd4\x3e\xe3\x4e\xae\x6b\xd2\xfb\xfd\x3e\x7a\x81\x56\x9a\xfc\xb6" +
	"\x68\x8c\x66\xbf\x0a\xab\x8e\x28\xc9\x93\x2c\xeb\x16\xdb\x7e\x52\xc0\x38\xc3\x80\x69\x1c\xa5\x6a\x2f\x09\x08\xa9" +
	"\x34\x2f\x5a\x25\xa7\x96\xa8\xbc\x51\xbf\x53\x4f\xa8\xd5\x5a\x24\x14\xe5\xa9\x5d\x87\xb0\xd7\xc2\x0d\x01\x21\xa5" +
	"\x29\x6c\xd1\xa7\x45\x35\x85\x52\x32\x5c\x93\x8e\x90\xcd\x90\x98\xec\xde\x54\x69\x58\xba\x64\xb1\xb9\x64\xae\xb4" +
	"\x83\x03\xc6\x31\x0d\xdd\xcd\x48\x40\x4a\xdf\xac\x57\xe8\x7f\xca\xad\xfa\x3f\x54\xd7\x51\xf5\xe2\xa2\xe5\xbe\x67" +
	"\xe6\x25\x15\x3f\x30\x5a\xe4\x86\xff\x83\xd0\xf9\xbb\xd7\xe8\x3b\x9a\x29\xce\xb2\x41\xcb\xfa\x4a\x95\x94\x32\xce" +
	"\xa0\x54\x95\xf5\xcf\x6d\x40\x55\xb9\x96\x6b\x9f\x62\x6f\x7c\xf9\x33\x62\x6f\x19\x5d\x3c\x39\x06\xc7\x23\xf9\x28" +
	"\x06\x27\xef\xe1\x23\x62\x70\xf3\xaa\x80\x16\xe0\x71\x73\x6e\x53\x87\xe0\x30\x0e\x88\x93\x6a\xb6\x53\x6f\x97\x32" +
	"\xef\x1c\xff\xa5\xf9\xb6\x75\x63\x73\xf5\xed\x4d\xa9\xaa\xbe\x9f\xcb\x06\x44\x7b\xf9\xc6\x72\xcd\x64\x33\x06\xf8" +
	"\x2e\xdd\xa6\xd3\x00\xbb\xb1\x8d\x03\x2b\x7a\x48\x9e\x1f\xf6\xf3\xdd\xeb\x90\x28\xb0\x8c\x74\xeb\xf2\x37\x9b\x52" +
	"\x11\x5d\xdd\xed\x9d\xe3\x11\x00\x05\x3c\x1f\x1e\xb1\xc4\xae\x6d\x77\xc8\xde\x90\x82\x76\x01\x5f\x16\x9a\xcd\x95" +
	"\x04\x38\xbd\x1a\x6a\xaf\xe0\x2a\x45\xe6\x5c\xcb\xdf\xd7\x4f\x06\xfb\x83\xc3\x7d\x7d\xff\x4c\x3f\x88\xc3\x7d\x82" +
	"\xc3\x68\x7f\x70\x60\x78\x8e\x1f\x47\xe4\x80\x8a\x12\x2e\x24\x4a\xb4\x15\x0a\x12\xd2\x2d\x92\xe9\x9e\xbf\x83\xa0" +
	"\xe0\xca\x51\xd1\xf9\x5d\x7a\x54\x86\x1f\xb7\x10\x18\x56\xc9\x23\x5b\xa9\x8c\x57\xc9\x2e\xc1\x1d\xf8\xb4\xb8\x25" +
	"\x9d\xd3\x31\x9d\xd4\xee\x72\x4d\xca\x36\x69\x58\xd0\x3f\x5e\x21\xd7\xbb\xdb\x85\x52\x1d\xb7\x65\x9c\x3c\xc8\x99" +
	"\x62\x9c\x92\xa6\x15\xe3\x7c\xfc\x8c\xb3\x95\xb1\x49\x31\xce\xb9\x18\x27\x9d\xd3\x67\xc5\x38\x79\xe8\x3f\xc5\x38" +
	"\x25\x4d\x2b\xc6\xf9\xf8\x19\xa7\xd0\x54\xa9\x98\xe5\x6a\xee\xe4\xc7\xfd\x2e\xb0\xc9\xd5\xdd\xca\x79\x84\x65\xc5" +
	"\x23\x25\x4d\x2b\x1e\xf9\xf8\x79\x64\x1b\xbf\x16\xc5\x2e\x57\x7b\x29\xef\x06\xdb\x5c\xa9\x74\xf9\xb3\xe2\x9c\xd5" +
	"\xa6\x14\xe7\x7c\xfa\x9c\xb3\x8d\x4f\x9c\xe2\x9c\xab\xbd\x95\x3f\x41\xce\xf9\x46\x71\xce\x6a\x53\x8a\x73\x3e\x06" +
	"\xce\x59\xf9\xab\x16\x69\x27\x8e\xd7\xae\xe2\x8c\x72\x49\x87\x92\xb2\xf7\x64\x0a\x42\x2c\x4a\x21\x48\xa1\xd8\xbe" +
	"\x8b\xcb\x4f\x23\x54\x71\xe8\xec\xa1\x92\x83\xf7\x80\x50\x3f\xca\xbf\x13\xc6\xee\x58\xb6\x65\x78\x41\x2d\x9d\xb7" +
	"\x16\x15\x90\x60\xb5\x50\xb3\x70\x86\x03\x38\x22\x52\x08\xb1\x98\xce\xfb\x38\xdf\x1a\x96\x6b\x5a\xb7\x96\x19\xb3" +
	"\x34\xc3\x06\x72\xe5\x75\x29\x3c\x19\xdb\xb3\x7b\x7c\x6f\x01\xe1\x7b\xd7\xb1\x71\x93\xba\x1f\x03\x88\xad\x4e\x16" +
	"\xc4\x15\xf1\xa9\x8d\x72\x50\x36\xe0\x2d\x71\xa8\x5a\x11\x8e\xc6\xb8\x54\xb0\x43\x78\xc0\xf7\x6d\x02\xb4\x2a\xb9" +
	"\x02\x0e\xb9\x8d\x5f\x3a\x0e\xbb\x9e\x0b\x38\xe6\x4a\xa1\x3f\x6d\x6f\xfa\x3d\x0e\xe1\x24\x11\x69\xe4\x1e\x8c\x18" +
	"\x4a\x43\xf7\xc0\xa2\xca\x84\xcc\x25\x55\x94\xc3\x28\x12\xc7\x74\x64\x28\x0d\xa0\x9b\xf5\x05\x85\x08\x0f\xdb\xd6" +
	"\x54\x14\xec\x48\xcb\x7e\x21\xb7\xc5\xc8\x76\xa0\x0f\xa9\x98\x5a\x31\x7a\xdc\x50\xb8\xbf\xa4\x41\xb5\xb5\x71\xab" +
	"\xa8\x5a\x15\x55\xbb\xee\xa8\xda\x11\x4a\x73\x6f\xa5\x57\xa5\xce\xc4\xd5\x66\x9d\x7a\x62\xa1\xb5\xd9\xa8\x9e\x54" +
	"\x74\x6d\x95\x7c\x9e\x51\x88\x25\x33\xec\x67\x19\x63\xcb\xcc\xc0\xb3\x0c\xb3\xe5\x49\xff\xb1\x45\x5b\xae\x9c\xf2" +
	"\x9f\xdd\x04\xa8\x78\xdb\xce\xc4\xdb\x96\x61\xad\x59\x3a\xd1\x54\xd1\x48\x6f\x6e\x2a\x70\x76\x2e\xa9\x6f\xe5\xa1" +
	"\xb3\x72\x79\x4e\x85\x97\xf1\xe5\xcf\x28\xbc\x2c\x8d\x9e\xcd\x48\xe4\x29\xc5\x97\x3d\xeb\xd8\x11\xe8\xc5\xa7\x14" +
	"\x5f\x36\xef\xe5\x4e\x31\x39\xbe\xfc\x19\x31\xb9\x3c\x86\xf6\x09\xb2\x39\x15\x46\x3b\x6f\x0f\x1f\x11\x9b\x5b\x40" +
	"\xd7\xa3\x22\x69\xd7\x19\x49\xcb\x5f\x6e\x3a\xed\xa9\xfb\xac\x93\x88\x2c\xb1\x5d\xdb\x1d\xb0\xca\x6b\xa2\x33\xfe" +
	"\x66\xf3\x6b\x84\x95\xcf\xd9\x06\x42\x68\x37\xc2\x2e\x57\xea\x67\xa6\x62\x1b\x98\xa6\x14\xc7\x7c\x16\x1c\x53\xc5" +
	"\xce\x2a\x8e\x59\x9b\x0d\x95\x6a\x40\x71\xcc\xea\x48\x15\xc7\x6c\x67\x71\x56\x5c\x72\xad\x41\xb3\x8f\xec\x02\xae" +
	"\xd2\x09\x30\x4d\x29\xe6\xf8\x2c\x98\xa3\x8a\x96\xed\x4c\xb4\xec\xe3\x93\x27\x55\x8c\x2c\xd3\x94\x62\x99\xcf\x82" +
	"\x65\xaa\x30\x59\xc5\x32\x17\x66\x99\x2a\x38\x96\x69\x4a\xb1\xcc\xc7\xc0\x32\x2b\x7f\x75\x30\x38\xf6\x2d\x65\x02" +
	"\x73\xc5\xc7\xaa\x68\xd8\x6d\x47\xc3\x82\x61\x9b\xa5\x43\x70\xa7\xc2\x48\x55\x44\x6c\xb5\xa5\x15\x44\xc4\xee\xd4" +
	"\x3e\x97\x1c\x8f\x09\x23\x49\x66\xec\xb0\x12\xbf\xa9\x85\xc6\x8c\x38\xf8\x37\x12\x84\x29\x8f\xd4\x8f\xcb\xa2\xe8" +
	"\x21\x65\x04\x26\x0e\x6e\xca\x37\x0a\x2f\x9e\xf2\x09\x71\x7c\x1b\x47\x96\x3b\x65\xc6\xa2\xd9\x56\x58\x3f\x47\xb9" +
	"\x91\xda\xbf\x65\x6c\x13\xd8\x31\x65\x94\x28\xb7\xfe\xe9\x21\x4d\x39\x07\x28\x0d\x44\xe4\x9e\x52\xc7\x84\x98\x29" +
	"\xe3\xc6\x16\x4f\x20\x05\xc7\xae\xd6\x92\x91\x61\x3b\xa1\x53\x33\xc9\xc4\x72\x8b\x43\x27\xa1\x0b\x14\xe1\x69\x2a" +
	"\xc1\x85\xc8\x73\x05\x50\xde\xa9\x70\x57\xc8\x52\xe8\xce\x8a\x66\xe8\x86\x3c\xbc\x2a\xe5\xbd\xd0\xc0\x76\xe6\xf3" +
	"\x9f\x09\x51\xf5\x6f\x67\x12\x6d\x9d\x67\x5a\xae\x61\xc7\x26\x39\xb7\x45\xa1\xac\xf9\x66\xd1\xde\xe5\x6d\xd7\x5b" +
	"\x76\x62\x3b\xb2\x04\x6f\x67\x5c\x4f\x73\xeb\xdb\x50\xf3\xfc\x08\x3c\x83\x18\x09\x77\xa3\x33\x54\xee\x84\x01\x57" +
	"\x32\x25\xc9\xce\xe7\x5e\x09\x6f\x2c\xff\x53\x60\x7f\x78\x70\x8d\xf9\x8e\xaa\x08\x4f\x29\x7d\x87\xb9\xe8\xca\x35" +
	"\xcd\xed\xa6\xca\x73\xf1\x4b\xd9\x79\x96\xce\x60\xad\x30\x0e\xc9\xc7\xb4\x51\x69\x54\xf2\xa6\x77\x62\xb6\x40\xfb" +
	"\xd8\xf7\x25\x3b\xb1\x5a\xeb\xb1\xec\xc4\x8a\x53\xac\x98\x0a\xf3\xcb\xce\xca\xf7\xeb\x79\xfa\xc9\x0f\xf4\x8b\x8b" +
	"\xec\xd9\x10\x7c\x73\x8b\xfb\x76\xa9\xf9\x54\xbb\x9b\xfe\xd6\xb0\xbb\x61\xff\xd7\xfa\xf6\x4e\xf6\xe5\x2c\xbe\xde" +
	"\x3f\x3e\x31\x26\xc6\xf1\xd1\xd0\xb8\xde\xbf\xb9\xb9\x33\xcf\x5a\xec\x79\xe1\xab\x9d\x64\x04\x15\x15\x47\x7b\x6a" +
	"\xcd\x94\x20\x30\xd1\x27\x75\xd2\x27\xab\xe7\x12\xbe\x57\x0f\xe1\x6f\xc5\x1b\x80\xd7\x36\xc5\x18\x36\x3a\xbf\x8a" +
	"\x6b\xd0\xdf\xb6\x64\x82\x6c\xe7\xb7\xe7\x11\xdd\x64\x09\x6b\x23\x57\xb1\x56\x75\xe5\x8c\xa2\x18\xd8\x22\xec\x42" +
	"\xf8\xf2\xa6\x98\x46\x07\x56\xe0\x19\xb3\x92\xe2\xdf\xb9\x1a\xeb\x5b\xa9\x22\x48\xad\x22\x15\xe5\xc0\x24\x55\x5c" +
	"\x6a\xae\x77\xb7\xaf\x57\x95\x72\x5a\xe4\x65\xcf\xff\x77\xd0\x77\x34\xb0\x29\xdf\x32\x6e\x68\x32\xa2\x4a\x83\xd9" +
	"\xc4\x17\x11\x86\x75\x6d\x99\x36\xac\xa5\xad\xd2\xeb\x79\xac\x0e\xeb\x0f\x74\x87\xfd\x7b\x58\xfb\x5b\xaf\x3f\x38" +
	"\xec\xd7\x6b\xd4\xd4\x8d\x83\xda\xdf\x7a\x45\x8d\xff\xb9\x3a\x07\x96\x43\xc6\x95\x5d\x33\x57\x2f\xea\x1f\x3d\xae" +
	"\x7f\xb4\xde\x8b\xc1\x51\xfd\x01\x7b\xec\x6b\x27\x66\x7d\x9c\xd5\x7e\x83\x4b\xf4\xa7\x47\xf3\x2e\x68\x15\xc5\x51" +
	"\xae\x58\x2e\x35\xc7\x32\xc5\xb1\x16\xd3\x4c\x64\xda\x89\x89\x4d\x8c\x4d\x5c\x16\xdc\x16\xda\xaa\x01\x7d\x94\x12" +
	"\xde\x0e\x42\x6c\xec\xe2\x7e\xb6\xab\xd3\x2d\x7c\xf0\x25\xf4\xdc\x11\xad\xf9\xd7\x7e\xd6\x52\x85\x7a\xb0\xeb\x7a" +
	"\x11\xce\xe7\x9b\x49\x23\x07\xa8\xb1\x00\x8d\xe4\x75\x6c\xd9\xd1\x1b\x17\x54\x28\x72\xb9\xe1\x7e\x0a\xf0\x04\xbb" +
	"\xb8\x9e\x1d\x8e\x56\x26\x2e\xbe\xb6\x85\x56\x49\x99\xc5\xd2\x32\x3c\xf7\x22\xcf\xf0\x11\x4c\xaf\xf1\x6e\xbf\x87" +
	"\x06\xba\xde\x43\x83\xe1\xb0\x87\x74\xc0\xaa\x96\xa6\x41\x18\x21\xbd\xdf\xe7\xca\x72\xae\x7e\x5e\x4e\x0d\xfa\x3b" +
	"\x3a\xb7\x49\x10\x41\x66\xb3\x99\x77\x47\x87\xcf\x37\x94\xf3\x13\x13\x87\xb3\x6b\x0f\x07\x35\xd3\x15\xa3\x1f\x2d" +
	"\xfe\x5d\x39\xd4\x35\x62\x5a\x11\x38\x29\xda\xd4\x25\x11\x35\xfb\xb1\x02\x4a\xaa\xe9\xff\x58\x58\x1d\x2a\x7d\x4a" +
	"\xf3\xdb\x0d\x4e\xab\x4f\x22\x12\xe0\x4c\x10\xd0\x87\xc3\x93\xb3\xd3\xe3\xe3\xc1\xa1\x7e\x58\xad\x03\x25\x64\xd3" +
	"\x7c\xec\x12\x8e\xcf\xd4\x84\x28\xc3\xb3\x6d\xec\x87\x42\x23\x87\x28\xf7\x5f\x96\xfd\x8f\x27\x26\x28\xff\x1f\x9c" +
	"\x01\x30\xcb\x01\xd8\x97\x0a\x4b\x69\xba\xbf\xfa\x59\x55\x8e\x8c\x3b\x39\xf2\x5d\xfc\x16\xbb\x78\x4a\x4c\xf4\xeb" +
	"\xf5\x17\x62\x70\x14\x51\x2c\x7a\xe0\xdd\x09\x0d\x33\xfc\x54\xc5\x0e\x2c\x25\xb4\x15\xe9\x42\x23\xb0\xfc\x5c\xa6" +
	"\xab\x17\x4f\x3c\x37\xfa\x60\xfd\x49\x9b\xd0\xfb\xfd\xff\xae\x97\x37\x2c\xc5\x31\xb8\x14\xfa\xe9\x1c\x4b\x21\xcd" +
	"\x49\x97\x2e\xc5\xb0\x2e\x99\x81\x99\x00\xe9\x12\x4d\x49\x36\x1a\xc8\xda\x64\x04\x1e\x95\xf6\x00\x7b\x53\xb2\x55" +
	"\x7f\x26\xd8\xa4\x27\x28\x54\x9e\x4a\x1b\xdc\x24\x18\x1e\x97\xba\x12\xe5\xd3\xde\xc2\x88\x93\x1a\x14\x20\x5b\x33" +
	"\x6f\xb9\x2d\x9d\x44\x3e\xf2\x46\x36\x94\x51\x04\x29\x2d\xfa\xbf\xff\xfe\xfb\xef\xfb\x6f\xdf\xee\xbf\x7e\x8d\x7e" +
	"\xfe\x79\xe4\x38\xa3\x90\x67\x51\x74\xce\xa2\x88\x04\xae\xac\xdd\x9c\x6e\x67\x96\x69\x12\x2e\xf4\x99\x33\x3b\xcb" +
	"\xba\x0e\x35\x4f\x33\x30\x65\xd9\x1b\x21\x33\x52\x5e\x45\xe4\x3a\x90\xf2\xf5\xc1\xd1\xb0\x87\x86\x47\xe9\xff\xfa" +
	"\x07\x67\x3c\x67\xaf\xd4\x3d\x3c\xe9\x21\x7d\x70\xd6\x43\x47\xfd\xa4\xf2\xa9\xb4\xf6\xb0\xdf\x43\xfa\xc9\xa0\x87" +
	"\x92\x2f\xf4\x0f\xce\x4e\xf6\x78\x5b\x36\xe0\x9e\xb0\xd8\x72\x54\xac\x95\x03\xa0\xd8\xc1\xbe\x6f\xb9\xd3\x8f\xe9" +
	"\x8a\x70\x9c\x90\x5d\x4f\x2b\x1c\x67\xe7\x3d\xb8\xaa\x62\x33\x7a\x5e\x83\x5d\x77\xa0\x46\xec\x5a\xb9\xc5\x71\x9a" +
	"\x9a\x1c\x15\x71\x3c\x12\xe2\xa0\xa2\xcc\x9a\xc9\x22\x9c\x25\x6c\x53\x91\xc4\x23\x21\x09\x91\x6e\x40\x91\x89\x22" +
	"\x13\x39\x99\x28\x0a\x51\x14\x52\xa1\x90\x5c\x27\xd8\x7d\xb2\x60\x4c\xc5\xe8\x9d\xa0\xcf\x8a\x50\xaa\x2f\xad\x9e" +
	"\x95\x20\xd0\xe0\x8e\xe6\x23\x97\x30\x0a\x2c\x77\xba\x5e\x72\xb9\x0c\xbc\xe4\x66\x8f\x76\x0b\x97\x20\x68\x59\x14" +
	"\xbd\x30\x2f\xad\x58\x68\x5d\x81\x48\xb2\x11\x52\xf1\x4c\xc5\x4f\xb6\x70\xf0\x74\x9f\x32\x4a\x27\x72\x45\x1f\x1b" +
	"\xa6\x0f\x91\x35\x16\x75\x8f\x4a\xde\x79\x26\x51\x04\xb2\xf1\x03\x06\x0e\xe2\x99\x83\x36\xdc\xd8\xb9\x86\xe9\x6b" +
	"\x95\x67\x0b\x8d\x99\x53\x84\xb1\xc9\x93\x45\x34\xe5\xdd\x62\x1b\xcf\x8a\x28\xe4\xeb\x5b\x59\xbd\x97\x07\x2f\x5e" +
	"\x6e\x67\x5b\xef\x48\x06\x21\xc4\x5b\x00\x97\xb8\x44\x52\x88\xdd\x68\x37\xf6\xbf\x7e\xf1\xae\x5f\x5d\x69\x37\xf1" +
	"\x35\x09\x5c\x12\x91\x70\x3f\x61\x5e\xe1\x95\xf6\x0d\xbc\x93\x54\x70\x0f\xa8\xdd\x18\xa8\x22\x4b\x6e\xbd\x44\x54" +
	"\x67\x43\x8a\xeb\xe6\xd8\x4e\x38\xcd\xf5\xa2\xe9\x7d\x45\xdd\x14\xa5\xbb\x6e\x13\x7b\x0a\xbf\x09\x84\x9e\x02\xb3" +
	"\xde\x0c\x16\xd1\x2e\x92\xba\x55\x0a\x6c\x20\x8a\xba\x70\x11\xc3\x21\x62\xc2\xa5\x7b\x48\xa4\x10\x4e\xaa\x16\x7f" +
	"\x80\xd5\xd2\xc6\xd8\xeb\x7d\x15\xd6\x23\x29\xf7\x3d\xb3\x87\x68\xd0\x77\xfe\x24\xf9\xa3\x47\x7d\xca\x92\x71\x24" +
	"\xf5\x4b\x13\x56\xea\xe2\x06\xbb\xbf\x1d\x1c\x54\x5c\xdf\x32\x47\xb7\xaa\x5f\xda\x7f\xd0\xcb\xff\xfb\xe3\x0f\xdf" +
	"\x33\x3f\x7f\xfe\xee\xa5\x24\xea\x9a\x6e\x00\x74\xfd\x20\xf5\x93\xeb\x89\x9c\xe3\x7a\xcc\x57\x7b\xe5\xc4\xd2\xc5" +
	"\x4b\x9a\xa5\xf1\xdc\x26\x09\x8d\x14\x6b\x03\xf1\x60\x33\xcd\x51\xdd\xf2\xf4\xbd\x50\x64\xb7\x68\xbb\x4b\xa2\xba" +
	"\xe1\xb8\x6e\xd1\xe6\x6a\xb3\xbd\xe4\xd1\xdd\xc2\x3d\xd6\x26\xc2\x5b\xc0\x08\x5a\xf5\xb6\xf9\xb3\xa2\x6c\xdf\xd0" +
	"\xf6\xe6\x63\xcb\xe1\x2d\x0f\x67\xfd\x6e\x3c\x2d\xea\x6e\x26\xc5\x45\x92\xf7\x34\x09\xb0\x1b\x26\x1c\x5f\x44\x00" +
	"\x69\x0d\x1f\x4b\x20\x27\x0b\xee\x4b\x5f\xaf\x94\xad\xd5\x5f\x65\x2d\x0e\x29\xfc\xd3\x7b\xd8\x4d\xa5\xa5\x43\x4a" +
	"\x1d\x6a\xb4\x73\x0e\x29\xbc\x2f\x94\x72\x48\x81\xbb\xfe\xac\xe4\xe5\x6d\x5f\xa2\x2c\x37\x3f\xb8\xbb\x6f\x19\x4a" +
	"\x13\x3c\x20\xba\x7b\x15\x8d\x6c\x56\x03\x93\x63\xc4\xc1\x59\x0c\x56\x7c\x6f\x2b\xb2\x25\x2c\x43\x2d\x17\x97\x9f" +
	"\xd0\x85\x17\xc0\xbd\x55\xb4\x52\x7d\xa9\xa4\x15\xce\x6d\x72\x21\x5a\x31\xfc\x78\x6c\x88\xa6\xbe\x5b\x7a\x3b\xa5" +
	"\xd3\x7d\x9c\x9e\x6e\x4a\x71\x07\xd7\x56\x8a\x3b\xa5\xb8\x83\x5e\x54\x8a\xbb\xa2\xd2\x1a\x15\x77\x2f\xe4\x2a\x31" +
	"\x91\x29\x4b\xe9\x97\xd8\xd7\x94\x7e\x29\x7f\xab\xae\x5f\x4a\xc4\x95\x4e\xa9\x96\xb6\x1c\x35\x76\xc2\x3c\x04\x35" +
	"\x43\x27\x9c\x02\xa8\x31\x68\xec\x7d\x06\x42\x89\x3e\xd1\x44\xaf\x7c\xf8\x27\xf2\x26\xe8\xdc\xf7\x6d\xcb\xe0\xd3" +
	"\x08\x2e\x16\x55\x46\x85\x8e\x8b\x5c\x72\xf8\x5a\x1f\xc9\x35\x0e\x42\xc1\x24\x33\x58\xe8\x7a\x3d\xf8\xba\x80\x42" +
	"\x87\x5f\xad\x45\x7c\xbe\xb5\xee\x89\xc9\xc7\x7b\xa6\x5c\x99\x8f\xec\x6e\x58\xdf\x93\xe5\xd7\xf7\x54\xba\xbe\x33" +
	"\x62\x4d\x67\x11\x14\x44\x47\x57\xfe\xac\xfe\x30\x3f\x39\x47\x48\xfb\xc7\x71\x9f\xdb\x47\x29\x00\x38\x34\x1a\x7c" +
	"\x3b\x15\xe6\x96\x29\x33\x4c\xc0\xe5\x33\xcb\x24\x3f\x38\x7e\xf4\x20\xad\xf1\x2f\x12\x78\x62\xf8\x46\x9a\xea\x4f" +
	"\x50\x66\x09\x92\xf0\xc9\x92\x39\xd2\xf8\xf5\x08\x0b\xf2\x2c\x54\x93\x3d\x02\x89\x02\x79\x4d\xab\x00\x6b\x9f\x16" +
	"\xdd\x59\x66\x04\xe5\x19\x10\x2a\x68\x13\xd9\xe1\xd2\xb3\xdc\x28\x93\xb2\x53\x61\xa2\xbe\x89\x49\x60\x10\x37\xc2" +
	"\x53\x22\x20\x6d\x16\xe4\xbf\x1e\xae\x48\x4b\x45\xbb\x22\x20\xae\x49\x02\xaa\xe5\xd5\x26\xb6\x57\x3f\xf8\xb5\x34" +
	"\x25\xef\xaf\xb7\x24\x08\x2c\x73\x6e\xc5\x6c\x25\x3b\x29\x1a\xa1\x8b\xcb\x4f\x29\x93\x11\xde\x35\x92\x77\xfe\x36" +
	"\xd4\xcf\x86\x06\x77\x90\xce\x75\x99\xa9\xc3\x2f\x27\x5f\x86\xe1\xe5\x99\x2f\x4f\x06\xc6\xd9\x31\xe8\xc1\x17\x46" +
	"\xc4\xf7\x89\xf9\x8b\xe5\x12\x48\x8b\xbd\x82\xee\x89\xa0\xa1\x99\x0e\x9e\x90\xeb\xc1\x26\x3a\x58\x4d\x03\x9e\x74" +
	"\x2e\x6e\x5e\xb5\xc9\x19\x19\x98\x03\x58\x0b\x5f\xe1\xd9\x43\x41\x05\xc1\xae\x4a\xc7\xe6\x63\x83\x14\x2d\x1c\xcd" +
	"\x25\x54\xb0\xef\x72\x27\x46\x18\x61\xe3\x46\x94\xe1\x83\x99\x52\x50\x8e\x98\xe7\x1a\x36\xff\xe4\xb6\xcc\xa7\xde" +
	"\x90\x51\x5d\x9e\xa1\x60\xfe\xac\xea\x0b\x5c\x2a\x5a\x34\xb9\xa2\xdc\xea\x6c\xa6\x74\xc3\x8f\xb3\x34\xe9\x21\x31" +
	"\x3c\xd7\x0c\xc7\x25\x2b\xdd\x02\x2c\xcf\x7c\x97\x1f\x70\xa1\xe7\x49\x9b\xfe\xb4\xae\x40\x4b\x5f\x46\x80\x06\x04" +
	"\x57\xfe\xa6\x84\xea\xad\x92\x8f\xaf\x28\xa9\xfa\x7c\xca\x8a\x56\xa9\xd5\x5b\x24\x57\x9f\x7b\x84\x60\x82\xf5\x36" +
	"\xc9\xef\xdb\x1c\x4b\x2c\x1f\xbc\x0c\x3c\x87\x44\x33\x12\x83\x14\x9f\x2b\xbb\xf4\x7e\xbf\x8f\x5e\xa0\x30\x76\x76" +
	"\x8b\xbd\x3a\xce\xf7\xf3\xb8\xd8\xe9\xf4\xcf\x51\xf9\x27\xcf\x31\xa8\xe8\x38\x0a\x63\x67\x1c\xe0\x88\x7c\x2d\x1a" +
	"\x7b\x75\xa5\x7d\xe7\x86\x55\x9f\xa2\x57\xff\xb9\xd2\x12\x1e\x91\x3c\x63\x3f\xf0\x5f\xaf\xae\x34\xf8\xe9\xe5\xaf" +
	"\xaf\x5b\xe8\xdd\xe4\x9b\x5c\x06\x86\x4e\x2f\x02\x61\x84\xc5\x22\x7b\x5b\x45\x52\x7a\x5f\x28\x39\xcf\x1c\xa2\x5d" +
	"\xc1\xd2\x2e\x36\x27\xd4\x2d\x74\x76\xb6\xdf\x68\x4a\x79\xb9\xa4\xf2\xb2\x81\x68\xd7\xa8\xb6\x4c\x58\x82\x43\xb0" +
	"\xbb\x97\x4a\x17\xbb\xd9\xe3\xe4\xd1\x6e\x90\xe9\x42\xc6\x94\xae\x12\x6e\xb0\x57\x97\x41\xd8\x84\x56\x62\x39\x64" +
	"\x11\xff\xbf\xba\x04\x51\x3a\x04\xe6\xad\xf5\xa8\x0f\xdf\xee\x77\xb4\x17\x6f\x32\xfa\xda\xdb\x2b\x2b\x42\xc5\x1b" +
	"\xd1\xc2\x3e\x1b\x41\xe4\xa9\xe8\x62\xd7\x78\x61\x55\xcc\x57\x31\xdf\xb4\xd2\x42\xcc\x37\xa3\xac\x84\xfd\x22\xc5" +
	"\x7f\x35\x48\x8a\x57\xfc\x77\xfe\xde\x76\x8c\xff\xee\x48\xde\x94\xfb\x17\xc8\x50\xa6\x1a\x70\xa6\x1a\x90\xa6\x18" +
	"\xac\xa9\xcb\x4f\x0c\xbc\x14\x64\x19\xda\xb5\x5c\x7a\x16\x38\x96\x6d\x19\x5e\xc0\x65\x23\x10\xa2\x4c\x35\xe0\x4c" +
	"\x09\xf3\xeb\xb6\xc4\x9a\xe2\x15\xf7\x62\xbc\x29\x21\xe2\x54\x03\xe6\x94\x1c\x75\x4a\x86\x3b\xd5\x60\xac\x80\xb1" +
	"\xa7\xf8\x21\xc1\xf8\x53\xf0\x0d\xba\x74\x78\x39\x94\x5e\x35\x5d\xcf\x05\xaf\x70\x32\xe0\x26\x39\x74\x93\x14\xbc" +
	"\x49\x0a\xdf\x24\xc1\xa2\x6a\x27\xbe\xb4\x40\xa4\xda\xfa\xd0\x78\x93\x53\x13\x6b\x80\x11\xaa\xe4\x18\x55\x0d\x28" +
	"\x55\xec\x27\x95\xe5\x76\x6e\xcb\xad\x3e\x94\xee\xd4\x06\xd3\x2d\x37\x1b\xca\x76\x5b\x29\x53\xb6\xdb\xad\xdb\x6e" +
	"\x59\x2c\xe0\x8d\x5b\x6f\xb3\x8f\x77\xd8\x80\x9b\xf5\xb0\xb3\x36\xdc\xf6\xcb\xa7\xcc\xb8\xd5\xdf\xaa\xe6\x57\x59" +
	"\x72\x97\xb4\xe4\x6e\x04\xf3\x7a\xb5\xf6\x5b\xa5\x36\xad\xfe\x94\xfd\xb6\x4d\xcf\x95\xfd\x36\xb7\xdf\x86\xb1\xb3" +
	"\x5b\x9a\x4b\xf9\xed\xdf\x45\x43\xec\xfa\x2d\xad\xcd\x27\xcd\x9a\x6c\xad\x4d\x22\x98\xd2\xf8\xb7\xeb\xa6\xd2\xf8" +
	"\x4b\xcc\xad\x19\x91\x29\x95\xbf\xf2\xfd\x62\x7e\x4f\x46\xe5\xbf\xde\x2b\xa6\xe2\xc1\x8a\x07\xa7\x95\x96\xb2\xba" +
	"\x2a\x2e\xac\x0c\xaf\x50\x9d\x27\xc3\x85\x77\x24\x6f\x76\xc1\xf0\x9a\x66\x7e\x69\xb2\xbd\x2a\x4b\x6b\x59\xda\x4d" +
	"\x4b\xab\xc0\xf0\x57\x5e\x27\x3b\x6a\x92\x54\xd6\xd6\xca\x8b\xeb\xb7\xb6\xee\x00\x9f\xae\x40\x16\xd7\x20\x70\xb5" +
	"\xd0\x98\x11\x07\xff\x56\xe0\xad\xea\xc7\xd5\xc2\xe8\x21\xe5\x21\x26\x0e\x6e\xaa\x6f\x01\xa0\xc3\x5a\x44\x1c\xdf" +
	"\xc6\x91\xe5\x4e\x17\x83\x57\x95\x62\x91\x4b\xd1\xc8\x79\xbc\x71\x88\x54\xea\x48\xe3\x8d\x0a\x8d\xb6\x12\xf0\x1a" +
	"\x70\xc6\xc5\xe9\x3a\xf9\xaf\xc3\x80\xe0\x2d\x20\xc1\xab\xa0\xe0\xef\x84\x48\x14\x32\x58\xf0\x0a\x84\xac\x0b\x00" +
	"\xc6\x8a\x31\xc1\x57\x8d\x0a\x3e\xcf\x7c\x09\xe1\xbb\x25\x00\xde\x6d\x20\xbc\x65\x47\x5f\x23\x8c\xb7\x18\xc8\xbb" +
	"\x01\xca\xbb\x01\xcc\x5b\x0a\xe7\xcd\xd1\xfc\x9a\xf6\xa4\x25\xdf\x8e\xd6\x23\xdb\x89\x73\xc1\xcf\xaf\x69\xbf\x32" +
	"\x40\x4f\x8b\xee\x59\x01\x4c\xd1\x76\xf7\xed\x92\xb3\xab\x76\x77\xf9\xdb\xc8\xee\x3e\xe7\x9c\x54\x50\x75\x7b\x83" +
	"\x79\xbc\xbe\x1b\x8f\x31\xa4\xfa\x68\xd4\x70\x6d\x91\x11\x54\xf4\x10\xed\xe9\x33\xd3\x51\xc0\x64\x9e\xd4\x49\x9f" +
	"\x88\xb9\x04\x4f\xc4\x0c\x97\x00\xaf\x21\x05\x93\x80\xe0\x83\x0a\xd6\x00\xbe\x9a\x73\x06\xf0\xcd\xcd\xb1\x85\x0d" +
	"\xcf\xb5\xe2\x19\xe5\xaf\x89\x67\xb4\xe2\x09\x43\x47\x7a\xe2\x0f\x9d\xe6\x13\x5f\x48\xff\xb2\x1b\x5f\x41\xbf\x8c" +
	"\xde\x4e\x4a\xc9\x5c\x37\x21\x05\x54\xa6\x76\xa3\x4a\x0f\x58\xcb\xd7\x34\x78\xf9\xf0\x79\xbd\x94\x64\x83\x01\xed" +
	"\xb7\x22\xc5\x9c\x28\x0c\x2f\xb3\x2b\x0b\xef\x90\x25\x1b\xfe\x56\xbd\xdf\xa5\x9a\x64\xe6\x66\x37\x49\x95\x57\x9a" +
	"\xeb\xdd\xed\xeb\xac\x76\x46\x8b\xbc\xac\x44\x13\x36\xe7\x5b\xc6\x0d\xf5\x37\x64\x1a\xcd\xb6\x63\xa1\xfc\xe7\xd7" +
	"\x49\x1b\x72\x3e\xac\x3a\xef\xd6\x7a\xc8\x3f\xd2\xeb\x73\xc7\xcf\xa6\xa6\xf3\x8f\x0e\xfb\x7c\x2d\x4e\x17\x35\xe0" +
	"\x9e\xe8\x8c\xea\xf3\x33\x3b\x3b\x96\x43\xc6\x22\x3a\x6c\xd7\x2b\xbe\x0b\xc7\x7c\x17\xf8\x5e\x0d\x8e\xf8\x47\x75" +
	"\x6e\xaf\x9d\x70\x4f\x0e\xfb\xec\x68\x84\x8b\xfa\xa7\x47\x3d\xe3\x34\x46\x5f\x90\x2b\x23\x2f\x49\x80\x58\x90\xd2" +
	"\x22\x5f\x18\xab\x8f\x64\x94\x14\x31\xf5\x6b\xd6\xf0\x9d\x49\x82\x7f\x57\x0b\x6e\x0b\xbd\xc5\x61\x9e\xcd\x2c\x25" +
	"\xe4\x1d\x84\x58\x03\xc3\x7e\x76\xf8\x1c\x7c\x09\x3d\x77\x44\xeb\xfc\xb5\x9f\xbd\x52\x52\x9f\x86\x5d\xd7\x8b\x70" +
	"\xbe\x2a\x0b\x68\x31\xae\x63\xcb\x8e\xde\xb8\x60\x86\x36\xce\xf1\xfc\xa7\x00\x4f\xb0\x8b\x79\xd7\x73\x84\x34\xe2" +
	"\xd2\x6c\x72\x82\x83\x5a\xe2\xb8\xa7\x59\x86\xe7\x5e\xe4\x1e\x98\x34\xb1\x69\xbf\x87\x06\xba\xde\x43\x83\xe1\xb0" +
	"\x87\x74\xde\x8e\xa1\xa5\x8e\x18\x23\xa4\xf7\xf9\x93\x2a\xe7\xa9\xe7\xe5\xd4\xa0\xbf\xa3\x73\x9b\x04\x11\x70\xe7" +
	"\x4f\x8e\x7f\x3a\x7c\xe0\xc8\xcb\x18\x90\x89\xc3\xd9\xb5\x87\x03\x73\x5e\x0e\x44\x4c\x2b\x02\x27\x45\x9b\xba\x24" +
	"\xa2\x46\x16\xf6\x54\x48\x95\xc6\x1f\x0b\x55\x76\xa5\x4f\xa9\xab\xfc\x21\xf3\x24\x22\x01\xce\x44\x46\x7d\x38\x3c" +
	"\x39\x3b\x3d\x3e\xd6\x07\x47\xc7\x95\x54\x68\xa0\xf7\x76\x25\x2b\x5e\x65\x08\x9d\x4b\xf7\xd7\x97\x9d\xf3\x59\xe4" +
	"\x40\xdd\x59\xbd\x45\xbe\xbf\x8b\x74\x5f\xed\xff\xd3\x32\x09\xca\x53\x2d\xfe\x7a\xfd\x85\x18\x1c\x79\x2c\x92\xdb" +
	"\x6f\x69\x04\x0e\x93\x84\x46\x60\xf9\xf9\x55\x80\x8b\xf1\x58\x07\x40\x07\x00\xc5\x21\x09\xf6\x68\x5e\x97\xba\x1b" +
	"\x7f\xe7\x00\x3a\xf8\xf1\x2a\x80\x0e\xb8\xeb\x42\x77\xf9\xa7\x98\x17\x7b\xdb\xa9\xd2\x4b\xb8\x2d\x70\x55\x57\x08" +
	"\xd0\x61\x12\x63\xba\x3c\xec\x82\x22\x8e\x47\x95\x47\x7f\x13\xb8\x2d\x8a\x24\x36\x8f\xdf\xcf\x29\x99\x14\x99\x28" +
	"\x32\x91\x93\x89\xa2\x10\x45\x21\x2c\x70\xff\x23\x21\x0b\x56\x19\xa3\xc0\x7c\xb6\xc3\x4a\x90\xc0\x14\xdb\x39\x58" +
	"\x9f\xcb\xc0\x4b\x6e\xf6\x68\xb7\x70\x18\x01\xbd\x62\x15\xbd\x54\x5f\x5a\xb1\xd0\xba\x02\x91\x64\x23\xa4\xe2\x99" +
	"\x8a\x9f\x6c\xe1\xe0\xe9\x3e\x65\x14\x40\xbf\x8a\x3e\x36\x4d\x1f\x85\xb9\xbd\xfb\x54\xa2\xd0\x05\xb7\x85\x57\xba" +
	"\x1c\x6d\x6c\x02\x79\xf2\x32\x0d\x5b\x52\x84\xb1\xc9\x93\x45\x34\xe5\xdd\x62\x1b\xcf\x8a\x28\x14\xf0\xa4\x02\x9e" +
	"\x5c\x59\x37\x9f\x2b\xf0\x64\x91\xf4\x07\x87\x88\x89\x41\xed\x21\x91\x42\x38\xa9\x5a\xfc\x01\x56\x4b\x1b\x63\xaf" +
	"\xf7\xd5\xa4\x22\x49\xb9\xef\x99\x3d\x44\x53\x20\xe5\x4f\x92\x3f\x7a\x34\xe8\x35\x19\x47\x52\xbf\x34\x61\xc9\xe1" +
	"\x31\x2b\x7e\x94\x8b\x04\xce\xa6\x15\xdc\x90\x96\x17\x41\xb0\x32\xb7\xcb\x9e\xc8\xd7\xb2\xc7\x7c\xbb\x57\x4e\x2f" +
	"\x5d\xc2\x3c\xb6\x16\x99\x24\x34\xd2\x04\x20\x48\x87\x56\x49\xe1\x7a\xb2\xaf\xa9\x90\xda\xfc\xad\x3a\xae\x67\x71" +
	"\x9d\xec\x14\xb8\xe7\x72\x5e\x2b\x6b\x71\x4b\xe1\x9f\xde\xc3\xce\x2a\x2d\xdd\x52\x6a\xde\x47\xdd\x73\x4b\xe1\xdd" +
	"\xa3\x94\x5b\x0a\xdc\xf5\x67\x25\x35\x6f\xfb\x2a\x65\xb9\xf9\xf1\xdd\x7d\xfb\x50\x9a\x3d\x00\xd1\xdd\xab\x68\x64" +
	"\xb3\x7a\x98\x3c\x4f\x9d\x30\xfa\x7d\x95\xb7\xb7\x22\xca\x7e\x19\x6a\xb9\xb8\xfc\x84\x2e\xbc\x00\xee\xad\xa2\x95" +
	"\xea\x4b\x25\xad\x70\x6e\xa1\x0b\xd1\x8a\xe1\xc7\x63\x43\x34\xf5\xdd\xd2\xde\x29\xcd\xee\xe3\xf4\x77\x53\xea\x3b" +
	"\xb8\xb6\x52\xdf\x29\xf5\x1d\xf4\xa2\x52\xdf\x15\x95\xd6\xa8\xbe\x7b\x21\x57\x8c\x89\x0c\x5a\x4a\xbf\xc4\xbe\xa6" +
	"\xf4\x4b\xf9\x5b\x75\xfd\x52\x22\xae\x74\x4a\xb5\xb4\xe5\x40\xb2\x13\xe6\x21\xa8\x19\x3a\xe1\x14\x40\x8d\x71\x64" +
	"\x45\x1c\x28\xc5\xfd\x85\xd0\xc1\xbc\x09\xba\x00\xaf\xcd\x8b\xc4\x95\x29\xe4\x21\x70\x6d\x4f\xa5\x6b\xdb\x00\x3c" +
	"\x74\x56\x7f\xa8\x70\x87\xca\x32\x85\x3b\x24\xda\x15\x1b\xc3\x1d\x6a\x02\x16\x5f\x2b\xea\x90\x14\x5e\x7c\xfb\x90" +
	"\x43\x0d\x10\xbc\xdb\xc5\x1b\x4a\x3a\xa7\xc0\x86\xd6\x04\x36\x24\x9d\x5c\x85\x34\xb4\x24\xd2\x90\xe1\xc7\x19\xce" +
	"\x48\x48\x0c\xcf\x35\xc3\x71\xc9\x4a\x3b\x8f\x39\xa4\x70\x03\xaa\x3f\x85\x39\xd4\xa6\xe7\x0a\x73\x28\x57\x74\xe9" +
	"\xfd\x7e\x1f\xbd\xa0\xd9\xf2\x8b\xbd\x3a\xce\xf7\xf3\x98\xc5\x0c\x1a\x95\x7f\xf2\x1c\x83\x8a\x8e\xa3\x30\x76\xc6" +
	"\x01\x8e\x48\x05\xaa\xe8\x3f\x9d\xc1\x2a\x6a\x00\x23\x58\x3f\x94\x51\x93\x6c\xb7\x26\x20\x23\xa9\x54\xa7\x10\x34" +
	"\xba\xad\xb9\xec\x38\x82\x46\x8a\x62\x64\xf8\xf1\x66\xb0\x33\x18\x17\xc0\x4e\x02\x68\x28\x08\xc4\xea\xef\xc9\x68" +
	"\x63\xd7\x78\x6d\x55\x1c\x58\x71\xe0\xb4\xd2\x52\x18\x46\x86\x1f\x6f\x08\xc0\xa8\xfb\x4c\x58\xa1\x18\x55\x7f\x4f" +
	"\x86\x09\xef\x48\xde\xec\x02\x8a\xd1\xc5\xe5\xa7\x26\x08\x23\xb4\x6b\xb9\xf4\x40\x70\x2c\xdb\x32\xbc\x80\x4b\x4d" +
	"\xa0\x40\x8d\x3a\x07\x6a\x74\x28\xbd\x74\xba\x9e\x0b\x5e\xe6\x14\xa0\xd1\x33\x02\x34\xaa\xbe\xab\x8c\xb8\xe5\x63" +
	"\x49\x46\xd1\xa1\x74\xa7\x36\x58\x71\xb9\xd9\x50\x66\xdc\x4a\x99\x32\xe3\x6e\xdd\x8c\xdb\x8c\x5a\xbe\x56\x43\x6e" +
	"\x13\x76\xf9\xf6\x6d\xb9\xcd\xd8\xbe\xdb\x35\xe7\xb6\x5f\x3e\x65\xd1\xad\xfe\x56\x35\xbf\xca\xa8\xbb\xa4\x51\x37" +
	"\x8b\xcb\x49\xad\x34\x54\x94\xeb\xbc\x29\x57\xe9\x4e\xab\x3f\x65\xca\x6d\xd3\x73\x65\xca\xcd\x4d\xb9\x61\xec\xec" +
	"\x96\x86\x53\x7e\xfb\x77\xd2\x26\xbb\x7e\xa3\x6b\xf3\x51\xb3\x26\xb3\x6b\x93\x0c\xa6\xf4\xfe\xed\xba\xa9\xf4\xfe" +
	"\x12\xcb\x6b\x46\x64\x4a\xf1\xaf\x9c\xc1\xf8\xdf\x93\x51\xfc\xaf\xf7\xa2\xa9\x18\xb1\x62\xc4\x69\xa5\xa5\x0c\xb0" +
	"\x8a\x15\x23\x65\x83\x7d\xf2\xac\x78\x47\xf2\x66\x17\x6c\xb0\x69\x2e\x98\x26\x33\xac\x32\xba\x96\xa5\xdd\x34\xba" +
	"\x0a\x6c\x80\xe5\xc5\xb2\xa3\xd6\x49\x65\x78\xad\xbc\xb8\x7e\xc3\xeb\x0e\xf0\xe9\x0a\x56\x76\x0d\x5f\x57\x0b\x8d" +
	"\x19\x71\xf0\x6f\x05\x22\xab\x7e\x5c\x2d\x8c\x1e\x52\x1e\x62\xe2\xe0\xa6\xfa\x16\x80\x71\xad\x45\xc4\xf1\x6d\x1c" +
	"\x59\xee\x74\x31\x0c\x56\x85\x6b\x3f\x07\xd6\xba\x38\xc3\x27\xff\xf5\x55\x80\xd2\xbf\x13\x22\x58\xb4\x83\xa6\x77" +
	"\x01\xd0\xd9\xcd\x21\xd3\xcf\x33\x5b\x0a\x56\xbe\xfc\x35\xc1\xca\xab\x2d\xbb\x1c\x11\x56\xee\x3a\x62\x12\xad\x5d" +
	"\x6d\xd6\xb3\xbf\x19\x40\xa9\x05\xf7\xb8\x00\x0d\x69\xbb\xfb\x7c\x35\x53\xac\x98\x42\xf9\xeb\x02\x53\x10\x30\x80" +
	"\x2e\x6d\xf7\x8a\xf2\x62\x6e\x02\xcc\xf4\x1b\x30\x39\x67\x55\xd3\x87\x49\xf5\xf5\x70\x04\x08\x93\xa8\x1d\x1f\x00" +
	"\xdf\xdc\x1c\x13\xd8\xe6\xc4\x2b\x3e\x51\xfe\x9a\xf8\x44\x2b\x3e\x30\x74\xa4\x6c\x60\xe8\x34\xb3\x00\xe1\x66\x90" +
	"\xdd\x1d\x0b\x62\x66\x34\x80\x52\xb2\xe6\xba\x09\xa9\xb2\x32\x05\x1e\x55\x9f\xc0\xfa\xc2\xa6\xc1\xcb\x87\xcf\x6b" +
	"\xb8\x24\xbb\x0d\x68\xbf\x15\x29\xe6\x44\x61\x78\x99\xad\x5a\x78\x1b\x2d\xe5\xb1\x6f\xd5\x9b\x62\xaa\x98\x66\xee" +
	"\x88\x93\x54\x0d\xa6\xb9\xde\xdd\xbe\xce\xea\x79\xb4\xc8\xcb\x4a\x34\x61\x73\xbe\x65\xdc\x50\x27\x46\xa6\xd1\x6c" +
	"\x3b\x16\xb6\x04\x7e\x9d\xb4\x21\xe7\x18\xab\xf3\xbe\xb2\x87\xfc\x23\xbd\x3e\x77\xfc\x6c\x6a\x3a\xff\xe8\xb0\xcf" +
	"\xd7\xe2\xb4\x5a\x03\xee\x89\xce\x28\x51\x3f\xb3\xb3\x63\x39\x64\x2c\xa2\xc3\x76\xbd\xe2\xbb\x70\xcc\x77\x81\xef" +
	"\xd5\xe0\x88\x7f\x54\x67\xfd\xda\x09\xf7\xe4\xb0\xcf\x8e\x46\xb8\xa8\x7f\x7a\xd4\xdd\x4e\x63\x34\x0f\x45\x68\x49" +
	"\x7a\x1e\xec\xff\xd3\x32\x09\x2a\xd2\x90\xb1\x4a\x4d\x46\xd3\x11\x53\x3f\x69\x0d\xdf\x99\xff\xbe\xab\x5e\x63\xb5" +
	"\xdb\x42\xf9\x31\xc8\x13\x69\xa5\x34\xbc\x83\x10\x6b\xaa\xd8\x2f\x4e\x8e\x83\x2f\xa1\xe7\x8e\x68\xad\xbf\xf6\xb3" +
	"\x97\x4a\xd2\xd3\xb0\xeb\x7a\x11\xce\x97\x64\x01\x65\xc8\x75\x6c\xd9\xd1\x1b\x17\x4c\xfd\xc6\xb9\xb2\xff\x14\xe0" +
	"\x09\x76\x31\xef\xcc\x8e\x90\x46\x5c\x9a\xa6\x4e\x70\x64\x4b\x5c\x01\x35\xcb\xf0\xdc\x8b\xdc\xa7\x93\x66\x4c\xed" +
	"\xf7\xd0\x40\xd7\x7b\x68\x30\x1c\xf6\x90\xce\x9b\x43\xb4\xd4\xb3\x63\x84\xf4\x3e\x7f\x4c\xe5\x0c\xf5\xbc\x9c\x1a" +
	"\xf4\x77\x74\x6e\x93\x20\x02\x74\x03\x89\x20\x40\x87\x0f\x9c\x77\x19\xf7\x31\x71\x38\xbb\xf6\x70\x60\xce\xcb\x7e" +
	"\x88\x69\x45\xe0\xa4\x68\x53\x97\x44\xd4\x56\xc3\x1e\x09\xa9\xee\xf9\x63\xa1\x11\xaf\xf4\x29\x75\xbe\x3f\xd4\xab" +
	"\x4f\x22\x12\xe0\x4c\x92\xd4\x87\xc3\x93\xb3\xd3\xe3\xe3\xc1\xd9\xc9\x49\x05\xb0\x01\xf4\x07\xaf\xa4\xdb\xab\x0c" +
	"\xa1\x73\x79\x04\xfb\xb2\x43\x3e\x8b\x45\xa8\xbb\xbf\xb7\x48\x24\x98\xa7\x6d\xfc\xf5\xfa\x0b\x31\x38\x8a\x58\x24" +
	"\x57\xe0\xd2\x68\x1e\x26\x09\x8d\xc0\xf2\xf3\x4b\x01\x17\x28\xb2\x0e\xb0\x0f\x00\xd6\x43\x12\x31\xd2\xbc\x14\xf5" +
	"\x58\x80\xce\x81\x7d\xf0\x81\x33\x0a\xec\x03\xee\xba\xd0\xe7\xfe\x29\xe6\xd8\xde\x76\xda\xf5\x12\xc0\x0b\x5c\xd5" +
	"\x15\x82\x7d\x98\xc4\x98\x2e\x0f\xe1\xa0\x88\xe3\x51\xe5\xe4\xdf\x04\x06\x8c\x22\x89\x0d\x92\x84\x48\xc3\xa4\xc8" +
	"\x44\x91\x89\x9c\x4c\x14\x85\x28\x0a\x61\x00\x9b\xcd\x47\x42\x16\x8c\xc9\x50\x01\x03\x6d\x89\x95\x20\x81\xd5\xb5" +
	"\x73\x10\x41\x97\x81\x97\xdc\xec\xd1\x6e\xe1\x4a\x02\xfa\xd3\x2a\x7a\xa9\xbe\xb4\x62\xa1\x75\x05\x22\xc9\x46\x48" +
	"\xc5\x33\x15\x3f\xd9\xc2\xc1\xd3\x7d\xca\x28\x40\x83\x15\x7d\x6c\x9a\x3e\x0a\x5b\x7b\xf7\xa9\x44\x21\x15\x6e\x0b" +
	"\xfb\x74\x39\xda\xd8\x04\x8a\xe5\x65\x1a\xf5\xa4\x08\x63\x93\x27\x8b\x68\xca\xbb\xc5\x36\x9e\x15\x51\x28\x10\x4b" +
	"\x05\x62\xb9\xb2\x6e\x3e\x57\x10\xcb\x22\x73\x10\x0e\x11\x13\xc2\xda\x43\x22\x85\x70\x52\xb5\xf8\x03\xac\x96\x36" +
	"\xc6\x5e\xef\xab\x89\x49\x92\x72\xdf\x33\x7b\x88\xe6\x51\xca\x9f\x24\x7f\xf4\x68\xcc\x6c\x32\x8e\xa4\x7e\x69\xc2" +
	"\x92\x43\x6d\x56\x9c\x28\x97\x8e\xbb\x2d\xc2\x67\x65\x3e\x97\x3d\x91\x87\x65\x8f\xf9\x76\xaf\x9c\x5e\xba\x84\x79" +
	"\x54\x2e\x32\x49\x68\xa4\x49\x44\x90\x0e\xad\x92\xc2\x08\x65\x5f\x53\xc1\xb8\xf9\x5b\x75\x67\x93\xe2\x3a\xd9\x29" +
	"\xa0\xd0\xe5\xbc\x56\xd6\xe2\x96\xc2\x3f\xbd\x87\x9d\x55\x5a\xba\xa5\xd4\x1c\x8e\xba\xe7\x96\xc2\x7b\x44\x29\xb7" +
	"\x14\xb8\xeb\xcf\x4a\x6a\xde\xf6\x55\xca\x72\xf3\xe3\xbb\xfb\xf6\xa1\x34\xef\x00\xa2\xbb\x57\xd1\xc8\x66\xf5\x30" +
	"\x79\xb2\x3b\x61\xdc\xfc\x2a\x6f\x6f\x45\x7c\xfe\x32\xd4\x72\x71\xf9\x09\x5d\x78\x01\xdc\x5b\x45\x2b\xd5\x97\x4a" +
	"\x5a\xe1\xdc\x42\x17\xa2\x15\xc3\x8f\xc7\x86\x68\xea\xbb\xa5\xbd\x53\x9a\xdd\xc7\xe9\xef\xa6\xd4\x77\x70\x6d\xa5" +
	"\xbe\x53\xea\x3b\xe8\x45\xa5\xbe\x2b\x2a\xad\x51\x7d\xf7\x42\xae\x18\x13\x19\xb4\x94\x7e\x89\x7d\x4d\xe9\x97\xf2" +
	"\xb7\xea\xfa\xa5\x44\x5c\xe9\x94\x6a\x69\xcb\xb1\x63\x27\xcc\x43\x50\x33\x74\xc2\x29\x80\x1a\x43\xc7\x8a\xe0\x4f" +
	"\x0a\x23\x0c\x41\x8c\x79\x13\x24\x4a\x60\xb4\x48\x64\x99\x02\x30\x02\x57\xf7\x54\xba\xba\x0d\xf8\x45\x67\xf5\x87" +
	"\x0a\xbe\xa8\x2c\x53\xf0\x45\xa2\x5d\xb1\x31\xf8\xa2\x26\xa4\xf2\xb5\x82\x17\x49\xf1\xca\xb7\x8f\x5c\xd4\x00\xe7" +
	"\xbb\x5d\xd8\xa2\xa4\x73\x0a\xb3\x68\x4d\x98\x45\xd2\xc9\x55\x80\x45\x4b\x02\x16\x19\x7e\x9c\xc1\x95\x84\xc4\xf0" +
	"\x5c\x33\x1c\x97\xac\xb4\xf3\xd0\x45\x0a\x78\xa0\xfa\x53\xd0\x45\x6d\x7a\xae\xa0\x8b\x72\x55\x97\xde\xef\xf7\xd1" +
	"\x0b\x9a\x6e\xbf\xd8\xab\xe3\x7c\x3f\x8f\x59\xe4\xa1\x51\xf9\x27\xcf\x31\xa8\xe8\x38\x0a\x63\x67\x1c\xe0\x88\x74" +
	"\x12\xf1\xa8\x01\xcd\x60\xfd\x80\x48\x4d\xb2\xdd\x9a\xe0\x90\xa4\x52\x9d\x82\xe0\xe8\xb6\xee\xb2\xe3\x10\x1c\x29" +
	"\x16\x92\xe1\xc7\x0a\x7c\x43\x21\x29\xf2\xbf\x27\xa3\x8f\x5d\xe3\xb5\x55\x71\x60\xc5\x81\xd3\x4a\x4b\x81\x20\x19" +
	"\x7e\xac\x10\x90\x14\x02\x12\xf0\x7b\x32\x4c\x78\x47\xf2\x66\x17\x10\x90\x2e\x2e\x3f\x35\xc1\x1f\xa1\x5d\xcb\xa5" +
	"\x07\x82\x63\xd9\x96\xe1\x05\x5c\x72\x02\x05\x88\xd4\x39\x40\xa4\x43\xe9\xa5\xd3\xf5\x5c\xf0\x32\xa7\xc0\x90\x9e" +
	"\x11\x18\x52\xf5\x5d\x65\xc4\x2d\x1f\x4b\x72\x8a\x0e\xa5\x3b\xb5\xc1\x8a\xcb\xcd\x86\x32\xe3\x56\xca\x94\x19\x77" +
	"\xeb\x66\xdc\x66\xec\xf3\xb5\x1a\x72\x9b\x10\xd0\xb7\x6f\xcb\x6d\x06\x07\xde\xae\x39\xb7\xfd\xf2\x29\x8b\x6e\xf5" +
	"\xb7\xaa\xf9\x55\x46\xdd\x25\x8d\xba\x59\x64\x4e\x6a\xa5\xa1\xa2\x5c\xe7\x4d\xb9\x4a\x77\x5a\xfd\x29\x53\x6e\x9b" +
	"\x9e\x2b\x53\x6e\x6e\xca\x0d\x63\x67\xb7\x34\x9c\xf2\xdb\xbf\x93\x36\xd9\xf5\x1b\x5d\x9b\x8f\x9a\x35\x99\x5d\x9b" +
	"\x64\x30\xa5\xf7\x6f\xd7\x4d\xa5\xf7\x97\x58\x5e\x33\x22\x53\x8a\x7f\xe5\x0c\xc6\xff\x9e\x8c\xe2\x7f\xbd\x17\x4d" +
	"\xc5\x88\x15\x23\x4e\x2b\x2d\x65\x80\x55\xac\x18\x29\x1b\xec\x93\x67\xc5\x3b\x92\x37\xbb\x60\x83\x4d\xb3\xc1\x34" +
	"\x99\x61\x95\xd1\xb5\x2c\xed\xa6\xd1\x55\x60\x03\x2c\x2f\x96\x1d\xb5\x4e\x2a\xc3\x6b\xe5\xc5\xf5\x1b\x5e\x77\x80" +
	"\x4f\x57\xd0\xb1\x6b\x88\xba\x5a\x68\xcc\x88\x83\x7f\x2b\x80\x58\xf5\xe3\x6a\x61\xf4\x90\xf2\x10\x13\x07\x37\xd5" +
	"\xb7\x00\x54\x6b\x2d\x22\x8e\x6f\xe3\xc8\x72\xa7\x8b\x01\xaf\xae\x04\xbd\x5e\x02\x1d\x57\xe8\xa9\xf2\x3a\x4d\x44" +
	"\xb9\x45\x08\x7b\x71\x0a\x4f\xfe\xeb\x99\x30\xc8\xf3\x5b\x06\x72\x1e\xa6\xab\x02\x73\x5e\x14\xa4\x5d\x41\x9e\x87" +
	"\x5b\xc8\xc1\x65\x5d\x00\x4a\x76\x73\xc8\xf3\xf3\xcc\x97\x42\x8a\x2f\x7f\x4d\x48\xf1\x2b\xd9\x93\xe7\x9c\x45\x1b" +
	"\x55\xf7\x23\x98\xfd\xe7\xbb\xf1\x18\x43\x37\xa4\xc6\x8b\x70\xb7\x36\x6d\xe5\x32\x23\x26\xd1\xda\xdd\x45\xb8\xc3" +
	"\x79\x72\x65\x76\x38\x28\x92\x14\x1b\x9c\xc1\x8c\x12\x6f\x72\xb0\x91\x7c\x8f\x0b\x00\x8f\xb6\xbb\xcf\x57\x33\xc5" +
	"\x8a\x29\x94\xbf\x2e\x30\x05\x01\x03\xe8\xd2\x76\xaf\x68\x27\xe6\x26\xc0\x4c\x81\x01\x93\x73\x56\x35\x7d\x98\x54" +
	"\x5f\x0f\x47\x80\x60\x87\xda\xf1\x01\xf0\xcd\xcd\x31\x81\x6d\x4e\xbc\xe2\x13\xe5\xaf\x89\x4f\xb4\xe2\x03\x43\x47" +
	"\xca\x06\x86\x4e\x33\x0b\x10\x6e\x06\xd9\xe5\xb0\x20\x66\x46\xc5\x27\x25\x6b\xae\x9b\x90\xae\x2a\xd3\xd0\x51\xfd" +
	"\x08\xac\x10\x6c\x1a\xbc\x7c\xf8\xbc\x0a\x4b\xb2\xdb\x80\xf6\x5b\x91\x62\x4e\x14\x86\x97\x19\xa3\x85\xd7\xcd\x52" +
	"\x1e\xfb\x56\xbd\x0a\xa6\x9a\x67\xe6\x12\x38\x49\xf5\x5c\x9a\xeb\xdd\xed\xeb\xac\x22\x47\x8b\xbc\xac\x44\x13\x36" +
	"\xe7\x5b\xc6\x0d\xf5\x52\x64\x1a\xcd\xb6\x63\x61\x2c\xe0\xd7\x49\x1b\x72\x9e\xaf\x3a\xef\x0c\x7b\xc8\x3f\xd2\xeb" +
	"\x73\xc7\xcf\xa6\xa6\xf3\x8f\x0e\xfb\x7c\x2d\x4e\x6d\x35\xe0\x9e\xe8\x8c\x96\xf4\x33\x3b\x3b\x96\x43\xc6\x22\x3a" +
	"\x6c\xd7\x2b\xbe\x0b\xc7\x7c\x17\xf8\x5e\x0d\x8e\xf8\x47\x75\xd6\xaf\x9d\x70\x4f\x0e\xfb\xec\x68\x84\x8b\xfa\xa7" +
	"\x47\xfd\xe9\x34\x46\xb5\x90\xeb\x2d\x2f\x33\xac\xb9\x14\xbc\xa3\x48\x35\xc6\xaa\x2d\x19\x5d\x46\x4c\x3d\xa1\x35" +
	"\x7c\x67\xe2\xd0\xfc\xf7\x5d\xf5\x2e\xab\xdd\x16\x1a\x8e\x41\x9e\x25\x3f\xa1\x63\x13\x87\xb3\x6b\x0f\x07\xa6\x1f" +
	"\x78\xb7\x96\x49\x82\xf0\xe0\x01\x3b\xf6\x08\xfd\xb5\x4f\x6b\x61\xdf\xca\x74\x23\x79\x76\xfd\xa2\xe2\x88\xfe\xb9" +
	"\x8f\x4c\x2b\xc4\xd7\x36\x79\x4d\x6c\x92\xda\xd7\xaa\x9c\x92\x98\x16\xcd\x14\xc7\xa8\xc1\x26\x9e\x6d\x92\x60\x94" +
	"\x9f\x7c\xd9\x53\x9a\x50\xa0\xf6\x2c\x5b\xf5\x51\x31\x0e\x1f\x47\xb3\x11\x7a\x79\x8b\x83\x97\xb6\x75\xfd\x72\x1a" +
	"\xe0\x09\x76\xf1\xcb\x62\x18\xe1\xcb\x5a\x03\xc1\xf4\x8d\x59\x02\x03\x24\x1b\x7b\x84\x26\x96\x4d\x76\xfe\x7f\x00" +
	"\x00\x00\xff\xff\x64\xcd\xd8\x89\x30\x67\x03\x00")

func bindataConfigMapDashboardsconfigyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataConfigMapDashboardsconfigyaml,
		"ConfigMap/dashboards-config.yaml",
	)
}



func bindataConfigMapDashboardsconfigyaml() (*asset, error) {
	bytes, err := bindataConfigMapDashboardsconfigyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ConfigMap/dashboards-config.yaml",
		size: 223024,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1558949165, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataConfigMapGrafanadatasourcesyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4f\x6f\xdb\x3e\x0c\xbd\xe7\x53\xf0\xa7\x16\xc8\xa5\x89\x9a\xcb" +
	"\x0f\xad\x80\x1d\xd6\xf5\xb0\x0d\xd8\x1f\x60\x40\x2f\xc3\xb0\x32\x32\x1d\x6b\xb1\x25\x83\x94\xd3\x66\x5d\xbf\xfb" +
	"\x20\xb9\x4d\xb2\xc6\xc8\xb0\xad\x3e\x24\x96\xf8\xde\xa3\x48\x3e\x0b\x5b\x77\x45\x2c\x2e\x78\x03\xab\xd9\x68\xe9" +
	"\x7c\x61\xe0\x55\xf0\xa5\x5b\xbc\xc3\x76\xd4\x50\xc4\x02\x23\x9a\x11\x80\xc7\x86\x0c\x2c\x18\x4b\xf4\x38\x49\xbb" +
	"\x12\x3a\xb6\x24\x0f\x31\x69\xd1\x92\x81\x92\x0a\x62\x8c\x81\xd1\x8d\x1e\xa9\x0b\x8a\x31\x2c\xc9\x4f\xa5\x32\xf0" +
	"\x63\x32\x02\x00\x38\xfa\x4f\x77\xc2\x7a\xee\xbc\x26\xbf\x02\xa9\xfa\xdd\x9b\xca\xd5\xd4\xbf\x16\x21\xff\xaf\xb0" +
	"\xee\xe8\xc5\xb5\xc5\x08\x7a\x85\xac\xb9\xf3\x5a\xc8\x32\x45\xd1\xcb\x6e\x4e\xec\x29\x92\x4c\x5d\xd0\x42\xbc\x72" +
	"\x96\xd0\xda\xd0\xf9\xa8\x73\xca\xeb\x1d\x0d\x75\x41\xc8\xc4\x70\x7c\x97\xd7\xf7\x2a\xc7\xc8\x56\x01\x8e\xf3\x4e" +
	"\x5e\xdb\x16\x60\xa7\x3a\xdd\x72\x68\x28\x56\xd4\xc9\x74\x8d\x4d\x0d\xa0\x29\x5a\xfd\xd0\x87\x14\x5d\xb9\xd4\x3f" +
	"\xe7\x17\xfa\x00\x2d\x4b\x0b\x15\x30\x71\x30\x16\xdd\x9f\x44\x8f\x55\x9f\x58\x8d\xf5\x62\xfc\x0f\xc2\xb9\x39\x7f" +
	"\xcd\x3e\x2a\x82\x4f\xb5\x3f\x89\x6d\x46\x75\x97\x7f\xd3\xa3\xb6\x7e\x51\x06\x66\x27\xdb\xc0\x4e\x0e\x65\xe0\xf3" +
	"\x26\xf0\x2b\x7f\x03\x4f\x86\x51\x06\xd4\x1b\x5f\xd6\xdd\xed\xe5\x85\x3a\x79\x0a\x01\xd8\x67\xc5\x75\x9b\x59\x2e" +
	"\xb3\x8a\xb9\x3a\xd9\xc7\xa0\xb5\x24\xe9\x0c\xaa\xe5\x70\xbb\x1e\x82\x74\x5c\xa7\x78\x15\x63\x2b\x46\x6b\xac\xb1" +
	"\xa1\x02\x27\x8f\xaa\xd3\x1d\x0b\x4f\x65\x65\xcd\xd9\xe9\xd9\xff\x43\x3a\x2d\x8a\xdc\x04\x2e\x92\x18\x16\x8d\xf3" +
	"\x69\x63\x30\xa1\x10\x6f\x40\x43\x80\xd4\xbd\x39\x4a\x2e\xee\xab\xf3\x91\xd8\x63\x3d\x04\x9c\xa3\x38\xfb\xb2\x8b" +
	"\x95\x32\x50\x62\x2d\x34\x80\x71\x72\x49\x25\x76\x75\x3c\x80\xf9\x26\xc1\x5f\x62\x44\x65\x06\xa6\x93\x3a\x5d\xcb" +
	"\xa7\xa5\x6b\xaf\x88\x5d\xb9\x56\x06\x22\x3f\x7c\x1d\xbb\xcf\xfd\x80\x30\x13\x16\x1f\x7c\xbd\x1e\xce\xfd\x84\x71" +
	"\xc0\x18\x1f\x37\x5e\x1c\x6a\xc3\xa3\x11\xda\x83\xa8\x3f\xb7\xc2\x56\x6f\xb2\x3c\x93\x69\x68\xc9\x4b\xe5\xca\x38" +
	"\x69\x82\x77\x31\xb0\xf3\x8b\xec\x88\xf3\xd3\xf3\xd9\x73\x8c\x27\xb5\xf5\x99\xa6\xb3\x2f\x03\x7d\x5d\xaf\x09\x0b" +
	"\xe2\xf7\xd8\xd0\x2c\x95\x9a\x4e\x17\xd8\x7d\xc7\x98\x3e\xe2\x7d\xd6\xd0\x50\x85\x6c\xc7\xf4\xf6\x37\xa7\xda\x26" +
	"\xbb\x4a\x77\x5a\xce\xd6\xdf\x73\xea\x39\xac\xb3\x59\x7d\xc9\x6f\xf7\xfd\x62\x34\xca\x17\xc5\xcf\x00\x00\x00\xff" +
	"\xff\x2c\xa5\x46\xcd\xc8\x06\x00\x00")

func bindataConfigMapGrafanadatasourcesyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataConfigMapGrafanadatasourcesyaml,
		"ConfigMap/grafana-datasources.yaml",
	)
}



func bindataConfigMapGrafanadatasourcesyaml() (*asset, error) {
	bytes, err := bindataConfigMapGrafanadatasourcesyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ConfigMap/grafana-datasources.yaml",
		size: 1736,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1555988180, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAdmissioncontrollerdatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3b\x4e\x04\x41\x0c\x44\xf3\x3e\x85\x2f\x30\x48\x10\x76\x4a\x40" +
	"\x84\x40\x04\x43\x6c\xb9\x0b\x64\x6d\xff\xd6\xf6\xcc\xf9\x57\x2d\xcd\x86\xaf\xf4\xea\xf1\xd4\x1d\xe6\x3a\x7a\xa6" +
	"\xf3\x35\xdd\xb4\x97\x4c\xdf\x6b\xf1\x40\x8f\x7d\xd4\xa3\xe1\xbd\xb2\xb6\xd4\x10\x5c\x38\x38\x27\xa2\xce\x0d\x99" +
	"\xb8\x34\xf5\xf5\xdd\x64\xf4\xb0\x51\x2b\x6c\x5b\xca\xcb\x3c\xe5\xb2\x7c\xb2\x20\xd3\x1f\x0a\x8c\x63\x18\x6b\xf2" +
	"\x09\x59\x11\x16\x81\xfb\xe7\x28\xf0\x85\x44\x1b\xfd\x80\xcb\xaf\x69\xe0\xab\x0b\x12\x91\xc1\xc7\x61\xf2\x14\x0c" +
	"\xf7\x03\x1e\x17\x11\xf9\x0a\xfe\x23\xd3\xdb\x87\xd2\x23\x00\x00\xff\xff\x6f\xb5\x76\x7d\xcb\x00\x00\x00")

func bindataPersistentVolumeClaimAdmissioncontrollerdatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAdmissioncontrollerdatayaml,
		"PersistentVolumeClaim/admission-controller-data.yaml",
	)
}



func bindataPersistentVolumeClaimAdmissioncontrollerdatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAdmissioncontrollerdatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/admission-controller-data.yaml",
		size: 203,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAdmissioncontrollerlogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x31\x4e\x44\x31\x0c\x44\xfb\x9c\xc2\x17\xf8\x48\x50\xa6\xa5\xa0" +
	"\x42\x20\x8a\xa5\xb6\x9c\x61\x65\x91\xc4\xc1\xf6\xdf\xf3\xa3\x48\xbb\xe5\x1b\xbd\x79\xbc\xf4\x02\x0f\xb5\x59\xe9" +
	"\xf6\x5c\x7e\x75\xb6\x4a\x9f\x7b\x89\xc4\xcc\x8b\xf5\x73\xe0\xb5\xb3\x8e\x32\x90\xdc\x38\xb9\x16\xa2\xc9\x03\x95" +
	"\xb8\x0d\x8d\xfd\x3d\xc4\x66\xba\xf5\x0e\x3f\xba\x5d\x9f\xd6\x4d\xee\x52\x2c\x16\x54\xfa\x41\x83\x73\x9a\xb3\x96" +
	"\x58\x90\xdd\x60\x11\x44\xbc\x5b\x43\x6c\x24\x3a\xe8\x0b\xdc\xbe\x5d\x13\x1f\x53\x50\x88\x1c\x61\xa7\xcb\x43\x70" +
	"\xfc\x9d\x88\xbc\x13\x51\xec\xe0\x15\x95\x5e\xde\x94\xfe\x03\x00\x00\xff\xff\xcf\x90\x04\x04\xca\x00\x00\x00")

func bindataPersistentVolumeClaimAdmissioncontrollerlogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAdmissioncontrollerlogyaml,
		"PersistentVolumeClaim/admission-controller-log.yaml",
	)
}



func bindataPersistentVolumeClaimAdmissioncontrollerlogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAdmissioncontrollerlogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/admission-controller-log.yaml",
		size: 202,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaaidatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3d\x0e\xc2\x30\x14\x83\xf7\x9c\xe2\x5d\xa0\x48\x30\x66\x65\x60" +
	"\x42\x20\x86\x32\x5b\x89\x41\x4f\x34\x3f\xe4\xa5\x3d\x3f\x8a\x54\xc6\xcf\x9f\x6d\x54\x9d\xd9\x4c\x4b\xf6\xb2\x1d" +
	"\xdd\x47\x73\xf4\x72\x1f\x89\x75\xe6\x3e\x97\x65\x4d\x3c\x2f\xd0\xe4\x12\x3b\x22\x3a\xbc\x13\xc9\x48\xf4\x82\x05" +
	"\x89\x11\x13\x74\x1a\xe2\x50\xb7\xb0\x3b\xab\x08\xf4\xf2\x62\x64\x43\x2f\x0d\xea\xac\x32\x8c\x29\x42\xa0\xd9\xb5" +
	"\x44\xda\x40\x91\x49\x1e\x44\x7c\x36\xed\xbc\xe5\x40\x27\xd2\x68\x65\x6d\xe1\x5f\x68\xfc\xae\xb4\xbe\x93\x88\x8d" +
	"\xc3\x37\xbd\x9c\x2e\x2a\xbf\x00\x00\x00\xff\xff\x7a\x3d\x1c\x6c\xc1\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaaidatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaaidatayaml,
		"PersistentVolumeClaim/alameda-ai-data.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaaidatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaaidatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-ai-data.yaml",
		size: 193,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaailogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3b\x6e\xc3\x30\x10\x44\x7b\x9e\x62\x2f\xa0\x00\x49\xc9\x36\x45" +
	"\xaa\xc0\x86\x0b\xb9\x1e\x90\x63\x61\x61\xfe\xcc\xa5\x74\x7e\x83\x80\x5c\xbe\xf9\x3c\x34\x5d\xd9\x4d\x6b\xf1\x72" +
	"\x7c\xbb\xa7\x96\xe8\xe5\x3a\x13\x1b\x2c\x63\xad\x69\xcf\xfc\x4d\xd0\xec\x32\x07\x22\x06\xbc\x13\x29\xc8\xf4\x82" +
	"\x84\xcc\x88\x05\xba\xa4\xba\x7d\xb5\x23\x9c\x95\x35\x04\x7a\x79\x30\xb2\x63\xd4\x0e\x75\xd6\x18\xe6\x13\x21\xd0" +
	"\xec\xbf\x46\xda\x44\x91\x45\x6e\x44\xbc\x77\x1d\xbc\x94\x40\x27\xd2\x69\x75\xef\xe1\x33\xe8\x7c\xed\xb4\x71\x92" +
	"\x88\x4d\xe1\x46\x2f\x3f\x7f\x2a\xef\x00\x00\x00\xff\xff\x14\xd9\x87\x6f\xc0\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaailogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaailogyaml,
		"PersistentVolumeClaim/alameda-ai-log.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaailogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaailogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-ai-log.yaml",
		size: 192,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedadatahubdatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3b\xae\x02\x31\x10\x04\x73\x9f\xa2\x2f\xb0\x4f\x7a\x84\x4e\x09" +
	"\x88\x10\x88\x60\x89\x07\xbb\x01\x8b\xf5\x07\x8f\xbd\xe7\x47\x46\x4b\x34\xaa\x52\x4d\x4b\x09\x33\xab\x86\x9c\x2c" +
	"\xd6\x7f\xf3\x0a\xc9\x5b\x9c\x87\xd1\xc6\xd4\xe6\xbc\xf4\xc8\xfd\x22\x21\x9a\xc8\x26\x5e\x9a\x58\x03\x24\x89\xb4" +
	"\x90\x45\x22\xbd\x4c\xc3\x3e\xfb\xed\x7b\xff\xca\xea\xb6\x40\x8b\x38\x5a\xdc\xe9\x59\xa5\xe5\x2a\xc1\x68\xa1\x1b" +
	"\xff\xe2\x1c\x55\x8f\xd9\x53\x07\x02\x13\x2e\x14\x7f\xad\xa1\xf1\x94\x1c\x0d\x50\xa9\xb9\x57\xf7\x0b\x2a\xdf\x9d" +
	"\xda\x36\x02\x74\x0c\x3e\x68\xb1\x3b\x04\x7c\x02\x00\x00\xff\xff\x17\x75\x4a\xb4\xc6\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedadatahubdatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedadatahubdatayaml,
		"PersistentVolumeClaim/alameda-datahub-data.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedadatahubdatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedadatahubdatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-datahub-data.yaml",
		size: 198,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedadatahublogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3b\x6e\x02\x31\x14\x45\x7b\xaf\xe2\x6e\x60\x22\x25\xa5\xdb\x14" +
	"\xa9\x22\x10\xc5\x50\x3f\xec\xcb\x60\xe1\x1f\x7e\xf6\xac\x1f\x59\x1a\xca\x73\xee\x47\x6a\x58\xd9\x34\x94\x6c\xb1" +
	"\x7f\x9b\x67\xc8\xde\xe2\x3c\x8d\x76\xe6\xbe\x96\x38\x12\x7f\xa3\x84\x64\x12\xbb\x78\xe9\x62\x0d\x90\x25\xd1\x42" +
	"\xa2\x24\x7a\x59\xa6\x7d\x8c\xdb\x12\xcb\xf6\x55\x77\x77\xe4\x5a\xc5\xd1\xe2\x4e\xcf\x26\xbd\x34\x09\x46\x2b\xdd" +
	"\x9c\x8b\x73\x54\xfd\x2f\x9e\x3a\x11\x58\x70\xa1\xf8\x6b\x0b\x9d\xa7\xec\x68\x80\x46\x2d\xa3\xb9\x4f\xa1\xf1\x35" +
	"\xa8\xfd\x20\x40\xe7\xe1\x46\x8b\x9f\xbf\x80\x77\x00\x00\x00\xff\xff\xbc\x6e\xe4\x34\xc5\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedadatahublogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedadatahublogyaml,
		"PersistentVolumeClaim/alameda-datahub-log.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedadatahublogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedadatahublogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-datahub-log.yaml",
		size: 197,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaevictionerdatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x3d\x6a\x03\x41\x0c\xc5\xf1\x7e\x4e\xa1\x0b\x6c\x20\x29\xa7\x4d" +
	"\x91\x2a\x24\xb8\x58\xd7\x42\xf3\x6c\x84\x77\x3e\x2c\x69\xf7\xfc\x66\x60\x5d\xbe\xc7\x8f\x3f\x0f\x5d\x61\xae\xbd" +
	"\x65\x3a\x3e\xd3\x43\x5b\xc9\xf4\x3f\x1f\x0f\xb4\x58\xfb\xb6\x57\x7c\x6f\xac\x35\x55\x04\x17\x0e\xce\x89\xa8\x71" +
	"\x45\x26\xde\xb8\xa2\xf0\x82\x43\x25\xb4\x37\xd8\x32\xc1\xc7\x38\xe4\x34\x3e\x58\x90\xe9\x86\x02\xe3\xe8\xc6\x9a" +
	"\x7c\x40\x66\x82\x45\xe0\xfe\xdb\x0b\x7c\x4e\xa2\x85\x2e\xe0\x72\x35\x0d\xfc\x35\x41\x22\x32\x78\xdf\x4d\xde\xc0" +
	"\xf0\xdc\xe1\x71\x2e\x22\x9f\xc1\x3b\x32\x7d\xfd\x28\xbd\x02\x00\x00\xff\xff\x8f\x8f\x27\x58\xc9\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaevictionerdatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaevictionerdatayaml,
		"PersistentVolumeClaim/alameda-evictioner-data.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaevictionerdatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaevictionerdatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-evictioner-data.yaml",
		size: 201,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaevictionerlogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\xbd\x4a\x07\x41\x0c\x07\xfb\x7d\x8a\xbc\xc0\x09\x5a\x6e\x6b\x61" +
	"\x25\x8a\xc5\x59\x87\xec\xcf\x23\xb8\x5f\x26\xb9\x7b\x7e\x59\xb8\x7f\x39\xc3\x30\x3c\x75\x87\xb9\x8e\x9e\xe9\x7a" +
	"\x4e\xbf\xda\x4b\xa6\xcf\x65\x3c\xd0\x63\x1f\xf5\x6c\x78\xad\xac\x2d\x35\x04\x17\x0e\xce\x89\xa8\x73\x43\x26\xae" +
	"\xdc\x50\x78\xc3\xa5\x12\x3a\x3a\x6c\xab\xe3\x78\x9a\x97\xdc\x89\x4f\x16\x64\xfa\x41\x81\x71\x0c\x63\x4d\x3e\x21" +
	"\xeb\xc0\x22\x70\x7f\x1f\x05\xbe\x90\x68\xa3\x2f\x70\xf9\x36\x0d\x7c\x74\x41\x22\x32\xf8\x38\x4d\x1e\x81\xe1\xef" +
	"\x84\xc7\x4d\x44\xbe\x86\x07\x32\xbd\xbc\x29\xfd\x07\x00\x00\xff\xff\x7d\xd0\xec\x3a\xc8\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaevictionerlogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaevictionerlogyaml,
		"PersistentVolumeClaim/alameda-evictioner-log.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaevictionerlogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaevictionerlogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-evictioner-log.yaml",
		size: 200,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaoperatordatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3d\xce\xc2\x30\x10\x44\x7b\x9f\x62\x2e\x90\x4f\xfa\x28\xdd\x52" +
	"\x50\x21\x10\x45\xa8\x57\xf6\x80\x2c\xe2\x1f\xbc\x9b\x9c\x1f\x59\x84\x72\xe6\x3d\x3d\x69\x69\x66\xd7\x54\x8b\xc7" +
	"\xf6\xef\x5e\xa9\x44\x8f\xeb\x78\xd4\x58\x6c\xae\xcb\x9a\x79\x5c\x24\x65\x97\x69\x12\xc5\xc4\x3b\xa0\x48\xa6\x87" +
	"\x2c\x92\x19\x65\xaa\x8d\x5d\xac\xf6\x69\xe0\xbf\xb6\x85\xdd\xd0\x26\x81\x1e\x0f\xc6\x2f\x97\xe4\xb4\x31\x8c\x80" +
	"\x84\x40\xd5\x73\x8d\xd4\x31\x81\x09\x37\x4a\xbc\xf7\x64\xbc\x94\x40\x07\x74\x6a\x5d\x7b\xf8\x09\x9d\xef\x95\x6a" +
	"\xfb\x02\x74\x04\x9f\xf4\x38\x9c\x12\x3e\x01\x00\x00\xff\xff\x75\x88\xf8\xa8\xc7\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaoperatordatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaoperatordatayaml,
		"PersistentVolumeClaim/alameda-operator-data.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaoperatordatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaoperatordatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-operator-data.yaml",
		size: 199,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaoperatorlogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3d\x0e\xc2\x30\x14\x83\xf7\x9c\xc2\x17\x28\x12\x8c\x59\x19\x98" +
	"\x10\x88\xa1\xcc\x4f\x89\xa9\x22\xf2\x47\x5e\xda\xf3\xa3\x88\x32\x7e\xf6\x67\x4b\x0d\x33\x9b\x86\x92\x2d\xb6\xa3" +
	"\x79\x87\xec\x2d\xee\x23\xd1\xce\xdc\xe7\x12\xd7\xc4\x73\x94\x90\x4c\x62\x17\x2f\x5d\xac\x01\xb2\x24\x5a\x48\x94" +
	"\x44\x2f\x53\xa9\x6c\xd2\x4b\x9b\x62\x59\x0e\x75\x73\xbb\xa0\x55\x1c\x2d\x5e\xf4\xbf\x5a\x82\xd1\x4a\x37\xf6\xe2" +
	"\x1c\x55\xaf\xc5\x53\x07\x02\x13\x1e\x14\xff\x6c\xa1\xf3\x96\x1d\x0d\xd0\xa8\x65\x6d\xee\x2f\x34\x7e\x56\x6a\xdf" +
	"\x09\xd0\x71\xb8\xd0\xe2\x74\x09\xf8\x06\x00\x00\xff\xff\xed\x6e\x78\xea\xc6\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaoperatorlogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaoperatorlogyaml,
		"PersistentVolumeClaim/alameda-operator-log.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaoperatorlogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaoperatorlogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-operator-log.yaml",
		size: 198,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimMyalamedagrafanaPVCyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x3d\x6a\xc4\x30\x14\xc4\xf1\x5e\xa7\x78\x17\xb0\x21\x29\xd5\xa6" +
	"\x48\x15\x12\x52\x78\xeb\x41\x1a\x1b\xb1\xd6\xc7\xbe\x27\x1b\xf6\xf6\x8b\xc0\x5b\xce\xf0\xe3\x8f\x96\x16\xaa\xa5" +
	"\x5a\xbc\x9c\x1f\xee\x9e\x4a\xf4\xf2\x37\x1e\xeb\x2c\x7d\xa9\xfb\x91\xf9\xb5\x23\x65\x97\xd9\x11\xd1\xe1\x9d\x48" +
	"\x41\xa6\x97\xfc\x9c\xb0\x23\x33\x62\xde\x14\x2b\x0a\xa6\x01\xe6\x76\x86\xcb\x58\x43\xa0\x97\x95\x91\x8a\x5e\x15" +
	"\xc9\x59\x63\x18\x09\x84\x40\xb3\x9f\x1a\x69\x63\x8a\x4c\xf2\x4f\xc4\x9b\xa6\xce\xdf\x12\xe8\x44\x94\x56\x0f\x0d" +
	"\x6f\xa0\x7c\x1c\xb4\x7e\x2d\x11\x1b\xc1\x8d\x5e\x3e\xbf\x93\xbc\x02\x00\x00\xff\xff\xa9\x9c\x3a\x4f\xc9\x00\x00" +
	"\x00")

func bindataPersistentVolumeClaimMyalamedagrafanaPVCyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimMyalamedagrafanaPVCyaml,
		"PersistentVolumeClaim/my-alamedagrafanaPVC.yaml",
	)
}



func bindataPersistentVolumeClaimMyalamedagrafanaPVCyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimMyalamedagrafanaPVCyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/my-alamedagrafanaPVC.yaml",
		size: 201,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimMyalamedainfluxdbPVCyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x3b\x6e\xc3\x30\x10\x84\xe1\x9e\xa7\xd8\x4e\x95\x84\xa8\x65\x9b" +
	"\x22\x55\x90\x20\x85\x52\xaf\xc9\x91\xb1\x30\x5f\xe6\x92\x82\x7d\x7b\x83\x80\x5c\xce\xe0\xc3\xcf\x45\x36\x54\x95" +
	"\x9c\x2c\x1d\xab\xb9\x49\xf2\x96\x7e\xc7\xa3\x0d\xa9\x6d\x39\xf4\x88\xcf\xc0\x12\x4d\x44\x63\xcf\x8d\xad\x21\x4a" +
	"\x1c\x61\x29\x3e\x67\x0e\x1c\xe1\x79\x91\xb4\x87\xfe\xf0\x97\x79\x88\xa5\x1c\xee\x44\x5a\xd8\xc1\xd2\x0e\x8f\xca" +
	"\x2d\x57\x16\xa3\x05\x6e\x34\xd8\x39\xa8\x7e\x67\x0f\x1d\x93\x68\xa6\x3f\xb0\xff\xaf\xd2\xf0\x93\x1c\x0c\x51\x85" +
	"\xe6\x5e\xdd\x1b\x54\xdc\x3b\xb4\x9d\x8b\x48\x47\xf0\x0a\x4b\xd3\xfa\xf1\x25\xd3\x2b\x00\x00\xff\xff\x4a\x54\xad" +
	"\xdd\xcc\x00\x00\x00")

func bindataPersistentVolumeClaimMyalamedainfluxdbPVCyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimMyalamedainfluxdbPVCyaml,
		"PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml",
	)
}



func bindataPersistentVolumeClaimMyalamedainfluxdbPVCyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimMyalamedainfluxdbPVCyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml",
		size: 204,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAdmissioncontrollerSVyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x41\xaa\xc3\x30\x0c\x44\xf7\x3e\xc5\x5c\x20\x90\xcf\xcf\xa2\xf8" +
	"\x14\x85\x42\xf7\xaa\x3d\x2d\xa6\x8e\x6d\x24\x91\xf3\x97\xf8\x00\xed\xee\x21\x31\xf3\x46\x46\xb9\x53\xad\xf4\x16" +
	"\x71\xfc\x85\x77\x69\x39\xe2\x46\x3d\x4a\x62\xd8\xe9\x92\xc5\x25\x06\xa0\xca\x83\xd5\x4e\x02\x64\x8c\x08\xc9\x7b" +
	"\xb1\x33\xb8\xa4\xde\x5c\x7b\xad\xd4\x00\x34\xd9\xf9\xf5\x69\x43\x12\x23\x9e\xcc\x54\xf1\xae\x52\x82\x0d\xa6\xb3" +
	"\x79\x74\xf5\xa9\x58\x26\x46\x6c\xdb\xff\x14\xba\xe8\x8b\x7e\x9d\xb7\xcb\xba\xae\x01\x30\x56\x26\xef\xfa\x63\xd1" +
	"\x27\x00\x00\xff\xff\xf4\xe7\x31\xb4\xe0\x00\x00\x00")

func bindataServiceAdmissioncontrollerSVyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAdmissioncontrollerSVyaml,
		"Service/admission-controllerSV.yaml",
	)
}



func bindataServiceAdmissioncontrollerSVyaml() (*asset, error) {
	bytes, err := bindataServiceAdmissioncontrollerSVyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Service/admission-controllerSV.yaml",
		size: 224,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1554254667, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAlamedadatahubSVyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x31\x0e\xc3\x20\x14\x43\x77\x4e\xe1\x0b\x44\x4a\x87\x2c\x5c\xa3" +
	"\x52\x77\x07\xdc\x16\x95\x04\xf4\xa1\x39\x7f\x45\xd4\x35\x9b\x65\x5b\xcf\x66\x4d\x0f\x59\x4b\x65\xf7\x38\x6e\xee" +
	"\x93\xf6\xe8\x71\x97\x1d\x29\xc8\x6d\xea\x8c\xec\xf4\x0e\xc8\x5c\x95\xdb\x50\x00\x6b\xf5\x60\xe6\xa6\xc8\x69\x14" +
	"\xde\xdf\xd5\x01\x3b\x37\x5d\xf9\xad\x32\xc8\xe3\xa9\x28\x63\x2f\xc6\xe4\x5a\x55\x18\xbc\x5a\xac\x9f\xe0\xe9\x4f" +
	"\x78\x59\x0d\xe7\xce\x48\x3c\x96\x79\x5e\x66\x07\x34\x65\x85\x5e\xec\xfa\xc3\x2f\x00\x00\xff\xff\x17\x03\xde\x3c" +
	"\xcd\x00\x00\x00")

func bindataServiceAlamedadatahubSVyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAlamedadatahubSVyaml,
		"Service/alameda-datahubSV.yaml",
	)
}



func bindataServiceAlamedadatahubSVyaml() (*asset, error) {
	bytes, err := bindataServiceAlamedadatahubSVyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Service/alameda-datahubSV.yaml",
		size: 205,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAlamedagrafanaSVyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x31\xaa\xc3\x30\x10\x44\x7b\x9d\x62\x2f\x60\xf0\xe7\x77\x3a\x45" +
	"\x20\x90\x7e\x22\x8d\x8d\x88\x2c\x2d\xab\xc5\xe7\x0f\x56\x95\xc6\xdd\xe3\x15\x6f\x06\x5a\x5e\xb4\x51\x7a\x8b\x72" +
	"\xfe\x85\x4f\x69\x39\xca\x93\x76\x96\xc4\x70\xd0\x91\xe1\x88\x41\xa4\xe2\xcd\x3a\x2e\x12\x81\x6a\x14\x54\x1c\xcc" +
	"\x58\x76\xc3\x86\x86\x20\xd2\x70\xf0\xce\x0f\x45\x62\x94\x8d\x99\x06\xef\x86\x12\x86\x32\x5d\x3d\xed\xe6\x33\xbc" +
	"\x4c\x8c\xf2\xbf\xae\xeb\xdc\x71\xd8\x4e\x7f\xfc\xca\xc1\xca\xe4\xdd\xee\x8f\xc8\x37\x00\x00\xff\xff\x1d\x9d\x3e" +
	"\xc2\xd3\x00\x00\x00")

func bindataServiceAlamedagrafanaSVyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAlamedagrafanaSVyaml,
		"Service/alameda-grafanaSV.yaml",
	)
}



func bindataServiceAlamedagrafanaSVyaml() (*asset, error) {
	bytes, err := bindataServiceAlamedagrafanaSVyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Service/alameda-grafanaSV.yaml",
		size: 211,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAlamedainfluxdbSVyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\x41\x0a\xc2\x30\x14\x44\xf7\x39\xc5\xbf\x40\x41\x37\x52\x72\x0a" +
	"\x41\x70\x3f\x4d\xa6\x12\x4c\x93\xf0\xf3\x2d\x1e\x5f\x9a\x95\x1b\xdd\x3d\x66\xe0\xcd\xa0\xa5\x3b\xb5\xa7\x5a\xbc" +
	"\xec\x67\xf7\x4c\x25\x7a\xb9\x51\xf7\x14\xe8\x36\x1a\x22\x0c\xde\x89\x64\x2c\xcc\xfd\x20\x11\xb4\xe6\x05\x19\x1b" +
	"\x23\xa6\x54\xd6\xfc\x7a\xc7\xc5\x89\x14\x6c\xfc\x59\xf4\x86\x40\x2f\x2b\x23\x15\x56\x15\xc9\xf5\xc6\x70\x18\x5b" +
	"\x55\x1b\xea\x69\xa0\x97\xf9\x34\x5f\xc6\x92\x41\x1f\xb4\xeb\x77\xd8\x99\x19\xac\xea\x9f\x2b\x9f\x00\x00\x00\xff" +
	"\xff\x1e\x34\xee\x61\xd5\x00\x00\x00")

func bindataServiceAlamedainfluxdbSVyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAlamedainfluxdbSVyaml,
		"Service/alameda-influxdbSV.yaml",
	)
}



func bindataServiceAlamedainfluxdbSVyaml() (*asset, error) {
	bytes, err := bindataServiceAlamedainfluxdbSVyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Service/alameda-influxdbSV.yaml",
		size: 213,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1554254667, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAdmissioncontrollerDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\x4b\x6f\xdb\x46\x10\xbe\xeb\x57\x0c\x72\xc9\x89\xa2\xd2\x56\x2d" +
	"\xb0\x40\x0f\x8c\xc9\xa0\x46\x25\x9b\xb0\xd4\x00\x39\x09\xe3\xe5\xd0\x5c\x64\x5f\xd9\x5d\xca\xe5\xbf\x2f\x56\x94" +
	"\x64\xd2\x96\x2c\xf7\x60\x20\x3c\x11\xdf\xec\xf7\x98\x7d\xa2\x15\x5f\xc9\x79\x61\x34\x03\xb4\xd6\xa7\xdb\x4f\x93" +
	"\xef\x42\x57\x0c\x72\xb2\xd2\x74\x8a\x74\x98\x28\x0a\x58\x61\x40\x36\x01\xd0\xa8\x88\x01\x56\x4a\xf8\xc8\x4a\xb8" +
	"\xd1\xc1\x19\x29\xc9\xed\x8b\xde\x22\x27\x06\x35\x55\xe4\x30\x18\x87\x62\x02\x20\xf1\x9e\xa4\x8f\x7c\x88\x36\x0c" +
	"\x50\xa2\xa2\x0a\x77\x00\x37\xca\x1a\x4d\x3a\x9c\xd5\x45\xad\x4d\xc0\x20\x8c\xde\x6b\x54\xe4\xb9\x13\x36\xec\x72" +
	"\xe7\x54\x0b\x4d\x1e\x1a\xf3\x08\xc1\x40\xb5\x0b\x0e\xa1\xa1\x73\x72\x00\x81\x94\x95\x18\x68\x8a\xd2\x36\x38\x35" +
	"\x96\xb4\x6f\x44\x1d\xa6\xc2\xa4\x8f\x28\x42\x52\x1b\x97\x38\xc2\xaa\x63\xf0\x31\xb8\x96\x3e\x4e\xbc\x25\x1e\xcd" +
	"\x1d\x59\x29\x38\x7a\x06\x9f\x26\x00\x9e\x24\xf1\x60\x5c\x1f\x4b\x61\xe0\xcd\x62\xd0\xeb\xa1\xdb\xd3\x39\x0e\x29" +
	"\xf6\xe4\xc1\x2c\xc7\xef\xd5\x99\x8e\x9f\x1c\x19\xbd\x6e\x05\x70\xc8\xdf\xcf\xb8\x0e\x28\x34\xb9\x23\x3b\xb9\x6c" +
	"\x07\x20\x14\x3e\x10\x83\x1f\x2d\x76\x71\xa2\xac\x33\xb6\xa1\xe0\x83\x71\xe9\x7e\x3d\x93\x27\xbe\x6b\x48\xb2\xed" +
	"\x6c\xfa\xeb\xf4\xf7\xb1\x40\xd9\x4a\x59\x1a\x29\x78\xc7\xe0\xba\xbe\x31\xa1\x74\xe4\xe3\x36\x3b\x8c\x72\xe4\x4d" +
	"\xeb\x38\x0d\x5a\x8b\xe0\x8f\x96\x7c\x18\x61\x00\xdc\xb6\x0c\x7e\x9b\xab\x11\xa8\x48\x19\xd7\x31\xf8\x63\xbe\x14" +
	"\xc7\x02\xe9\xed\x13\xf5\xd0\xed\x4d\xb6\x2c\x56\x65\x76\x55\x6c\xe2\xdf\x40\x64\x8b\xb2\xa5\x2f\xce\xa8\xb1\x5d" +
	"\x2d\x48\x56\x77\x54\x8f\xd1\x3d\x5e\x62\x68\xd8\x71\x15\xa7\xc7\xb3\x00\x00\x2f\x8c\xcb\xdb\xfc\x9d\x2c\x5f\x58" +
	"\x65\x8b\x6c\x59\xe4\xd9\x26\xcb\x97\x57\xeb\xc5\x26\x2f\xca\xc5\xed\xb7\xa2\xb7\xdf\xf5\xfe\x4e\x6d\x5f\x0c\x92" +
	"\xad\xb3\xbf\xfe\xf9\xbc\xc9\xf2\xfc\xae\x58\xad\x9e\xa7\x60\xf0\xe1\xb0\xa7\xa2\x6e\xd3\xde\x4f\x07\x57\xca\xd4" +
	"\x6f\x39\x9b\xcf\x66\xf3\xd9\x87\x4b\x3e\xc5\x4d\xf6\x79\xf1\xa2\xc9\xe3\xb1\xbe\xc0\x5e\x2f\x56\x9b\xab\xe2\x6e" +
	"\xbd\xf9\x72\x7d\x4a\x24\xa5\xc0\xd3\x20\x7d\xc2\xc9\x05\x1f\xff\xa6\xdc\x85\xb7\x88\x96\x77\xd7\x5f\xb3\x75\xb1" +
	"\xf9\xbb\xf8\xf6\x76\xed\xef\xd4\x5d\xd2\xbe\xca\xfe\x47\x5e\x8e\xa3\xb8\x5b\x23\x5b\x45\x4b\xd3\xea\xe1\x39\x4b" +
	"\x40\x45\xa4\x5f\xe7\xb1\xc0\xc0\xa0\x0f\x73\xaa\x12\xaf\xd1\x5b\x2d\x3b\x06\x35\x4a\x4f\x93\x21\x1e\xef\x6d\x5f" +
	"\x3a\x73\x4f\xc3\xbd\x45\xff\x3e\x5d\x55\xfd\xc7\x8d\x52\xa8\xab\x31\x98\x40\xda\x7a\x97\x4a\xc3\x51\xa6\xf7\x42" +
	"\xa7\xaf\x5e\x5e\x3d\xc3\x46\xaf\x67\x58\x92\x84\xce\xd2\x9f\xc7\x3c\x83\x72\x8d\x42\xb6\x8e\xd6\x8d\x23\xdf\x18" +
	"\x59\x31\xf8\x65\x36\x28\x0b\x2d\x82\x40\x99\x93\xc4\x6e\x45\xdc\xe8\xca\x33\x98\x0f\x06\x58\x72\xc2\x54\x27\x4a" +
	"\x52\x6c\xe9\x27\xea\xfd\x10\xe7\xfd\x5b\xef\xf7\x98\x67\xf0\xec\xe1\x39\xf9\xf2\xec\x8e\x7e\x12\x1f\x18\x7c\xa0" +
	"\x37\x11\xa4\x79\x38\x33\xfe\xe5\xd6\xf4\xc4\x1d\x85\xe1\xbc\xf6\xc8\xcd\xd9\x97\x30\x09\xf2\x40\xf7\xe4\xb6\x82" +
	"\x53\xc6\x79\x3c\x1c\xaf\x3e\x9c\xe3\xa1\xe7\xd5\x27\xff\x05\x00\x00\xff\xff\x53\x27\x37\x93\x8d\x09\x00\x00")

func bindataDeploymentAdmissioncontrollerDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAdmissioncontrollerDMyaml,
		"Deployment/admission-controllerDM.yaml",
	)
}



func bindataDeploymentAdmissioncontrollerDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAdmissioncontrollerDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/admission-controllerDM.yaml",
		size: 2445,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1557293960, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedaaiDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\xc1\x8e\xd3\x30\x10\x86\xef\x7d\x8a\xd1\xde\x93\xcd\x2e\x2a\x07" +
	"\x4b\x1c\x8a\xb2\x12\x48\xb0\x5b\xb5\x0b\x57\x34\x75\xa6\x8d\x85\xed\xf1\xda\x4e\x20\x6f\x8f\x9c\xb6\xd9\x24\xad" +
	"\x00\x09\x91\xe3\xcc\xfc\xdf\xfc\xf6\x8c\x83\x4e\x7d\x25\x1f\x14\x5b\x01\xe8\x5c\xb8\x6d\xef\x16\xdf\x95\xad\x04" +
	"\x94\xe4\x34\x77\x86\x6c\x5c\x18\x8a\x58\x61\x44\xb1\x00\xb0\x68\x48\x00\x6a\x34\x54\x61\x86\xea\x14\x0a\x0e\x25" +
	"\x09\xd8\x53\x45\x1e\x23\xfb\x3e\xa1\x71\x47\x3a\x24\x15\x24\xf8\x20\xeb\x03\x92\x8d\x63\x4b\x36\xce\x68\x68\x2d" +
	"\x47\x8c\x8a\xed\x49\x59\x51\x90\x5e\xb9\xd8\x7b\x2c\x69\xaf\x2c\x05\xa8\xf9\x07\x44\x86\xaa\x37\x09\xb1\xa6\xd4" +
	"\x40\x2b\xd9\x0b\x07\x20\xbb\xa3\x9b\x45\x70\x24\x13\xcd\x53\x5f\x14\x04\xdc\x2d\x00\x02\x69\x92\x91\xfd\xb1\x8f" +
	"\xc1\x28\xeb\x4f\x23\xcb\x53\xd3\x47\x77\x91\x8c\xd3\x18\xe9\x24\x19\x5d\x4c\xfa\xae\x5c\x4e\xfa\xf4\x04\x7a\x0d" +
	"\x0b\x70\x76\x78\xbc\x1a\x1b\x51\x59\xf2\x83\x26\xbb\x40\x67\x64\x0f\xca\xd2\xc0\x54\x06\x0f\x24\xe0\xa5\xc1\x2e" +
	"\x57\x7c\xeb\x3c\xbb\x9a\x62\x88\xec\x6f\x5f\x45\xa2\x2d\xf2\x37\xf9\xdb\xa9\x68\xdd\x68\xbd\x66\xad\x64\x27\xe0" +
	"\xe3\xfe\x91\xe3\xda\x53\x48\x63\x3f\x57\x79\x0a\xdc\x78\x49\xa3\x13\xa4\xe0\x4b\x43\x21\x4e\x62\x00\xd2\x35\x02" +
	"\xee\x8b\xa2\x30\x93\xb0\x21\xc3\xbe\x13\x70\xbf\x2c\x3e\xab\x21\x43\xb6\x7d\x55\x9f\x4f\xf8\xb4\x7e\xd8\xac\x9e" +
	"\x9f\x36\xdf\x56\x65\xb9\x79\xd8\x6e\x47\x9c\x16\x75\x43\x02\x6e\xe6\xd3\xcd\x47\x5b\x97\x87\x56\x8a\x65\x51\x2c" +
	"\x8b\x9b\x0b\x74\xb9\x7a\x5e\x7d\xf8\xf2\xfe\x2f\xc8\x69\xa6\x75\xb3\xfb\x13\xd8\x13\x56\x69\x1b\xc3\xda\xf3\x8e" +
	"\x04\x8c\x88\xf4\x93\xe4\x24\xd0\x2f\xbc\xc1\xf4\xb2\x26\xd1\x0c\xd2\xac\x76\x94\x87\x7a\x9e\xc8\xb2\xd8\x39\x7a" +
	"\x37\x74\x19\xe7\x95\x55\x51\xa1\x2e\x49\x63\xb7\x25\xc9\xb6\x0a\x02\x96\xe3\x0a\x47\x5e\x71\x75\x2d\xa7\x55\x4b" +
	"\xff\xdd\xf5\xb9\xc9\xbf\x99\x3e\xa5\x5a\xd6\x8d\x19\xef\xdf\x95\xf7\x90\x66\x96\xa5\x7d\xc7\x03\xfd\xae\x4e\xf3" +
	"\x61\x56\x16\xc8\xb7\x4a\xd2\x4a\x4a\x6e\x2e\x7e\x47\x97\x05\x8f\xf3\x47\xfe\x2b\x00\x00\xff\xff\x53\xba\x77\xec" +
	"\x44\x05\x00\x00")

func bindataDeploymentAlamedaaiDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedaaiDMyaml,
		"Deployment/alameda-aiDM.yaml",
	)
}



func bindataDeploymentAlamedaaiDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedaaiDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-aiDM.yaml",
		size: 1348,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1557293960, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedadatahubDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x41\x6f\xe2\x3a\x10\xbe\xf3\x2b\xe6\xd6\x53\x08\xe8\xa9\x55\x6b" +
	"\xe9\x1d\x52\x85\xa7\x56\x02\x8a\xa0\xbc\xdd\x1b\x1a\x9c\x81\x58\xb5\x3d\xae\xed\xa4\xe5\xdf\xaf\x42\x0b\x0d\x14" +
	"\xb6\x3d\xac\xb4\xb9\x44\xfa\x3c\xdf\x37\xdf\x8c\xc7\x83\x4e\xfd\x4f\x3e\x28\xb6\x02\xd0\xb9\x90\xd6\xfd\xce\x93" +
	"\xb2\x85\x80\x9c\x9c\xe6\x8d\x21\x1b\x3b\x86\x22\x16\x18\x51\x74\x00\x2c\x1a\x12\x80\x1a\x0d\x15\x98\x34\x68\x59" +
	"\x2d\xdf\xf1\xe0\x50\x92\x80\x15\x15\xe4\x31\xb2\x47\xd5\x01\xd0\xb8\x24\x1d\x1a\x2a\x34\x19\xf6\xdc\x2d\x20\xd9" +
	"\x38\xb6\x64\xe3\x29\x49\xb4\x96\x23\x46\xc5\xf6\x9d\x5e\x50\x90\x5e\xb9\xb8\x75\x9b\xd3\x4a\x59\x0a\x50\xf2\x0b" +
	"\x44\x86\x62\x6b\x17\x62\x49\x4d\x16\xad\xe4\x96\x78\x42\x15\x20\x92\x71\x1a\x23\x75\x51\xbb\x12\xbb\xec\xc8\x86" +
	"\x52\xad\x62\x57\x71\xfa\x82\x2a\x26\x2b\xf6\x89\x27\x2c\x36\x02\x2e\xa2\xaf\xe8\xa2\x13\x1c\xc9\xc6\x83\xa7\xad" +
	"\x74\x10\xd0\xef\x00\x04\xd2\x24\x23\xfb\x37\x77\x06\xa3\x2c\x87\xad\x6a\x0f\xeb\x6d\x59\xd8\x19\x78\xe7\xb5\xba" +
	"\xdb\x7c\xe7\x3a\xdc\x7c\xfa\x40\xfe\x6c\x02\x80\x9d\xe1\xb7\x26\xdb\x88\xca\x92\xdf\x13\x93\xdf\x26\x01\x50\x06" +
	"\xd7\x24\xe0\xb9\xc2\x4d\xd3\x14\xe7\xd9\x95\x14\x43\x64\x9f\x1e\x51\x12\x5f\x92\x16\x75\xaf\xfb\x4f\xf7\xea\x90" +
	"\x3e\xa9\xb4\x9e\xb0\x56\x72\x23\xe0\x7e\x35\xe6\x38\xf1\x14\x9a\x69\xda\x45\x79\x0a\x5c\x79\x49\xad\x72\x1a\xf0" +
	"\xb9\xa2\x10\x0f\x30\x00\xe9\x2a\x01\x97\x3d\x73\x00\x1a\x32\xec\x37\x02\xfa\xbd\xde\x48\xed\x4f\xc8\xd6\x1f\xdc" +
	"\x5d\x9d\xd9\x30\x1b\x0d\xf2\x6c\x91\x67\x8f\xd9\xdd\xfc\x76\x71\x3f\xfe\x6f\x38\xff\x99\xdf\x2e\xb2\x3c\x9f\x0e" +
	"\x66\xb3\x96\x6e\x8d\xba\x22\x01\x65\x8c\x2e\x88\x74\x5f\xae\xb2\x2b\x5d\xbd\x16\xcb\x6e\x6b\xb8\xbb\xa1\x96\xe2" +
	"\xba\x77\x7d\xf5\xfd\x7c\xf3\xd9\x60\x3a\xce\x46\x83\xcf\x09\xb1\x30\xca\x7e\x5f\x68\x92\xcd\x66\x3f\x1e\xa6\xf9" +
	"\x19\x21\x87\x21\x7c\x29\x36\x99\x3e\x8c\x06\x8f\x77\x83\xf9\x6c\x31\x9f\x0e\xcf\xf7\xc0\x79\x36\x14\x4b\xaa\x42" +
	"\xf2\x74\x1d\x3e\xde\x4b\x62\xd8\xaa\xc8\x5e\xd9\xf5\xb6\x15\x37\xbd\x9b\x7e\xeb\x76\xb1\x68\xde\x67\x98\x78\x5e" +
	"\x52\xfb\x3a\xe9\xf5\x63\x34\x77\x03\x6a\x0c\xda\xe2\x10\x4c\x20\xad\x82\x4f\x35\x4b\xd4\xe9\x52\xd9\xf4\x78\x48" +
	"\xdf\x82\x5c\x23\x7f\x84\x25\x49\xdc\x38\xfa\x77\x6f\xa1\x75\xac\xac\x8a\x0a\x75\x4e\x1a\x37\x33\x92\x6c\x8b\x20" +
	"\xe0\xb2\x15\xe0\xc8\x2b\x2e\x4e\x1c\x69\x55\xd3\xdf\xad\x67\xe7\xe0\x0f\x94\x53\xb3\xae\x0c\x7d\xda\x07\xc7\x0b" +
	"\x61\xfb\x4f\x9a\x77\x8f\x6b\xfa\x2a\x56\xf3\xfa\x28\x34\x90\xaf\x95\xa4\x4c\x4a\xae\x4e\xaf\xf8\xcf\x51\xe3\x93" +
	"\x8b\xe9\x57\x00\x00\x00\xff\xff\x4e\xd3\xa3\xe7\xa7\x06\x00\x00")

func bindataDeploymentAlamedadatahubDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedadatahubDMyaml,
		"Deployment/alameda-datahubDM.yaml",
	)
}



func bindataDeploymentAlamedadatahubDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedadatahubDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-datahubDM.yaml",
		size: 1703,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1557293960, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedaevictionerDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x4d\x4f\xe3\x3a\x14\xdd\xf7\x57\x5c\xb1\x61\x95\xa4\xe8\xbd\xbe" +
	"\x27\x59\x7a\x8b\xf0\x52\x69\x90\xa0\x53\x01\xc3\xb6\xba\x75\x6e\x89\x35\xb6\xaf\xb1\x9d\x30\xf9\xf7\x23\x17\x52" +
	"\x12\x28\x0c\x8b\x91\xc6\xab\xf6\x7e\x9d\x73\xee\x47\xd0\xa9\x3b\xf2\x41\xb1\x15\x80\xce\x85\xa2\x3b\x9b\x7d\x57" +
	"\xb6\x16\x50\x91\xd3\xdc\x1b\xb2\x71\x66\x28\x62\x8d\x11\xc5\x0c\xc0\xa2\x21\x01\xa8\xd1\x50\x8d\x19\x75\x4a\x46" +
	"\xc5\x96\xfc\xb3\x2b\x38\x94\x24\x60\x47\x35\x79\x8c\xec\x51\xcd\x00\x34\x6e\x49\x87\x94\x0d\x09\xe4\x90\xbe\x37" +
	"\x48\x36\x8e\x2d\xd9\xf8\x4e\x55\xb4\x96\x23\xa6\xbf\xcf\x15\x6a\x0a\xd2\x2b\x17\xf7\x9c\x2b\xda\x29\x4b\x01\x1a" +
	"\x7e\x84\xc8\x50\xef\x49\x43\x6c\xe8\x78\x31\x80\x48\xc6\x69\x8c\x94\xa3\x76\x0d\xe6\xec\xc8\x86\x46\xed\x62\xae" +
	"\xb8\x78\x44\x15\xb3\x1d\xfb\xcc\x13\xd6\xbd\x80\xd3\xe8\x5b\x3a\x9d\x05\x47\x32\x41\x7b\x72\x5a\x49\x0c\x02\xce" +
	"\x66\x00\x81\x34\xc9\xc8\xfe\x89\x94\xc1\x28\x9b\xcb\x91\xce\xa9\xd2\x29\x8b\x81\xc3\x73\xea\xa8\xbb\xe9\x7d\xd0" +
	"\xe1\xf4\xf4\x04\xe4\x23\x18\x80\x81\xf9\x53\x9f\x6d\x44\x65\xc9\x1f\x72\xb3\x5f\x41\x01\x28\x83\xf7\x24\xe0\xa1" +
	"\xc5\x3e\x35\xc8\x79\x76\x0d\xc5\x10\xd9\x17\x6f\xb3\x32\xdf\x90\x16\xdd\x3c\xff\x2b\xff\x67\x5a\x61\xdd\x6a\xbd" +
	"\x66\xad\x64\x2f\xe0\x62\xb7\xe2\xb8\xf6\x14\xd2\x66\x0d\x51\x9e\x02\xb7\x5e\xd2\x48\x57\x32\x3e\xb4\x14\xe2\xc4" +
	"\x06\x20\x5d\x2b\xe0\xef\x85\x99\x18\x0d\x19\xf6\xbd\x80\x7f\x17\x57\xea\xe0\x20\xdb\xbd\xa4\x0e\x62\xcb\xcb\xf2" +
	"\x6a\x59\x95\x9b\xe5\xdd\xc5\xff\xb7\x17\x5f\x57\xcb\xeb\x4d\x55\xde\x96\x5f\xbe\x9d\x6f\xca\xaa\xba\x5e\xde\xdc" +
	"\x8c\x0a\x77\xa8\x5b\x12\x70\x32\x68\x4d\x63\x6a\xda\x6d\x3e\x5a\xef\x3c\x74\x52\x2c\xe6\xf3\xc5\xfc\xe4\x33\x58" +
	"\xc3\xcf\xcd\x72\x55\x9e\x5f\x2e\x8f\x60\xa5\x9d\x3b\x19\x35\x06\xeb\xb4\xe0\x61\xed\x79\x4b\xe3\x4e\xd0\x8f\x97" +
	"\xd9\x0e\x13\x36\x06\x6d\x3d\x35\x66\x50\xb4\xc1\x17\x9a\x25\xea\x62\xab\x6c\x71\x64\xca\x4f\x71\x2e\x21\xbc\xb2" +
	"\x65\x59\xec\x1d\xfd\x77\x60\x31\x72\x2b\xab\xa2\x42\x5d\x91\xc6\xfe\x86\x24\xdb\x3a\x08\x58\x8c\x02\x1c\x79\xc5" +
	"\xf5\x11\x97\x56\x1d\xfd\x71\x49\x03\x89\xdf\xa0\xa8\x63\xdd\x1a\x7a\x73\x56\x47\xee\x6a\xbf\x40\x59\x3a\x1f\xbc" +
	"\xa7\x4f\x84\x6b\xbe\x7f\x15\x1d\xc8\x77\x4a\x52\x29\x25\xb7\xef\x7e\x32\xdf\x06\xae\xde\x3b\xf4\x9f\x01\x00\x00" +
	"\xff\xff\x1c\x25\x2c\xae\x00\x06\x00\x00")

func bindataDeploymentAlamedaevictionerDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedaevictionerDMyaml,
		"Deployment/alameda-evictionerDM.yaml",
	)
}



func bindataDeploymentAlamedaevictionerDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedaevictionerDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-evictionerDM.yaml",
		size: 1536,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1557293960, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedagrafanaDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\xb1\x8e\xe3\x36\x10\xed\xfd\x15\x03\x37\xd7\x44\xb2\xf7\xee\xd2" +
	"\xb0\x0b\x6e\x9b\x00\xd9\x83\x8b\x20\x4d\x90\x62\x96\x1a\x5b\xcc\x92\x1c\x86\x1c\x79\x61\x04\xf9\xf7\x80\x5a\x59" +
	"\x96\x6c\xc9\xab\x2d\xce\x8d\x01\xce\x7b\x6f\x66\x1e\xc9\x11\x31\x98\x3f\x28\x26\xc3\x5e\x01\x86\x90\x36\xc7\x87" +
	"\xd5\x8b\xf1\x95\x82\x47\x0a\x96\x4f\x8e\xbc\xac\x1c\x09\x56\x28\xa8\x56\x00\x1e\x1d\x29\x40\x8b\x8e\x2a\x2c\x0e" +
	"\x11\xf7\xe8\xb1\x5b\x4f\x01\x35\x29\xd8\x53\x45\x11\x85\x23\x9a\x15\x80\xc5\x67\xb2\x29\x53\x21\x67\xe8\xb9\xed" +
	"\x82\x66\x17\xd8\x93\x97\x29\x49\xf4\x9e\x05\xc5\xb0\xef\xe8\x15\x25\x1d\x4d\x90\xb6\xda\x47\xda\x1b\x4f\x09\x6a" +
	"\x7e\x05\x61\xa8\xda\x72\x41\x6a\xca\x59\xac\xd1\x2d\x11\x2e\x6a\x00\x42\x2e\x58\x14\x2a\xd1\x86\x1a\x4b\x0e\xe4" +
	"\x53\x6d\xf6\x52\x1a\xde\xbc\xa2\x91\x62\xcf\xb1\x88\x84\xd5\x49\xc1\x27\x89\x0d\x7d\x5a\xa5\x40\x3a\xe7\x8e\xd4" +
	"\x4a\x26\x05\x0f\x2b\x80\x44\x96\xb4\x70\x7c\xab\xca\xa1\xe8\xfa\xb7\x41\x97\xd7\x9d\x0e\x5a\x3a\x97\xd0\x31\x07" +
	"\xbe\xe6\x9f\x5d\x26\x02\x70\x2e\x2b\xff\x8c\x37\xf2\x8d\xbd\xa0\xf1\x14\x7b\x72\xd1\x6d\xd4\x81\x44\xf8\x85\x7c" +
	"\xaf\x69\x1c\x1e\x48\xc1\x1a\x6d\x30\x9e\xd6\xfd\xba\x66\xe7\x30\xef\xfb\x9f\xeb\x54\xaf\x7f\x5a\x6f\x52\x4d\xd6" +
	"\x6e\xce\xfc\x32\xd5\xeb\xbf\x7a\xf0\x91\x6d\xe3\xe8\x89\x1b\x2f\x83\x72\x0b\x70\x79\x65\x87\x52\x2b\x78\xe3\xf7" +
	"\x31\xb8\xd4\x53\xb4\x82\xc5\x38\x3e\xe6\x66\x53\x12\x37\x51\x53\xba\x51\x98\x8a\x8d\xd9\x24\x7a\xd3\xb9\xb5\x09" +
	"\x91\x8f\x26\x1f\x6f\xe3\x0f\x77\x65\x43\x64\x47\x52\x53\x93\x8a\x0b\x6c\x75\xf6\x66\xd6\xde\xc1\xa6\x0c\xdc\x3d" +
	"\x67\xef\xfe\xd5\xcf\xe5\xd7\xf2\xcb\x18\xb4\x6b\xac\xdd\xb1\x35\xfa\xa4\xe0\xd7\xfd\x77\x96\x5d\xa4\x94\x2f\xdb" +
	"\x19\x15\x38\x0e\xcd\xcd\x39\xfb\x3a\x76\x1c\x45\xc1\x97\xed\x76\x3b\x88\x9f\x3b\xa9\x45\xc2\x68\x39\x44\x16\xd6" +
	"\x6c\x15\xfc\xfe\x6d\xd7\x47\x22\x75\x56\x0c\x73\x58\xe3\xcc\x38\x2b\x80\x0e\x8d\x82\xcf\xdb\xad\x1b\xad\x3a\x72" +
	"\x1c\x4f\x6d\xe0\xc9\x0c\x22\x91\xfe\x69\x28\x4d\x6a\x3c\xcc\x69\x3c\x8c\x34\xa6\x0f\xd7\xf5\x26\x1f\x31\x6e\xac" +
	"\x79\xee\x37\xba\xc2\x54\x3f\x33\xc6\x2a\x6d\x86\x03\x66\x6c\xcd\x05\x54\xfc\x9d\xd8\xcf\x8a\x7f\xf0\x04\x2d\x39" +
	"\x43\x1f\x4a\x72\xae\xf2\x5e\x0b\x2d\xa5\xa2\x98\x60\x35\xf4\x6d\x74\x1f\x97\x95\x45\x2e\xc8\xe9\xd1\x44\x05\xff" +
	"\xfe\x77\x43\xee\x2a\x6c\x99\x45\xca\x43\xfd\x40\xb3\x20\xcb\x87\x09\x8c\x66\xbf\x37\x87\x27\x0c\xe3\x33\x61\x84" +
	"\xdc\xd5\x31\x29\xe0\x85\x4e\x97\xa1\x55\xa6\x7a\x14\x06\x08\xad\x75\x73\xf1\xdb\x8a\xe7\x6e\xfb\xfc\x18\x9a\x29" +
	"\xb6\xa2\x3d\x36\x56\x9e\xb8\x22\x05\x5f\x3f\x6f\x17\x76\x72\xb1\xbe\x3c\xa1\xb3\x93\xdd\xdc\xc3\x2c\xef\x68\x7a" +
	"\x2c\xce\x74\x73\x73\x1b\xde\x70\x0b\x9b\xd2\xb6\x49\x42\xb1\x26\xb4\x52\x97\x57\x17\xe9\xd2\xd7\x3b\xb0\x4e\xcc" +
	"\x73\x45\xef\x29\xdd\xc3\xf4\x46\x53\x65\x74\xfe\xe4\x17\x91\xf2\xb7\x8c\x7c\xd5\xbe\x00\xe6\x55\x3f\x40\xe9\x92" +
	"\x8c\x61\x45\xd7\xe0\x7c\x86\xa5\xf8\x69\xf9\xfe\x45\xb5\x38\xc1\x1d\xc6\x74\x8a\x6e\x52\x26\x8d\xf6\x03\x7d\xdc" +
	"\x65\xdd\x1f\xb4\x3f\xe8\x44\xde\x0e\xc5\xf9\xeb\xf6\x3e\x76\x6e\xd0\x76\x90\x44\xf1\x68\x34\xfd\xa2\x75\x1e\xe6" +
	"\xd3\x0f\xb4\x6b\xd4\xf7\xc9\x57\xf3\xff\x01\x00\x00\xff\xff\x65\xcc\x42\x59\x7d\x0b\x00\x00")

func bindataDeploymentAlamedagrafanaDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedagrafanaDMyaml,
		"Deployment/alameda-grafanaDM.yaml",
	)
}



func bindataDeploymentAlamedagrafanaDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedagrafanaDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-grafanaDM.yaml",
		size: 2941,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1558938622, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedainfluxdbDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x94\xc1\x4e\xe3\x30\x10\x86\xef\x7d\x8a\x11\x7b\xe0\x94\x86\x9e\x56" +
	"\xf2\x2d\xd0\xb0\x44\x0b\x25\x6a\x53\x76\xf7\x54\x4d\x93\x09\xb5\x70\x6c\xcb\x9e\x14\xfa\xf6\x2b\x87\x16\x42\x69" +
	"\x01\xed\xfa\x50\x55\xe3\xf9\xbf\x7f\x26\xb6\x07\xad\xbc\x23\xe7\xa5\xd1\x02\xd0\x5a\x1f\xaf\x47\x83\x07\xa9\x2b" +
	"\x01\x63\xb2\xca\x6c\x1a\xd2\x3c\x68\x88\xb1\x42\x46\x31\x00\xd0\xd8\x90\x00\x54\xd8\x50\x85\x91\xd4\xb5\x6a\x9f" +
	"\xaa\xe5\x76\xc3\x5b\x2c\x49\x40\x4d\x15\x39\x64\xe3\x50\x0e\x00\x14\x2e\x49\xf9\xa0\x85\x60\xf1\x22\xee\x02\xa5" +
	"\x69\xac\xd1\xa4\xf9\x20\x13\xb5\x36\x8c\x2c\x8d\xde\xea\x2b\xf2\xa5\x93\x96\xbb\x7a\xc7\x54\x4b\x4d\x1e\x56\xe6" +
	"\x11\xd8\x40\xd5\x15\x0c\xbc\xa2\x60\xa3\x64\xd9\x09\xa1\x87\x03\x60\x6a\xac\x42\xa6\x21\x2a\xbb\xc2\xa1\xb1\xa4" +
	"\xfd\x4a\xd6\x3c\x94\x26\x7e\x44\xc9\x51\x6d\x5c\xe4\x08\xab\x8d\x80\x53\x76\x2d\x9d\x0e\xbc\xa5\x32\x98\x3b\xea" +
	"\x98\x5e\xc0\x68\x00\xe0\x49\x51\xc9\xc6\x3d\x97\xd5\x20\x97\xab\xeb\x5e\x9f\xfb\xbd\xf6\x9b\xda\xd5\xb0\x95\xf6" +
	"\xbe\x6d\x58\xea\x8b\x14\x80\x5d\x61\x61\x7d\x03\x4f\x65\xeb\x24\x6f\x2e\x8c\x66\x7a\xe2\xd7\x0d\x00\xd7\xea\xc4" +
	"\xcf\x3d\x39\x01\xa3\xb3\xb3\xb3\xed\x4e\x69\x34\xa3\xd4\xe4\x5e\xcc\xa2\xed\xe1\xbe\x71\x09\x4b\x36\x78\xdf\x8b" +
	"\x8b\xd1\xf0\x7b\x84\xca\x4a\x4d\x6f\x53\xf2\x56\xa9\xdc\x28\x59\x6e\x04\x64\xf5\xc4\x70\xee\xc8\x87\x0b\xb4\xcb" +
	"\x22\xbd\x7e\xed\x6c\x67\x97\x4d\x2e\xaf\xe7\xbf\xc7\xe7\x8b\x69\x9a\xdf\x4e\x8b\x6c\xf2\x63\x31\xce\x66\xc9\xf9" +
	"\x75\x3a\x7e\xc9\x05\x58\xa3\x6a\x49\xc0\x49\x38\x94\x93\xe3\x8c\xab\xa2\xc8\xbb\x9f\xd9\x22\x9d\xfc\x3f\xe3\x22" +
	"\x9d\x16\xd9\x65\x76\x91\x14\xe9\x01\x4e\x4c\x5c\xc6\xac\x7c\x6c\x9d\x5c\x23\x53\xf8\x3f\x2c\x1d\x7f\x8d\x9d\x4f" +
	"\xb3\xbb\xa4\x48\x17\x3f\xd3\x3f\x5f\x65\x3f\xd0\xe6\x33\x76\x32\x2f\xae\xfe\xbd\xf5\x64\x7c\x93\x4d\x16\xf3\x59" +
	"\x3a\x3d\xa0\xc5\xaa\x91\xfa\x53\x71\x9e\xcc\x66\xbf\x6e\xa7\x87\xcc\x3b\x80\x45\xef\x3f\x80\x1c\xf1\x6e\x3d\xb9" +
	"\x4f\x54\x1f\x39\x07\xf9\x5b\xe3\xb5\x51\x6d\x43\x37\xa6\xd5\xec\xfb\x77\xb2\x09\x91\x1c\x79\x25\x60\xff\x08\x7a" +
	"\xdc\xc3\x53\x30\x62\xe5\x7b\x49\x61\x8e\xdc\x6a\xb5\x11\x50\xa3\xf2\x74\xc4\x64\x8d\x2e\x56\x72\x19\xbf\x7b\x75" +
	"\xb0\xf7\x1c\xa3\x30\x26\x22\x1f\xc6\xea\x7d\xbf\x16\xdf\x2e\x9f\x51\x7b\x84\xe7\x0e\x8f\xbe\xee\x43\xb8\x77\x39" +
	"\xca\xdc\x1f\x49\xf9\xb0\x77\x4f\xa5\x23\x16\xfd\x22\xbb\xc8\xe4\xa8\xf4\x6f\x00\x00\x00\xff\xff\x94\x54\x36\xb6" +
	"\x88\x06\x00\x00")

func bindataDeploymentAlamedainfluxdbDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedainfluxdbDMyaml,
		"Deployment/alameda-influxdbDM.yaml",
	)
}



func bindataDeploymentAlamedainfluxdbDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedainfluxdbDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-influxdbDM.yaml",
		size: 1672,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1557293960, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedaoperatorDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x0c\x72\xd9\x93\x24\xa7\x45\x7a" +
	"\xe0\x4d\xad\x5c\x74\x81\x4d\x22\x24\x69\xaf\xc1\x84\x1a\x59\x44\x49\x0e\x97\xa4\xe4\xfa\xdf\x17\xb4\x6c\xaf\xe4" +
	"\x8f\x16\x28\xd0\xd5\x49\x18\xbe\x37\x6f\x66\xf8\x38\xe8\xd4\x1f\xe4\x83\x62\x2b\x00\x9d\x0b\xe5\x78\x9f\xfd\xa9" +
	"\x6c\x2b\xa0\x26\xa7\x79\x67\xc8\xc6\xcc\x50\xc4\x16\x23\x8a\x0c\xc0\xa2\x21\x01\xa8\xd1\x50\x8b\x39\x3b\xf2\x18" +
	"\xd9\x1f\x0e\x82\x43\x49\x02\x3a\x6a\xa7\x30\xaa\x0c\x40\xe3\x07\xe9\x90\xb8\x90\x24\x4e\xe4\x7d\x40\xb2\x71\x6c" +
	"\xc9\xc6\xab\x39\xd1\x5a\x8e\x18\x15\xdb\x03\xbf\xa5\x20\xbd\x72\x71\x5f\x6f\x4d\x9d\xb2\x14\xa0\xe7\x2d\x44\x86" +
	"\x76\x5f\x30\xc4\x9e\x92\x8c\x56\x72\x4f\xbc\x96\x16\x20\x92\x71\x1a\x23\x15\xa8\x5d\x8f\x05\x3b\xb2\xa1\x57\x5d" +
	"\x2c\x14\x97\x5b\x54\x31\xef\xd8\xe7\x9e\xb0\xdd\x09\xf8\x14\xfd\x40\x9f\xb2\xe0\x48\xa6\x22\x3c\xed\x73\x07\x01" +
	"\xf7\x19\x40\x20\x4d\x32\xb2\x9f\xca\x33\x18\x65\xff\x65\xd6\xef\xb2\xe3\x79\x0d\xc7\x0a\x0e\xc4\xd9\x84\xd3\x77" +
	"\x73\xca\xe9\xd3\x0b\x81\xdb\x12\x00\xc7\x9a\xa7\x49\xdb\x88\xca\x92\x3f\x31\xf3\x7f\x96\x01\x50\x06\x37\x24\xe0" +
	"\xeb\x80\xbb\x34\x18\xe7\xd9\xf5\x14\x43\x64\x5f\x9e\x73\x72\xdf\x93\x16\xe3\xaa\xf8\xb1\xf8\x69\xc9\x6f\x06\xad" +
	"\x1b\xd6\x4a\xee\x04\x7c\xee\x9e\x38\x36\x9e\x42\x72\xd5\x11\xe5\x29\xf0\xe0\x25\xcd\x3a\x4a\xc1\xaf\x03\x85\xb8" +
	"\x88\x01\x48\x37\x08\xb8\x5f\x99\x45\xd0\x90\x61\xbf\x13\xf0\xc3\xea\x51\x9d\x0e\xc8\x8e\xdf\xa8\xc7\x46\x9f\xaa" +
	"\xc7\xf5\x6b\x53\xfd\xb2\x7e\x4f\x7f\xb3\x24\x23\xea\x81\x7e\xf5\x6c\x96\x72\x9d\x22\xdd\xbe\x50\xb7\x8c\x1e\xe2" +
	"\x0d\xc6\x5e\x9c\x2e\xae\x38\xd9\x1f\x00\x2e\x84\x9b\xe7\xfa\x7f\x92\xbc\x90\xaa\xbe\x54\x8f\xeb\xba\x7a\x7f\x6e" +
	"\xd6\x2f\xd5\xdb\xf3\xcb\x7b\x5d\xbd\x55\xbf\xfd\xfe\xf3\x7b\x55\xd7\x2f\xeb\xd7\xd7\xf3\x12\x04\xdc\x1d\xef\x32" +
	"\x25\xed\x87\x8f\x62\xf6\x7c\x8b\x30\x4a\xf1\xb0\x5a\x3d\xac\xee\x4e\xc4\x91\xf5\x60\xe8\x91\x07\x3b\xbf\x9e\xa3" +
	"\xbe\xe3\x56\xd9\x8e\x67\x32\x26\x21\xa7\xd2\x4b\x8a\xb2\xbc\x44\xa4\x87\xf6\x6c\xf5\x4e\x40\x87\x3a\x50\x36\x8f" +
	"\xa7\x17\x1e\x1a\xcf\x1f\x34\x1f\x09\xfd\xf5\xcd\xd8\xd3\x27\xd9\x18\xb4\xed\x32\x98\x43\x39\x04\x5f\x6a\x96\xa8" +
	"\xcb\x0f\x65\x4b\x83\x16\x37\xe4\xcf\x40\x79\x7e\x52\xca\x5d\x92\x9a\x9d\x2b\xab\xa2\x42\x5d\x93\xc6\xdd\x2b\x49" +
	"\xb6\x6d\x10\xf0\x30\x03\x74\xa8\xf4\xe0\xe9\xad\xf7\x14\x7a\xd6\x6d\x32\xe2\xec\xd8\x91\x57\xdc\x5e\x61\x6a\x35" +
	"\xd2\x77\xe9\xed\x28\xf4\xbd\x5a\x9b\xfc\x71\xb1\x65\x2e\xd6\xcc\xde\x6f\x79\xda\x26\xb8\xa1\x7f\x05\x6b\xde\xdc" +
	"\xc0\x9e\xfb\xa9\xe5\xad\xdd\xa2\x6f\xab\xe6\xf3\x7c\x62\x2a\x92\x59\xac\x93\x1c\xdc\xde\x94\x77\xd3\x3e\xbd\xfb" +
	"\xcf\xef\x70\xe2\x1f\x80\x81\xfc\xa8\x24\x55\x52\x26\xdb\xdf\x5c\xae\x4b\xd8\xd3\xd5\x3d\x9c\x70\xd9\xdf\x01\x00" +
	"\x00\xff\xff\x16\x64\x95\x61\xa1\x07\x00\x00")

func bindataDeploymentAlamedaoperatorDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedaoperatorDMyaml,
		"Deployment/alameda-operatorDM.yaml",
	)
}



func bindataDeploymentAlamedaoperatorDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedaoperatorDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-operatorDM.yaml",
		size: 1953,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1557293960, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}


//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"CustomResourceDefinition/alamedarecommendationsCRD.yaml": bindataCustomResourceDefinitionAlamedarecommendationsCRDyaml,
	"CustomResourceDefinition/alamedascalersCRD.yaml":         bindataCustomResourceDefinitionAlamedascalersCRDyaml,
	"ClusterRole/admission-controllerCR.yaml":                 bindataClusterRoleAdmissioncontrollerCRyaml,
	"ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml": bindataClusterRoleAggregatealamedaadmineditalamedaCRyaml,
	"ClusterRole/alameda-datahubCR.yaml":                      bindataClusterRoleAlamedadatahubCRyaml,
	"ClusterRole/alameda-evictionerCR.yaml":                   bindataClusterRoleAlamedaevictionerCRyaml,
	"ClusterRole/alameda-grafanaCR.yaml":                      bindataClusterRoleAlamedagrafanaCRyaml,
	"ClusterRole/alameda-operatorCR.yaml":                     bindataClusterRoleAlamedaoperatorCRyaml,
	"ServiceAccount/admission-controllerSA.yaml":              bindataServiceAccountAdmissioncontrollerSAyaml,
	"ServiceAccount/alameda-aiSA.yaml":                        bindataServiceAccountAlamedaaiSAyaml,
	"ServiceAccount/alameda-datahubSA.yaml":                   bindataServiceAccountAlamedadatahubSAyaml,
	"ServiceAccount/alameda-evictionerSA.yaml":                bindataServiceAccountAlamedaevictionerSAyaml,
	"ServiceAccount/alameda-grafanaSA.yaml":                   bindataServiceAccountAlamedagrafanaSAyaml,
	"ServiceAccount/alameda-operatorSA.yaml":                  bindataServiceAccountAlamedaoperatorSAyaml,
	"ClusterRoleBinding/admission-controllerCRB.yaml":         bindataClusterRoleBindingAdmissioncontrollerCRByaml,
	"ClusterRoleBinding/alameda-datahubCRB.yaml":              bindataClusterRoleBindingAlamedadatahubCRByaml,
	"ClusterRoleBinding/alameda-evictionerCRB.yaml":           bindataClusterRoleBindingAlamedaevictionerCRByaml,
	"ClusterRoleBinding/alameda-grafanaCRB.yaml":              bindataClusterRoleBindingAlamedagrafanaCRByaml,
	"ClusterRoleBinding/alameda-operatorCRB.yaml":             bindataClusterRoleBindingAlamedaoperatorCRByaml,
	"Secret/admission-controller-tls.yaml":                    bindataSecretAdmissioncontrollertlsyaml,
	"Secret/alameda-influxdb.yaml":                            bindataSecretAlamedainfluxdbyaml,
	"ConfigMap/dashboards-config.yaml":                        bindataConfigMapDashboardsconfigyaml,
	"ConfigMap/grafana-datasources.yaml":                      bindataConfigMapGrafanadatasourcesyaml,
	"PersistentVolumeClaim/admission-controller-data.yaml":    bindataPersistentVolumeClaimAdmissioncontrollerdatayaml,
	"PersistentVolumeClaim/admission-controller-log.yaml":     bindataPersistentVolumeClaimAdmissioncontrollerlogyaml,
	"PersistentVolumeClaim/alameda-ai-data.yaml":              bindataPersistentVolumeClaimAlamedaaidatayaml,
	"PersistentVolumeClaim/alameda-ai-log.yaml":               bindataPersistentVolumeClaimAlamedaailogyaml,
	"PersistentVolumeClaim/alameda-datahub-data.yaml":         bindataPersistentVolumeClaimAlamedadatahubdatayaml,
	"PersistentVolumeClaim/alameda-datahub-log.yaml":          bindataPersistentVolumeClaimAlamedadatahublogyaml,
	"PersistentVolumeClaim/alameda-evictioner-data.yaml":      bindataPersistentVolumeClaimAlamedaevictionerdatayaml,
	"PersistentVolumeClaim/alameda-evictioner-log.yaml":       bindataPersistentVolumeClaimAlamedaevictionerlogyaml,
	"PersistentVolumeClaim/alameda-operator-data.yaml":        bindataPersistentVolumeClaimAlamedaoperatordatayaml,
	"PersistentVolumeClaim/alameda-operator-log.yaml":         bindataPersistentVolumeClaimAlamedaoperatorlogyaml,
	"PersistentVolumeClaim/my-alamedagrafanaPVC.yaml":         bindataPersistentVolumeClaimMyalamedagrafanaPVCyaml,
	"PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml":        bindataPersistentVolumeClaimMyalamedainfluxdbPVCyaml,
	"Service/admission-controllerSV.yaml":                     bindataServiceAdmissioncontrollerSVyaml,
	"Service/alameda-datahubSV.yaml":                          bindataServiceAlamedadatahubSVyaml,
	"Service/alameda-grafanaSV.yaml":                          bindataServiceAlamedagrafanaSVyaml,
	"Service/alameda-influxdbSV.yaml":                         bindataServiceAlamedainfluxdbSVyaml,
	"Deployment/admission-controllerDM.yaml":                  bindataDeploymentAdmissioncontrollerDMyaml,
	"Deployment/alameda-aiDM.yaml":                            bindataDeploymentAlamedaaiDMyaml,
	"Deployment/alameda-datahubDM.yaml":                       bindataDeploymentAlamedadatahubDMyaml,
	"Deployment/alameda-evictionerDM.yaml":                    bindataDeploymentAlamedaevictionerDMyaml,
	"Deployment/alameda-grafanaDM.yaml":                       bindataDeploymentAlamedagrafanaDMyaml,
	"Deployment/alameda-influxdbDM.yaml":                      bindataDeploymentAlamedainfluxdbDMyaml,
	"Deployment/alameda-operatorDM.yaml":                      bindataDeploymentAlamedaoperatorDMyaml,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op: "open",
					Path: name,
					Err: os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op: "open",
			Path: name,
			Err: os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}


type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"ClusterRole": {Func: nil, Children: map[string]*bintree{
		"admission-controllerCR.yaml": {Func: bindataClusterRoleAdmissioncontrollerCRyaml, Children: map[string]*bintree{}},
		"aggregate-alameda-admin-edit-alamedaCR.yaml": {Func: bindataClusterRoleAggregatealamedaadmineditalamedaCRyaml, Children: map[string]*bintree{}},
		"alameda-datahubCR.yaml": {Func: bindataClusterRoleAlamedadatahubCRyaml, Children: map[string]*bintree{}},
		"alameda-evictionerCR.yaml": {Func: bindataClusterRoleAlamedaevictionerCRyaml, Children: map[string]*bintree{}},
		"alameda-grafanaCR.yaml": {Func: bindataClusterRoleAlamedagrafanaCRyaml, Children: map[string]*bintree{}},
		"alameda-operatorCR.yaml": {Func: bindataClusterRoleAlamedaoperatorCRyaml, Children: map[string]*bintree{}},
	}},
	"ClusterRoleBinding": {Func: nil, Children: map[string]*bintree{
		"admission-controllerCRB.yaml": {Func: bindataClusterRoleBindingAdmissioncontrollerCRByaml, Children: map[string]*bintree{}},
		"alameda-datahubCRB.yaml": {Func: bindataClusterRoleBindingAlamedadatahubCRByaml, Children: map[string]*bintree{}},
		"alameda-evictionerCRB.yaml": {Func: bindataClusterRoleBindingAlamedaevictionerCRByaml, Children: map[string]*bintree{}},
		"alameda-grafanaCRB.yaml": {Func: bindataClusterRoleBindingAlamedagrafanaCRByaml, Children: map[string]*bintree{}},
		"alameda-operatorCRB.yaml": {Func: bindataClusterRoleBindingAlamedaoperatorCRByaml, Children: map[string]*bintree{}},
	}},
	"ConfigMap": {Func: nil, Children: map[string]*bintree{
		"dashboards-config.yaml": {Func: bindataConfigMapDashboardsconfigyaml, Children: map[string]*bintree{}},
		"grafana-datasources.yaml": {Func: bindataConfigMapGrafanadatasourcesyaml, Children: map[string]*bintree{}},
	}},
	"CustomResourceDefinition": {Func: nil, Children: map[string]*bintree{
		"alamedarecommendationsCRD.yaml": {Func: bindataCustomResourceDefinitionAlamedarecommendationsCRDyaml, Children: map[string]*bintree{}},
		"alamedascalersCRD.yaml": {Func: bindataCustomResourceDefinitionAlamedascalersCRDyaml, Children: map[string]*bintree{}},
	}},
	"Deployment": {Func: nil, Children: map[string]*bintree{
		"admission-controllerDM.yaml": {Func: bindataDeploymentAdmissioncontrollerDMyaml, Children: map[string]*bintree{}},
		"alameda-aiDM.yaml": {Func: bindataDeploymentAlamedaaiDMyaml, Children: map[string]*bintree{}},
		"alameda-datahubDM.yaml": {Func: bindataDeploymentAlamedadatahubDMyaml, Children: map[string]*bintree{}},
		"alameda-evictionerDM.yaml": {Func: bindataDeploymentAlamedaevictionerDMyaml, Children: map[string]*bintree{}},
		"alameda-grafanaDM.yaml": {Func: bindataDeploymentAlamedagrafanaDMyaml, Children: map[string]*bintree{}},
		"alameda-influxdbDM.yaml": {Func: bindataDeploymentAlamedainfluxdbDMyaml, Children: map[string]*bintree{}},
		"alameda-operatorDM.yaml": {Func: bindataDeploymentAlamedaoperatorDMyaml, Children: map[string]*bintree{}},
	}},
	"PersistentVolumeClaim": {Func: nil, Children: map[string]*bintree{
		"admission-controller-data.yaml": {Func: bindataPersistentVolumeClaimAdmissioncontrollerdatayaml, Children: map[string]*bintree{}},
		"admission-controller-log.yaml": {Func: bindataPersistentVolumeClaimAdmissioncontrollerlogyaml, Children: map[string]*bintree{}},
		"alameda-ai-data.yaml": {Func: bindataPersistentVolumeClaimAlamedaaidatayaml, Children: map[string]*bintree{}},
		"alameda-ai-log.yaml": {Func: bindataPersistentVolumeClaimAlamedaailogyaml, Children: map[string]*bintree{}},
		"alameda-datahub-data.yaml": {Func: bindataPersistentVolumeClaimAlamedadatahubdatayaml, Children: map[string]*bintree{}},
		"alameda-datahub-log.yaml": {Func: bindataPersistentVolumeClaimAlamedadatahublogyaml, Children: map[string]*bintree{}},
		"alameda-evictioner-data.yaml": {Func: bindataPersistentVolumeClaimAlamedaevictionerdatayaml, Children: map[string]*bintree{}},
		"alameda-evictioner-log.yaml": {Func: bindataPersistentVolumeClaimAlamedaevictionerlogyaml, Children: map[string]*bintree{}},
		"alameda-operator-data.yaml": {Func: bindataPersistentVolumeClaimAlamedaoperatordatayaml, Children: map[string]*bintree{}},
		"alameda-operator-log.yaml": {Func: bindataPersistentVolumeClaimAlamedaoperatorlogyaml, Children: map[string]*bintree{}},
		"my-alamedagrafanaPVC.yaml": {Func: bindataPersistentVolumeClaimMyalamedagrafanaPVCyaml, Children: map[string]*bintree{}},
		"my-alamedainfluxdbPVC.yaml": {Func: bindataPersistentVolumeClaimMyalamedainfluxdbPVCyaml, Children: map[string]*bintree{}},
	}},
	"Secret": {Func: nil, Children: map[string]*bintree{
		"admission-controller-tls.yaml": {Func: bindataSecretAdmissioncontrollertlsyaml, Children: map[string]*bintree{}},
		"alameda-influxdb.yaml": {Func: bindataSecretAlamedainfluxdbyaml, Children: map[string]*bintree{}},
	}},
	"Service": {Func: nil, Children: map[string]*bintree{
		"admission-controllerSV.yaml": {Func: bindataServiceAdmissioncontrollerSVyaml, Children: map[string]*bintree{}},
		"alameda-datahubSV.yaml": {Func: bindataServiceAlamedadatahubSVyaml, Children: map[string]*bintree{}},
		"alameda-grafanaSV.yaml": {Func: bindataServiceAlamedagrafanaSVyaml, Children: map[string]*bintree{}},
		"alameda-influxdbSV.yaml": {Func: bindataServiceAlamedainfluxdbSVyaml, Children: map[string]*bintree{}},
	}},
	"ServiceAccount": {Func: nil, Children: map[string]*bintree{
		"admission-controllerSA.yaml": {Func: bindataServiceAccountAdmissioncontrollerSAyaml, Children: map[string]*bintree{}},
		"alameda-aiSA.yaml": {Func: bindataServiceAccountAlamedaaiSAyaml, Children: map[string]*bintree{}},
		"alameda-datahubSA.yaml": {Func: bindataServiceAccountAlamedadatahubSAyaml, Children: map[string]*bintree{}},
		"alameda-evictionerSA.yaml": {Func: bindataServiceAccountAlamedaevictionerSAyaml, Children: map[string]*bintree{}},
		"alameda-grafanaSA.yaml": {Func: bindataServiceAccountAlamedagrafanaSAyaml, Children: map[string]*bintree{}},
		"alameda-operatorSA.yaml": {Func: bindataServiceAccountAlamedaoperatorSAyaml, Children: map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
