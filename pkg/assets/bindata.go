// Code generated by go-bindata. DO NOT EDIT.
// sources:
// CustomResourceDefinition/alamedarecommendationsCRD.yaml
// CustomResourceDefinition/alamedascalersCRD.yaml
// ClusterRole/admission-controllerCR.yaml
// ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml
// ClusterRole/alameda-datahubCR.yaml
// ClusterRole/alameda-evictionerCR.yaml
// ClusterRole/alameda-grafanaCR.yaml
// ClusterRole/alameda-operatorCR.yaml
// ServiceAccount/admission-controllerSA.yaml
// ServiceAccount/alameda-aiSA.yaml
// ServiceAccount/alameda-datahubSA.yaml
// ServiceAccount/alameda-evictionerSA.yaml
// ServiceAccount/alameda-grafanaSA.yaml
// ServiceAccount/alameda-operatorSA.yaml
// ClusterRoleBinding/admission-controllerCRB.yaml
// ClusterRoleBinding/alameda-datahubCRB.yaml
// ClusterRoleBinding/alameda-evictionerCRB.yaml
// ClusterRoleBinding/alameda-grafanaCRB.yaml
// ClusterRoleBinding/alameda-operatorCRB.yaml
// Secret/admission-controller-tls.yaml
// Secret/alameda-influxdb.yaml
// ConfigMap/dashboards-config.yaml
// ConfigMap/grafana-datasources.yaml
// PersistentVolumeClaim/admission-controller-data.yaml
// PersistentVolumeClaim/admission-controller-log.yaml
// PersistentVolumeClaim/alameda-ai-data.yaml
// PersistentVolumeClaim/alameda-ai-log.yaml
// PersistentVolumeClaim/alameda-datahub-data.yaml
// PersistentVolumeClaim/alameda-datahub-log.yaml
// PersistentVolumeClaim/alameda-evictioner-data.yaml
// PersistentVolumeClaim/alameda-evictioner-log.yaml
// PersistentVolumeClaim/alameda-operator-data.yaml
// PersistentVolumeClaim/alameda-operator-log.yaml
// PersistentVolumeClaim/my-alamedagrafanaPVC.yaml
// PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml
// Service/admission-controllerSV.yaml
// Service/alameda-datahubSV.yaml
// Service/alameda-grafanaSV.yaml
// Service/alameda-influxdbSV.yaml
// Deployment/admission-controllerDM.yaml
// Deployment/alameda-aiDM.yaml
// Deployment/alameda-datahubDM.yaml
// Deployment/alameda-evictionerDM.yaml
// Deployment/alameda-grafanaDM.yaml
// Deployment/alameda-influxdbDM.yaml
// Deployment/alameda-operatorDM.yaml

package assets


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}


type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataCustomResourceDefinitionAlamedarecommendationsCRDyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x53\x3d\x8f\xdb\x30\x0c\xdd\xf5\x2b\x88\xec\x71\x6b\x74\x29\xbc\x1d" +
	"\xda\xa5\xcb\xa1\xb8\x02\xb7\x14\x1d\x18\x89\xcd\xb1\x27\x8b\x2a\x45\x07\xbd\x7f\x5f\xd8\x8a\xf3\x71\x89\x13\x4e" +
	"\xf6\x13\xf5\xde\xe3\x87\x30\xf3\x33\x69\x61\x49\x1d\x60\x66\xfa\x67\x94\xc6\xbf\xd2\xbc\x7e\x2e\x0d\xcb\x87\x5d" +
	"\xbb\x21\xc3\xd6\xbd\x72\x0a\x1d\x7c\x19\x8a\x49\xff\x44\x45\x06\xf5\xf4\x95\x7e\x73\x62\x63\x49\xae\x27\xc3\x80" +
	"\x86\x9d\x03\x88\xb8\xa1\x58\xc6\x2f\x00\x2f\xc9\x54\x62\x24\x5d\x9b\x48\x9c\x69\x3b\x58\xb5\xcd\xc7\x95\x03\x48" +
	"\xd8\x53\x07\x18\xb1\xa7\x80\x4a\x5e\xfa\x9e\x52\x40\x9b\x3c\xe0\x60\x52\x3c\x46\x4e\xdb\x66\x64\x42\x4e\xa4\xa5" +
	"\x41\x76\x25\x93\x1f\x15\xb6\x2a\x43\xee\x60\x39\xb1\x2a\xec\xdd\xd4\x22\x1e\xaa\xd8\xd3\x99\xd8\x74\x9e\xe3\xa0" +
	"\x18\x97\xec\x38\x80\xe2\x25\x53\x07\x8f\x23\x65\x46\x4f\xc1\x01\xec\x30\x72\xcd\xa8\x22\x92\x29\x3d\x7c\xff\xf6" +
	"\xfc\xe9\x87\x7f\xa1\x1e\x2b\x08\x90\x55\x32\xa9\xf1\xec\x65\x8c\x93\xee\x1f\x30\x00\x7b\x1b\x35\x8a\x29\xa7\xed" +
	"\x01\x9e\xac\xdf\x4b\x3a\x9d\xc2\x79\xa2\x6c\xfe\x90\xb7\x03\x3c\xb7\x6f\x8e\x6b\xe6\xe6\xf1\xd5\x5e\x9e\xe3\x00" +
	"\x6c\xd4\x5f\x80\xcb\x44\x35\xa6\x61\x5f\xc1\x17\xca\x39\x86\xee\x37\xee\x2a\xeb\x42\x8d\xc7\xbb\x7f\x07\x56\x0a" +
	"\x97\x57\xd7\x93\xa1\x0b\xf8\x06\x5b\x3d\x42\x55\x7c\x73\xb7\x15\xd6\x27\xbd\xbb\x3b\x0d\x43\x1b\xca\x8d\xa1\xed" +
	"\xe6\x27\xba\x6b\x31\xe6\x17\x6c\xdd\xf1\x0a\x7a\x4f\xd9\x28\x3c\xbe\x5f\xf3\xd5\xea\x6c\xa7\xa7\x5f\x2f\x29\x4c" +
	"\x0f\xb6\x74\xf0\xf3\xd7\xb8\xd0\x26\x4a\x61\xbf\x84\x13\xf8\x3f\x00\x00\xff\xff\xc3\x68\x72\x63\x12\x04\x00\x00" +
	"")

func bindataCustomResourceDefinitionAlamedarecommendationsCRDyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataCustomResourceDefinitionAlamedarecommendationsCRDyaml,
		"CustomResourceDefinition/alamedarecommendationsCRD.yaml",
	)
}



func bindataCustomResourceDefinitionAlamedarecommendationsCRDyaml() (*asset, error) {
	bytes, err := bindataCustomResourceDefinitionAlamedarecommendationsCRDyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "CustomResourceDefinition/alamedarecommendationsCRD.yaml",
		size: 1042,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553062567, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataCustomResourceDefinitionAlamedascalersCRDyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\xc1\x6e\x23\x37\x0c\xbd\xcf\x57\x10\xee\x21\x97\x7a\xdc\xa0\x97" +
	"\x62\x0e\x05\x16\x6e\x0f\x41\xd1\x45\x91\x14\x7b\x29\x7a\xa0\x25\x8e\xad\x46\x22\x55\x89\x32\xd6\xfd\xfa\x42\x1a" +
	"\xdb\xc9\xcc\xc6\xd8\x14\xa8\x4e\xa3\x37\xe2\x23\xf5\x48\x8a\x18\xdd\x27\x4a\xd9\x09\x0f\x80\xd1\xd1\x67\x25\xae" +
	"\xbb\xdc\x3f\xff\x90\x7b\x27\x9b\xe3\xfd\x8e\x14\xef\xbb\x67\xc7\x76\x80\x6d\xc9\x2a\xe1\x91\xb2\x94\x64\xe8\x27" +
	"\x1a\x1d\x3b\x75\xc2\x5d\x20\x45\x8b\x8a\x03\x00\x40\x07\xe0\x71\x47\x3e\x0f\x5d\xdd\x1a\x61\x4d\xe2\x3d\xa5\xb5" +
	"\x8a\xf8\x0b\xf5\x00\xab\xfb\xfe\xbb\x55\x07\xc0\x18\x68\x00\xf4\x18\xc8\x62\x36\xe8\x29\xe5\x1e\x8b\x4a\xfd\x76" +
	"\xbc\xef\x2b\x03\x3a\x6e\xb0\xeb\x72\x24\x53\x99\xf7\x49\x4a\x1c\xe0\xf6\xc1\x89\xf9\x1c\xc5\x74\x81\x0f\x93\x93" +
	"\xa7\xe6\xa4\xe1\xd1\x97\x84\x7e\xe9\xbe\x03\xc8\x46\x22\x0d\xf0\xb1\x52\x44\x34\x64\x3b\x80\x23\x7a\x67\xb1\xde" +
	"\x78\x22\x95\x48\xfc\xe1\xb7\x87\x4f\xdf\x3f\x99\x03\x05\x9c\x40\x80\x98\x24\x52\x52\x77\xf1\x5d\xd7\x2b\xa5\xaf" +
	"\x18\x80\xa5\x6c\x92\x8b\x8d\x11\x7e\x5c\xbf\xfa\x03\x70\x57\x99\x27\x13\xb0\x55\x6a\xca\xa0\x07\x82\xe3\x84\x91" +
	"\x85\xdc\xbc\x82\x8c\xa0\x07\x97\x21\x51\x4c\x94\x89\xb5\x45\x38\xe3\x92\x11\x90\x41\x76\x7f\x91\xd1\x1e\x9e\x28" +
	"\x55\x12\xc8\x07\x29\xde\xd6\x04\x1d\x29\x29\x24\x32\xb2\x67\xf7\xcf\x95\x39\x83\x4a\x73\xe9\x51\x29\xeb\x8c\xd1" +
	"\xb1\x52\x62\xf4\x55\x93\x42\xdf\x02\xb2\x85\x80\x27\x48\x54\x7d\x40\xe1\x57\x6c\xed\x48\xee\xe1\x57\x49\x04\x8e" +
	"\x47\x19\xe0\xa0\x1a\xf3\xb0\xd9\xec\x9d\x5e\x4a\xcd\x48\x08\x85\x9d\x9e\x36\xad\x62\xdc\xae\xa8\xa4\xbc\xb1\x74" +
	"\x24\xbf\xc1\xe8\xd6\x2d\x4e\xd6\x56\x9e\xc1\x7e\x93\xce\x65\x98\xef\x5e\x05\xa6\xa7\x9a\xb4\xac\xc9\xf1\xfe\x0a" +
	"\xb7\xdc\xbf\x57\xf5\x5f\x1c\x5b\x70\x19\xf0\xcc\x32\x45\xff\x22\x6e\x85\xaa\x26\x8f\x3f\x3f\xfd\x0e\x97\x18\x5a" +
	"\x02\xe6\x8a\x37\xad\x5f\xcc\xf2\x8b\xec\x55\x26\xc7\x23\xa5\x29\x6d\x63\x92\xd0\x18\x89\x6d\x14\xc7\xda\x36\xc6" +
	"\x3b\xe2\xb9\xe4\xb9\xec\x82\xd3\x9a\xe7\xbf\x0b\x65\xad\xd9\xe9\x61\x8b\xcc\xa2\xb0\x23\x28\xd1\xa2\x92\xed\xe1" +
	"\x81\x61\x8b\x81\xfc\x16\x33\xfd\xdf\xa2\x57\x7d\xf3\xba\x0a\xfa\x75\xd9\xaf\x8f\xc2\x17\x07\x27\x71\xae\xf0\xa5" +
	"\xa3\x2f\xeb\xad\xfe\xa9\xcb\xcc\x9e\x9f\x37\xda\xe9\x66\x28\x75\x11\xe3\xce\x13\x7d\x26\x53\xf4\xa6\xdd\x4e\xc4" +
	"\x13\xce\x9b\x27\x8a\x77\xe6\xb4\x3c\x4f\x5c\xc2\x12\x5b\x43\xd6\xea\xe4\x0b\xd8\x48\x88\x68\xf4\xbd\xa1\x66\xf2" +
	"\x64\x54\xd2\x92\x7f\x56\xb8\x77\x0f\x21\x4a\x52\x64\x1d\xe0\xb1\x30\xac\x02\x3e\xd3\xaa\xb6\x6c\xa2\x3d\x31\x25" +
	"\x54\x02\x23\x96\x00\x47\xa5\x04\x41\xac\x1b\x4f\x53\xf9\xd6\xb2\x73\x9e\xee\xde\x0c\x68\x91\x1d\x68\x05\xe7\x12" +
	"\xcd\x7a\x68\x7d\x0d\xf2\xab\xd9\x55\xd4\x92\xdf\x93\xdf\xf3\x1b\xbc\xbd\x0e\x8c\xe5\xfd\x6f\x19\x4e\xda\x44\x2f" +
	"\xa7\x40\xac\x46\x78\x74\xfb\x37\x8e\xdc\xbc\xe0\x92\xe1\xbf\xda\xde\xf8\xb5\x80\x8f\x97\x49\x7b\xbc\x47\x1f\x0f" +
	"\x78\xdf\xbd\x48\x83\xc6\x50\x54\xb2\x1f\x97\x13\x6b\xb5\x9a\x8d\xa9\xb6\x35\xc2\xb6\xcd\xdd\x3c\xc0\x1f\x7f\xd6" +
	"\x59\xa5\x92\xc8\x9e\x1b\x62\x02\xff\x0d\x00\x00\xff\xff\xc7\x3f\x75\xd9\xda\x07\x00\x00")

func bindataCustomResourceDefinitionAlamedascalersCRDyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataCustomResourceDefinitionAlamedascalersCRDyaml,
		"CustomResourceDefinition/alamedascalersCRD.yaml",
	)
}



func bindataCustomResourceDefinitionAlamedascalersCRDyaml() (*asset, error) {
	bytes, err := bindataCustomResourceDefinitionAlamedascalersCRDyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "CustomResourceDefinition/alamedascalersCRD.yaml",
		size: 2010,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1559111925, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAdmissioncontrollerCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x52\x3d\x6f\x85\x30\x0c\xdc\xf9\x15\xd1\xdb\xa1\xea\x56\xb1\x76\xe8" +
	"\xde\xa1\xbb\x5f\xe2\x07\x16\x21\x8e\x6c\xe7\xf5\xe3\xd7\x57\x40\x05\x0c\x45\x45\x6a\xa6\x9c\x74\x97\xbb\x8b\x0d" +
	"\x99\xde\x50\x94\x38\xb5\x4e\xae\xe0\x1b\x28\xd6\xb3\xd0\x17\x18\x71\x6a\x86\x27\x6d\x88\x1f\xee\x8f\xd5\x40\x29" +
	"\xb4\xee\x39\x16\x35\x94\x57\x8e\x58\x8d\x68\x10\xc0\xa0\xad\x9c\x4b\x30\x62\xeb\x6e\x18\x50\xc0\x58\x80\x6a\x08" +
	"\x23\xe9\xf4\x6e\xed\x39\x99\x70\x8c\x28\x95\x94\x88\x3a\xf1\x6b\x07\x99\x5e\x84\x4b\x9e\xe1\x74\x6a\x77\x59\x35" +
	"\x82\x1d\xa9\xc9\x3e\xc3\x65\xa6\x09\x2a\x17\xf1\xb8\x53\x8d\xc5\xc0\x28\x75\xef\x78\xed\x99\x07\xcf\xe9\x46\x5d" +
	"\x59\xb4\x3a\xb3\xee\x28\xd7\x9d\xa0\x43\x5b\xef\x5e\x10\x0c\x57\x58\x72\xd8\xc3\x80\x11\x67\xf8\x7b\xdc\xc3\x48" +
	"\x99\xc3\x9f\xce\x91\x74\x03\x19\xcc\xf7\x47\x3e\xf8\x61\x98\x74\x6d\xb3\xb0\xb2\x1e\x99\x0b\xe6\x48\x1e\x14\x4d" +
	"\x77\x45\x72\xe4\xcf\x11\x93\x9d\xcd\x75\x36\xc9\xf1\x27\xfc\xe4\x98\xc6\xb0\x6d\xc0\xbf\xec\xa7\xd6\x0d\x67\x4c" +
	"\xda\xd3\xcd\x1a\xe2\x23\xeb\xad\xee\xb2\x0d\xa7\x5c\xbf\x03\x00\x00\xff\xff\xf4\x88\xe0\xed\x0a\x03\x00\x00")

func bindataClusterRoleAdmissioncontrollerCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAdmissioncontrollerCRyaml,
		"ClusterRole/admission-controllerCR.yaml",
	)
}



func bindataClusterRoleAdmissioncontrollerCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAdmissioncontrollerCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/admission-controllerCR.yaml",
		size: 778,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1559111925, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAggregatealamedaadmineditalamedaCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x4f\xbd\x4e\xf4\x30\x10\xec\xfd\x14\xab\xeb\x93\x4f\x5f\x87\xdc\x52" +
	"\xd0\x53\xd0\xef\xd9\xa3\xdc\xea\x6c\x6f\xb4\x5e\x1f\x12\x4f\x8f\x2e\x21\xd0\x81\x90\xa8\x3c\xf2\xce\x2f\xaf\xf2" +
	"\x02\xeb\xa2\x2d\x92\x9d\x39\xcd\x3c\xfc\xa2\x26\x6f\xec\xa2\x6d\xbe\x3e\xf4\x59\xf4\xdf\xed\x7f\xb8\x4a\xcb\x91" +
	"\x1e\xcb\xe8\x0e\x7b\xd6\x82\x50\xe1\x9c\xd9\x39\x06\xa2\xc6\x15\x91\x78\x59\x0c\x0b\x3b\x26\x2e\x5c\x91\x79\xe2" +
	"\x5c\xa5\x4d\xc8\xe2\xc7\x57\x20\x2a\x7c\x46\xe9\x77\x19\x7d\x93\xf9\x65\xe6\xba\xfb\x44\x3a\xb9\x0d\x9c\x7e\x23" +
	"\xbc\x47\x7f\xea\x6c\x14\xf4\x18\x26\xe2\x55\x9e\x4c\xc7\xba\x95\x98\x88\x87\x6b\x4f\x5c\xa4\x2d\x73\xd2\xe6\x2c" +
	"\x0d\xd6\x67\x96\x40\x64\xe8\x3a\x2c\xe1\xa0\xee\x2b\xee\x6c\x58\x0f\x44\x37\xd8\xf9\xe3\xb6\xc0\xb7\xb7\x48\xdf" +
	"\x41\x32\xb0\x63\x83\x63\xcd\x07\xcc\x28\x70\xfc\x45\x0b\x43\xd2\x5a\xd1\xf2\xb6\xff\xa7\x36\xaf\xec\xe9\xf2\x1e" +
	"\x00\x00\xff\xff\x36\x9a\x6e\xc2\xf0\x01\x00\x00")

func bindataClusterRoleAggregatealamedaadmineditalamedaCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAggregatealamedaadmineditalamedaCRyaml,
		"ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml",
	)
}



func bindataClusterRoleAggregatealamedaadmineditalamedaCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAggregatealamedaadmineditalamedaCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml",
		size: 496,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553062567, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAlamedadatahubCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\x31\x4f\xc3\x40\x0c\x85\xf7\xfb\x15\x56\x99\x13\xc4\x86\xb2\x32" +
	"\xb0\x22\x06\x76\x37\xf7\xda\x58\xcd\x9d\x0f\xdb\x57\x09\x7e\x3d\x6a\xaa\x16\x75\xb2\xf4\xfc\xf4\x7d\xb2\xb9\xc9" +
	"\x17\xcc\x45\xeb\x44\xb6\xe7\x79\xe4\x1e\x8b\x9a\xfc\x72\x88\xd6\xf1\xf4\xea\xa3\xe8\xf3\xf9\x25\x9d\xa4\xe6\x89" +
	"\xde\xd6\xee\x01\xfb\xd4\x15\xa9\x20\x38\x73\xf0\x94\x88\x2a\x17\x4c\x74\x40\x86\x71\xa8\xb1\x0c\xbc\x72\x41\xe6" +
	"\xe1\xd2\x58\xfa\x3e\x59\x5f\xe1\x53\x7a\xa2\x0f\x58\x11\xbf\x18\xe9\xa0\x46\xdf\x1d\xf6\x43\xcd\xb4\x20\x16\x74" +
	"\xa7\x5e\x33\x6c\x03\x7a\xe3\x19\xa4\x0d\xd5\x17\x39\xc4\x50\xb4\x4a\xa8\x49\x3d\x52\x1a\x88\x9b\xbc\x9b\xf6\xe6" +
	"\x13\x25\xa2\x81\x76\xbb\x44\x64\x70\xed\x36\xe3\x16\xde\x31\x9e\x88\xce\xb0\xfd\x6d\x71\x44\x3c\x30\xb6\x90\x7b" +
	"\xa8\xcf\xbc\x4a\x3d\x8e\xb3\xd6\x60\xa9\x30\x1f\x59\x1e\xc8\xd7\xea\xf5\x3c\xc3\xac\xa5\xa0\xe6\xed\x5d\xff\x92" +
	"\xbb\xe3\x32\x7b\xcb\x1c\xf8\x0b\x00\x00\xff\xff\x44\xa5\x3d\x5d\x6a\x01\x00\x00")

func bindataClusterRoleAlamedadatahubCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAlamedadatahubCRyaml,
		"ClusterRole/alameda-datahubCR.yaml",
	)
}



func bindataClusterRoleAlamedadatahubCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAlamedadatahubCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/alameda-datahubCR.yaml",
		size: 362,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAlamedaevictionerCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x31\x6b\x03\x31\x0c\x46\x77\xff\x0a\x91\xfd\xae\x74\x2b\x5e\x3b" +
	"\x74\xef\xd0\x5d\xb1\xbf\xa6\x22\xb6\x75\x48\x72\x86\xfe\xfa\x72\xe1\x86\xc2\x4d\x82\x87\xf4\x78\xe2\x4d\xbe\x60" +
	"\x2e\x3a\x32\xd9\x95\xcb\xca\x33\x7e\xd4\xe4\x97\x43\x74\xac\xf7\x37\x5f\x45\x5f\x1e\xaf\xe9\x2e\xa3\x66\x7a\x6f" +
	"\xd3\x03\xf6\xa9\x0d\xa9\x23\xb8\x72\x70\x4e\x44\x83\x3b\x32\x7d\xa3\xc2\x38\xd4\x58\x16\x6e\xdc\x51\x79\xc1\x43" +
	"\xca\xae\x82\x25\x9b\x0d\x9e\xd3\x42\xbc\xc9\x87\xe9\xdc\x7c\x3f\x5d\xe8\x72\x49\x44\x06\xd7\x69\x05\x07\xdb\xb4" +
	"\x7a\x22\x7a\xc0\xae\x07\xb9\x21\x9e\xb3\xa2\x21\x70\xb6\xf0\x0c\xf5\xc2\x4d\xc6\x6d\x2d\x3a\x82\x65\xc0\x7c\x65" +
	"\x39\xcb\x8f\xb6\x7d\x1b\xe6\xff\x91\xa1\x68\xef\x18\xf5\xf9\xfe\xb9\xe0\x2f\x00\x00\xff\xff\x1e\xb7\xab\xd4\x2f" +
	"\x01\x00\x00")

func bindataClusterRoleAlamedaevictionerCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAlamedaevictionerCRyaml,
		"ClusterRole/alameda-evictionerCR.yaml",
	)
}



func bindataClusterRoleAlamedaevictionerCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAlamedaevictionerCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/alameda-evictionerCR.yaml",
		size: 303,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1555988180, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAlamedagrafanaCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\xa1\x6e\xc5\x30\x0c\x46\x61\xee\xa7\xb0\x2e\x4f\xa7\xb1\x29\x74" +
	"\x60\x7c\x60\xfc\xbf\x8d\xdb\x59\x4d\xe3\xc8\x4e\x0a\xf6\xf4\xd3\x05\xa5\xe7\x48\x1f\xba\xfe\x88\x87\x5a\xcb\xec" +
	"\x4f\xac\x0b\xe6\xf8\x35\xd7\x3f\x0c\xb5\xb6\x1c\x1f\xb1\xa8\xbd\x5d\xef\x74\x68\x2b\x99\x3f\xeb\x8c\x21\xfe\x6d" +
	"\x55\xe8\x94\x81\x82\x81\x4c\xcc\x0d\xa7\x64\xde\xa4\x88\x63\x98\x43\x13\x2a\x4e\x29\x48\xbb\x63\x43\x03\xf9\xac" +
	"\x12\x99\x12\xa3\xeb\x97\xdb\xec\x91\x99\x98\x13\x3f\x1e\xc4\xec\x12\x36\x7d\x95\x3b\xbe\xbc\xe8\x58\x25\x88\xf9" +
	"\x12\x7f\xde\x63\x97\xf1\x1f\x00\x00\xff\xff\x37\xd4\xd9\xbf\xb3\x00\x00\x00")

func bindataClusterRoleAlamedagrafanaCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAlamedagrafanaCRyaml,
		"ClusterRole/alameda-grafanaCR.yaml",
	)
}



func bindataClusterRoleAlamedagrafanaCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAlamedagrafanaCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/alameda-grafanaCR.yaml",
		size: 179,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1555988180, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAlamedaoperatorCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\xbb\x92\xdb\x30\x0c\xec\xf5\x15\x9c\x4b\x6d\xdd\xa4\xcb\xb8\x4d" +
	"\x91\x36\x93\x22\x3d\x4c\xae\x64\x8c\x29\x82\x01\x41\x5f\xee\xbe\x3e\xa3\xc7\xc9\x4e\xe4\x24\x37\x2e\xae\xf2\x0e" +
	"\x68\x72\x17\xd8\x85\x28\xf3\x77\x68\x61\x49\x7b\xa7\x07\xf2\x2d\x55\x3b\x8a\xf2\x0b\x19\x4b\x6a\x4f\x9f\x4a\xcb" +
	"\xf2\x78\xfe\xd8\x9c\x38\x85\xbd\xfb\x1c\x6b\x31\xe8\x37\x89\x68\x06\x18\x05\x32\xda\x37\xce\x25\x1a\xb0\x77\x1d" +
	"\x02\x94\x4c\x94\x78\x47\x91\x06\x04\xda\x49\x9e\x4b\x8d\xd6\x88\xb2\x6f\x76\x8e\x32\x7f\x51\xa9\xb9\x8c\x17\x77" +
	"\xee\xe1\xa1\x71\x4e\x51\xa4\xaa\xc7\x52\x4b\x12\x50\x26\x94\x25\xcc\x40\x91\x23\xfb\x49\x95\x97\x64\x2a\x31\x42" +
	"\xc7\xa3\x33\xf4\xb0\x5c\xeb\x61\xd3\x6f\xe4\x32\x83\x27\x32\x7f\xdc\x52\x52\xce\x65\x4b\xba\x30\x14\xd8\xcc\x18" +
	"\x90\xa3\x3c\x0f\x48\xf6\x36\x9a\x11\x79\x05\x19\x26\x58\x73\x78\x85\x79\x3d\x0f\x88\x30\xdc\x56\xd4\x4a\x46\x2a" +
	"\x47\xee\xac\x65\xd9\xca\xbb\xc8\xf1\x92\x3a\xee\xef\xed\xbd\x9a\x14\x4f\x91\x53\xdf\x8e\x83\x24\x4e\xd0\xd2\x12" +
	"\x6f\x19\x17\x0b\xc7\x7f\xcf\xa3\x5e\x4b\x0a\x2f\xc3\x80\x14\x26\x3f\xde\x61\x3c\xf7\x8a\x7e\xec\x38\x51\xe4\x97" +
	"\x4d\x54\x16\xfa\x0f\xee\x2b\x74\xe0\x32\x2e\x80\xeb\x44\xdd\x8f\x0a\x7d\x76\x59\x65\x80\x1d\x51\x8b\xab\x29\x40" +
	"\xa7\x7c\x97\x4c\x1e\x6e\x35\x69\x37\x48\x62\x13\xe5\xd4\xbb\xdf\x14\xbb\x5b\xb1\x9e\x8b\xeb\x33\x17\x35\x6e\x9d" +
	"\xd9\x8d\x50\x30\x7e\x1a\xd2\x28\xae\x2c\xab\xb8\x6d\xd8\xd7\x62\x32\xbc\x16\x03\x3a\x4e\xfc\x0f\x57\xb6\x16\xbc" +
	"\x69\x23\x0b\xbc\xe2\xcf\x45\xb8\x7a\xeb\xe2\xf1\x64\xfb\xb6\x97\xb0\x4c\x59\xd1\x73\x31\xbd\xfe\xbc\x6c\xd9\xce" +
	"\x14\x79\xcc\x56\xea\x9f\x70\x38\x8a\x9c\xe6\xc8\x57\xbd\x95\xb7\xff\xc5\x6b\xcd\xe1\xdf\xd2\x75\xbb\x5f\x3d\xf3" +
	"\xb5\x4f\x77\x51\xfd\x0a\x00\x00\xff\xff\x62\xfe\x79\x2f\x5e\x05\x00\x00")

func bindataClusterRoleAlamedaoperatorCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAlamedaoperatorCRyaml,
		"ClusterRole/alameda-operatorCR.yaml",
	)
}



func bindataClusterRoleAlamedaoperatorCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAlamedaoperatorCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/alameda-operatorCR.yaml",
		size: 1374,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556265604, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAdmissioncontrollerSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x31\xaa\x42\x41\x0c\x05\xd0\x7e\x56\x91\x0d\xfc\xe2\xb7\xe9\x5c" +
	"\x83\x60\x7f\xc9\x5c\x21\xf8\x26\x79\x64\xe2\x5b\xbf\x08\xd6\x87\x83\xd3\x1f\xac\xed\x19\x2a\xd7\xff\x78\x79\x4c" +
	"\x95\x3b\xeb\x72\xe3\xcd\x2c\xdf\xd1\x63\xb1\x31\xd1\xd0\x21\x12\x58\x54\xc1\x5c\xbe\xbf\xe9\xcf\x32\xba\xf2\x38" +
	"\x58\x3f\xdc\x27\x8c\x2a\x4f\x4e\x16\x3a\x0b\xfe\x09\x00\x00\xff\xff\x7e\x31\x7e\x77\x63\x00\x00\x00")

func bindataServiceAccountAdmissioncontrollerSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAdmissioncontrollerSAyaml,
		"ServiceAccount/admission-controllerSA.yaml",
	)
}



func bindataServiceAccountAdmissioncontrollerSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAdmissioncontrollerSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/admission-controllerSA.yaml",
		size: 99,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAlamedaaiSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\x31\x0e\x02\x41\x08\x05\xd0\x7e\x4e\xc1\x05\x2c\x6c\xe9\x3c\x83" +
	"\x89\xfd\x0f\x7c\x13\xa2\xc3\x6c\x58\x9c\xf3\xdb\x6c\xfb\x70\xc4\x8b\x75\xc6\x4a\x95\x7d\x1f\x9f\x48\x57\x79\xb2" +
	"\x76\x18\x1f\x66\xeb\x97\x3d\x26\x1b\x8e\x86\x0e\x91\xc4\xa4\x0a\xbe\x98\x74\xdc\x10\x17\x9d\x07\x8c\x2a\x6f\x3a" +
	"\x0b\xbd\x0a\xf1\x0f\x00\x00\xff\xff\xaa\xc4\x7e\xde\x59\x00\x00\x00")

func bindataServiceAccountAlamedaaiSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAlamedaaiSAyaml,
		"ServiceAccount/alameda-aiSA.yaml",
	)
}



func bindataServiceAccountAlamedaaiSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAlamedaaiSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/alameda-aiSA.yaml",
		size: 89,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1554197916, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAlamedadatahubSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\xb1\x0d\x02\x31\x0c\x05\xd0\x3e\x53\x78\x01\x0a\x5a\x77\xcc\x80" +
	"\x44\xff\x89\x3f\xc2\x82\x38\x27\x9f\x2f\xf3\x23\xa4\x6b\x1f\x36\x7f\x30\x77\x9f\xa1\xb2\xae\xed\xe3\x61\x2a\x77" +
	"\xe6\xf2\xce\x5b\xef\xf3\x88\x6a\x83\x05\x43\x41\x9b\x48\x60\x50\x05\x5f\x0c\x1a\x2e\x7f\x7d\x1f\xcf\xd3\xf7\x0d" +
	"\x9d\x2a\x2f\x1a\x13\x35\x13\xfe\x0b\x00\x00\xff\xff\x06\xa1\x23\x4a\x5e\x00\x00\x00")

func bindataServiceAccountAlamedadatahubSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAlamedadatahubSAyaml,
		"ServiceAccount/alameda-datahubSA.yaml",
	)
}



func bindataServiceAccountAlamedadatahubSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAlamedadatahubSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/alameda-datahubSA.yaml",
		size: 94,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAlamedaevictionerSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x31\x0e\x02\x41\x08\x05\xd0\x7e\x4e\xc1\x05\x2c\x6c\xe9\x3c\x83" +
	"\x89\xfd\x0f\xf3\x4d\x88\x0e\x6c\x58\x9c\xf3\xdb\x6c\xfd\x70\xf8\x8b\x75\x7a\x86\xca\xbe\x8f\x8f\xc7\x54\x79\xb2" +
	"\xb6\x1b\x1f\x66\xf9\x8b\x1e\x8b\x8d\x89\x86\x0e\x91\xc0\xa2\x0a\xbe\x58\x9c\xb8\x71\xbb\xb5\x67\xb0\x2e\x3a\x0f" +
	"\x18\x55\xde\x9c\x2c\x74\x16\xfc\x1f\x00\x00\xff\xff\x58\x7c\x98\x9a\x61\x00\x00\x00")

func bindataServiceAccountAlamedaevictionerSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAlamedaevictionerSAyaml,
		"ServiceAccount/alameda-evictionerSA.yaml",
	)
}



func bindataServiceAccountAlamedaevictionerSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAlamedaevictionerSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/alameda-evictionerSA.yaml",
		size: 97,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAlamedagrafanaSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\xb1\x0d\xc2\x40\x0c\x05\xd0\xfe\xa6\xf0\x02\x14\xb4\xee\x98\x01" +
	"\x89\xfe\xcb\xfe\x41\x16\x9c\x2f\x72\x4c\xe6\xa7\x49\xfb\xb0\xc7\x8b\x75\xc4\x4a\x95\xf3\x3e\x3e\x91\xae\xf2\x64" +
	"\x9d\x61\x7c\x98\xad\x5f\xf6\x98\x6c\x38\x1a\x3a\x44\x12\x93\x2a\xf8\x62\xd2\x71\x7b\x17\x36\x24\x2e\x3f\x76\x18" +
	"\x55\x36\x3a\x0b\xbd\x0a\xf1\x0f\x00\x00\xff\xff\x5c\xef\x2c\xe0\x5e\x00\x00\x00")

func bindataServiceAccountAlamedagrafanaSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAlamedagrafanaSAyaml,
		"ServiceAccount/alameda-grafanaSA.yaml",
	)
}



func bindataServiceAccountAlamedagrafanaSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAlamedagrafanaSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/alameda-grafanaSA.yaml",
		size: 94,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1555988180, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAlamedaoperatorSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x31\x0e\x02\x41\x08\x05\xd0\x7e\x4e\xc1\x05\x2c\x6c\xe9\x3c\x83" +
	"\x89\xfd\xcf\xf0\x4d\x88\x0e\x4c\x58\xdc\xf3\x5b\x68\xfb\x1e\xb6\x3f\x58\x87\x67\xa8\x9c\xd7\xf1\xf2\x30\x95\x3b" +
	"\xeb\xf4\xc9\xdb\x9c\xf9\x89\x1e\x8b\x0d\x43\x43\x87\x48\x60\x51\x05\x6f\x2c\x1a\x2e\xb9\x59\xe8\xac\x7f\x1c\x1b" +
	"\x93\x2a\x4f\xda\x8f\xe1\xdf\x00\x00\x00\xff\xff\x01\x08\xdb\x27\x5f\x00\x00\x00")

func bindataServiceAccountAlamedaoperatorSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAlamedaoperatorSAyaml,
		"ServiceAccount/alameda-operatorSA.yaml",
	)
}



func bindataServiceAccountAlamedaoperatorSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAlamedaoperatorSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/alameda-operatorSA.yaml",
		size: 95,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleBindingAdmissioncontrollerCRByaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\xb1\x4e\xc4\x30\x0c\xc6\xf1\x3d\x4f\xe1\x17\x68\x11\x1b\xca\x06" +
	"\x0c\xec\x45\x62\x77\x13\x17\x4c\x53\x3b\x72\x9c\x0e\x3c\x3d\xaa\x44\x07\x74\xa7\xd3\xcd\x9f\xbe\xff\x0f\x2b\x7f" +
	"\x90\x35\x56\x89\x60\x33\xa6\x11\xbb\x7f\xa9\xf1\x0f\x3a\xab\x8c\xeb\x53\x1b\x59\x1f\xf6\xc7\xb0\xb2\xe4\x08\xaf" +
	"\xa5\x37\x27\x9b\xb4\xd0\x0b\x4b\x66\xf9\x0c\x1b\x39\x66\x74\x8c\x01\x40\x70\xa3\x08\x0b\x65\x32\x74\x35\xe4\x01" +
	"\xf3\xc6\xed\xc8\x0f\x49\xc5\x4d\x4b\x21\x0b\xa6\x85\x26\x5a\x8e\x07\x56\x7e\x33\xed\xf5\x86\x1e\x00\x2e\xf0\xfb" +
	"\xad\xd6\xe7\x6f\x4a\xde\x0e\x6c\xf8\x0b\xbd\x93\xed\x9c\xe8\x39\x25\xed\xe2\x01\xe0\xac\x5d\x2d\x9c\x73\xab\x98" +
	"\xfe\x8b\xbf\x01\x00\x00\xff\xff\x96\x62\xb4\x2f\x3d\x01\x00\x00")

func bindataClusterRoleBindingAdmissioncontrollerCRByamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleBindingAdmissioncontrollerCRByaml,
		"ClusterRoleBinding/admission-controllerCRB.yaml",
	)
}



func bindataClusterRoleBindingAdmissioncontrollerCRByaml() (*asset, error) {
	bytes, err := bindataClusterRoleBindingAdmissioncontrollerCRByamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRoleBinding/admission-controllerCRB.yaml",
		size: 317,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleBindingAlamedadatahubCRByaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\x31\xae\xc2\x30\x0c\xc6\xf1\x3d\xa7\xc8\x05\xda\xa7\xb7\xa1\x6c" +
	"\xc0\xc0\x5e\x24\x76\x37\x71\xa9\x69\x1a\x47\x8e\xd3\x81\xd3\xa3\x0a\x84\x04\x48\x88\xd5\xfa\xfc\xff\x41\xa6\x13" +
	"\x4a\x21\x4e\xce\x4a\x0f\xbe\x85\xaa\x23\x0b\x5d\x41\x89\x53\x3b\x6d\x4a\x4b\xfc\xb7\xfc\x9b\x89\x52\x70\x76\x1f" +
	"\x6b\x51\x94\x8e\x23\xee\x28\x05\x4a\x67\x33\xa3\x42\x00\x05\x67\xac\x4d\x30\xa3\xb3\x03\x06\x14\x50\x16\xa0\x06" +
	"\x22\xcc\x18\xa0\x59\x17\x63\xed\x8d\x70\xc4\x0e\x87\x75\x0c\x99\x0e\xc2\x35\x7f\x81\x8d\xb5\x1f\xee\x4f\x4c\xa9" +
	"\xfd\x05\xbd\x16\x67\x9a\x47\xe1\x88\xb2\x90\xc7\xad\xf7\x5c\x93\x3e\x23\xef\x8f\xf7\x7b\xc9\xe0\x5f\x85\x5b\x00" +
	"\x00\x00\xff\xff\xc4\x91\x85\x3b\x28\x01\x00\x00")

func bindataClusterRoleBindingAlamedadatahubCRByamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleBindingAlamedadatahubCRByaml,
		"ClusterRoleBinding/alameda-datahubCRB.yaml",
	)
}



func bindataClusterRoleBindingAlamedadatahubCRByaml() (*asset, error) {
	bytes, err := bindataClusterRoleBindingAlamedadatahubCRByamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRoleBinding/alameda-datahubCRB.yaml",
		size: 296,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleBindingAlamedaevictionerCRByaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\x31\x0e\xc2\x30\x0c\x85\xe1\x3d\xa7\xc8\x05\x5a\xc4\x86\xb2\x01" +
	"\x03\x7b\x91\xd8\xdd\xc4\x05\xd3\x34\x8e\x1c\xa7\x03\xa7\x47\x15\x08\x09\x81\x10\xb3\xfd\xfe\x0f\x32\x9d\x50\x0a" +
	"\x71\x72\x56\x7a\xf0\x2d\x54\xbd\xb0\xd0\x0d\x94\x38\xb5\xe3\xa6\xb4\xc4\xab\x79\x6d\x46\x4a\xc1\xd9\x7d\xac\x45" +
	"\x51\x3a\x8e\xb8\xa3\x14\x28\x9d\xcd\x84\x0a\x01\x14\x9c\xb1\x36\xc1\x84\xce\x0e\x18\x50\x40\x59\x80\x1a\x88\x30" +
	"\x61\x80\x06\x67\xf2\x4b\x11\xc5\x08\x47\xec\x70\x58\xfe\x21\xd3\x41\xb8\xe6\x1f\xb6\xb1\xf6\x83\xfe\x57\x2a\xb5" +
	"\xbf\xa2\xd7\xe2\x4c\xf3\x8c\x1c\x51\x66\xf2\xb8\xf5\x9e\x6b\xd2\x57\xe7\xcb\xf6\x71\x2a\x19\xfc\xbb\x73\x0f\x00" +
	"\x00\xff\xff\x2e\xae\x54\xf5\x31\x01\x00\x00")

func bindataClusterRoleBindingAlamedaevictionerCRByamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleBindingAlamedaevictionerCRByaml,
		"ClusterRoleBinding/alameda-evictionerCRB.yaml",
	)
}



func bindataClusterRoleBindingAlamedaevictionerCRByaml() (*asset, error) {
	bytes, err := bindataClusterRoleBindingAlamedaevictionerCRByamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRoleBinding/alameda-evictionerCRB.yaml",
		size: 305,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleBindingAlamedagrafanaCRByaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\x31\x4e\xc6\x30\x0c\xc5\xf1\x3d\xa7\xc8\x05\x5a\xc4\x86\xb2\x01" +
	"\x03\xfb\x87\xc4\xfe\x9a\xb8\xc5\x34\xb5\x23\xc7\xe9\xc0\xe9\x11\x02\x21\x01\x12\x62\xb5\xfc\xfe\x3f\x34\x7e\x22" +
	"\xeb\xac\x92\xa2\x2d\xc8\x33\x86\x3f\xab\xf1\x2b\x9c\x55\xe6\xfd\xa6\xcf\xac\x57\xe7\x75\xd8\x59\x4a\x8a\xf7\x75" +
	"\x74\x27\xbb\x68\xa5\x3b\x96\xc2\xb2\x85\x83\x1c\x05\x8e\x14\x62\x14\x1c\x94\xe2\x4a\x85\x0c\xae\x06\x9e\x50\x71" +
	"\x50\xc1\xb4\x19\x56\x08\x82\x69\xa5\x0b\xad\xef\xcf\x68\xfc\x60\x3a\xda\x1f\x70\x88\xf1\x97\xfb\x2f\xa6\x8f\xe5" +
	"\x85\xb2\xf7\x14\xa6\xcf\xc2\x23\xd9\xc9\x99\x6e\x73\xd6\x21\xfe\x15\xf9\x39\xfc\xb8\xf7\x86\xfc\x5d\x78\x0b\x00" +
	"\x00\xff\xff\x75\x1b\xd8\xd0\x28\x01\x00\x00")

func bindataClusterRoleBindingAlamedagrafanaCRByamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleBindingAlamedagrafanaCRByaml,
		"ClusterRoleBinding/alameda-grafanaCRB.yaml",
	)
}



func bindataClusterRoleBindingAlamedagrafanaCRByaml() (*asset, error) {
	bytes, err := bindataClusterRoleBindingAlamedagrafanaCRByamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRoleBinding/alameda-grafanaCRB.yaml",
		size: 296,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1555988180, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleBindingAlamedaoperatorCRByaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\xbd\x0a\xc2\x30\x10\xc0\xf1\x3d\x4f\x91\x17\x68\xc5\x4d\xb2\xa9" +
	"\x83\x7b\x05\xf7\x6b\x72\xd5\xb3\x69\x2e\x5c\x2e\x1d\x7c\x7a\x91\x8a\x20\x05\x71\xbd\x8f\xff\x0f\x32\x5d\x50\x0a" +
	"\x71\x72\x56\x7a\xf0\x2d\x54\xbd\xb1\xd0\x03\x94\x38\xb5\xe3\xae\xb4\xc4\x9b\x79\x6b\x46\x4a\xc1\xd9\x63\xac\x45" +
	"\x51\x3a\x8e\x78\xa0\x14\x28\x5d\xcd\x84\x0a\x01\x14\x9c\xb1\x36\xc1\x84\xce\x0e\x18\x50\x40\x59\x80\x1a\x88\x30" +
	"\x61\x80\x86\xf3\x32\x32\xc2\x11\x3b\x1c\x5e\xd7\x90\xe9\x24\x5c\xf3\x0f\xd9\x58\xbb\x82\xff\x73\x4a\xed\xef\xe8" +
	"\xb5\x38\xd3\xbc\x13\x67\x94\x99\x3c\xee\xbd\xe7\x9a\xf4\x53\x59\x7d\x2e\x8b\x92\xc1\x7f\x1b\xcf\x00\x00\x00\xff" +
	"\xff\xa8\xcd\x05\x0d\x2b\x01\x00\x00")

func bindataClusterRoleBindingAlamedaoperatorCRByamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleBindingAlamedaoperatorCRByaml,
		"ClusterRoleBinding/alameda-operatorCRB.yaml",
	)
}



func bindataClusterRoleBindingAlamedaoperatorCRByaml() (*asset, error) {
	bytes, err := bindataClusterRoleBindingAlamedaoperatorCRByamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRoleBinding/alameda-operatorCRB.yaml",
		size: 299,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataSecretAdmissioncontrollertlsyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x3d\x0a\x82\x41\x0c\x04\xd0\x3e\xa7\xc8\x05\xbe\xc2\x36\x97\xb0" +
	"\x10\xec\x87\xdd\x11\x82\xfb\x67\x36\x0a\xde\x5e\x44\xfb\xf7\x04\xcb\xaf\x8c\xed\x73\x98\xbe\x4e\x72\xf7\x51\x4d" +
	"\x2f\x2c\xc1\x94\xce\x44\x45\xc2\x44\x75\xa0\xd3\x14\xb5\xfb\xfe\xe2\xa3\xcc\x91\x31\x5b\x63\x1c\xd9\xf6\x1f\xec" +
	"\x85\x42\xd3\x1b\x2b\x03\x39\x03\x2e\xbf\x9f\xef\x45\xd3\xf3\xc2\xe3\xc9\x4f\x00\x00\x00\xff\xff\xc0\x89\x2c\x4b" +
	"\x73\x00\x00\x00")

func bindataSecretAdmissioncontrollertlsyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataSecretAdmissioncontrollertlsyaml,
		"Secret/admission-controller-tls.yaml",
	)
}



func bindataSecretAdmissioncontrollertlsyaml() (*asset, error) {
	bytes, err := bindataSecretAdmissioncontrollertlsyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Secret/admission-controller-tls.yaml",
		size: 115,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1554254667, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataSecretAlamedainfluxdbyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x31\x0e\xc2\x30\x0c\x05\xd0\x3d\xa7\xf0\x05\x3a\xb0\xfa\x12\x0c" +
	"\x48\xec\x9f\xfa\x57\xb2\x48\xd2\xe0\xb8\x08\x6e\xcf\x40\xe7\xa7\x87\xe1\x77\xc6\xf4\xbd\xab\xbc\x2f\xe5\xe9\xdd" +
	"\x54\x6e\x5c\x83\x59\x1a\x13\x86\x84\x16\x91\x8e\x46\x15\x54\x34\x1a\x16\xef\x5b\x3d\x3e\xf6\x58\xb2\xce\x13\xe7" +
	"\xc0\x4a\x95\x8d\xc6\x40\xee\x01\x2f\xff\x9b\xdf\x41\x95\xeb\xc0\xeb\xe0\x2f\x00\x00\xff\xff\x82\xf8\x7a\xe9\x6e" +
	"\x00\x00\x00")

func bindataSecretAlamedainfluxdbyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataSecretAlamedainfluxdbyaml,
		"Secret/alameda-influxdb.yaml",
	)
}



func bindataSecretAlamedainfluxdbyaml() (*asset, error) {
	bytes, err := bindataSecretAlamedainfluxdbyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Secret/alameda-influxdb.yaml",
		size: 110,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1554254667, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataConfigMapDashboardsconfigyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\x79\x73\xdc\x36\xb2\xf8\xff\xfa\x14\x78\xdc\xbc\x7d\x92\xdf\x48" +
	"\x1e\x8e\x34\x3a\xa6\xca\x5b\xa5\xc8\x39\x5c\x15\x3b\xfa\xf9\xc8\x56\x36\xf2\x9b\x82\x48\xcc\x0c\x2c\x5e\x4b\x90" +
	"\x3a\xe2\x78\x3f\xfb\xaf\x08\xde\x04\x40\x72\x6e\x4a\xea\xa9\xda\x8d\x85\x8b\x38\xba\x1b\x8d\x3e\xb1\x47\x7f\x23" +
	"\x3e\xa3\xae\x33\x42\xb7\xfa\xce\x0d\x75\xcc\x11\xba\x70\x9d\x09\x9d\xbe\xc5\xde\x8e\x4d\x02\x6c\xe2\x00\x8f\x76" +
	"\x10\x72\xb0\x4d\x46\xc8\xc4\x6c\x76\xed\x62\xdf\x64\xfb\x06\x6f\x96\xd4\x30\x0f\x1b\x64\x84\x26\xc4\x24\x3e\x0e" +
	"\x5c\x1f\xd3\x1d\xde\x11\xa1\x1d\x84\x0c\x2b\x64\x01\xf1\x67\x04\x5b\xc1\xec\xe0\x0b\x73\x9d\x68\x40\x84\xfe\xda" +
	"\xe7\xff\x41\xe8\x6b\xf2\x5f\x84\x34\xec\x38\x6e\x80\x03\xea\x3a\x4c\x1b\x15\x2a\x10\xd2\x2c\xca\x02\x6d\x84\xfe" +
	"\x28\x94\xa1\x52\x0b\xde\xea\x3a\xa4\x56\xf0\xc6\xd1\x46\x48\xef\x55\xeb\xa2\x29\x31\x37\xf4\x0d\xa2\x8d\x90\xb6" +
	"\xbf\x8f\x7e\xf2\xf1\x04\x3b\x18\xed\xef\x6b\x42\x63\xe2\xe0\x6b\x2b\x6a\x18\xf8\x21\x11\x6a\x67\xd4\x54\xd6\x51" +
	"\xc3\x75\x2e\x5c\xcb\xf5\xa3\xaf\xf8\xd3\x6b\xbc\xdb\xef\xa1\x81\xae\xf7\xd0\x60\x38\xec\x21\x7d\x4f\xfc\x58\xb4" +
	"\x87\x51\xeb\xf3\x7c\xf9\xe8\xef\xe8\xdc\x22\x7e\xc0\xc4\xd6\xc1\x83\xc7\x5b\x67\xa7\xa1\x95\x5a\x7c\x2b\xfc\xf5" +
	"\x39\xfb\xf7\xb7\x7c\x18\x8d\x98\x34\x90\xae\x4e\x9b\x3a\x24\x78\x63\x6a\x23\xe4\x84\x96\x55\x2c\xf7\xb1\x37\xfb" +
	"\xe8\xba\x56\x40\x3d\x6d\x84\xfa\x85\x2a\x6a\x96\x37\x5b\xb3\xa8\x73\x13\x9d\xde\x1f\x9f\x0b\x85\x1e\x76\x88\xc5" +
	"\x2a\xe7\x57\x3e\x3d\xcd\x70\x2d\x0b\x7b\x8c\x44\x03\x4e\xb0\xc5\x2a\x5b\xab\x4d\x7d\x6a\x5e\xba\x55\xc0\x88\xcf" +
	"\x43\x7a\xe0\x77\xda\x08\x0d\x8e\x84\xe2\xfb\xf2\x0a\x92\xd2\x87\xa8\xb4\xbc\x91\x95\xef\xf3\x95\x9e\x56\x0a\xf3" +
	"\x85\x7d\xae\xd4\x04\x34\xe0\x5b\xac\x5d\xc4\x08\x80\x7e\xe6\x18\x80\x3e\x04\x38\x08\xab\xc7\x9a\x1d\xaa\xef\xde" +
	"\x15\x8f\xb3\x34\x87\xea\x7e\x61\x63\x46\x3e\x52\x9b\xb8\x61\x20\x1c\x19\x4a\x76\xd4\xf5\xbf\xc7\xc6\xcd\xd4\x77" +
	"\x43\x47\xb5\xaf\xbc\xd5\x6f\xd8\x0a\xe5\x20\x1d\xd7\x57\xcf\x8e\xd7\x70\xe8\x1e\x1c\x0d\x7b\x68\x78\x14\xff\xaf" +
	"\x7f\x70\x26\x81\xef\xb8\xdd\xe1\x49\x0f\xe9\x83\xb3\x1e\x3a\xea\x47\x0d\x4f\x95\x2d\x87\xfd\x1e\xd2\x4f\x06\x3d" +
	"\x14\x8d\xdc\x3f\x38\x3b\xd9\x2b\x43\x78\x75\xa7\xcb\x88\x7d\xe9\xbb\x36\x09\x66\x44\xdc\x63\x25\xdc\xf3\xda\x89" +
	"\xeb\xdb\x38\xda\x48\xcd\x23\xbe\x41\x9c\x20\x74\x68\x50\x1d\x62\x8a\xc3\x29\x91\x41\xa0\x8d\xef\xd3\x2d\x14\x01" +
	"\xd1\xa6\x4e\x5a\x29\x02\x1e\x9b\xb9\x77\x2a\x5a\x12\xcc\x7c\xc2\x66\xae\x65\xfe\x82\xaf\x63\x30\xab\x6f\xf6\x16" +
	"\xfb\x37\xc4\x4f\xdb\xd5\x42\x73\x03\x36\x0d\xa5\xd8\x34\x0f\x32\xe9\xcd\xc8\x34\x38\xae\x96\x3a\x01\xf1\x6f\xb1" +
	"\x25\x07\x67\x19\x65\x41\xf1\xe6\x7b\x1e\x75\xa6\x1f\x63\x1c\xd2\xd5\xb5\x32\x28\xae\x2e\xbf\x40\x8f\x6f\xa3\x43" +
	"\x43\x81\x8b\x02\x72\x5f\x05\x05\xde\xf0\x36\x3d\xf2\x4a\xd5\xb7\x6a\xdb\x9a\x8f\xf8\xd8\x99\xb6\xfa\xc8\xa0\xfa" +
	"\x91\x5a\xa4\xb0\xf1\xfd\x6b\x1c\xe0\x4b\x97\x3a\x41\xb4\x6c\xbd\x5f\x39\x26\x2d\xda\x61\x5e\xfd\xd6\xe5\xb7\x99" +
	"\x66\xb8\x8e\x43\x8c\x80\x98\x55\xa8\x8f\x5a\x7e\x8c\x66\x27\x3d\x16\xcf\x65\xc1\x84\x46\x80\xa0\x55\x3b\x26\x55" +
	"\x3f\xba\x4e\xf0\x81\xfe\xc9\x3f\x32\xec\xff\xb7\xd0\xca\x27\xaa\xfe\xbc\xa6\xa1\x3b\xdf\xc0\xb7\xd8\x6b\x79\xb8" +
	"\x13\xdf\xb5\xa3\x91\xa2\x95\xc8\xb6\x3b\x88\x17\xaa\xbd\x7b\x79\x2e\xad\x76\xb3\xce\x73\x9d\x07\xf3\xb0\x7f\x63" +
	"\x51\x47\x4a\x3d\x26\xd4\xb2\xca\x3c\xc3\xa1\xde\x43\xba\x7e\xda\x43\xfa\xe9\x59\x44\x04\xf5\x53\x09\xb5\x9c\x44" +
	"\xb3\x90\x12\xf5\x18\x5b\x48\x71\xcc\x78\xc8\x41\x44\x5b\xcf\x0e\x25\x83\x25\x74\x88\x0f\x56\x8b\xba\x9c\x86\x5e" +
	"\xb8\x56\x68\x3b\xb2\x33\x0b\xb0\x3f\x25\x41\xcb\xc3\x20\xf7\x1e\x9f\xdf\x2e\x0b\xed\xdd\xd0\xfb\xfa\xc5\xbd\x7e" +
	"\xf5\x9f\x2b\xed\xe0\x05\xf6\x28\x23\xfe\x2d\xf1\x0f\x5e\x5c\x69\xdf\xd0\xab\x57\x48\xdf\x43\x2f\x91\xe1\x86\x4e" +
	"\x50\xd3\x70\x4f\x5c\x58\x89\xb4\x07\xd4\x26\x63\x46\x7c\x4a\x44\xc6\xaa\x40\x7f\x7e\xc4\x46\xc0\x37\x6e\x20\x69" +
	"\xe4\x93\x09\xe7\x91\x34\x29\x7c\xb0\x80\x44\x2c\xd2\x71\xbf\x3f\x17\x78\x64\x24\x3c\xda\x38\xad\x7f\xc0\x6f\xbe" +
	"\x53\x61\x6f\x53\x9e\xe2\xfc\xf2\x0d\xfa\xc0\x97\xcd\xd0\xa7\x4b\xa1\x99\x8f\x9d\x08\xde\x88\x13\xc8\xef\xba\x94" +
	"\xdb\x60\xd4\x99\x5a\x84\x05\x58\xb8\xe8\x38\xd1\x29\x22\xde\xa9\x88\x78\xbc\x4d\x7b\xc4\x73\xa3\x7d\xd1\x5e\x2d" +
	"\x80\x73\x29\x05\x5c\x00\xed\x78\xd7\x77\x09\xa9\xc5\xb7\xd3\xb6\xcc\x15\xb6\x28\x66\x17\x29\xe7\xf3\xb5\x8a\x03" +
	"\xd7\x98\x97\xcb\xd8\xa9\x88\x2d\xff\x85\x38\xd3\x80\x33\xa5\x55\xa2\x1b\xd5\x12\x75\xd7\x55\x30\x32\xc4\xf7\x39" +
	"\xec\xca\xbe\x10\x11\x1a\xc9\x15\x19\x31\x03\x32\xba\x94\x41\xa5\x5e\xa6\x4e\x03\xfd\xb8\x87\x06\xfd\xe8\x61\x73" +
	"\x12\x01\xea\xe0\x44\x42\x50\xb2\xce\x83\x4a\xe7\xc3\xa3\x88\xb6\x0d\x92\xff\xeb\x1f\x0c\x06\x15\x06\x6f\x25\xbc" +
	"\x4a\x75\xeb\x13\x66\x45\x64\x61\x5a\x32\x2b\x87\x83\x6a\x29\x7b\x47\xee\x14\xfb\x6c\x91\x29\x71\xa4\x5b\x8a\x2d" +
	"\x3a\x75\xce\xd9\xc7\xe4\xfc\xe4\xb4\x3b\x02\x54\x55\x9d\x11\xfa\x09\x62\xcb\xeb\xa3\xb7\xe9\x0f\xb6\x17\x3c\xd4" +
	"\xb6\xf8\x17\xf1\x5d\x65\x03\x1b\xdf\xab\xeb\xa8\xa3\xac\xf3\xe9\x74\x16\x7c\x88\xdf\xc6\xf2\x16\xb5\xcc\xae\x1b" +
	"\x60\xf5\x75\xc6\x11\x99\xb5\xba\xa0\xa2\x9b\x4f\xce\x2b\xf3\xaa\x3b\x6a\x06\x92\x07\xa3\x9a\xbd\x14\x18\x25\x09" +
	"\xeb\x90\x3e\x1a\xf0\x54\xb1\x78\xcd\x8b\x46\xf0\xb1\x49\x43\x26\xc2\x6c\x5c\xab\xa2\x0b\x3e\x71\x4c\xe2\x13\x8e" +
	"\x42\x13\xcb\x15\x88\x75\x7c\xa1\xfd\x7a\x4b\x7c\x9f\x9a\x44\xba\x06\x2e\xa2\x51\x93\x25\x16\x60\xe3\x46\xf1\xf5" +
	"\xe8\x46\xf3\x88\xf9\x4b\xcc\xbb\xc8\x5a\x2c\x74\xe5\xb3\xd0\x46\xd7\x0f\xbb\xd4\x61\x01\x76\x0c\xb2\x87\x76\x7d" +
	"\x1c\x90\xdd\xec\x3e\x1f\xfb\xe4\xdf\x21\x61\xc1\x98\xdf\xf9\x5f\x0d\xd7\x24\xd1\x8d\x3f\x3c\x38\xb8\xd2\xbe\xfd" +
	"\x31\xb4\x3f\xef\x45\x0c\xc1\x7c\xa3\xc4\xdd\xd6\xcf\x22\xc4\xe8\xff\x63\x36\xe6\xd7\xaf\xe9\x04\xbf\x7d\x93\x0d" +
	"\xda\x92\xa5\x58\x9c\xa3\x90\x48\x27\x6c\xf2\x63\xcc\x09\x4b\x58\xfa\xa8\xf6\x3d\x99\x26\x72\x38\x69\xe7\x0f\x33" +
	"\x3a\x51\x3c\x08\x24\x5c\x0a\x7a\x1f\x1f\x03\xfa\x21\xba\x9c\xd0\x7b\x1c\x08\xbb\xab\x05\x99\x7c\x49\x7c\x5d\xb3" +
	"\xf7\x84\xb9\x56\x18\x50\x57\x4d\x7d\xd8\x0c\xfb\x5c\x78\x24\xa5\x2e\xcc\xf5\x03\xe9\x5b\x95\x13\x96\x71\xca\x11" +
	"\x51\xc7\xa4\xb7\xd4\x0c\xb1\x55\x7f\x25\x95\x59\x2c\x29\x52\x24\x23\x72\xd9\x59\x75\xad\xf7\xf8\x9e\x4a\xef\xb3" +
	"\xeb\xd0\xb8\x89\x51\x49\xdc\xd8\x68\x23\x12\x0a\x14\x9d\x80\x52\x8e\x28\xed\x59\x47\x79\x33\xda\xfa\xc7\xe7\xda" +
	"\x45\x3f\xe0\xfb\xb6\x4f\xe8\x36\xd2\x14\xde\xd0\x72\xa7\xdf\x63\x26\x95\x9b\x64\x37\x91\xa6\x4b\xd1\x22\x5f\x51" +
	"\x15\x31\x5a\x3c\xbf\xf3\x09\xb2\x59\x04\x1a\x73\x4f\xad\xe6\xf3\xb5\x78\xf9\xa0\x3a\x7a\xce\x19\xa8\x59\x82\xa8" +
	"\xf6\x17\x72\x4b\x52\xe1\xc8\x8e\xea\x93\x8f\x40\x66\x28\x91\xf0\x2d\x2b\x34\x14\xc5\x90\xb5\xa7\xd0\x96\xd5\x36" +
	"\x09\x33\x7c\xea\x25\x84\x47\xbb\xf0\x31\x9b\x51\x67\x8a\x2e\x5d\x93\x21\xea\x20\xc3\x75\x02\xdf\xb5\x90\x67\x61" +
	"\x87\xa0\xdd\x9b\xf0\x9a\xec\xb3\x07\x16\x10\xbb\x3a\xd1\xd6\xe2\x47\xc7\x75\xaa\xb8\xdd\x4e\xee\x58\x95\xf0\xb4" +
	"\x94\x3c\xca\xe1\x4d\x14\x3d\x36\xb4\x5b\xb7\xec\x51\x2c\x8d\x48\x83\xbe\x30\x3f\x5f\xd5\x0c\x80\xf0\x11\x84\x8f" +
	"\x92\x1a\x10\x3e\x3e\x79\xe1\x63\x2c\x54\xa4\x8e\xe1\x13\xcc\x08\xa7\xe1\x63\xcf\x35\xc7\x11\x6d\xc7\xd4\x21\xfe" +
	"\x98\x71\x9d\xdd\xd8\x27\x2c\xc0\x7e\xc0\xc6\xfc\xa9\xfa\x35\x53\x7d\x47\xef\x92\x02\xe5\x8f\xde\x27\xfa\xec\xf3" +
	"\x1e\xfa\x07\x1a\x3e\x0d\x79\xa4\xde\x43\x87\x4a\x59\x64\x76\x27\x5e\x24\x77\xe1\x25\xbf\x0b\xa3\x1b\xb2\x5e\x30" +
	"\x59\xc7\x35\x77\x4d\x32\xd9\x5f\xa7\x5c\x32\x15\xe9\x00\x13\xb7\x25\x26\x2e\xd1\xd0\x47\x34\xc0\x0a\x4d\x82\x82" +
	"\x19\x29\x73\x76\xc0\xcc\x65\xbf\x75\x32\x73\x67\x8b\x32\x73\x43\x41\x38\x0b\xcc\x1c\x30\x73\x42\x0d\x30\x73\xc0" +
	"\xcc\xc9\x99\xb9\x67\xc9\xb0\x01\x8b\x56\xb7\xa3\x9d\x63\xd1\x94\x0d\x9e\x93\x71\xde\xb3\x67\xa8\x44\x81\xd7\xbc" +
	"\x96\x79\xc7\xcd\xfc\xd4\x11\x58\xe6\x01\x3f\x05\xfc\x14\xf0\x53\x5a\xc9\xe2\x2e\x16\x73\x59\x24\xb8\xd2\xbe\x3d" +
	"\x0d\x46\x49\xc9\x24\x7d\x8c\xb8\x42\xf4\xce\x35\x25\x8a\xea\x47\xcb\x22\xad\xd9\xbe\xae\x0b\x4c\xd2\x53\x76\x60" +
	"\x30\x89\x41\x6d\x6c\xc9\xad\x03\xc0\xbd\xa1\xb4\x92\xd5\x31\x51\x72\x0d\x63\x3d\x13\x35\xa3\x26\x87\xec\xd4\x26" +
	"\x4b\x01\xb9\xb1\x22\x12\x64\x57\xc0\x6b\x01\xaf\x05\xbc\x96\xc6\x42\x3b\x16\x58\x39\xae\x49\x52\x39\x95\xe1\x3a" +
	"\x26\x0d\xa8\xeb\x7c\xcd\xfe\xf5\xea\x4a\x7b\x4f\xb0\xf9\x70\xa5\xf5\xe2\x46\xaf\xae\xb4\x88\x22\x46\x5c\x59\x6c" +
	"\x13\x39\xe7\x30\x9b\x60\xe6\xaa\x36\x91\x4b\xd8\x41\x2e\xeb\x5a\xd1\x3f\x38\x53\xf2\x7d\x11\xc7\x87\xf8\xb6\x80" +
	"\x57\x85\x72\x4b\x4b\x5c\x9f\x4d\x1d\xe0\xf8\xc0\x65\x35\xa9\x7b\x1c\x3c\xdd\xe9\xa2\x82\xb1\x41\xd5\x01\x1c\x98" +
	"\x35\x60\xd6\xc4\x1a\x60\xd6\x9e\x3c\xb3\x56\x74\x59\x2d\xca\xc5\xe4\xbe\xaa\x25\xc9\xd9\xd3\x10\x9d\x35\x3a\xa9" +
	"\x72\xe1\x19\xb8\xa7\xd6\xed\xe8\x23\x67\xa4\x1e\x93\x09\x18\x88\xce\x36\xcf\x66\xe9\x02\x69\x5a\xb5\xec\xac\xca" +
	"\x21\x00\x3b\x06\xec\x98\x58\x03\xec\xd8\x93\x67\xc7\xe6\x10\x7a\xbd\x25\xb6\xeb\x3f\x5c\xfa\x84\xb1\xd0\x27\xcb" +
	"\x0b\xd1\xaa\xe3\x3d\x2b\x69\x9a\xde\xeb\x1f\x0c\xeb\xa5\x69\xf1\xfe\xa0\x74\x83\x80\x1d\x54\x6e\x6e\x99\x1d\xc4" +
	"\xf7\xc0\x0e\xae\x89\x1d\x04\x86\xaf\xb8\x92\x15\x32\x7c\xc7\x6b\x66\xf8\x86\x55\xde\x0c\x18\x3e\x60\xf8\xc4\x1a" +
	"\x60\xf8\x80\xe1\xcb\x19\xb4\xd7\x94\xdd\xac\x8e\xdd\x2b\x8f\x06\xcc\x5e\x99\xd9\x8b\x76\x07\x58\xbd\xe6\xad\x05" +
	"\x56\x4f\x68\xb9\x11\xe7\xcf\xcb\x2c\x4e\x17\x72\x27\xc8\xe1\x22\x6a\xf7\x96\xf8\x99\x13\x68\x30\xc3\x01\x9a\xe1" +
	"\x5b\x82\x42\x87\x19\x33\x62\x86\x16\x31\x91\x7b\xfd\x85\x18\x42\x34\x6e\xe0\x23\x4b\x2b\x59\x1d\x1f\x59\x95\xeb" +
	"\xad\x9c\x8f\xac\x4a\x26\x81\x8f\x04\x3e\x52\x52\x03\x7c\xe4\x73\xe3\x23\x3d\x62\x8c\x33\xc2\x1f\x7d\x6e\x0f\xd5" +
	"\xea\x72\x9f\x15\xf7\x87\x9a\xd8\x3f\x86\x3e\x15\xf7\xae\x0b\xfc\xdf\xca\x18\xaf\xad\xa7\xa7\xd0\x5b\xe4\xa7\x18" +
	"\x9e\x55\xe9\x58\xfb\x04\x15\xef\x49\xcc\x4f\xa1\x4f\x0c\x4f\xc5\xb3\x9b\x3f\x43\x45\xa7\x83\x28\x57\xf8\xc2\x4f" +
	"\x01\xb5\xe8\x9f\x3c\xf9\x0a\xc2\x53\x4c\x1d\x16\x20\xee\x19\x9e\x31\x86\x17\x97\x9f\x90\x9f\x6c\x51\x75\xb0\x9a" +
	"\xb8\xca\x35\x30\x21\x0a\xcb\xee\xe4\x4a\xd3\x1a\x98\x68\x13\x1c\xa3\x1a\xe9\xac\x26\x3a\xf1\x12\x81\x87\x17\x8d" +
	"\x1a\x0c\x31\x81\x21\x26\x70\x72\x17\x47\x57\xf0\x88\xdf\xc3\x86\x17\x8e\xc3\x08\x25\x19\x47\xc9\x11\xbe\x9d\xea" +
	"\x36\x7a\x81\xf2\x16\x4e\x68\x47\xad\x46\x2c\xb4\xd1\x4b\xc4\x0c\x6c\x61\x9f\xdb\x64\x49\x9b\x2c\x69\x73\x15\x3d" +
	"\xa5\xbd\xef\x1f\x24\xab\x91\xaf\x08\xc5\xa4\xd7\xc7\xb6\x6c\x07\xb2\x16\xdf\x8d\xc7\xd9\xbb\x43\xda\xe6\xb3\x38" +
	"\x17\x54\x24\xc6\x3c\x0e\xac\xa4\x89\xf0\x0a\x58\x6a\x9a\x32\x96\xb3\xdd\xfc\x38\x5d\x94\xcd\x4f\x28\x93\x8c\xb4" +
	"\x68\xac\xe5\xe8\xec\xe5\x71\x96\x5d\xdf\x24\xfe\xf7\x0f\xd1\x23\x91\x33\x4b\x1f\x2e\x64\xad\x3c\xd7\xa2\x46\x74" +
	"\xd6\x9a\x49\x26\x38\xb4\xa4\x4f\xa3\x7a\x8e\xcb\x27\x2c\xb4\x82\x1f\xdb\x82\x17\x23\x16\x31\xc4\xf4\x66\xf1\x4f" +
	"\x7e\x2c\xf2\xc3\x6c\x73\x9c\xd9\xbb\x4e\x51\xaf\x38\xd3\xd2\xa9\x12\xcb\x94\x77\x97\x02\x5e\xab\xd9\x36\x7f\xd6" +
	"\x26\xd8\x51\x7c\x55\x52\xfa\xb9\x15\x88\x05\x78\x2a\x09\x7c\xfc\x08\x62\x6b\x47\xdc\xc8\xa7\x9c\x40\x0a\xdc\x9a" +
	"\x3a\x98\xf6\x66\xe3\x64\x43\x14\xec\x56\x51\xb0\xf1\x35\x91\x8b\x9e\xe2\xea\x85\x83\x64\xc7\x8c\x97\x3c\x36\xce" +
	"\xfa\x03\x68\x2f\xbf\x2a\x45\xd7\x78\x59\x8a\x4a\xa5\x38\xa1\xd3\xa1\xb9\x9f\xd6\x63\xc9\x8e\x6d\x7e\xb6\xf8\x5e" +
	"\x52\xd8\x9e\xb6\x7a\x30\x55\xa3\xdf\xc0\x83\xa9\x5a\x05\x0f\xa6\x8e\x3d\x98\x62\x84\x2b\xbd\x99\xfc\xe8\x3f\xf0" +
	"\xec\x81\x67\x0f\x3c\x7b\xe2\x36\xf0\xec\xc9\xc6\x7e\xac\xcf\x9e\xc4\x96\x18\x5e\x3e\xf0\xf2\x81\x97\x8f\x6a\x5d" +
	"\xf0\xf2\x41\xdb\x7b\xf9\x98\x94\xdd\x74\x50\x4f\x74\xd2\xe2\xd9\x53\xe5\xa7\xe1\xd9\x53\xad\x82\x67\x4f\x27\x9e" +
	"\x3d\x2c\xb4\x77\x6d\x7c\xcf\x55\x3d\xe3\x09\xb5\x48\x9c\x78\x65\xcc\xe8\x9f\x64\x7c\xfd\x10\x10\xf6\x75\xc2\xa2" +
	"\x0b\xf8\xd5\x7f\xae\x34\x72\x1f\xfc\x31\x38\x3c\xfa\xfc\xd7\x75\xe0\x4f\xd8\x5f\xf7\x13\xf6\xd7\x9f\x13\x76\xa5" +
	"\x7d\x43\xfb\xa8\x3a\x00\xbe\xc5\xd4\x6a\x3f\xc2\x1e\xba\x7e\x40\xbb\x26\xb9\xa5\x06\xe9\x79\xae\xd9\xcb\x52\xc2" +
	"\xec\xc5\x55\xe5\xb2\x2b\xa7\xa4\xa8\x5a\x7e\x05\x75\xdf\xdf\xbb\x72\x5e\x20\xd7\x41\xbb\x59\x59\x0f\x79\xae\xb9" +
	"\x87\xf8\xa3\x6e\x6c\x91\x49\x80\xf8\xe7\xf7\xe2\x5d\xc8\x9a\x8d\x3d\xd7\x1c\x65\x71\xd3\xa9\x33\x71\x47\xf0\x88" +
	"\x84\x47\x24\x3c\x22\xe3\x36\xf0\x88\xcc\xc6\x7e\xac\x8f\x48\xee\xa3\x70\x81\x3d\x6c\xd0\x40\x0c\xf3\x06\xef\x47" +
	"\x78\x3f\xc2\xfb\x11\xde\x8f\xab\x79\x3f\x6e\x51\xd3\xd5\xe6\xc9\x77\x02\x4f\x3e\x78\xf2\x3d\x86\x27\x5f\xae\xe9" +
	"\x32\x29\xbb\xa9\xda\x06\x8e\xa9\x8f\x03\x92\xdb\x01\x96\xdf\x2f\xb1\x69\x3f\xb7\xe1\x1f\x81\x1d\x20\xbc\x65\xe0" +
	"\x2d\x93\xb4\x81\xb7\x4c\x36\xf6\xa3\x7e\xcb\xbc\xf9\x15\x34\x62\xf0\xa2\x81\x17\xcd\xa3\x7a\xd1\xec\x48\x3e\x1d" +
	"\x5d\x27\x11\x49\x11\xc7\xd7\x98\x31\x23\x36\xfe\x8d\xf8\x2c\x56\x45\x15\x43\xed\x68\x2c\x78\x88\xc9\x81\x89\xfd" +
	"\x9b\xc2\xf6\xe7\x74\xad\x58\x46\x6c\xcf\xc2\x01\x75\xa6\x95\xf5\x69\x16\x65\x41\x19\xe8\xbf\x15\xfb\xc5\xd7\x65" +
	"\xa9\x47\xe6\xd2\xea\xde\xed\xeb\x65\xa4\x4e\xfd\x55\x8b\xfe\x62\xd5\xe1\x3c\x6a\xdc\x70\x46\xb5\x34\x68\xb2\x09" +
	"\x19\x4f\x24\x62\x98\x36\x14\x1e\x5a\x7a\x5f\x28\x3a\x14\x8b\x74\xbb\x5a\x32\x14\x4a\x74\xb1\xe8\xb0\x2f\xb6\x12" +
	"\x48\xd8\x40\x28\xd1\x4b\xb7\xe3\xe7\xf2\xee\x44\xac\x80\xcb\x15\x8b\xb2\xf5\xb5\x99\x95\x38\x85\x63\x71\x0a\xe2" +
	"\xac\x06\x47\x62\x91\xe0\x78\x7d\x22\x94\x1c\xf6\xcb\xab\x51\x1e\xea\x9f\x2e\x67\xfd\xb5\x12\x1c\x56\x9d\x0d\x7f" +
	"\x26\xd8\x0a\x8a\xf3\xd0\x42\xfe\x22\xd5\xde\x93\x13\xf3\xd4\xfe\x68\x99\xa6\x7d\x83\x8b\xf5\xb7\x39\xe8\x27\x85" +
	"\x31\x0a\xed\x20\xae\xc0\x98\xf1\x01\x0f\xbe\x30\xd7\x19\xf1\xf2\xbf\xf6\x93\x66\x39\x6c\x69\xd8\x71\xdc\x00\xa7" +
	"\x7b\x2e\x85\xfd\xd2\xa2\x25\xb7\x11\xb5\x82\x37\x8e\xd4\xa1\xb3\x2c\x12\xd8\xdf\x47\x3f\xf9\x78\x82\x1d\x8c\xf6" +
	"\xf7\xc5\x9b\x89\x38\xca\xb8\x11\x49\x28\x03\x55\x1d\x35\x5c\xa7\xec\xb1\xdd\xef\xa1\x81\xae\xf7\xd0\x60\x38\xec" +
	"\x21\x5d\xe2\x60\x9d\x3a\xfc\x9f\xe7\xcb\x47\x7f\x47\xe7\x16\xf1\x85\x90\x16\x85\x7b\xda\xc4\x6c\x76\xed\x62\xbf" +
	"\xc2\xe2\x7d\x6b\x04\x02\x65\x54\x0c\x6d\xea\x90\x80\xb3\xcb\x65\x72\x1d\xb3\x04\x1f\x33\x3e\xa5\xc0\x71\x24\x71" +
	"\x5e\x8b\x05\x01\xf1\x71\xa2\x8f\xd7\x87\xc3\xc1\xd1\xb1\x7e\x72\x3c\x38\x2d\xa6\xac\x94\x3e\xce\x0b\xae\xb0\x85" +
	"\x15\x74\xce\xcb\xb7\x85\x93\x6f\x35\x76\x45\x0b\x1f\xdf\x24\xad\xc9\x8a\x1d\x7c\x3b\x90\xe6\xf6\x6f\x83\xb3\x33" +
	"\xe3\xe8\x78\x99\xe8\x33\x7f\x33\x8f\x8e\xf0\x21\x5e\x4b\xb8\x19\x27\xb4\xaf\x89\x8f\xdc\x09\x77\x1f\x36\x5c\x5f" +
	"\x4c\x27\x08\xb9\x6d\x11\xaa\x15\x7b\xce\xe5\x23\xdf\x8c\x3d\xc7\x90\xdb\x16\x42\xbf\x40\xe8\x17\x08\xfd\xa2\x89" +
	"\x01\xff\x12\x9d\x30\x77\x3f\xe7\xc4\x9a\x0b\x11\x5f\x5d\x69\xdf\x45\xff\xbd\xd2\xa4\xd2\xc4\xc5\xc3\xbd\xc8\xde" +
	"\xba\x05\x81\xe2\x5c\x47\xdd\x32\xaf\x6d\x74\x0d\x29\x55\xdf\xcf\x33\xfa\x1e\xbe\x9d\x3e\xb2\xe8\x7b\x4b\x25\x26" +
	"\x53\x70\x4a\x6b\xcf\xbb\x51\xe5\x5a\x05\x81\xd8\x26\x59\x9f\x96\xb1\xf1\xb6\xcc\xf9\x0c\xa5\x9c\x8f\x3c\x21\xed" +
	"\x22\x81\x60\x80\xf3\x01\xce\x47\xac\x01\xce\xe7\xc9\x73\x3e\x0d\x81\x76\xaa\x5c\x0f\x7a\x11\xc1\xf3\x63\xe1\x7d" +
	"\xa2\x3b\xef\xb4\x3a\xdb\x4a\xe4\x8c\x3a\x01\x08\xb0\x3f\x8a\x09\x77\xdb\xd2\xaa\x22\x79\x51\x18\x62\x55\x3f\xbd" +
	"\x98\x21\x96\xfc\x62\x3e\x5b\xe0\x62\x9e\x11\x3a\x9d\xf1\x63\x1e\x1c\xf6\xbd\xfb\xea\xac\xf9\xbd\x7d\x72\x58\xbd" +
	"\x99\xd5\x56\x5a\x16\x9d\x3a\xe7\xec\x63\x9d\x70\xb9\x9d\x25\x97\x52\x2e\xfd\x83\xed\x05\x0f\xca\x01\xa2\x16\xff" +
	"\x22\xbe\xbb\x72\x5b\x30\x3f\xda\xa7\x0f\x35\x72\xf1\x3a\xce\x2e\xd1\x64\x67\xcb\x93\x36\x78\x4d\x98\xb1\xa4\xb5" +
	"\x59\x23\x1b\xd8\xd2\xd8\xac\xca\x2b\x83\xb1\xd9\x46\x8d\xcd\x02\xd7\xbb\xd9\x1d\xf6\x78\x56\x00\x1f\x07\x64\xd7" +
	"\x70\x9d\x00\x53\x87\xf8\xf1\x7d\x19\xdd\x1e\x63\x46\x0c\xd7\x31\xd9\x98\x83\xc6\x57\x6a\xe3\x29\xf9\xaf\x57\x57" +
	"\xda\x95\xc6\xbd\x70\x5e\xfd\xe7\x4a\xfb\xbf\x9b\x53\x36\x3e\x78\x71\xa5\xf5\xf2\xfe\x51\x5d\xd4\xec\xf2\xd7\xd7" +
	"\x57\xda\xb7\x3f\x06\xf6\xe7\xbd\x2b\x5f\xee\xaa\xc3\xdb\xca\xfc\x75\xb8\x2e\x7d\xec\x13\xcf\xc2\x06\xd9\x6d\xf4" +
	"\xde\xa9\xde\xe6\x3d\x74\xa5\xa5\xc3\x5f\x69\xd1\x5f\xdf\xe9\xf1\x7f\x3d\xd7\x8c\xff\xb1\x7b\xf0\x62\xef\x4a\xdb" +
	"\xdb\x43\xa9\x17\x53\x3c\x97\x65\xa3\xdd\xb2\x00\xab\xad\x44\xcb\xef\x11\x69\x98\xdb\x05\x0d\xc1\xb2\xcd\x44\x72" +
	"\x73\x30\x9b\x04\x3e\x35\x12\x96\xbc\xfe\x9c\xe7\x37\x01\x4b\x82\xef\x1e\x2d\xce\xd0\x6c\xc7\xb0\xe8\xe3\xaf\x97" +
	"\x5c\x67\x71\xe9\x9a\xc2\x55\x0b\x16\x45\x5d\xb0\x28\xaa\xcd\x69\x8a\xd0\x63\xb0\xcb\x01\x7b\xa3\xb4\xe3\x56\x3d" +
	"\x28\x40\x8f\x5b\xa3\x95\xe5\xde\xb8\xa0\x96\x2d\x95\xce\xab\x96\x6d\xe1\x8a\x72\x7c\x0a\xc2\x49\x10\x4e\x82\x70" +
	"\x12\x84\x93\x6a\xb5\x6c\x12\xe4\x2e\x8e\x8f\xf0\xd4\x34\xb3\xef\xcf\xdf\x82\x66\xb6\x2c\x9a\x4c\xc5\x35\xdb\x64" +
	"\x63\x40\x3b\x0b\xda\xd9\xe5\xb5\xb3\x6d\x7c\x71\xc1\x2e\x0d\x18\x20\x60\x80\x80\x01\xaa\x8f\xea\xfb\xe8\x75\xb3" +
	"\x35\xaa\xd9\x34\xba\x27\x68\x67\x9f\x9c\x76\x76\x6b\xea\xd7\xfa\x9b\x37\x57\xbf\x1e\xf6\x95\xea\xd7\x39\xe2\x22" +
	"\xae\x57\xfd\xba\x15\xdd\x29\xa8\x3e\x9f\xab\xea\x33\xd7\x86\xa5\xf7\x10\x57\x88\xc5\xcf\xef\x82\xc2\xf3\xdb\xa3" +
	"\xd1\x5f\x5e\x55\x9d\xe3\xd1\x72\x17\x65\x3b\xfd\x63\xfa\x7d\xb9\xf6\xb1\x95\xfa\x50\x5f\x22\x75\xe7\x96\xf4\x87" +
	"\xae\x87\x86\x28\xb9\xd1\xdf\x38\x01\x71\x18\x01\x65\x62\xb9\xb6\x43\xca\xc4\x1c\x07\x4c\x62\xc8\x54\x1e\xbc\x15" +
	"\x68\x0b\x37\xb5\xae\x5a\xf4\xde\xae\xb2\x70\xeb\x2e\xb2\xfa\x61\x2d\xd4\xc7\x4c\x5b\x55\xf0\xd1\xda\x49\x36\x74" +
	"\x1c\xea\x4c\xd1\x07\x2e\x7b\x5e\x81\x93\x6c\xa7\xd9\xf2\x82\x04\xb0\x3a\xfe\x2a\x39\xf6\xf9\x8e\xf7\xa8\xc5\xf1" +
	"\xce\x11\xb8\x6e\x13\x3c\xb9\xbc\x8a\xe3\xbe\xb4\x6a\x39\x6b\x46\x6a\x92\x7f\xa6\xec\xf2\x50\xdc\xc4\x47\xc5\xb1" +
	"\x23\xcc\xd0\x9f\xc4\xaf\x26\x2a\x02\xce\x7d\xe1\x44\xf6\x11\xbb\x99\x68\xce\xbc\x19\x66\x44\x65\x5f\xb8\x50\x28" +
	"\xf0\x2a\x33\x1e\x0d\x9e\xc4\x3a\x8f\xbe\xb5\x9c\x85\x60\x12\xf6\x62\xe3\xe6\x81\xd1\xcc\x1b\x6d\x03\xa5\x7b\xfb" +
	"\x8c\x18\xfa\x88\x77\xaf\xdc\x8e\xe8\xc2\x0d\x45\xcd\x10\x30\xf4\x5d\x60\xe8\xd5\x37\x3b\xea\x08\x53\xbc\x8e\x48" +
	"\x64\xdd\x5f\xf5\xd3\x32\x1c\xe4\x8a\x8f\x96\x10\x99\x4a\xcc\xcf\x6f\xa7\xb5\x12\xf3\x8a\xc8\xbb\x79\x0b\x16\xf4" +
	"\x10\x7a\xe7\x06\x64\x84\x2c\x6a\xd3\x00\xd9\xf8\x01\x91\x7b\x83\x10\x93\x21\x2e\xe5\x42\xd4\x41\x38\xba\x25\x91" +
	"\x19\x6b\x3d\x11\x73\x6d\x82\x32\x91\x18\x43\xee\x04\xd1\x00\x21\xd3\x25\x0c\x39\x6e\x80\x66\xf8\x96\xc4\xa3\xb1" +
	"\x03\xd1\x9a\x30\xd7\x4a\xe8\x7d\x51\x2d\xd1\xc0\x54\x8b\x92\xed\xb9\x99\xea\x41\x7d\x5c\xa1\xe8\xe6\xfd\x48\x6d" +
	"\x92\xf2\x3c\x72\xae\x2f\x36\xd4\xab\xf2\x3a\x4a\x7e\xcf\xc3\x53\x92\xac\xba\x6a\xdc\xe7\x13\x8f\x60\xc5\x8d\x13" +
	"\xd7\xbd\xa6\x3e\x31\xd2\xa3\xba\x15\x38\x34\xc3\x77\xf9\xf3\x44\x32\xcb\x08\x95\x7e\x26\xd8\xe4\xfc\x9d\xac\x3e" +
	"\xbe\x66\x84\x9d\x36\x5c\x4b\xfa\x80\x31\x63\xbf\xa0\x66\x5d\x20\x8f\xc2\xd7\x12\x19\xf8\xab\x30\xb9\x56\x65\xd8" +
	"\xc0\x6d\x4c\x12\x3e\x59\x41\x32\x94\x66\x28\xbc\x56\x61\x37\x22\x8e\x33\x87\x31\x0a\x6f\xfc\x37\x43\x1f\x1a\xfa" +
	"\x89\x18\x81\x55\x16\x57\xd5\xc4\x01\xc9\x79\xad\xdf\x7f\xff\xfd\xf7\xfd\xb7\x6f\xf7\x5f\xbf\x46\x3f\xff\x3c\xb2" +
	"\xed\x11\x93\xb2\x81\x6a\xb3\x14\x94\xc2\x5b\x0d\x97\x18\x55\xe7\xa1\xc4\xa4\x8c\x62\xd4\xe4\x93\xaf\xe4\x23\x3d" +
	"\x1c\x04\xc4\xe7\x80\x97\x8a\x6e\xa5\x1a\xc0\x12\x4f\x26\xdb\xaa\x43\xd9\x0d\x87\x90\x76\xda\x6f\xb7\x7b\x99\xce" +
	"\x33\xf0\xa9\x23\x25\x9a\x3c\x88\x68\x66\x29\x65\x3c\x7c\xfa\xf0\x5a\xa0\x9d\x2d\xae\xcd\x0c\x1a\xbb\x01\x8a\x6d" +
	"\x2c\xa8\x50\x1d\xe0\x6e\x0d\x36\x6b\x8d\x6f\x50\x05\xb8\x3e\xca\x78\xc8\x26\x66\x1f\x15\x01\x63\x46\x4d\x93\x48" +
	"\x75\x1a\x29\x60\xc4\x7c\xce\x32\x20\xa1\xf2\x97\x46\x00\x1b\xd5\x4e\x39\x6c\x1c\x2e\x0b\x1b\xdc\x46\x0e\xfd\x4d" +
	"\x1a\x98\xbc\x3d\x7c\xc4\xe1\xe7\xd6\x0f\x1f\xef\xc9\xbf\x43\xc2\xa4\xfc\x34\x40\x48\xb1\xd3\xea\x21\x44\x6e\x97" +
	"\xd5\x39\x08\xf9\x25\x62\x8c\x01\x3e\x36\x0f\x1f\xdf\x77\x1f\x3e\xde\x12\x1b\x6e\x98\x79\xe1\x43\x26\xde\x58\x04" +
	"\x3e\x5e\xaf\x1b\x3e\x62\x65\xf2\xb2\xf0\x01\x37\xcc\xd6\x20\xe4\x87\xc7\x01\x21\x70\xc3\x6c\x09\x3e\x7e\xec\x3e" +
	"\x7c\xbc\x27\x2c\xc0\x7e\x80\xa4\x52\x7b\x00\x91\x4a\xa7\xd5\x83\xc8\x4f\xdb\x61\x42\x76\x6a\xf6\x67\x71\x25\x6b" +
	"\x49\x3d\xca\xa5\x43\xe3\x72\x7c\x97\x51\x63\x18\x91\x11\x0b\xed\xb1\x8f\x03\xf2\x55\x8c\x0c\xa3\x0e\x17\xd3\x4b" +
	"\xbf\x97\x9a\x5d\x76\x38\x70\x4c\xc9\xee\xb2\x41\x29\xcc\x2d\x33\x24\x4d\x1a\xd5\xc1\x69\x3c\x19\x99\x4e\x6d\x6e" +
	"\xbf\x86\x8b\x45\x28\x4c\x11\x2e\xca\xbb\x7b\xe5\x44\x65\xf8\x76\x3a\x76\x6f\x89\x3f\x8e\x28\x4f\xae\x9e\xcf\x0f" +
	"\xd8\x4f\x62\xf2\x8f\xfd\x98\xc1\x61\x85\xd8\xc3\x59\xab\x2a\x58\xe4\x10\x51\x39\xa1\x3f\xf4\xbe\xfd\x39\xdf\xfd" +
	"\xbd\x1e\xba\x72\x4a\x67\x96\x1c\x59\x7a\x62\xd1\x81\xfd\x6f\x74\x60\x57\x8e\xeb\xa3\xd0\x43\x2f\x50\x3f\xd3\xe7" +
	"\x3f\xaa\xd3\x13\xbd\x52\x36\x7a\x7a\xb1\xde\x07\xce\x6e\xa1\xb3\xfb\x7e\xd9\xb3\xab\x35\x54\x57\x11\x53\x24\x23" +
	"\xbd\x1d\xa6\xa9\x05\x4b\x9b\x47\x75\xba\x0b\x29\x24\xd4\x98\xb9\x22\x2a\x5b\x0a\x25\xb0\x02\x64\x8d\x70\xb5\x0c" +
	"\x50\x45\x8c\xcd\x6a\x8a\x78\x5b\x39\xfa\x45\xd0\xbb\xd1\x9f\xa1\x1b\x20\xf0\x43\x97\x40\x20\x21\xd5\x00\x00\x1b" +
	"\x04\x80\x1f\x57\x0b\x00\x92\xe3\x4d\x8c\xf2\xfc\xf8\xa1\x97\x46\x65\x6c\x71\xae\x9e\x6b\xa2\x84\xf6\xcf\x47\x8b" +
	"\xd7\x66\x52\xb9\x1a\x22\xbf\x9a\x13\xac\x5a\x4b\xd6\xda\x3b\xfe\x34\xe7\x03\x2c\xb7\x5a\xd4\xf4\xb7\xa2\x53\x70" +
	"\x3b\xb3\xc4\x8b\xd8\x3c\x1b\xf9\x89\x65\xa2\x27\x73\x31\xf2\xb1\xc3\xa2\x3d\x53\xed\x58\xdc\xc2\xc3\xea\x2c\xe6" +
	"\x79\xaa\x65\xde\x7d\x47\xb6\x48\x79\x22\xc7\x72\xce\xc1\x8d\xe6\x71\x2c\xad\x40\x62\x20\x66\xa5\x91\x38\xa4\x06" +
	"\x8b\xb9\xe1\x7b\x8d\x31\xd7\xad\x2d\xcd\x35\x9a\x19\x73\x45\xf5\x4d\xb8\xdf\xd6\x80\x8b\xcb\x26\x26\xd4\xa1\xa9" +
	"\x59\x50\x4c\x15\x62\xe3\xc9\xdd\x3c\x6c\x10\x2f\x66\xbd\x84\x35\x8b\xca\x7d\x87\x04\x84\x8d\xa9\x3b\x9e\xb9\x2c" +
	"\x90\xa3\x55\x4a\x12\x45\xfb\x29\xea\x18\x56\x68\x92\xf3\xba\xf8\x02\x35\x56\x83\x9a\x1d\x5a\x01\x55\x76\x4d\x43" +
	"\x5f\x44\x53\x17\x27\x55\xc8\x10\x29\x48\x48\xb4\x7f\x87\xc4\x7f\x58\xfd\x46\xe4\xb0\x2b\x98\x38\x68\x3e\x99\x12" +
	"\x59\x74\x8a\x08\x78\x6f\xa8\xf7\xc9\xb7\x3e\x3c\x38\x86\x3a\xa3\xbf\xca\xc4\x37\xc0\x53\x0e\x8c\xec\xff\xa5\x6b" +
	"\x12\x3f\x20\x41\x82\x42\x4d\x5d\xc7\x04\x77\xe3\xfd\x12\xaa\x43\x46\x3e\xc6\x43\x4b\x6c\xbc\x0a\x7f\x41\x5a\x54" +
	"\x61\x24\x48\x8b\xba\x9a\xb4\xa8\xdc\xf5\xac\x2e\x27\xea\xa9\x4d\x4c\xd3\x2e\xdd\x09\x35\x09\x51\x3d\x9f\x98\x94" +
	"\x5b\x4f\xee\xfb\xc4\x70\x6d\x9b\x38\x26\x0f\x1f\x02\xf9\x51\x9f\x5c\x7e\xd4\x72\x3a\xd4\x33\x5d\x3f\x39\x3d\x1a" +
	"\x1e\x9f\x16\x1c\xa2\x9e\x78\x3a\x54\x7d\x81\x7c\xa8\x6f\xb1\x83\xa7\xc4\x44\xbf\x5e\x7f\x21\x86\x70\xc8\x0b\xe5" +
	"\x42\xcd\x4d\xe1\xeb\xed\xd3\xdf\x38\x13\x2b\xbc\x7f\x5d\xb5\xcb\x68\xcc\x5f\xb1\x9c\x09\xb9\x22\x92\xca\xe9\x1c" +
	"\x47\xd1\x26\xc3\x54\xa5\xb0\x8d\x69\xb8\x84\xb9\x5f\x9f\x75\xb7\xb8\x32\x33\xcf\xfa\x50\xbb\xbe\x85\x8c\xbb\x55" +
	"\x16\x9e\x0b\xe9\xe5\xda\x58\x8e\x96\xed\x42\x9b\x18\x6f\xb0\x04\x8e\x3b\x6f\xdd\x12\x98\xb2\x31\xb6\xb0\x4d\x4c" +
	"\xbc\x6e\x7b\x60\x93\x18\xd3\xe5\xf5\xe9\x00\x1c\x1b\x04\x8e\x76\xfe\x07\xdb\x36\x13\x07\x90\xd8\x20\x48\x24\xc4" +
	"\x62\xcc\x0c\x6c\x25\xd2\x66\x2e\x5d\x04\x30\x01\x30\xa9\x07\x13\x80\x10\x80\x90\x85\xfc\xdb\xb6\x0d\x16\xe7\x31" +
	"\x2c\x7f\xe0\xa0\x8c\xde\x29\xe6\x0c\x80\x52\xec\xb4\x7a\x52\x82\x62\x52\xb2\x1c\xb8\x34\xbb\x33\x2e\x0f\x2e\x97" +
	"\xbe\x1b\xbd\xec\xd1\xee\xbb\xf4\x6e\x94\x2a\xd2\x00\x5e\x8a\x9d\x56\xcc\xb4\xae\x80\x25\xd9\x08\xa8\xb8\x26\xd0" +
	"\x93\x2d\x5c\x3c\xdd\x87\x8c\x8b\xd4\x5c\x00\xe0\x63\xd3\xf0\x91\x59\x6a\x74\x1f\x4a\xb8\xee\x06\x00\x64\xd3\x17" +
	"\x8c\x4c\x5d\xde\x39\xd7\xc6\x4b\xd7\xa2\x86\xa8\x72\x06\xc0\xa8\x74\x5a\xe9\xcd\xa2\xda\xf2\x6e\x91\x8d\x67\x05" +
	"\x14\xf5\xe7\x5b\x38\xbd\x97\x07\x2f\x5e\x6e\x07\xad\x77\x6a\x16\xb1\x98\xb3\x90\xe1\x86\x4e\xb0\x1b\x7a\x5f\xbf" +
	"\xb8\xd7\xaf\xae\xb4\xdc\xfe\x66\x3f\x22\x5e\xec\x4a\xfb\xb6\xa8\x71\x1f\xb7\x32\xfc\xfe\x41\x01\x05\xe2\x94\x50" +
	"\xbc\xcb\x3e\xb6\x55\x90\xc3\x5b\x7c\x37\xce\x8c\x4b\xc4\x73\x95\x6c\x4b\xd6\x31\x33\x8e\xa3\x36\x91\xf5\x14\x10" +
	"\x63\xa9\x69\xca\x52\x6a\xb4\x9b\x1f\x8f\x69\x2b\x9b\x5f\x2b\x28\x6e\x65\x31\xe9\xfa\x26\xf1\xbf\x7f\xf8\x48\x13" +
	"\x93\x82\x0f\xd2\x10\x1e\x09\x91\xe2\x0a\x99\x09\x0e\x2d\xa9\xe3\x6a\x66\xde\xc5\x88\x15\xbd\x65\xaf\xb4\xd8\x32" +
	"\x15\x61\x86\xca\x26\xc5\x48\x25\x10\x8e\x9a\x16\x4c\x54\x25\xcd\xe2\xc1\xca\xcf\xfb\x68\xc4\x2c\x67\x36\x66\xd1" +
	"\xbf\x7b\xb9\x1d\x2b\x1f\xd3\x35\x49\x6c\x18\x1b\xad\x23\x6a\x9f\xab\xb0\xd0\xc4\x77\xed\xec\x53\x86\x15\xb2\x20" +
	"\x33\xd0\x3d\x38\xc8\xa6\x1d\x9b\xca\xa2\xeb\x87\xfc\xf3\xc2\xf4\x63\xa3\x5b\x49\x6d\x66\x96\x5b\xf8\x2b\xd9\x1c" +
	"\x7e\x00\xd1\xb0\x11\x30\x22\x93\x30\x23\x89\xf1\x26\x35\x54\xf4\xf1\x5d\x6a\x38\xa6\xb0\x93\xad\x0f\xe7\xe9\x13" +
	"\x16\x5a\xc1\x8f\xcd\x28\x1b\x9f\xa1\x02\xac\xe5\xa0\x2e\x47\x90\x36\x28\x92\x59\x60\x2a\xea\x15\x78\x52\xc2\x14" +
	"\x62\x99\xf2\xee\x52\x64\x6e\x35\xdb\xe6\xcf\xda\x04\x0b\x6a\xeb\xe4\xab\x92\xd2\xcf\xad\xd0\x36\x33\x1b\x9c\x8f" +
	"\xe2\x57\x4d\x45\xb2\xc7\xe0\x86\xcd\x8b\x8b\x0d\x57\x6d\x73\xb2\x16\xa3\x12\xb1\xf4\x5e\x6e\x6a\xd2\xd2\xa8\xa4" +
	"\x62\x2e\xd4\x3d\xa3\x12\xd1\x9e\x09\x8c\x4a\xe4\x53\x7f\x56\x3c\xef\xb6\x1f\x42\xd4\x49\x2f\xdf\xee\x6b\x77\x92" +
	"\x3c\x31\x1c\x7b\x01\x46\x36\x2b\x45\x29\xb9\xc2\xad\xfb\xed\x95\x65\x97\x59\x06\x5a\x2e\x2e\x3f\xa1\x0b\xd7\x97" +
	"\xcf\x16\x60\xa5\xd8\x69\x85\xb1\x3c\x38\xac\x64\x1e\xee\xdd\x97\xbd\x81\x5c\xf6\x71\x5a\xab\x81\xf0\x4d\xde\x1a" +
	"\x84\x6f\x20\x7c\x93\x75\x04\xe1\x5b\xd6\x68\x8d\xc2\xb7\x17\xf5\x62\x2d\x95\x3a\x0a\xe4\x4b\xe5\x6e\x20\x5f\x4a" +
	"\x7b\x55\xe5\x4b\x11\xbb\xd2\x29\xd1\xd2\x96\x3d\xbf\xea\x13\x37\xc7\x59\xe0\x04\x01\x50\xa3\xe3\x57\x6e\xd2\xf1" +
	"\x3e\x09\x08\x12\x87\x9e\x45\xd8\x31\xd1\xfb\x92\xaf\xa4\xb0\xd3\x8f\x32\xf7\xdf\xfe\x3e\x7a\x4b\xef\x89\x29\x7a" +
	"\x59\x2e\x98\xe1\xef\x64\xf9\xa3\x3d\xad\x3d\xda\x3c\x27\x77\x75\xc2\xfc\xd0\xcf\xaa\x85\x85\xac\x60\xff\x38\x16" +
	"\x7d\x9b\x6b\x32\x03\xb6\xca\xfa\x27\xaf\x9f\x51\x93\xfc\x60\x7b\xc1\x43\x6d\x8b\x7f\x11\xdf\x55\x67\xec\x5e\x30" +
	"\x9b\xf7\x0a\x92\x75\x37\xe7\x32\x81\x6c\xdd\x73\xc9\x64\x7f\xbd\x66\x11\x10\x46\x64\x03\x8d\x50\x73\xca\x84\xa8" +
	"\xcf\xdf\x86\xfa\xd9\x50\x6e\x20\x59\x5e\xa7\xbe\xcc\x4b\xa7\x4c\xd3\xe2\xb9\x59\xb5\xa1\x72\xf9\xdc\x26\x03\xe3" +
	"\xec\x58\x6a\xa2\x57\x99\x9b\xaa\x05\x5b\x3c\x89\x57\xed\xdc\xfd\x86\x40\xd0\x7c\xf6\x27\xe4\x7a\xb0\xf5\xd9\x5f" +
	"\x66\x4e\xf8\xf1\xcc\xe3\xbc\x52\xbb\xd4\x41\xfa\xd0\x56\x5b\x23\xc7\xdb\x7f\x46\x06\xe6\x40\x2e\xe5\x2f\x5c\x0c" +
	"\x43\x45\x03\x05\xea\xb6\xdc\x81\x72\x6e\xcb\xa3\xd5\xef\x41\xe8\x79\xc4\xbf\x76\x43\xc7\x84\xed\x98\x12\x64\xb9" +
	"\x77\xb0\x1d\x15\x0c\x31\x9b\xb6\x60\x70\xa6\x9f\x49\x35\xfa\x4f\x61\x0b\xaa\x08\xf2\xbc\x77\xa3\x8a\x1f\x8f\x79" +
	"\x37\x6a\xdf\x84\xdd\x49\x2a\xdc\x3a\x22\x57\x41\xe2\xa6\xf7\xfb\x7d\xf4\x02\xad\x34\x3c\x76\x36\x18\x8f\x8f\xc7" +
	"\x8a\x86\x49\x51\x49\x12\x97\xaf\x3c\x7e\x54\x51\x32\x8e\x92\x06\x7a\x6d\x10\xfe\x2d\x99\xa8\x38\x8d\xbd\xd7\x94" +
	"\xca\x78\xae\xe0\x7b\x73\x30\x99\xcb\x45\xb5\x5e\x8c\x79\x6c\x65\x72\x82\x10\x48\x50\xb7\x24\x41\x6d\x00\xda\x35" +
	"\xca\x4e\xcb\xb1\x57\x23\xac\x8f\x85\xa9\xb9\x69\x5f\x39\x4a\xd5\x95\x76\x70\x50\x32\x70\x44\x77\x33\xe2\x93\xdc" +
	"\xc6\xef\x15\xfa\x9f\x1c\xc5\xff\x87\xcb\x6e\x8a\xd6\x80\xbc\xde\x73\xcd\xb4\xa6\x60\x4f\xc8\xab\x1c\xf6\x3f\x08" +
	"\x9d\xbf\x7b\x8d\xbe\xe3\x31\x28\xa9\xa5\xb0\x91\x58\xb9\xf0\xb6\x9e\xaa\x80\x08\xb7\x73\x22\xdc\x35\xbe\x56\x81" +
	"\x5c\x02\xb9\x8c\x1b\x29\xc9\x65\x02\x3d\x4f\x92\x60\x4a\xf3\x8e\x01\xc1\x9c\x7b\xb6\x8f\x98\x60\xce\x2f\x20\x5b" +
	"\x88\x66\x2e\x80\xdc\x36\xc1\x2c\xf4\x89\x1d\x6b\x00\x62\xcb\xa7\x3c\xa6\xa6\xec\x7b\xf3\x92\x83\x16\x43\x56\xc9" +
	"\x02\x87\xbe\x2a\x1d\xc8\x87\x50\xd1\x80\x1b\xea\x98\x11\x12\xfb\xf8\x2e\x46\xef\xa9\x8f\x9d\xd0\xc2\x3e\x0d\x1e" +
	"\xa2\xf2\xc3\x7e\x8a\xf5\x36\x09\x7c\x6a\xc4\x28\x2f\xbe\xcc\x72\xe1\x7c\x91\x4a\x74\x92\xb6\x48\x21\xe2\xf9\xd2" +
	"\x96\xa5\xb1\xbc\xfd\x75\x7e\x43\x32\xe8\x96\x5a\x32\xf1\x88\xd6\xc4\xc7\xf1\xa3\x57\x7b\xa5\x6a\x94\xc5\x0f\xa7" +
	"\xde\xbe\x7e\x32\xd8\x1f\x1c\xee\xeb\xfb\x67\xfa\x41\xc8\xf6\x09\x66\xc1\xfe\xe0\xc0\x70\x6d\x2f\x0c\xc8\x01\x67" +
	"\x61\x1c\x39\x0b\x33\x0f\x23\x12\x01\x79\x16\x58\xfc\xfc\x9d\xec\x7a\x2a\xae\x90\xef\xfb\x4a\x56\x68\x78\x61\x4b" +
	"\x26\x65\xf5\xb4\xb6\xa5\x20\x7e\xd5\x64\x57\x81\xbf\x4f\x91\xea\xf2\x1d\x1e\xf3\x2d\xee\x2e\xf5\xe5\xe4\x97\xbb" +
	"\xcb\xfd\xe3\x15\x72\xdc\xbb\x5d\x29\x14\xcc\x41\x80\xa5\x29\x21\x81\x00\x17\x07\x04\x02\x5c\xf9\xe2\xb3\x24\xc0" +
	"\x2d\x55\x7f\x40\x80\x17\x26\xc0\x7c\x87\x9f\x1d\x01\x96\x26\x5c\x05\x02\x5c\x1c\x10\x08\x70\xe5\x8b\xcf\x92\x00" +
	"\xd7\x28\x94\x81\xe8\xae\x5e\xd6\x70\xdc\xef\x02\xb9\x5d\xad\xb4\x41\x9a\x1f\x1f\x68\x6d\x71\x40\xa0\xb5\x95\x2f" +
	"\x3e\x4b\x5a\xdb\xce\xaa\x09\xc8\xee\xfa\x84\x0d\xdd\x20\xbf\x2b\xe7\x76\x7f\x06\x0a\x5c\xf8\x01\x05\x6e\x33\xf3" +
	"\x67\x49\x81\xdb\x59\x52\x02\x05\x5e\x9f\xb4\xe1\x89\x52\xe0\x37\x40\x81\x0b\x3f\xa0\xc0\x6d\x66\xfe\x08\x29\x70" +
	"\xe9\x6f\xc1\xc7\xb4\x2e\x4a\x42\x31\xdb\xb5\x34\x9d\xb5\x4d\xde\x93\xa9\x22\xd5\x6f\xfb\x64\xd8\x99\x77\xeb\xc5" +
	"\xe5\xa7\x11\x2a\x18\x0c\xf7\x50\x7e\x23\xf4\x24\xce\xae\xfc\x3e\x88\x2e\x0a\x9b\x5a\xd4\x70\x7d\x21\x5d\x82\x16" +
	"\x64\xe9\x27\x05\x47\x4a\x36\xc3\xbe\xca\x53\xb8\x2e\xe9\x2f\x3f\x91\x71\x8a\x50\xd4\x31\xe9\x2d\x35\xc3\x2a\x64" +
	"\x55\x5d\x13\xd3\xf6\x3c\x29\x66\x75\x96\xf7\xf8\x9e\x4a\x5d\x57\xaf\x43\xe3\x26\x36\x7f\x97\xe7\x68\x4e\xdc\x12" +
	"\x03\x59\x10\xb4\x34\x41\xa8\xb4\x67\x9d\x3b\x66\xe6\x70\x59\x31\x94\xa9\x2e\xe9\x01\xdf\xb7\x75\x39\x2c\x44\xf3" +
	"\x38\x94\x10\x90\xdc\x84\xdd\x71\x1d\xa9\x69\x78\x5d\xaa\xea\xa8\xda\x9d\x7e\x8f\x99\x2a\xd0\x4b\xec\xb3\xaa\xe8" +
	"\x1a\x3b\xad\x2a\x2a\x0b\xdb\xb4\x00\x5f\x93\x2f\x2b\x0b\x20\xd5\xb9\xa5\x89\x4e\xb5\x4d\x14\xe3\x41\x05\xac\xd8" +
	"\xa2\x53\xb5\x03\x30\xaf\xfd\x85\xdc\x66\x6b\xdd\x51\x7d\x12\x7c\xd3\xe7\xf6\x4d\xd7\x87\xb5\x98\xda\xe0\x9c\x2e" +
	"\xec\x06\x78\xa7\x17\xea\xc0\x3b\x7d\xeb\xde\xe9\x23\x14\x47\xfb\x8b\x1f\x84\x1d\xf4\x4f\x4f\xa6\xf7\x58\x5d\xd4" +
	"\x93\xe9\x3f\x4e\x2f\xf5\x22\x68\x3c\x63\x57\xe4\xd2\x36\x80\xaf\x7a\x75\x47\xc0\x5d\x5d\x8a\x2a\x8f\xd9\x2b\x79" +
	"\x2d\x98\xf2\xec\x37\x04\xfc\xd6\x93\xea\x6e\xfb\xad\xe7\xee\xe1\x49\x20\xe4\x58\x10\xcb\x5f\x99\xe0\x80\xae\x70" +
	"\x40\x6f\xe6\x23\xd7\xe4\x82\xde\xc4\x1f\x82\x5b\x65\xbb\x69\x3e\x63\xb7\xca\xd8\x0b\x3d\x01\xa4\xa7\xe6\x57\x09" +
	"\xbe\x4f\xc5\xdf\xb3\xf4\xab\x9c\xff\x4d\x0a\x44\x13\x88\x66\xdc\xa8\xd1\x17\xfd\x89\x92\x4d\x70\x47\x2f\xfe\x9e" +
	"\x25\xd9\x5c\x48\x12\x06\x1e\xe9\x9b\xf2\x48\x17\x1f\x67\x9d\xb7\x0c\x87\xa0\x40\xc5\x1f\x58\xc5\xb4\x99\xf9\x23" +
	"\xb4\x8a\xd9\xa4\x9c\x1d\x6c\x13\x37\xec\x8a\xbe\x11\xb2\xbb\x72\x7b\x44\xf0\xc9\x29\xfe\x80\xf2\xb6\x99\xf9\x73" +
	"\xa5\xbc\xe0\x83\x2e\x34\x06\xca\x5b\xde\x0f\x08\xfd\x21\xeb\x06\x94\x17\x28\xaf\x7a\x65\xcb\xd9\x0d\x00\xb5\xdd" +
	"\x98\xf3\xf9\x23\x14\x2c\x40\x78\x8f\xe2\x0f\x88\x6c\x9b\x99\x3f\x57\x22\x0b\x5e\xe7\xd5\xc6\x1d\xf1\x3a\x7f\x9c" +
	"\xfc\x2d\xf8\x9a\x17\x7f\x40\x7a\xdb\xcc\xfc\xb9\x92\x5e\x70\x37\xaf\x36\x06\xd2\x5b\xdd\x11\x70\x32\x97\x75\x03" +
	"\xd2\xfb\x7c\x49\x6f\xe9\xef\x4e\x3b\x99\xbf\xe5\x64\x64\x2e\x3f\x73\xf0\x2a\xcf\x6b\xbb\xe9\x55\xae\x70\x72\xce" +
	"\x4d\xd3\x3b\xea\x7e\x0d\x9e\xe5\x85\x8e\xeb\xf7\x2c\xdf\x91\x7c\x3a\xba\xaa\x23\xf2\x14\xed\xe6\x61\xc9\xd7\x59" +
	"\x63\xc6\x8c\xd8\xf8\x37\xe2\xb3\x98\x16\xeb\xc7\xc5\xca\xe0\x21\x26\x2d\x26\xf6\x6f\x8a\xbd\x32\xbb\xae\x62\x19" +
	"\xb1\x3d\x0b\x07\xd4\x99\x56\xd6\xa7\x59\x94\x89\x37\xbb\x64\x07\xac\xdf\x12\x22\x2d\xc5\xbc\xdc\xb7\x5a\x02\x2d" +
	"\x01\xb9\xe7\xb0\x12\x06\xd4\xbe\x76\xef\x65\xa0\x92\xdd\x00\x69\x9b\x26\xa0\x6c\xcb\x00\x6b\x26\x99\x50\x27\xbb" +
	"\xcc\x22\xd8\x40\x01\x9e\xc6\x3c\x24\x43\xae\x83\x52\x06\xd2\xb0\x42\x16\x10\x7f\xcc\x02\x1c\x84\x2c\x66\x2f\x33" +
	"\x6e\x0e\xdd\xd1\x60\x86\x6e\xc8\xc3\xab\x9c\xe3\x64\x06\xb6\x12\xef\x94\x84\x8d\x13\xbf\x9e\x70\xd7\x22\xbd\xa5" +
	"\x8e\x61\x85\x26\x39\xb7\xd4\xae\xdd\x29\xfa\x68\xef\xd2\x2f\x88\xe3\xdb\xa1\x15\x50\xe5\x08\x09\xad\xd4\x1c\x11" +
	"\x3d\x35\xd7\x0b\x14\x77\x5a\x89\xe3\xde\xf0\x7e\xe5\xb8\x30\x90\xd4\x4d\x49\x44\x13\x24\xdd\xd8\x0d\xf5\x3e\xf9" +
	"\xd6\x87\x07\xc7\x98\xff\xea\x0b\xf0\x94\xc3\x36\x4b\x59\x6a\xc9\x07\x24\x38\x55\xa8\xa9\xeb\x98\xdc\x90\xf1\x8e" +
	"\x0a\xd5\x21\x23\x1f\xe3\xa1\x1b\xfd\xf7\x01\x27\xe7\x83\xb1\x82\x01\xb5\x1a\x02\xd3\x87\xd7\x9a\x30\xf7\x3c\xfe" +
	"\xf0\x07\xfe\xdd\x45\xb1\x97\x29\x7a\x6f\x15\x83\x97\xdc\x5d\xc0\xf3\xfc\xb7\x49\x3c\xdf\x3f\x36\x4f\x4e\x4f\xcf" +
	"\x8c\xb3\xd3\xb3\xfd\x80\xdd\x58\x52\x79\x4b\x15\xf1\xc5\x4e\x1d\xa6\x04\x05\x79\x4b\x7b\x00\x4d\x24\x32\x72\x38" +
	"\x8f\xda\xc4\x25\xeb\x22\x13\x9e\x2b\x06\xb4\x68\x49\x1c\xa4\x5d\x37\x47\x19\x36\xbc\xdb\x40\x36\xf2\x1f\xb0\x07" +
	"\xed\xc1\x74\x6d\x20\xaa\x16\xf2\xae\x89\x54\x64\xcb\x5b\x94\x60\xd4\x0c\xb0\x39\xb2\xd1\x89\xf3\x00\x62\x92\xff" +
	"\x8a\x52\x8a\x5c\x3e\xf6\xad\x28\x41\x88\x15\x3a\x25\xd9\xc1\x24\x96\x9a\x6a\x8e\x7b\xb7\xaf\x97\xe5\x7f\x5a\xe0" +
	"\x26\x35\xff\x3b\xe8\xdb\x9a\x72\x48\x8f\x1a\x37\x3c\x82\x57\x69\xe0\xe4\x68\x32\xf7\x56\x51\x20\xa7\x0d\x85\xa8" +
	"\x70\xba\x18\x28\xee\x50\x2c\xd2\xed\x6a\xc9\x50\x28\xd1\xc5\xa2\xc3\xbe\xd8\x4a\x90\x78\x0e\x84\x12\xbd\xa4\x87" +
	"\xf8\x5c\xde\x21\x6a\x93\x71\x01\xe7\x16\x98\x95\x38\x85\x63\x71\x0a\xe2\xac\x06\x47\x62\x51\x95\x8d\xd0\x4e\x84" +
	"\x92\xc3\x7e\x79\x35\xca\x43\xfd\xd3\xe5\x81\x49\xb4\x92\x54\x2a\x95\x84\xe7\xa2\xee\x7a\x49\xb7\x16\xf2\xe0\x80" +
	"\xda\x89\x89\x4d\x8c\x4d\x5c\xac\xba\xcd\x45\x62\x49\xe1\xb7\x1d\xfe\x8f\x1d\x84\xca\x5e\xb5\xfb\x09\xc9\x88\xe9" +
	"\xc3\xc1\x17\xe6\x3a\x23\xde\xf2\xaf\xfd\xa4\x67\x0e\x78\x1a\x76\x1c\x37\xc0\xe9\x81\x2c\x20\x26\xbb\x0e\xa9\x15" +
	"\xbc\x71\x64\x22\x4d\x31\x8a\xe3\x4f\x3e\x9e\x60\x07\x8b\x71\x1c\x11\xd2\x88\x83\xaf\x2d\x95\x5e\xb6\x4e\x67\xab" +
	"\x51\xc3\x75\x2e\xd2\xe8\x38\xfe\xf4\x1a\xef\xf6\x7b\x68\xa0\xeb\x3d\x34\x18\x0e\x7b\x48\x17\xf5\x89\x5a\x1c\x16" +
	"\x64\x84\xf4\xbe\x48\xb0\xd2\x6b\xe3\x3c\xdf\x1a\xf4\x77\x74\x6e\x11\x3f\x90\x08\x95\xa2\xbb\x81\x2f\x5f\x42\xf9" +
	"\x12\xe2\x64\x62\x36\xbb\x76\xb1\x5f\x51\xd0\x35\x13\x20\x62\xd2\x40\xba\x29\xda\xd4\x21\x01\x57\x76\x96\xf9\x9c" +
	"\x58\x2b\xf1\x31\xd3\x95\x14\xe6\x14\xc7\x9d\x1c\x9c\x16\x4b\x02\xe2\xe3\x84\xe7\xd0\x87\xc3\x93\xb3\xd3\xe3\xe3" +
	"\xc1\xa1\x7e\x58\x6c\x23\x0b\x85\xa8\x79\xd8\x21\x02\x81\xaa\x84\x0d\x35\x5c\xcb\xc2\x1e\x53\x29\x66\x9a\x22\x74" +
	"\x8a\xc0\x34\x77\x84\xce\x7e\x1d\xef\x98\x84\xe1\xac\x46\x7e\xcc\x57\x26\x6a\xbd\x12\x64\x7e\x8b\x1d\x3c\x25\x26" +
	"\xfa\xf5\xfa\x0b\x31\x04\x88\xc8\x0e\xdd\x77\xef\x8a\xc7\x5d\x17\x61\xd5\x70\xad\xd0\x96\xeb\xda\x5a\xf1\x8f\x9a" +
	"\x49\x98\xe1\x53\x2f\x65\x1f\xab\xd5\x13\xd7\x09\x3e\xd0\x3f\xf9\x10\x7a\xbf\xff\xdf\xd5\xfa\x86\xa3\x38\x96\x1e" +
	"\x85\x7e\x3a\xc7\x51\xe8\xcd\x47\x51\x0d\x83\xa9\x8c\xc1\xe9\xe1\x29\x49\x56\x23\xd1\x3e\x32\xc3\x77\x39\x53\x29" +
	"\x09\xf9\x19\xa1\xea\xcf\x04\x9b\xfc\xf2\x95\xd5\xc7\x2c\x8c\xb0\x09\x86\x2b\x09\x31\x9b\x6c\xbb\x4c\xa1\x54\x5d" +
	"\x1f\x57\x5b\xcc\x1b\x8b\xf3\xa3\x4c\x15\x18\x43\x04\xc9\xad\x18\x7e\xff\xfd\xf7\xdf\xf7\xdf\xbe\xdd\x7f\xfd\x1a" +
	"\xfd\xfc\xf3\xc8\xb6\x47\x4c\xaa\x96\xf2\x70\x10\x10\xdf\xa9\x1b\x37\x85\xdb\x19\x35\x4d\xd2\x2c\xee\xa8\x9b\xba" +
	"\x6c\x78\x1e\xbd\x2c\x89\x9a\xaa\x50\x62\x19\x69\x8c\x61\x99\xc1\x41\x4c\xd7\x07\x47\xc3\x1e\x1a\x1e\xc5\xff\xeb" +
	"\x1f\x9c\xc9\x2c\x45\xb2\xb6\x87\x27\x3d\xa4\x0f\xce\x7a\xe8\xa8\x1f\x35\x3e\xad\x6d\x3d\xec\xf7\x90\x7e\x32\xe8" +
	"\xa1\xe8\x0b\xfd\x83\xb3\x93\x3d\x51\x2b\x2f\xb3\x91\x58\xe8\x38\x0a\x5a\x54\x81\x0f\xe7\x7a\x40\xcf\xa3\xce\xf4" +
	"\x63\x7c\x22\xd2\xa8\x9e\xf9\x79\x52\x36\x4e\xee\x7b\xe9\xa9\xd6\x99\x01\x20\xc9\xb9\x4b\x5a\x84\x0e\x4d\xf5\x9e" +
	"\xd3\x58\xf1\x09\xc0\xf1\x48\x80\x83\xb3\x32\x6b\x06\x0b\x36\x8b\xc8\x26\x80\xc4\x23\x01\x09\x95\xe0\x01\xc0\x04" +
	"\xc0\xa4\x1e\x4c\x00\x42\x00\x42\x0a\x10\x92\x0a\x1c\xbb\x0f\x16\x25\x95\x34\x7a\xa7\x98\x33\x00\x4a\xb1\xd3\xea" +
	"\x49\x09\x52\x28\xf5\xe7\x02\x17\x16\xf8\xd4\x99\xae\x17\x5c\x2e\x7d\x37\x7a\xd9\xa3\xdd\xcc\x08\x49\x1d\x8f\x19" +
	"\xe0\x25\xe9\xb4\x62\xa6\x75\x05\x2c\xc9\x46\x40\xc5\x35\x81\x9e\x6c\xe1\xe2\xe9\x3e\x64\xe4\xc6\xef\x00\x1f\x1b" +
	"\x86\x0f\xb5\xba\xb7\x73\x50\xf2\xce\x35\x09\x00\xc8\xc6\x2f\x18\xb9\x7b\xd2\x1c\xb0\xe1\x84\xf6\xb5\x1c\xbe\x56" +
	"\x79\xb7\x70\x7f\x41\x00\x8c\x4d\xde\x2c\xaa\x2d\xef\x16\xd9\x78\x56\x40\x51\x7f\xbe\x85\xd3\x7b\x79\xf0\xe2\xe5" +
	"\x76\xd0\x7a\xa7\x66\x11\xf3\xe5\x25\xc9\x73\x8d\x84\x4e\xb0\x1b\x7a\x5f\xbf\xb8\xd7\xaf\xae\xb4\x9b\xf0\x9a\xf8" +
	"\x0e\x09\x08\xdb\x8f\x88\x17\xbb\xd2\xbe\x49\xdf\x24\x85\xbc\x20\x5c\x6f\x2c\x69\x02\x81\xd9\xb7\x11\x98\xbd\x55" +
	"\x1a\x95\x35\x86\x67\xcf\xec\xcf\x30\x43\x25\x47\xf1\x1e\x52\x09\x84\xa3\xa6\xd9\x1f\xd2\x66\xf1\x60\xe5\xe7\x7d" +
	"\x31\xf1\x4d\x54\xef\xb9\x66\x0f\x71\x87\xf7\xb4\x24\xfa\xa3\xc7\x0d\xd6\xa2\x75\x44\xed\x73\x15\x56\x6c\x3f\x27" +
	"\xb7\xad\x3b\x38\x28\xd8\xd5\x25\x56\x74\x45\xa3\xb7\xff\xa0\x97\xff\xf7\xc7\x1f\x9e\x6b\x7e\xfe\xfc\xdd\xcb\x1a" +
	"\x7f\x73\x8e\x00\xe8\xfa\xa1\xd6\x08\xaf\xa7\xb2\xbc\xeb\x95\xbe\xda\xcb\x37\x96\x1f\x5e\x34\x2c\xf7\x64\x37\x09" +
	"\x33\xe2\xdc\x33\x48\x9a\xa8\x69\xe5\xc1\xa1\x55\xe8\xfe\x84\xfc\xd8\xe5\x9d\x1f\x5f\xac\xf9\xfa\xdb\xa2\x6a\x66" +
	"\x92\x3d\x24\x45\x4b\x13\x1f\x3b\x2c\xa2\xf8\x2a\x00\x88\x5b\x78\x58\x9d\x02\x36\xa7\xbe\xbc\x7b\xa1\x6e\xad\xf6" +
	"\x2a\x6b\x31\x48\x11\x4b\xef\xe5\x66\x2a\x2d\x0d\x52\x2a\xa6\x46\xdd\x33\x48\x11\x6d\xa1\xc0\x20\x45\x3e\xf5\x67" +
	"\xc5\x2f\x6f\xfb\x11\x45\x9d\xf4\xe2\xee\xbe\x66\x28\x0e\x4c\x81\x38\xf6\x02\x8c\x6c\x56\x02\x93\x66\x51\x54\xc6" +
	"\x52\x58\xe5\xbb\x2d\x8b\xd9\xb0\x0c\xb4\x5c\x5c\x7e\x42\x17\xae\x2f\x9f\x2d\xc0\x4a\xb1\x53\x0e\x2b\x82\xd9\xe4" +
	"\x42\xb0\x62\x78\xe1\xd8\x50\x6d\x7d\xb7\xe4\x76\x20\xd3\x7d\x9c\x96\x6e\x20\xb8\x93\xb7\x06\xc1\x1d\x08\xee\x64" +
	"\x1d\x41\x70\x97\x35\x5a\xa3\xe0\xee\x45\xbd\x48\x4c\xa5\xca\x02\xf9\x52\xb9\x1b\xc8\x97\xd2\x5e\x55\xf9\x52\xc4" +
	"\xae\x74\x4a\xb4\xb4\x65\xaf\xb1\x93\x52\xa1\x54\x32\x74\x22\x08\x80\x1a\x9d\xc6\xde\x27\xe9\x51\xd1\x27\x1e\xf0" +
	"\x56\xf4\x02\x45\xee\x04\x9d\x7b\x9e\x45\x0d\x79\xf8\xc3\xf9\xbd\xca\x38\xd3\x71\x91\x72\x0e\x5f\xab\x2b\xb9\xc6" +
	"\x3e\x53\x6c\xb2\x89\xd9\x4c\x9d\xa5\x3f\xaa\x25\xea\xae\x15\x8f\xcf\xb7\xf4\x9e\x98\xa2\xbf\x67\x4c\x95\x85\x33" +
	"\x68\x3a\xdf\x93\xe5\xcf\xf7\xb4\xf6\x7c\x67\x84\x4e\x67\x81\xcc\x89\x8e\x9f\xfc\x59\xb5\x30\xbd\x39\x47\x48\xfb" +
	"\xc7\xb1\xe8\x79\x1d\x27\xc6\x97\xc6\xd7\xbb\x9d\x2a\x5d\xe9\xf3\x30\x15\xf2\xfa\x19\x35\xc9\x0f\xb6\x17\x3c\xd4" +
	"\xb6\xf8\x17\xf1\x5d\x65\x83\x38\xd4\xa0\xa2\x8e\xaa\x03\xff\xd5\x85\x9b\x0c\xdc\x00\xab\xc3\x39\x64\xc1\x28\x1b" +
	"\xc3\x7a\x68\x16\x75\x78\x4b\x89\x44\x34\xaa\xba\xa3\x66\x20\x09\x61\xa0\x16\xd0\x46\xbc\xc3\xa5\x4b\x9d\x20\xe1" +
	"\xb2\x63\x66\xa2\x8a\xc4\xc4\x37\x88\x13\xe0\x29\x51\x80\xb6\x17\x8d\xe0\x63\x93\x86\x4c\xe2\xae\xc8\x6b\x55\x58" +
	"\xe1\x13\xc7\x24\x3e\x97\xf2\x6a\x13\xcb\xad\x5e\xfc\x5a\x1c\x86\xf8\xd7\x5b\xe2\xfb\xd4\x9c\x5b\x30\x5b\x88\xaa" +
	"\x8a\x46\xe8\xe2\xf2\x53\x4c\x64\x94\x6f\x8d\xa8\xcf\xdf\x86\xfa\xd9\xd0\x10\x2e\xd2\xa5\xd2\x87\x47\x5f\x8e\xfd" +
	"\xaa\x6b\xbf\x3c\x19\x18\x67\xc7\x52\x0b\x3e\x16\x10\xcf\x23\xe6\x2f\xd4\x21\x8b\xc7\xe9\xac\x9d\x5e\x4d\x6a\xf3" +
	"\x7c\x82\x27\xe4\x7a\xb0\x89\x09\x16\xc3\xa1\x47\x93\x0b\x9b\x4f\x6d\x72\x46\x06\xe6\x40\x2e\x85\x2f\xd0\xec\xa1" +
	"\xa2\x81\x02\xab\xe2\xb5\x79\xd8\x20\xd9\x08\x47\x73\x31\x15\xe5\xbe\xc2\x8d\xc1\x02\x6c\xdc\x28\x50\xa3\xbc\xa5" +
	"\x52\x3e\x62\x9e\x67\xd8\xfc\x9b\x0b\x51\xe5\xe7\x8e\x2a\x5f\x8e\x11\x6f\x78\x61\x12\x20\x9e\x11\xc3\x75\x4c\x36" +
	"\xce\x49\x69\xe7\x13\x24\x49\x0f\x1a\x42\xc5\x17\x07\x9c\xeb\x31\x22\x19\x00\x42\xc5\x6f\x3f\x54\x7c\x8b\x6b\xa9" +
	"\x4c\x07\x2f\x7d\xd7\x26\xc1\x8c\x84\x52\x88\x4f\x85\x5d\x7a\xbf\xdf\x47\x2f\x10\x0b\xed\xdd\x0c\x57\xc7\x29\x3e" +
	"\x8f\x33\x4c\xe7\x7f\x8e\xf2\x3f\x45\x8a\xc1\x59\xc7\x11\x0b\xed\xb1\x8f\x03\xf2\x35\x1b\xec\xd5\x95\xf6\x9d\xc3" +
	"\x8a\x36\x45\xaf\xfe\x73\xa5\x45\x34\x22\x2a\x2b\x7f\xe0\xbf\x5e\x5d\x69\xf2\xd2\xcb\x5f\x5f\xb7\x90\xbb\xd5\x23" +
	"\x79\x43\xda\x7d\xea\xb0\x00\xab\x59\xf6\xb6\x82\xa4\xf8\xbd\x90\x53\x9e\x39\x58\xbb\x8c\xa4\x5d\x6c\x8e\xa9\x5b" +
	"\xe8\xee\x6c\x8f\x68\x20\xbc\x5c\x52\x78\xd9\x00\xb4\x6b\x14\x5b\x46\x24\xc1\x26\xd8\xd9\x8b\xb9\x8b\xdd\xa4\x38" +
	"\x2a\xda\xf5\x13\x59\xc8\x98\xc3\x55\x44\x0d\xf6\xaa\x3c\x48\x39\xa0\x95\x9a\x0f\x59\xc4\xfe\xaf\xca\x41\xe4\x06" +
	"\x81\xe9\x68\x3d\x6e\xc3\xb7\xfb\x1d\x9f\xc5\x9b\x04\xbe\xf6\xf6\xf2\x86\xb2\xea\x8d\x48\x61\x9f\x0d\x23\xf2\x54" +
	"\x64\xb1\x6b\x7c\xb0\x02\xf1\x05\xe2\x1b\x37\x5a\x88\xf8\x26\x90\x15\x91\x5f\x04\xf4\x57\x93\x71\xf1\x40\x7f\xe7" +
	"\x9f\x6d\xc7\xe8\xef\x4e\x4d\xcf\x4e\xe4\xc8\xba\xfc\x54\x4a\x8b\x25\xd3\x0c\xed\x52\x87\xdf\x05\x36\xb5\xa8\xe1" +
	"\xfa\x42\x34\x02\xc8\x8d\xd5\xb9\xdc\x58\x87\xb5\x4f\x4d\xc7\x75\xa4\x4f\x38\xc8\x8b\xf5\x8c\xf2\x62\x15\xfb\x82" +
	"\xe6\x36\x2f\xae\x09\x22\x3a\xac\xc5\xd4\x06\xd5\xad\xb0\x1b\xa0\xbb\x2d\xd4\x81\xee\x76\xeb\xba\xdb\x72\x4e\xe4" +
	"\x8d\x6b\x6f\x93\x8f\x77\x58\x81\x9b\xcc\xb0\xb3\x3a\xdc\xf6\xc7\x07\x6a\xdc\xe2\x6f\x55\xfb\x0b\x9a\xdc\x25\x35" +
	"\xb9\x1b\xc9\xf6\xbd\x5a\xfd\x2d\x88\x4d\x8b\x3f\xd0\xdf\xb6\x99\x39\xe8\x6f\x53\xfd\x2d\x0b\xed\xdd\x5c\x5d\x2a" +
	"\xa2\x7f\x17\x15\xb1\xeb\xd7\xb4\x36\xdf\x34\x6b\xd2\xb5\x36\xb1\x60\x20\xf1\x6f\x37\x4d\x90\xf8\xd7\xa8\x5b\x13" +
	"\x20\x03\x91\x3f\xd8\x7e\x95\x7e\x4f\x46\xe4\xbf\xde\x27\x26\xd0\x60\xa0\xc1\x71\xa3\xa5\xb4\xae\x40\x85\x41\xf1" +
	"\x2a\x6b\xf3\x64\xa8\xf0\x4e\x4d\xcf\x2e\x28\x5e\xe3\xc8\x2f\x4d\xba\x57\xd0\xb4\xe6\xb5\xdd\xd4\xb4\x2a\x14\x7f" +
	"\xf9\x73\xb2\xa3\x2a\x49\xd0\xb6\x16\x3a\xae\x5f\xdb\xba\x23\xf9\x74\x21\x1b\x72\x25\x6b\xae\xc6\x8c\x19\xb1\xf1" +
	"\x6f\x79\xca\xd5\xe3\x62\x65\xf0\x10\xd3\x10\x13\xfb\x37\xc5\x5e\x92\x2c\xc6\x5a\x40\x6c\xcf\xc2\x01\x75\xa6\x8b" +
	"\xa5\x57\x5d\x49\x4a\xf3\x9a\x04\x71\x99\x70\x2a\x6d\xd3\x04\x94\x5b\x4c\x69\xae\x0e\xd7\x29\x7e\x7d\x25\x99\xc7" +
	"\xdf\x29\x33\x51\xb4\xcc\x3c\xee\x48\x12\xc6\x6e\x2e\xe5\xf8\x3c\xfb\x05\x99\xc1\xf3\x5f\x05\xe6\xd7\x84\x93\xb4" +
	"\x1e\x1d\xe9\x23\xc3\xc4\xb9\x72\xdb\xaf\x09\x5f\x4b\x89\x9e\x16\xc5\x59\x45\x9a\xa2\xed\xe2\xed\x92\xbb\x0b\xd8" +
	"\x9d\xff\x36\x82\xdd\xe7\x82\x91\x0a\x2a\xa2\xb7\x34\x8e\xd7\x77\xe3\x31\x96\x89\x3e\x1a\x25\x5c\x5b\x24\x04\x05" +
	"\x39\x44\x7b\xf8\x4c\x64\x14\x72\x30\x8f\xda\xc4\x25\x6a\x2a\x21\x02\x71\x89\x4a\x48\x9f\x21\x19\x91\x90\xa5\x0f" +
	"\xca\x48\x83\xb4\x6b\x4a\x19\xa4\x3d\x37\x47\x16\x36\xbc\xd7\x40\x33\xf2\x5f\x13\xcd\x68\x45\x13\x86\x76\xed\x8d" +
	"\x3f\xb4\x9b\x6f\x7c\x25\xfc\xd7\xbd\xf8\x32\xf8\x2d\xc9\xed\x6a\x21\x59\x98\xa6\x4c\x00\x95\x88\xdd\xb8\xd0\x43" +
	"\x2e\xe5\x6b\x5a\x7c\xfd\xf2\x45\xb9\x54\x0d\x82\x49\xc6\x6f\x05\x8a\x29\x50\x18\x6e\xa2\x57\x56\xbe\x21\x73\x32" +
	"\xfc\xad\xf8\xbe\x8b\x25\xc9\xa5\x97\xdd\x24\x16\x5e\x69\x8e\x7b\xb7\xaf\x97\xa5\x33\x5a\xe0\x26\x35\x9a\x72\x38" +
	"\x8f\x1a\x37\xdc\xde\xb0\x34\x68\x82\x8e\x99\xf0\x5f\x3c\x27\x6d\x28\xd8\xb0\xea\xa2\x59\xeb\xa1\x58\xa4\x57\xf7" +
	"\x4e\xdc\x4d\x4d\x17\x8b\x0e\xfb\x62\x2b\x41\x16\x35\x10\x4a\xf4\x92\xe8\xf3\x73\x79\x77\xa8\x4d\xc6\x2a\x38\x6c" +
	"\x37\x2b\x71\x0a\xc7\xe2\x14\xc4\x59\x0d\x8e\xc4\xa2\x2a\xb5\xd7\x4e\x84\x92\xc3\x7e\x79\x35\xca\x43\xfd\xd3\xe5" +
	"\x96\x71\x5a\x49\x5e\x90\x0a\x23\x2f\x89\x8f\xca\x49\x4a\xb3\x78\x61\x65\x79\x64\x49\x48\x11\x72\xbb\x66\x0d\xdf" +
	"\x99\xc4\xff\x77\xb1\xe2\x36\x93\x5b\x1c\xa6\xd1\xcc\x62\x40\xde\x41\xa8\xac\x60\xd8\x4f\x2e\x9f\x83\x2f\xcc\x75" +
	"\x46\xbc\xcd\x5f\xfb\x49\x97\x1c\xfa\x34\xec\x38\x6e\x80\xd3\x53\x59\x40\x8a\x71\x1d\x52\x2b\x78\xe3\x48\x23\xb4" +
	"\x09\x86\xe7\x3f\xf9\x78\x82\x1d\x2c\x9a\x9e\x23\xa4\x11\x87\x47\x93\x53\x5c\xd4\x35\x86\x7b\x1a\x35\x5c\xe7\x22" +
	"\xb5\xc0\xe4\x81\x4d\xfb\x3d\x34\xd0\xf5\x1e\x1a\x0c\x87\x3d\xa4\x8b\x7a\x0c\x2d\x36\xc4\x18\x21\xbd\x2f\xde\x54" +
	"\x29\x4d\x3d\xcf\xb7\x06\xfd\x1d\x9d\x5b\xc4\x0f\x24\x6f\xfe\xe8\xfa\xe7\xcb\x97\x5c\x79\x09\x01\x32\x31\x9b\x5d" +
	"\xbb\xd8\x37\xe7\xa5\x40\xc4\xa4\x81\x74\x53\xb4\xa9\x43\x02\xae\x64\x29\xdf\x0a\xb1\xd0\xf8\x63\x26\xca\x2e\xcc" +
	"\x29\x36\x95\x3f\x2c\x95\x04\xc4\xc7\x09\xcb\xa8\x0f\x87\x27\x67\xa7\xc7\xc7\xfa\xe0\xe8\xb8\x10\x0a\x4d\x6a\xbd" +
	"\x5d\x88\x8a\x57\x58\x42\xe7\xc2\xfd\xf5\xeb\xee\xf9\xc4\x73\xa0\x6a\xac\xde\x22\xde\xdf\x45\x8c\x57\xfb\xff\xa4" +
	"\x26\x41\x69\xa8\xc5\x5f\xaf\xbf\x10\x43\x00\x8f\x45\x62\xfb\x2d\x9d\x81\xc3\x24\xcc\xf0\xa9\x97\x3e\x05\x04\x1f" +
	"\x8f\x75\x24\xe8\x90\xa4\xe2\xa8\x71\xf6\x68\x3e\x97\xaa\x19\x7f\xe7\x12\x74\x88\xeb\x85\x04\x1d\xf2\xa9\x2b\xcd" +
	"\xe5\x9f\x62\x5c\xec\x6d\x87\x4a\xcf\xd3\x6d\x49\x4f\x75\x85\x09\x3a\x4c\x62\x4c\x97\x4f\xbb\x00\xc0\xf1\xa8\xe2" +
	"\xe8\x6f\x22\x6f\x0b\x80\xc4\xe6\xf3\xf7\x0b\x42\x26\x00\x13\x00\x93\x7a\x30\x01\x08\x01\x08\x29\x27\xee\x7f\x24" +
	"\x60\x51\x16\xc6\x40\x32\x9f\xed\x90\x12\xa4\x50\xc5\x76\x2e\xad\xcf\xa5\xef\x46\x2f\x7b\xb4\x9b\x19\x8c\x48\xad" +
	"\x62\x01\x5e\x8a\x9d\x56\xcc\xb4\xae\x80\x25\xd9\x08\xa8\xb8\x26\xd0\x93\x2d\x5c\x3c\xdd\x87\x8c\x2c\xd1\x2f\xc0" +
	"\xc7\xa6\xe1\x23\x53\xb7\x77\x1f\x4a\x20\xbb\xe0\xb6\xf2\x95\x2e\x07\x1b\x9b\xc8\x3c\x79\x19\xbb\x2d\x01\x60\x6c" +
	"\xf2\x66\x51\x6d\x79\xb7\xc8\xc6\xb3\x02\x0a\x48\x3c\x09\x89\x27\x57\x36\xcd\xe7\x9a\x78\x32\x0b\xfa\x83\x19\x2a" +
	"\xf9\xa0\xf6\x90\x4a\x20\x1c\x35\xcd\xfe\x90\x36\x8b\x07\x2b\x3f\xef\x8b\x41\x45\xa2\x7a\xcf\x35\x7b\x88\x87\x40" +
	"\x4a\x4b\xa2\x3f\x7a\xdc\xe9\x35\x5a\x47\xd4\x3e\x57\x61\xd5\xa7\xc7\x2c\xd8\x51\x2e\xe2\x38\x1b\x37\x70\x18\xaf" +
	"\xcf\x9c\x60\xeb\xcc\x2e\x7b\x2a\x5b\xcb\x5e\xe9\xdb\xbd\x7c\x7b\xf9\x11\xa6\xbe\xb5\xc8\x24\xcc\x88\x03\x80\x20" +
	"\x5d\x76\x4a\x90\xd7\xb3\xdc\x0d\x5c\x6a\xd3\x5e\xd5\xbc\x9e\xd9\x73\xb2\x53\xc9\x3d\x97\xb3\x5a\x59\x8b\x59\x8a" +
	"\x58\x7a\x2f\x37\x56\x69\x69\x96\x52\xb1\x3e\xea\x9e\x59\x8a\x68\x1e\x05\x66\x29\xf2\xa9\x3f\x2b\xae\x79\xdb\x4f" +
	"\x29\xea\xa4\xd7\x77\xf7\xf5\x43\x71\xf4\x00\xc4\xb1\x17\x60\x64\xb3\x72\x98\x34\x4e\x9d\xd2\xfb\x7d\x95\xaf\xb7" +
	"\xcc\xcb\x7e\x19\x68\xb9\xb8\xfc\x84\x2e\x5c\x5f\x3e\x5b\x80\x95\x62\xa7\x1c\x56\x04\xb3\xd0\x85\x60\xc5\xf0\xc2" +
	"\xb1\xa1\xda\xfa\x6e\x49\xef\x40\xb2\xfb\x38\xed\xdd\x40\x7c\x27\x6f\x0d\xe2\x3b\x10\xdf\xc9\x3a\x82\xf8\x2e\x6b" +
	"\xb4\x46\xf1\xdd\x8b\x7a\xc1\x98\x4a\xa1\x05\xf2\xa5\x72\x37\x90\x2f\xa5\xbd\xaa\xf2\xa5\x88\x5d\xe9\x94\x68\x69" +
	"\xcb\x8e\x64\x27\xa5\x42\xa9\x64\xe8\x44\x10\x00\x35\xfa\x91\x65\x7e\xa0\x3c\xef\xaf\x2c\x3b\x98\x3b\x41\x17\xd2" +
	"\x67\xf3\x22\x7e\x65\x90\x79\x48\x7a\xb6\xa7\xb5\x67\xdb\x90\x78\xe8\xac\x5a\x08\x79\x87\xf2\x3a\xc8\x3b\xa4\xc2" +
	"\x8a\x8d\xe5\x1d\x6a\x4a\x2c\xbe\xd6\xac\x43\xb5\xe9\xc5\xb7\x9f\x72\xa8\x21\x05\xef\x76\xf3\x0d\x45\x93\x83\x64" +
	"\x43\x6b\x4a\x36\x54\xbb\xb9\x90\x69\x68\xc9\x4c\x43\x86\x17\x26\x79\x46\x18\x31\x5c\xc7\x64\xe3\x9c\x94\x76\x3e" +
	"\xe7\x10\xe4\x0d\x28\xfe\x20\xe7\x50\x9b\x99\x43\xce\xa1\x54\xd0\xa5\xf7\xfb\x7d\xf4\x82\x47\xcb\xcf\x70\x75\x9c" +
	"\xe2\xf3\xb8\x9c\x33\x68\x94\xff\x29\x52\x0c\xce\x3a\x8e\x58\x68\x8f\x7d\x1c\x90\x42\xaa\xa2\xff\x74\x26\x57\x51" +
	"\x43\x32\x82\xf5\xa7\x32\x6a\xe2\xed\xd6\x94\xc8\xa8\x96\xab\x83\x0c\x1a\xdd\x96\x5c\x76\x3c\x83\x46\x9c\xc5\xc8" +
	"\xf0\xc2\xcd\xe4\xce\x28\x99\x00\x76\x32\x81\x06\xa4\x40\x2c\xfe\x9e\x8c\x34\x76\x8d\xcf\x56\xa0\xc0\x40\x81\xe3" +
	"\x46\x4b\xe5\x30\x32\xbc\x70\x43\x09\x8c\xba\x4f\x84\x21\x8b\x51\xf1\xf7\x64\x88\xf0\x4e\x4d\xcf\x2e\x64\x31\xba" +
	"\xb8\xfc\xd4\x94\xc2\x08\xed\x52\x87\x5f\x08\x36\xb5\xa8\xe1\xfa\x42\x68\x02\x48\x6a\xd4\xb9\xa4\x46\x87\xb5\x8f" +
	"\x4e\xc7\x75\xa4\x8f\x39\x48\x68\xf4\x8c\x12\x1a\x15\xfb\x82\x12\x37\x2f\xae\x89\x28\x3a\xac\xc5\xd4\x06\x2d\xae" +
	"\xb0\x1b\xa0\xc6\x2d\xd4\x81\x1a\x77\xeb\x6a\xdc\xe6\xac\xe5\x6b\x55\xe4\x36\xe5\x2e\xdf\xbe\x2e\xb7\x39\xb7\xef" +
	"\x76\xd5\xb9\xed\x8f\x0f\x34\xba\xc5\xdf\xaa\xf6\x17\x94\xba\x4b\x2a\x75\x13\xbf\x9c\x58\x4b\xc3\x59\xb9\xce\xab" +
	"\x72\x41\x76\x5a\xfc\x81\x2a\xb7\xcd\xcc\x41\x95\x9b\xaa\x72\x59\x68\xef\xe6\x8a\x53\x11\xfd\x3b\xa9\x93\x5d\xbf" +
	"\xd2\xb5\xf9\xaa\x59\x93\xda\xb5\x89\x07\x03\xb9\x7f\xbb\x69\x82\xdc\xbf\x46\xf3\x9a\x00\x19\x08\xfe\xc1\x18\x4c" +
	"\xfc\x3d\x19\xc1\xff\x7a\x1f\x9a\x40\x88\x81\x10\xc7\x8d\x96\x52\xc0\x02\x29\x46\xa0\x83\x7d\xf2\xa4\x78\xa7\xa6" +
	"\x67\x17\x74\xb0\x71\x2c\x98\x26\x35\x2c\x28\x5d\xf3\xda\x6e\x2a\x5d\x15\x3a\xc0\xfc\x61\xd9\x51\xed\x24\x28\x5e" +
	"\x0b\x1d\xd7\xaf\x78\xdd\x91\x7c\xba\x90\x2b\xbb\x92\x5f\x57\x63\xc6\x8c\xd8\xf8\xb7\x2c\x23\xab\x7e\x5c\xac\x0c" +
	"\x1e\x62\x1a\x62\x62\xff\xa6\xd8\x4b\x92\xe3\x5a\x0b\x88\xed\x59\x38\xa0\xce\x74\xb1\x1c\xac\x90\xd7\x7e\x8e\x5c" +
	"\xeb\xea\x08\x9f\xe2\xd7\x57\x91\x94\xfe\x9d\x32\x83\x45\xbb\xd4\xf4\x8e\x24\xe9\xec\xe6\x32\xd3\xcf\xb3\x5b\x90" +
	"\x56\x3e\xff\x35\xa5\x95\x07\x94\x5d\x0e\x08\x0b\x6f\x1d\x35\x88\x56\x9e\x36\xeb\xc1\xef\x52\x42\xa9\x05\x71\x5c" +
	"\x91\x0d\x69\xbb\x78\xbe\x9a\x2d\x06\xa2\x90\xff\xba\x40\x14\x14\x04\xa0\x4b\xe8\x5e\x10\x5e\xcc\x0d\x80\x89\x7c" +
	"\x43\x0e\xce\x49\xd3\xb8\x30\x6a\xbe\x1e\x8a\x20\xcb\x49\xd4\x8e\x0e\x48\x7b\x6e\x8e\x08\x6c\x73\xe3\x81\x4e\xe4" +
	"\xbf\x26\x3a\xd1\x8a\x0e\x0c\xed\x5a\x32\x30\xb4\x9b\x49\x80\x12\x19\xea\xde\x8e\x19\x30\x97\x24\x80\xb5\x60\x2d" +
	"\x4c\x53\x26\xca\x4a\x04\x78\x5c\x7c\x22\x97\x17\x36\x2d\xbe\x7e\xf9\xa2\x84\xab\x06\xdb\x24\xe3\xb7\x02\xc5\x14" +
	"\x28\x0c\x37\xd1\x55\x2b\x5f\xa3\x39\x3f\xf6\xad\xf8\x52\x8c\x05\xd3\xa5\x37\xe2\x24\x16\x83\x69\x8e\x7b\xb7\xaf" +
	"\x97\xe5\x3c\x5a\xe0\x26\x35\x9a\x72\x38\x8f\x1a\x37\xdc\x88\xb1\x34\x68\x82\x8e\x99\x2e\x41\x3c\x27\x6d\x28\x18" +
	"\xc6\xea\xa2\xad\xec\xa1\x58\xa4\x57\xf7\x4e\xdc\x4d\x4d\x17\x8b\x0e\xfb\x62\x2b\x41\xaa\x35\x10\x4a\xf4\x92\x10" +
	"\xf5\x73\x79\x77\xa8\x4d\xc6\x2a\x38\x6c\x37\x2b\x71\x0a\xc7\xe2\x14\xc4\x59\x0d\x8e\xc4\xa2\x2a\xe9\xd7\x4e\x84" +
	"\x92\xc3\x7e\x79\x35\xca\x43\xfd\xd3\xe5\xe6\x76\x5a\x49\xf2\x90\xb9\x96\xc4\xf7\xc1\xfe\x3f\xa9\x49\x50\x16\x86" +
	"\xac\x2c\xd4\x2c\x49\x3a\x42\x6e\x27\xad\xe1\x3b\xf3\xdf\x77\xc5\x67\xac\x76\x9b\x09\x3f\x06\x69\x20\xad\x18\x86" +
	"\x77\x10\x2a\xab\x2a\xf6\xb3\x9b\xe3\xe0\x0b\x73\x9d\x11\x6f\xf5\xd7\x7e\xd2\x29\x07\x3d\x0d\x3b\x8e\x1b\xe0\xf4" +
	"\x48\x16\x10\x86\x5c\x87\xd4\x0a\xde\x38\xd2\xd0\x6f\x82\x29\xfb\x4f\x3e\x9e\x60\x07\x8b\xc6\xec\x08\x69\xc4\xe1" +
	"\x61\xea\x14\x57\x76\x8d\x29\xa0\x46\x0d\xd7\xb9\x48\x6d\x3a\x79\xc4\xd4\x7e\x0f\x0d\x74\xbd\x87\x06\xc3\x61\x0f" +
	"\xe9\xa2\x3a\x44\x8b\x2d\x3b\x46\x48\xef\x8b\xd7\x54\x4a\x50\xcf\xf3\xad\x41\x7f\x47\xe7\x16\xf1\x03\x89\x6c\x20" +
	"\x62\x04\xf8\xf2\x25\xf7\x5d\x42\x7d\x4c\xcc\x66\xd7\x2e\xf6\xcd\x79\xc9\x0f\x31\x69\x20\xdd\x14\x6d\xea\x90\x80" +
	"\xeb\x6a\xca\x57\x42\x2c\x7b\xfe\x98\x49\xc4\x0b\x73\x8a\x8d\xef\x0f\xf5\x62\x49\x40\x7c\x9c\x70\x92\xfa\x70\x78" +
	"\x72\x76\x7a\x7c\x3c\x38\x3b\x39\x29\x24\x6c\x90\xda\x83\x17\xc2\xed\x15\x96\xd0\xb9\x38\x82\xfd\xba\x4b\x3e\xf1" +
	"\x45\xa8\x9a\xbf\xb7\x08\x24\x98\x86\x6d\xfc\xf5\xfa\x0b\x31\x04\x88\x58\x24\x56\xe0\xd2\xd9\x3c\x4c\xc2\x0c\x9f" +
	"\x7a\xe9\xa3\x40\x70\x14\x59\x47\xb2\x0f\x49\x5a\x8f\x1a\x8f\x91\xe6\xa3\xa8\xfa\x02\x74\x2e\xd9\x87\xe8\x38\x03" +
	"\xc9\x3e\xe4\x53\x57\xda\xdc\x3f\xc5\x18\xdb\xdb\x0e\xbb\x9e\x27\xf0\x92\x9e\xea\x0a\x93\x7d\x98\xc4\x98\x2e\x9f" +
	"\xc2\x01\x80\xe3\x51\xc5\xe4\xdf\x44\x0e\x18\x00\x89\x0d\x82\x84\x4a\xc2\x04\x60\x02\x60\x52\x0f\x26\x00\x21\x00" +
	"\x21\xa5\x84\xcd\xe6\x23\x01\x8b\x92\xca\x10\x12\x03\x6d\x89\x94\x20\x85\xd6\xb5\x73\x29\x82\x2e\x7d\x37\x7a\xd9" +
	"\xa3\xdd\xcc\x94\x44\x6a\x4f\x0b\xf0\x52\xec\xb4\x62\xa6\x75\x05\x2c\xc9\x46\x40\xc5\x35\x81\x9e\x6c\xe1\xe2\xe9" +
	"\x3e\x64\x64\x49\x83\x01\x3e\x36\x0d\x1f\x99\xae\xbd\xfb\x50\x02\x99\x0a\xb7\x95\xfb\x74\x39\xd8\xd8\x44\x16\xcb" +
	"\xcb\xd8\xeb\x09\x00\x63\x93\x37\x8b\x6a\xcb\xbb\x45\x36\x9e\x15\x50\x40\x12\x4b\x48\x62\xb9\xb2\x69\x3e\xd7\x24" +
	"\x96\x59\xe4\x20\xcc\x50\xc9\x85\xb5\x87\x54\x02\xe1\xa8\x69\xf6\x87\xb4\x59\x3c\x58\xf9\x79\x5f\x0c\x4c\x12\xd5" +
	"\x7b\xae\xd9\x43\x3c\x8e\x52\x5a\x12\xfd\xd1\xe3\x3e\xb3\xd1\x3a\xa2\xf6\xb9\x0a\xab\x3e\xd5\x66\xc1\x88\x72\x69" +
	"\xbf\xdb\xcc\x7d\xb6\xce\xe6\xb2\xa7\xb2\xb0\xec\x95\xbe\xdd\xcb\xb7\x97\x1f\x61\xea\x95\x8b\x4c\xc2\x8c\x38\x88" +
	"\x08\xd2\x65\xa7\x04\x39\x42\xcb\xdd\xc0\x19\x37\xed\x55\x35\x36\xc9\x9e\x93\x9d\x4a\x14\xba\x9c\xd5\xca\x5a\xcc" +
	"\x52\xc4\xd2\x7b\xb9\xb1\x4a\x4b\xb3\x94\x8a\xc1\x51\xf7\xcc\x52\x44\x8b\x28\x30\x4b\x91\x4f\xfd\x59\x71\xcd\xdb" +
	"\x7e\x4a\x51\x27\xbd\xbe\xbb\xaf\x1f\x8a\xe3\x0e\x20\x8e\xbd\x00\x23\x9b\x95\xc3\xa4\xc1\xee\x94\x7e\xf3\xab\x7c" +
	"\xbd\x65\xfe\xf9\xcb\x40\xcb\xc5\xe5\x27\x74\xe1\xfa\xf2\xd9\x02\xac\x14\x3b\xe5\xb0\x22\x98\x85\x2e\x04\x2b\x86" +
	"\x17\x8e\x0d\xd5\xd6\x77\x4b\x7a\x07\x92\xdd\xc7\x69\xef\x06\xe2\x3b\x79\x6b\x10\xdf\x81\xf8\x4e\xd6\x11\xc4\x77" +
	"\x59\xa3\x35\x8a\xef\x5e\xd4\x0b\xc6\x54\x0a\x2d\x90\x2f\x95\xbb\x81\x7c\x29\xed\x55\x95\x2f\x45\xec\x4a\xa7\x44" +
	"\x4b\x5b\xf6\x1d\x3b\x29\x15\x4a\x25\x43\x27\x82\x00\xa8\xd1\x75\x2c\x73\xfe\xe4\x69\x84\x65\x29\xc6\xdc\x09\x52" +
	"\x05\x30\x5a\xc4\xb3\x0c\x12\x18\x49\x4f\xf7\xb4\xf6\x74\x1b\xf2\x17\x9d\x55\x0b\x21\x7d\x51\x5e\x07\xe9\x8b\x54" +
	"\x58\xb1\xb1\xf4\x45\x4d\x99\xca\xd7\x9a\xbc\xa8\x36\x5f\xf9\xf6\x33\x17\x35\xa4\xf3\xdd\x6e\xda\xa2\x68\x72\x90" +
	"\xb3\x68\x4d\x39\x8b\x6a\x37\x17\x12\x16\x2d\x99\xb0\xc8\xf0\xc2\x24\x5d\x09\x23\x86\xeb\x98\x6c\x9c\x93\xd2\xce" +
	"\xa7\x2e\x82\xc4\x03\xc5\x1f\xa4\x2e\x6a\x33\x73\x48\x5d\x94\x8a\xba\xf4\x7e\xbf\x8f\x5e\xf0\x70\xfb\x19\xae\x8e" +
	"\x53\x7c\x1e\x97\x33\x0f\x8d\xf2\x3f\x45\x8a\xc1\x59\xc7\x11\x0b\xed\xb1\x8f\x03\xd2\xc9\x8c\x47\x0d\xd9\x0c\xd6" +
	"\x9f\x10\xa9\x89\xb7\x5b\x53\x3a\xa4\x5a\xae\x0e\x52\x70\x74\x5b\x76\xd9\xf1\x14\x1c\x71\x2e\x24\xc3\x0b\x21\xf9" +
	"\x06\x64\x52\x14\x7f\x4f\x46\x1e\xbb\xc6\x67\x2b\x50\x60\xa0\xc0\x71\xa3\xa5\x92\x20\x19\x5e\x08\x19\x90\x20\x03" +
	"\x92\xe4\xf7\x64\x88\xf0\x4e\x4d\xcf\x2e\x64\x40\xba\xb8\xfc\xd4\x94\xfe\x08\xed\x52\x87\x5f\x08\x36\xb5\xa8\xe1" +
	"\xfa\x42\x70\x02\x48\x88\xd4\xb9\x84\x48\x87\xb5\x8f\x4e\xc7\x75\xa4\x8f\x39\x48\x86\xf4\x8c\x92\x21\x15\xfb\x82" +
	"\x12\x37\x2f\xae\x89\x29\x3a\xac\xc5\xd4\x06\x2d\xae\xb0\x1b\xa0\xc6\x2d\xd4\x81\x1a\x77\xeb\x6a\xdc\xe6\xdc\xe7" +
	"\x6b\x55\xe4\x36\x65\x40\xdf\xbe\x2e\xb7\x39\x39\xf0\x76\xd5\xb9\xed\x8f\x0f\x34\xba\xc5\xdf\xaa\xf6\x17\x94\xba" +
	"\x4b\x2a\x75\x13\xcf\x9c\x58\x4b\xc3\x59\xb9\xce\xab\x72\x41\x76\x5a\xfc\x81\x2a\xb7\xcd\xcc\x41\x95\x9b\xaa\x72" +
	"\x59\x68\xef\xe6\x8a\x53\x11\xfd\x3b\xa9\x93\x5d\xbf\xd2\xb5\xf9\xaa\x59\x93\xda\xb5\x89\x07\x03\xb9\x7f\xbb\x69" +
	"\x82\xdc\xbf\x46\xf3\x9a\x00\x19\x08\xfe\xc1\x18\x4c\xfc\x3d\x19\xc1\xff\x7a\x1f\x9a\x40\x88\x81\x10\xc7\x8d\x96" +
	"\x52\xc0\x02\x29\x46\xa0\x83\x7d\xf2\xa4\x78\xa7\xa6\x67\x17\x74\xb0\x71\x34\x98\x26\x35\x2c\x28\x5d\xf3\xda\x6e" +
	"\x2a\x5d\x15\x3a\xc0\xfc\x61\xd9\x51\xed\x24\x28\x5e\x0b\x1d\xd7\xaf\x78\xdd\x91\x7c\xba\x90\x1d\xbb\x92\x51\x57" +
	"\x63\xc6\x8c\xd8\xf8\xb7\x2c\x11\xab\x7e\x5c\xac\x0c\x1e\x62\x1a\x62\x62\xff\xa6\xd8\x4b\x92\xd5\x5a\x0b\x88\xed" +
	"\x59\x38\xa0\xce\x74\xb1\xc4\xab\x2b\xc9\x5e\x5f\x93\x3a\x2e\x93\x53\xa5\x6d\x9a\x80\x72\x8b\x29\xec\xd5\x21\x3c" +
	"\xc5\xaf\x27\xcc\xa0\x48\x6f\x4b\x29\xe7\xe5\x70\x95\xe5\x9c\x57\x39\x69\x17\x32\xcf\xcb\x47\x48\x93\xcb\x3a\x92" +
	"\x54\xb2\x9b\xcb\x3c\x3f\xcf\x7e\x41\xa6\xf8\xfc\xd7\x94\x29\x7e\x25\x38\x79\x2e\x68\xb4\x51\x11\x1f\xa5\xd1\x7f" +
	"\xbe\x1b\x8f\xb1\xec\x85\xd4\xf8\x10\xee\x16\xd2\x16\x1e\x33\x6a\x10\xad\xbc\x5d\x94\x18\x2e\x82\x6b\x09\xc3\xa5" +
	"\x2c\x49\x86\xe0\xa5\x9c\x51\x6a\x24\x97\x0e\x92\xe2\xb8\x22\xe1\xd1\x76\xf1\x7c\x35\x5b\x0c\x44\x21\xff\x75\x81" +
	"\x28\x28\x08\x40\x97\xd0\xbd\x20\x9d\x98\x1b\x00\x13\x01\x86\x1c\x9c\x93\xa6\x71\x61\xd4\x7c\x3d\x14\x41\x96\x76" +
	"\xa8\x1d\x1d\x90\xf6\xdc\x1c\x11\xd8\xe6\xc6\x03\x9d\xc8\x7f\x4d\x74\xa2\x15\x1d\x18\xda\xb5\x64\x60\x68\x37\x93" +
	"\x00\x25\x32\xd4\x3d\x0e\x33\x60\x2e\x89\xf8\x6a\xc1\x5a\x98\xa6\x4c\x56\x95\x48\xe8\xb8\x7c\x44\x2e\x10\x6c\x5a" +
	"\x7c\xfd\xf2\x45\x11\x56\x0d\xb6\x49\xc6\x6f\x05\x8a\x29\x50\x18\x6e\xa2\x8c\x56\x3e\x37\x73\x7e\xec\x5b\xf1\x29" +
	"\x18\x4b\x9e\x4b\x8f\xc0\x49\x2c\xe7\xd2\x1c\xf7\x6e\x5f\x2f\x0b\x72\xb4\xc0\x4d\x6a\x34\xe5\x70\x1e\x35\x6e\xb8" +
	"\x95\x62\x69\xd0\x04\x1d\x33\x65\x81\x78\x4e\xda\x50\xb0\x7c\xd5\x45\x63\xd8\x43\xb1\x48\xaf\xee\x9d\xb8\x9b\x9a" +
	"\x2e\x16\x1d\xf6\xc5\x56\x82\xd8\x6a\x20\x94\xe8\x25\x29\xe9\xe7\xf2\xee\x50\x9b\x8c\x55\x70\xd8\x6e\x56\xe2\x14" +
	"\x8e\xc5\x29\x88\xb3\x1a\x1c\x89\x45\x55\xd2\xaf\x9d\x08\x25\x87\xfd\xf2\x6a\x94\x87\xfa\xa7\xcb\xed\xe9\xb4\x92" +
	"\x68\x21\x95\x5b\x5e\x26\xb9\xe6\xe2\xe4\x1d\x59\xa8\xb1\xb2\xd8\xb2\x24\xcb\x08\xb9\x25\xb4\x86\xef\x4c\xcc\xcc" +
	"\x7f\xdf\x15\xdf\xb2\xda\x6d\x26\xe1\x18\xa4\x51\xf2\x23\x38\x36\x31\x9b\x5d\xbb\xd8\x37\x3d\xdf\xbd\xa5\x26\xf1" +
	"\xd9\xc1\x03\xb6\xad\x11\xfa\x6b\x9f\xb7\xc2\x1e\x4d\x64\x23\x69\x74\xfd\xac\xe1\x88\xff\xb9\x8f\x4c\xca\xf0\xb5" +
	"\x45\x5e\x13\x8b\xc4\xfa\xb5\x22\xa5\x24\x26\xe5\x91\xe2\x4a\x62\xb0\x89\x6b\x99\xc4\x1f\xa5\x37\x5f\x52\xca\x03" +
	"\x0a\x54\xca\x92\x53\x1f\x65\xeb\xf0\x70\x30\x1b\xa1\x97\xb7\xd8\x7f\x69\xd1\xeb\x97\x53\x1f\x4f\xb0\x83\x5f\x66" +
	"\xcb\x60\x2f\x2b\x03\xf8\xd3\x37\x66\x9e\x18\x20\x42\xec\x11\x9a\x50\x8b\xec\xfc\xff\x00\x00\x00\xff\xff\x39\x0f" +
	"\x83\x86\xbc\x71\x03\x00")

func bindataConfigMapDashboardsconfigyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataConfigMapDashboardsconfigyaml,
		"ConfigMap/dashboards-config.yaml",
	)
}



func bindataConfigMapDashboardsconfigyaml() (*asset, error) {
	bytes, err := bindataConfigMapDashboardsconfigyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ConfigMap/dashboards-config.yaml",
		size: 225724,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1559118393, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataConfigMapGrafanadatasourcesyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4f\x6f\xdb\x3e\x0c\xbd\xe7\x53\xf0\xa7\x16\xc8\xa5\x89\x9a\xcb" +
	"\x0f\xad\x80\x1d\xd6\xf5\xb0\x0d\xd8\x1f\x60\x40\x2f\xc3\xb0\x32\x32\x1d\x6b\xb1\x25\x83\x94\xd3\x66\x5d\xbf\xfb" +
	"\x20\xb9\x4d\xb2\xc6\xc8\xb0\xad\x3e\x24\x96\xf8\xde\xa3\x48\x3e\x0b\x5b\x77\x45\x2c\x2e\x78\x03\xab\xd9\x68\xe9" +
	"\x7c\x61\xe0\x55\xf0\xa5\x5b\xbc\xc3\x76\xd4\x50\xc4\x02\x23\x9a\x11\x80\xc7\x86\x0c\x2c\x18\x4b\xf4\x38\x49\xbb" +
	"\x12\x3a\xb6\x24\x0f\x31\x69\xd1\x92\x81\x92\x0a\x62\x8c\x81\xd1\x8d\x1e\xa9\x0b\x8a\x31\x2c\xc9\x4f\xa5\x32\xf0" +
	"\x63\x32\x02\x00\x38\xfa\x4f\x77\xc2\x7a\xee\xbc\x26\xbf\x02\xa9\xfa\xdd\x9b\xca\xd5\xd4\xbf\x16\x21\xff\xaf\xb0" +
	"\xee\xe8\xc5\xb5\xc5\x08\x7a\x85\xac\xb9\xf3\x5a\xc8\x32\x45\xd1\xcb\x6e\x4e\xec\x29\x92\x4c\x5d\xd0\x42\xbc\x72" +
	"\x96\xd0\xda\xd0\xf9\xa8\x73\xca\xeb\x1d\x0d\x75\x41\xc8\xc4\x70\x7c\x97\xd7\xf7\x2a\xc7\xc8\x56\x01\x8e\xf3\x4e" +
	"\x5e\xdb\x16\x60\xa7\x3a\xdd\x72\x68\x28\x56\xd4\xc9\x74\x8d\x4d\x0d\xa0\x29\x5a\xfd\xd0\x87\x14\x5d\xb9\xd4\x3f" +
	"\xe7\x17\xfa\x00\x2d\x4b\x0b\x15\x30\x71\x30\x16\xdd\x9f\x44\x8f\x55\x9f\x58\x8d\xf5\x62\xfc\x0f\xc2\xb9\x39\x7f" +
	"\xcd\x3e\x2a\x82\x4f\xb5\x3f\x89\x6d\x46\x75\x97\x7f\xd3\xa3\xb6\x7e\x51\x06\x66\x27\xdb\xc0\x4e\x0e\x65\xe0\xf3" +
	"\x26\xf0\x2b\x7f\x03\x4f\x86\x51\x06\xd4\x1b\x5f\xd6\xdd\xed\xe5\x85\x3a\x79\x0a\x01\xd8\x67\xc5\x75\x9b\x59\x2e" +
	"\xb3\x8a\xb9\x3a\xd9\xc7\xa0\xb5\x24\xe9\x0c\xaa\xe5\x70\xbb\x1e\x82\x74\x5c\xa7\x78\x15\x63\x2b\x46\x6b\xac\xb1" +
	"\xa1\x02\x27\x8f\xaa\xd3\x1d\x0b\x4f\x65\x65\xcd\xd9\xe9\xd9\xff\x43\x3a\x2d\x8a\xdc\x04\x2e\x92\x18\x16\x8d\xf3" +
	"\x69\x63\x30\xa1\x10\x6f\x40\x43\x80\xd4\xbd\x39\x4a\x2e\xee\xab\xf3\x91\xd8\x63\x3d\x04\x9c\xa3\x38\xfb\xb2\x8b" +
	"\x95\x32\x50\x62\x2d\x34\x80\x71\x72\x49\x25\x76\x75\x3c\x80\xf9\x26\xc1\x5f\x62\x44\x65\x06\xa6\x93\x3a\x5d\xcb" +
	"\xa7\xa5\x6b\xaf\x88\x5d\xb9\x56\x06\x22\x3f\x7c\x1d\xbb\xcf\xfd\x80\x30\x13\x16\x1f\x7c\xbd\x1e\xce\xfd\x84\x71" +
	"\xc0\x18\x1f\x37\x5e\x1c\x6a\xc3\xa3\x11\xda\x83\xa8\x3f\xb7\xc2\x56\x6f\xb2\x3c\x93\x69\x68\xc9\x4b\xe5\xca\x38" +
	"\x69\x82\x77\x31\xb0\xf3\x8b\xec\x88\xf3\xd3\xf3\xd9\x73\x8c\x27\xb5\xf5\x99\xa6\xb3\x2f\x03\x7d\x5d\xaf\x09\x0b" +
	"\xe2\xf7\xd8\xd0\x2c\x95\x9a\x4e\x17\xd8\x7d\xc7\x98\x3e\xe2\x7d\xd6\xd0\x50\x85\x6c\xc7\xf4\xf6\x37\xa7\xda\x26" +
	"\xbb\x4a\x77\x5a\xce\xd6\xdf\x73\xea\x39\xac\xb3\x59\x7d\xc9\x6f\xf7\xfd\x62\x34\xca\x17\xc5\xcf\x00\x00\x00\xff" +
	"\xff\x2c\xa5\x46\xcd\xc8\x06\x00\x00")

func bindataConfigMapGrafanadatasourcesyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataConfigMapGrafanadatasourcesyaml,
		"ConfigMap/grafana-datasources.yaml",
	)
}



func bindataConfigMapGrafanadatasourcesyaml() (*asset, error) {
	bytes, err := bindataConfigMapGrafanadatasourcesyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ConfigMap/grafana-datasources.yaml",
		size: 1736,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1555988180, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAdmissioncontrollerdatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3b\x4e\x04\x41\x0c\x44\xf3\x3e\x85\x2f\x30\x48\x10\x76\x4a\x40" +
	"\x84\x40\x04\x43\x6c\xb9\x0b\x64\x6d\xff\xd6\xf6\xcc\xf9\x57\x2d\xcd\x86\xaf\xf4\xea\xf1\xd4\x1d\xe6\x3a\x7a\xa6" +
	"\xf3\x35\xdd\xb4\x97\x4c\xdf\x6b\xf1\x40\x8f\x7d\xd4\xa3\xe1\xbd\xb2\xb6\xd4\x10\x5c\x38\x38\x27\xa2\xce\x0d\x99" +
	"\xb8\x34\xf5\xf5\xdd\x64\xf4\xb0\x51\x2b\x6c\x5b\xca\xcb\x3c\xe5\xb2\x7c\xb2\x20\xd3\x1f\x0a\x8c\x63\x18\x6b\xf2" +
	"\x09\x59\x11\x16\x81\xfb\xe7\x28\xf0\x85\x44\x1b\xfd\x80\xcb\xaf\x69\xe0\xab\x0b\x12\x91\xc1\xc7\x61\xf2\x14\x0c" +
	"\xf7\x03\x1e\x17\x11\xf9\x0a\xfe\x23\xd3\xdb\x87\xd2\x23\x00\x00\xff\xff\x6f\xb5\x76\x7d\xcb\x00\x00\x00")

func bindataPersistentVolumeClaimAdmissioncontrollerdatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAdmissioncontrollerdatayaml,
		"PersistentVolumeClaim/admission-controller-data.yaml",
	)
}



func bindataPersistentVolumeClaimAdmissioncontrollerdatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAdmissioncontrollerdatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/admission-controller-data.yaml",
		size: 203,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAdmissioncontrollerlogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x31\x4e\x44\x31\x0c\x44\xfb\x9c\xc2\x17\xf8\x48\x50\xa6\xa5\xa0" +
	"\x42\x20\x8a\xa5\xb6\x9c\x61\x65\x91\xc4\xc1\xf6\xdf\xf3\xa3\x48\xbb\xe5\x1b\xbd\x79\xbc\xf4\x02\x0f\xb5\x59\xe9" +
	"\xf6\x5c\x7e\x75\xb6\x4a\x9f\x7b\x89\xc4\xcc\x8b\xf5\x73\xe0\xb5\xb3\x8e\x32\x90\xdc\x38\xb9\x16\xa2\xc9\x03\x95" +
	"\xb8\x0d\x8d\xfd\x3d\xc4\x66\xba\xf5\x0e\x3f\xba\x5d\x9f\xd6\x4d\xee\x52\x2c\x16\x54\xfa\x41\x83\x73\x9a\xb3\x96" +
	"\x58\x90\xdd\x60\x11\x44\xbc\x5b\x43\x6c\x24\x3a\xe8\x0b\xdc\xbe\x5d\x13\x1f\x53\x50\x88\x1c\x61\xa7\xcb\x43\x70" +
	"\xfc\x9d\x88\xbc\x13\x51\xec\xe0\x15\x95\x5e\xde\x94\xfe\x03\x00\x00\xff\xff\xcf\x90\x04\x04\xca\x00\x00\x00")

func bindataPersistentVolumeClaimAdmissioncontrollerlogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAdmissioncontrollerlogyaml,
		"PersistentVolumeClaim/admission-controller-log.yaml",
	)
}



func bindataPersistentVolumeClaimAdmissioncontrollerlogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAdmissioncontrollerlogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/admission-controller-log.yaml",
		size: 202,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaaidatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3d\x0e\xc2\x30\x14\x83\xf7\x9c\xe2\x5d\xa0\x48\x30\x66\x65\x60" +
	"\x42\x20\x86\x32\x5b\x89\x41\x4f\x34\x3f\xe4\xa5\x3d\x3f\x8a\x54\xc6\xcf\x9f\x6d\x54\x9d\xd9\x4c\x4b\xf6\xb2\x1d" +
	"\xdd\x47\x73\xf4\x72\x1f\x89\x75\xe6\x3e\x97\x65\x4d\x3c\x2f\xd0\xe4\x12\x3b\x22\x3a\xbc\x13\xc9\x48\xf4\x82\x05" +
	"\x89\x11\x13\x74\x1a\xe2\x50\xb7\xb0\x3b\xab\x08\xf4\xf2\x62\x64\x43\x2f\x0d\xea\xac\x32\x8c\x29\x42\xa0\xd9\xb5" +
	"\x44\xda\x40\x91\x49\x1e\x44\x7c\x36\xed\xbc\xe5\x40\x27\xd2\x68\x65\x6d\xe1\x5f\x68\xfc\xae\xb4\xbe\x93\x88\x8d" +
	"\xc3\x37\xbd\x9c\x2e\x2a\xbf\x00\x00\x00\xff\xff\x7a\x3d\x1c\x6c\xc1\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaaidatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaaidatayaml,
		"PersistentVolumeClaim/alameda-ai-data.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaaidatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaaidatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-ai-data.yaml",
		size: 193,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaailogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3b\x6e\xc3\x30\x10\x44\x7b\x9e\x62\x2f\xa0\x00\x49\xc9\x36\x45" +
	"\xaa\xc0\x86\x0b\xb9\x1e\x90\x63\x61\x61\xfe\xcc\xa5\x74\x7e\x83\x80\x5c\xbe\xf9\x3c\x34\x5d\xd9\x4d\x6b\xf1\x72" +
	"\x7c\xbb\xa7\x96\xe8\xe5\x3a\x13\x1b\x2c\x63\xad\x69\xcf\xfc\x4d\xd0\xec\x32\x07\x22\x06\xbc\x13\x29\xc8\xf4\x82" +
	"\x84\xcc\x88\x05\xba\xa4\xba\x7d\xb5\x23\x9c\x95\x35\x04\x7a\x79\x30\xb2\x63\xd4\x0e\x75\xd6\x18\xe6\x13\x21\xd0" +
	"\xec\xbf\x46\xda\x44\x91\x45\x6e\x44\xbc\x77\x1d\xbc\x94\x40\x27\xd2\x69\x75\xef\xe1\x33\xe8\x7c\xed\xb4\x71\x92" +
	"\x88\x4d\xe1\x46\x2f\x3f\x7f\x2a\xef\x00\x00\x00\xff\xff\x14\xd9\x87\x6f\xc0\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaailogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaailogyaml,
		"PersistentVolumeClaim/alameda-ai-log.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaailogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaailogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-ai-log.yaml",
		size: 192,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedadatahubdatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3b\xae\x02\x31\x10\x04\x73\x9f\xa2\x2f\xb0\x4f\x7a\x84\x4e\x09" +
	"\x88\x10\x88\x60\x89\x07\xbb\x01\x8b\xf5\x07\x8f\xbd\xe7\x47\x46\x4b\x34\xaa\x52\x4d\x4b\x09\x33\xab\x86\x9c\x2c" +
	"\xd6\x7f\xf3\x0a\xc9\x5b\x9c\x87\xd1\xc6\xd4\xe6\xbc\xf4\xc8\xfd\x22\x21\x9a\xc8\x26\x5e\x9a\x58\x03\x24\x89\xb4" +
	"\x90\x45\x22\xbd\x4c\xc3\x3e\xfb\xed\x7b\xff\xca\xea\xb6\x40\x8b\x38\x5a\xdc\xe9\x59\xa5\xe5\x2a\xc1\x68\xa1\x1b" +
	"\xff\xe2\x1c\x55\x8f\xd9\x53\x07\x02\x13\x2e\x14\x7f\xad\xa1\xf1\x94\x1c\x0d\x50\xa9\xb9\x57\xf7\x0b\x2a\xdf\x9d" +
	"\xda\x36\x02\x74\x0c\x3e\x68\xb1\x3b\x04\x7c\x02\x00\x00\xff\xff\x17\x75\x4a\xb4\xc6\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedadatahubdatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedadatahubdatayaml,
		"PersistentVolumeClaim/alameda-datahub-data.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedadatahubdatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedadatahubdatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-datahub-data.yaml",
		size: 198,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedadatahublogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3b\x6e\x02\x31\x14\x45\x7b\xaf\xe2\x6e\x60\x22\x25\xa5\xdb\x14" +
	"\xa9\x22\x10\xc5\x50\x3f\xec\xcb\x60\xe1\x1f\x7e\xf6\xac\x1f\x59\x1a\xca\x73\xee\x47\x6a\x58\xd9\x34\x94\x6c\xb1" +
	"\x7f\x9b\x67\xc8\xde\xe2\x3c\x8d\x76\xe6\xbe\x96\x38\x12\x7f\xa3\x84\x64\x12\xbb\x78\xe9\x62\x0d\x90\x25\xd1\x42" +
	"\xa2\x24\x7a\x59\xa6\x7d\x8c\xdb\x12\xcb\xf6\x55\x77\x77\xe4\x5a\xc5\xd1\xe2\x4e\xcf\x26\xbd\x34\x09\x46\x2b\xdd" +
	"\x9c\x8b\x73\x54\xfd\x2f\x9e\x3a\x11\x58\x70\xa1\xf8\x6b\x0b\x9d\xa7\xec\x68\x80\x46\x2d\xa3\xb9\x4f\xa1\xf1\x35" +
	"\xa8\xfd\x20\x40\xe7\xe1\x46\x8b\x9f\xbf\x80\x77\x00\x00\x00\xff\xff\xbc\x6e\xe4\x34\xc5\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedadatahublogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedadatahublogyaml,
		"PersistentVolumeClaim/alameda-datahub-log.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedadatahublogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedadatahublogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-datahub-log.yaml",
		size: 197,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaevictionerdatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x3d\x6a\x03\x41\x0c\xc5\xf1\x7e\x4e\xa1\x0b\x6c\x20\x29\xa7\x4d" +
	"\x91\x2a\x24\xb8\x58\xd7\x42\xf3\x6c\x84\x77\x3e\x2c\x69\xf7\xfc\x66\x60\x5d\xbe\xc7\x8f\x3f\x0f\x5d\x61\xae\xbd" +
	"\x65\x3a\x3e\xd3\x43\x5b\xc9\xf4\x3f\x1f\x0f\xb4\x58\xfb\xb6\x57\x7c\x6f\xac\x35\x55\x04\x17\x0e\xce\x89\xa8\x71" +
	"\x45\x26\xde\xb8\xa2\xf0\x82\x43\x25\xb4\x37\xd8\x32\xc1\xc7\x38\xe4\x34\x3e\x58\x90\xe9\x86\x02\xe3\xe8\xc6\x9a" +
	"\x7c\x40\x66\x82\x45\xe0\xfe\xdb\x0b\x7c\x4e\xa2\x85\x2e\xe0\x72\x35\x0d\xfc\x35\x41\x22\x32\x78\xdf\x4d\xde\xc0" +
	"\xf0\xdc\xe1\x71\x2e\x22\x9f\xc1\x3b\x32\x7d\xfd\x28\xbd\x02\x00\x00\xff\xff\x8f\x8f\x27\x58\xc9\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaevictionerdatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaevictionerdatayaml,
		"PersistentVolumeClaim/alameda-evictioner-data.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaevictionerdatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaevictionerdatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-evictioner-data.yaml",
		size: 201,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaevictionerlogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\xbd\x4a\x07\x41\x0c\x07\xfb\x7d\x8a\xbc\xc0\x09\x5a\x6e\x6b\x61" +
	"\x25\x8a\xc5\x59\x87\xec\xcf\x23\xb8\x5f\x26\xb9\x7b\x7e\x59\xb8\x7f\x39\xc3\x30\x3c\x75\x87\xb9\x8e\x9e\xe9\x7a" +
	"\x4e\xbf\xda\x4b\xa6\xcf\x65\x3c\xd0\x63\x1f\xf5\x6c\x78\xad\xac\x2d\x35\x04\x17\x0e\xce\x89\xa8\x73\x43\x26\xae" +
	"\xdc\x50\x78\xc3\xa5\x12\x3a\x3a\x6c\xab\xe3\x78\x9a\x97\xdc\x89\x4f\x16\x64\xfa\x41\x81\x71\x0c\x63\x4d\x3e\x21" +
	"\xeb\xc0\x22\x70\x7f\x1f\x05\xbe\x90\x68\xa3\x2f\x70\xf9\x36\x0d\x7c\x74\x41\x22\x32\xf8\x38\x4d\x1e\x81\xe1\xef" +
	"\x84\xc7\x4d\x44\xbe\x86\x07\x32\xbd\xbc\x29\xfd\x07\x00\x00\xff\xff\x7d\xd0\xec\x3a\xc8\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaevictionerlogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaevictionerlogyaml,
		"PersistentVolumeClaim/alameda-evictioner-log.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaevictionerlogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaevictionerlogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-evictioner-log.yaml",
		size: 200,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaoperatordatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3d\xce\xc2\x30\x10\x44\x7b\x9f\x62\x2e\x90\x4f\xfa\x28\xdd\x52" +
	"\x50\x21\x10\x45\xa8\x57\xf6\x80\x2c\xe2\x1f\xbc\x9b\x9c\x1f\x59\x84\x72\xe6\x3d\x3d\x69\x69\x66\xd7\x54\x8b\xc7" +
	"\xf6\xef\x5e\xa9\x44\x8f\xeb\x78\xd4\x58\x6c\xae\xcb\x9a\x79\x5c\x24\x65\x97\x69\x12\xc5\xc4\x3b\xa0\x48\xa6\x87" +
	"\x2c\x92\x19\x65\xaa\x8d\x5d\xac\xf6\x69\xe0\xbf\xb6\x85\xdd\xd0\x26\x81\x1e\x0f\xc6\x2f\x97\xe4\xb4\x31\x8c\x80" +
	"\x84\x40\xd5\x73\x8d\xd4\x31\x81\x09\x37\x4a\xbc\xf7\x64\xbc\x94\x40\x07\x74\x6a\x5d\x7b\xf8\x09\x9d\xef\x95\x6a" +
	"\xfb\x02\x74\x04\x9f\xf4\x38\x9c\x12\x3e\x01\x00\x00\xff\xff\x75\x88\xf8\xa8\xc7\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaoperatordatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaoperatordatayaml,
		"PersistentVolumeClaim/alameda-operator-data.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaoperatordatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaoperatordatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-operator-data.yaml",
		size: 199,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaoperatorlogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3d\x0e\xc2\x30\x14\x83\xf7\x9c\xc2\x17\x28\x12\x8c\x59\x19\x98" +
	"\x10\x88\xa1\xcc\x4f\x89\xa9\x22\xf2\x47\x5e\xda\xf3\xa3\x88\x32\x7e\xf6\x67\x4b\x0d\x33\x9b\x86\x92\x2d\xb6\xa3" +
	"\x79\x87\xec\x2d\xee\x23\xd1\xce\xdc\xe7\x12\xd7\xc4\x73\x94\x90\x4c\x62\x17\x2f\x5d\xac\x01\xb2\x24\x5a\x48\x94" +
	"\x44\x2f\x53\xa9\x6c\xd2\x4b\x9b\x62\x59\x0e\x75\x73\xbb\xa0\x55\x1c\x2d\x5e\xf4\xbf\x5a\x82\xd1\x4a\x37\xf6\xe2" +
	"\x1c\x55\xaf\xc5\x53\x07\x02\x13\x1e\x14\xff\x6c\xa1\xf3\x96\x1d\x0d\xd0\xa8\x65\x6d\xee\x2f\x34\x7e\x56\x6a\xdf" +
	"\x09\xd0\x71\xb8\xd0\xe2\x74\x09\xf8\x06\x00\x00\xff\xff\xed\x6e\x78\xea\xc6\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaoperatorlogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaoperatorlogyaml,
		"PersistentVolumeClaim/alameda-operator-log.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaoperatorlogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaoperatorlogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-operator-log.yaml",
		size: 198,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimMyalamedagrafanaPVCyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x3d\x6a\xc4\x30\x14\xc4\xf1\x5e\xa7\x78\x17\xb0\x21\x29\xd5\xa6" +
	"\x48\x15\x12\x52\x78\xeb\x41\x1a\x1b\xb1\xd6\xc7\xbe\x27\x1b\xf6\xf6\x8b\xc0\x5b\xce\xf0\xe3\x8f\x96\x16\xaa\xa5" +
	"\x5a\xbc\x9c\x1f\xee\x9e\x4a\xf4\xf2\x37\x1e\xeb\x2c\x7d\xa9\xfb\x91\xf9\xb5\x23\x65\x97\xd9\x11\xd1\xe1\x9d\x48" +
	"\x41\xa6\x97\xfc\x9c\xb0\x23\x33\x62\xde\x14\x2b\x0a\xa6\x01\xe6\x76\x86\xcb\x58\x43\xa0\x97\x95\x91\x8a\x5e\x15" +
	"\xc9\x59\x63\x18\x09\x84\x40\xb3\x9f\x1a\x69\x63\x8a\x4c\xf2\x4f\xc4\x9b\xa6\xce\xdf\x12\xe8\x44\x94\x56\x0f\x0d" +
	"\x6f\xa0\x7c\x1c\xb4\x7e\x2d\x11\x1b\xc1\x8d\x5e\x3e\xbf\x93\xbc\x02\x00\x00\xff\xff\xa9\x9c\x3a\x4f\xc9\x00\x00" +
	"\x00")

func bindataPersistentVolumeClaimMyalamedagrafanaPVCyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimMyalamedagrafanaPVCyaml,
		"PersistentVolumeClaim/my-alamedagrafanaPVC.yaml",
	)
}



func bindataPersistentVolumeClaimMyalamedagrafanaPVCyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimMyalamedagrafanaPVCyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/my-alamedagrafanaPVC.yaml",
		size: 201,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimMyalamedainfluxdbPVCyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x3b\x6e\xc3\x30\x10\x84\xe1\x9e\xa7\xd8\x4e\x95\x84\xa8\x65\x9b" +
	"\x22\x55\x90\x20\x85\x52\xaf\xc9\x91\xb1\x30\x5f\xe6\x92\x82\x7d\x7b\x83\x80\x5c\xce\xe0\xc3\xcf\x45\x36\x54\x95" +
	"\x9c\x2c\x1d\xab\xb9\x49\xf2\x96\x7e\xc7\xa3\x0d\xa9\x6d\x39\xf4\x88\xcf\xc0\x12\x4d\x44\x63\xcf\x8d\xad\x21\x4a" +
	"\x1c\x61\x29\x3e\x67\x0e\x1c\xe1\x79\x91\xb4\x87\xfe\xf0\x97\x79\x88\xa5\x1c\xee\x44\x5a\xd8\xc1\xd2\x0e\x8f\xca" +
	"\x2d\x57\x16\xa3\x05\x6e\x34\xd8\x39\xa8\x7e\x67\x0f\x1d\x93\x68\xa6\x3f\xb0\xff\xaf\xd2\xf0\x93\x1c\x0c\x51\x85" +
	"\xe6\x5e\xdd\x1b\x54\xdc\x3b\xb4\x9d\x8b\x48\x47\xf0\x0a\x4b\xd3\xfa\xf1\x25\xd3\x2b\x00\x00\xff\xff\x4a\x54\xad" +
	"\xdd\xcc\x00\x00\x00")

func bindataPersistentVolumeClaimMyalamedainfluxdbPVCyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimMyalamedainfluxdbPVCyaml,
		"PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml",
	)
}



func bindataPersistentVolumeClaimMyalamedainfluxdbPVCyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimMyalamedainfluxdbPVCyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml",
		size: 204,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAdmissioncontrollerSVyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x41\xaa\xc3\x30\x0c\x44\xf7\x3e\xc5\x5c\x20\x90\xcf\xcf\xa2\xf8" +
	"\x14\x85\x42\xf7\xaa\x3d\x2d\xa6\x8e\x6d\x24\x91\xf3\x97\xf8\x00\xed\xee\x21\x31\xf3\x46\x46\xb9\x53\xad\xf4\x16" +
	"\x71\xfc\x85\x77\x69\x39\xe2\x46\x3d\x4a\x62\xd8\xe9\x92\xc5\x25\x06\xa0\xca\x83\xd5\x4e\x02\x64\x8c\x08\xc9\x7b" +
	"\xb1\x33\xb8\xa4\xde\x5c\x7b\xad\xd4\x00\x34\xd9\xf9\xf5\x69\x43\x12\x23\x9e\xcc\x54\xf1\xae\x52\x82\x0d\xa6\xb3" +
	"\x79\x74\xf5\xa9\x58\x26\x46\x6c\xdb\xff\x14\xba\xe8\x8b\x7e\x9d\xb7\xcb\xba\xae\x01\x30\x56\x26\xef\xfa\x63\xd1" +
	"\x27\x00\x00\xff\xff\xf4\xe7\x31\xb4\xe0\x00\x00\x00")

func bindataServiceAdmissioncontrollerSVyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAdmissioncontrollerSVyaml,
		"Service/admission-controllerSV.yaml",
	)
}



func bindataServiceAdmissioncontrollerSVyaml() (*asset, error) {
	bytes, err := bindataServiceAdmissioncontrollerSVyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Service/admission-controllerSV.yaml",
		size: 224,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1554254667, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAlamedadatahubSVyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x31\x0e\xc3\x20\x14\x43\x77\x4e\xe1\x0b\x44\x4a\x87\x2c\x5c\xa3" +
	"\x52\x77\x07\xdc\x16\x95\x04\xf4\xa1\x39\x7f\x45\xd4\x35\x9b\x65\x5b\xcf\x66\x4d\x0f\x59\x4b\x65\xf7\x38\x6e\xee" +
	"\x93\xf6\xe8\x71\x97\x1d\x29\xc8\x6d\xea\x8c\xec\xf4\x0e\xc8\x5c\x95\xdb\x50\x00\x6b\xf5\x60\xe6\xa6\xc8\x69\x14" +
	"\xde\xdf\xd5\x01\x3b\x37\x5d\xf9\xad\x32\xc8\xe3\xa9\x28\x63\x2f\xc6\xe4\x5a\x55\x18\xbc\x5a\xac\x9f\xe0\xe9\x4f" +
	"\x78\x59\x0d\xe7\xce\x48\x3c\x96\x79\x5e\x66\x07\x34\x65\x85\x5e\xec\xfa\xc3\x2f\x00\x00\xff\xff\x17\x03\xde\x3c" +
	"\xcd\x00\x00\x00")

func bindataServiceAlamedadatahubSVyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAlamedadatahubSVyaml,
		"Service/alameda-datahubSV.yaml",
	)
}



func bindataServiceAlamedadatahubSVyaml() (*asset, error) {
	bytes, err := bindataServiceAlamedadatahubSVyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Service/alameda-datahubSV.yaml",
		size: 205,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAlamedagrafanaSVyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x31\xaa\xc3\x30\x10\x44\x7b\x9d\x62\x2f\x60\xf0\xe7\x77\x3a\x45" +
	"\x20\x90\x7e\x22\x8d\x8d\x88\x2c\x2d\xab\xc5\xe7\x0f\x56\x95\xc6\xdd\xe3\x15\x6f\x06\x5a\x5e\xb4\x51\x7a\x8b\x72" +
	"\xfe\x85\x4f\x69\x39\xca\x93\x76\x96\xc4\x70\xd0\x91\xe1\x88\x41\xa4\xe2\xcd\x3a\x2e\x12\x81\x6a\x14\x54\x1c\xcc" +
	"\x58\x76\xc3\x86\x86\x20\xd2\x70\xf0\xce\x0f\x45\x62\x94\x8d\x99\x06\xef\x86\x12\x86\x32\x5d\x3d\xed\xe6\x33\xbc" +
	"\x4c\x8c\xf2\xbf\xae\xeb\xdc\x71\xd8\x4e\x7f\xfc\xca\xc1\xca\xe4\xdd\xee\x8f\xc8\x37\x00\x00\xff\xff\x1d\x9d\x3e" +
	"\xc2\xd3\x00\x00\x00")

func bindataServiceAlamedagrafanaSVyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAlamedagrafanaSVyaml,
		"Service/alameda-grafanaSV.yaml",
	)
}



func bindataServiceAlamedagrafanaSVyaml() (*asset, error) {
	bytes, err := bindataServiceAlamedagrafanaSVyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Service/alameda-grafanaSV.yaml",
		size: 211,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAlamedainfluxdbSVyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\x41\x0a\xc2\x30\x14\x44\xf7\x39\xc5\xbf\x40\x41\x37\x52\x72\x0a" +
	"\x41\x70\x3f\x4d\xa6\x12\x4c\x93\xf0\xf3\x2d\x1e\x5f\x9a\x95\x1b\xdd\x3d\x66\xe0\xcd\xa0\xa5\x3b\xb5\xa7\x5a\xbc" +
	"\xec\x67\xf7\x4c\x25\x7a\xb9\x51\xf7\x14\xe8\x36\x1a\x22\x0c\xde\x89\x64\x2c\xcc\xfd\x20\x11\xb4\xe6\x05\x19\x1b" +
	"\x23\xa6\x54\xd6\xfc\x7a\xc7\xc5\x89\x14\x6c\xfc\x59\xf4\x86\x40\x2f\x2b\x23\x15\x56\x15\xc9\xf5\xc6\x70\x18\x5b" +
	"\x55\x1b\xea\x69\xa0\x97\xf9\x34\x5f\xc6\x92\x41\x1f\xb4\xeb\x77\xd8\x99\x19\xac\xea\x9f\x2b\x9f\x00\x00\x00\xff" +
	"\xff\x1e\x34\xee\x61\xd5\x00\x00\x00")

func bindataServiceAlamedainfluxdbSVyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAlamedainfluxdbSVyaml,
		"Service/alameda-influxdbSV.yaml",
	)
}



func bindataServiceAlamedainfluxdbSVyaml() (*asset, error) {
	bytes, err := bindataServiceAlamedainfluxdbSVyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Service/alameda-influxdbSV.yaml",
		size: 213,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1554254667, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAdmissioncontrollerDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\x4b\x6f\xdb\x46\x10\xbe\xeb\x57\x0c\x72\xc9\x89\xa2\xd2\x56\x2d" +
	"\xb0\x40\x0f\x8c\xc9\xa0\x46\x25\x9b\xb0\xd4\x00\x39\x09\xe3\xe5\xd0\x5c\x64\x5f\xd9\x5d\xca\xe5\xbf\x2f\x56\x94" +
	"\x64\xd2\x96\x2c\xf7\x60\x20\x3c\x11\xdf\xec\xf7\x98\x7d\xa2\x15\x5f\xc9\x79\x61\x34\x03\xb4\xd6\xa7\xdb\x4f\x93" +
	"\xef\x42\x57\x0c\x72\xb2\xd2\x74\x8a\x74\x98\x28\x0a\x58\x61\x40\x36\x01\xd0\xa8\x88\x01\x56\x4a\xf8\xc8\x4a\xb8" +
	"\xd1\xc1\x19\x29\xc9\xed\x8b\xde\x22\x27\x06\x35\x55\xe4\x30\x18\x87\x62\x02\x20\xf1\x9e\xa4\x8f\x7c\x88\x36\x0c" +
	"\x50\xa2\xa2\x0a\x77\x00\x37\xca\x1a\x4d\x3a\x9c\xd5\x45\xad\x4d\xc0\x20\x8c\xde\x6b\x54\xe4\xb9\x13\x36\xec\x72" +
	"\xe7\x54\x0b\x4d\x1e\x1a\xf3\x08\xc1\x40\xb5\x0b\x0e\xa1\xa1\x73\x72\x00\x81\x94\x95\x18\x68\x8a\xd2\x36\x38\x35" +
	"\x96\xb4\x6f\x44\x1d\xa6\xc2\xa4\x8f\x28\x42\x52\x1b\x97\x38\xc2\xaa\x63\xf0\x31\xb8\x96\x3e\x4e\xbc\x25\x1e\xcd" +
	"\x1d\x59\x29\x38\x7a\x06\x9f\x26\x00\x9e\x24\xf1\x60\x5c\x1f\x4b\x61\xe0\xcd\x62\xd0\xeb\xa1\xdb\xd3\x39\x0e\x29" +
	"\xf6\xe4\xc1\x2c\xc7\xef\xd5\x99\x8e\x9f\x1c\x19\xbd\x6e\x05\x70\xc8\xdf\xcf\xb8\x0e\x28\x34\xb9\x23\x3b\xb9\x6c" +
	"\x07\x20\x14\x3e\x10\x83\x1f\x2d\x76\x71\xa2\xac\x33\xb6\xa1\xe0\x83\x71\xe9\x7e\x3d\x93\x27\xbe\x6b\x48\xb2\xed" +
	"\x6c\xfa\xeb\xf4\xf7\xb1\x40\xd9\x4a\x59\x1a\x29\x78\xc7\xe0\xba\xbe\x31\xa1\x74\xe4\xe3\x36\x3b\x8c\x72\xe4\x4d" +
	"\xeb\x38\x0d\x5a\x8b\xe0\x8f\x96\x7c\x18\x61\x00\xdc\xb6\x0c\x7e\x9b\xab\x11\xa8\x48\x19\xd7\x31\xf8\x63\xbe\x14" +
	"\xc7\x02\xe9\xed\x13\xf5\xd0\xed\x4d\xb6\x2c\x56\x65\x76\x55\x6c\xe2\xdf\x40\x64\x8b\xb2\xa5\x2f\xce\xa8\xb1\x5d" +
	"\x2d\x48\x56\x77\x54\x8f\xd1\x3d\x5e\x62\x68\xd8\x71\x15\xa7\xc7\xb3\x00\x00\x2f\x8c\xcb\xdb\xfc\x9d\x2c\x5f\x58" +
	"\x65\x8b\x6c\x59\xe4\xd9\x26\xcb\x97\x57\xeb\xc5\x26\x2f\xca\xc5\xed\xb7\xa2\xb7\xdf\xf5\xfe\x4e\x6d\x5f\x0c\x92" +
	"\xad\xb3\xbf\xfe\xf9\xbc\xc9\xf2\xfc\xae\x58\xad\x9e\xa7\x60\xf0\xe1\xb0\xa7\xa2\x6e\xd3\xde\x4f\x07\x57\xca\xd4" +
	"\x6f\x39\x9b\xcf\x66\xf3\xd9\x87\x4b\x3e\xc5\x4d\xf6\x79\xf1\xa2\xc9\xe3\xb1\xbe\xc0\x5e\x2f\x56\x9b\xab\xe2\x6e" +
	"\xbd\xf9\x72\x7d\x4a\x24\xa5\xc0\xd3\x20\x7d\xc2\xc9\x05\x1f\xff\xa6\xdc\x85\xb7\x88\x96\x77\xd7\x5f\xb3\x75\xb1" +
	"\xf9\xbb\xf8\xf6\x76\xed\xef\xd4\x5d\xd2\xbe\xca\xfe\x47\x5e\x8e\xa3\xb8\x5b\x23\x5b\x45\x4b\xd3\xea\xe1\x39\x4b" +
	"\x40\x45\xa4\x5f\xe7\xb1\xc0\xc0\xa0\x0f\x73\xaa\x12\xaf\xd1\x5b\x2d\x3b\x06\x35\x4a\x4f\x93\x21\x1e\xef\x6d\x5f" +
	"\x3a\x73\x4f\xc3\xbd\x45\xff\x3e\x5d\x55\xfd\xc7\x8d\x52\xa8\xab\x31\x98\x40\xda\x7a\x97\x4a\xc3\x51\xa6\xf7\x42" +
	"\xa7\xaf\x5e\x5e\x3d\xc3\x46\xaf\x67\x58\x92\x84\xce\xd2\x9f\xc7\x3c\x83\x72\x8d\x42\xb6\x8e\xd6\x8d\x23\xdf\x18" +
	"\x59\x31\xf8\x65\x36\x28\x0b\x2d\x82\x40\x99\x93\xc4\x6e\x45\xdc\xe8\xca\x33\x98\x0f\x06\x58\x72\xc2\x54\x27\x4a" +
	"\x52\x6c\xe9\x27\xea\xfd\x10\xe7\xfd\x5b\xef\xf7\x98\x67\xf0\xec\xe1\x39\xf9\xf2\xec\x8e\x7e\x12\x1f\x18\x7c\xa0" +
	"\x37\x11\xa4\x79\x38\x33\xfe\xe5\xd6\xf4\xc4\x1d\x85\xe1\xbc\xf6\xc8\xcd\xd9\x97\x30\x09\xf2\x40\xf7\xe4\xb6\x82" +
	"\x53\xc6\x79\x3c\x1c\xaf\x3e\x9c\xe3\xa1\xe7\xd5\x27\xff\x05\x00\x00\xff\xff\x53\x27\x37\x93\x8d\x09\x00\x00")

func bindataDeploymentAdmissioncontrollerDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAdmissioncontrollerDMyaml,
		"Deployment/admission-controllerDM.yaml",
	)
}



func bindataDeploymentAdmissioncontrollerDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAdmissioncontrollerDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/admission-controllerDM.yaml",
		size: 2445,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1557293960, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedaaiDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\xc1\x8e\xd3\x30\x10\x86\xef\x7d\x8a\xd1\xde\x93\xcd\x2e\x2a\x07" +
	"\x4b\x1c\x8a\xb2\x12\x48\xb0\x5b\xb5\x0b\x57\x34\x75\xa6\x8d\x85\xed\xf1\xda\x4e\x20\x6f\x8f\x9c\xb6\xd9\x24\xad" +
	"\x00\x09\x91\xe3\xcc\xfc\xdf\xfc\xf6\x8c\x83\x4e\x7d\x25\x1f\x14\x5b\x01\xe8\x5c\xb8\x6d\xef\x16\xdf\x95\xad\x04" +
	"\x94\xe4\x34\x77\x86\x6c\x5c\x18\x8a\x58\x61\x44\xb1\x00\xb0\x68\x48\x00\x6a\x34\x54\x61\x86\xea\x14\x0a\x0e\x25" +
	"\x09\xd8\x53\x45\x1e\x23\xfb\x3e\xa1\x71\x47\x3a\x24\x15\x24\xf8\x20\xeb\x03\x92\x8d\x63\x4b\x36\xce\x68\x68\x2d" +
	"\x47\x8c\x8a\xed\x49\x59\x51\x90\x5e\xb9\xd8\x7b\x2c\x69\xaf\x2c\x05\xa8\xf9\x07\x44\x86\xaa\x37\x09\xb1\xa6\xd4" +
	"\x40\x2b\xd9\x0b\x07\x20\xbb\xa3\x9b\x45\x70\x24\x13\xcd\x53\x5f\x14\x04\xdc\x2d\x00\x02\x69\x92\x91\xfd\xb1\x8f" +
	"\xc1\x28\xeb\x4f\x23\xcb\x53\xd3\x47\x77\x91\x8c\xd3\x18\xe9\x24\x19\x5d\x4c\xfa\xae\x5c\x4e\xfa\xf4\x04\x7a\x0d" +
	"\x0b\x70\x76\x78\xbc\x1a\x1b\x51\x59\xf2\x83\x26\xbb\x40\x67\x64\x0f\xca\xd2\xc0\x54\x06\x0f\x24\xe0\xa5\xc1\x2e" +
	"\x57\x7c\xeb\x3c\xbb\x9a\x62\x88\xec\x6f\x5f\x45\xa2\x2d\xf2\x37\xf9\xdb\xa9\x68\xdd\x68\xbd\x66\xad\x64\x27\xe0" +
	"\xe3\xfe\x91\xe3\xda\x53\x48\x63\x3f\x57\x79\x0a\xdc\x78\x49\xa3\x13\xa4\xe0\x4b\x43\x21\x4e\x62\x00\xd2\x35\x02" +
	"\xee\x8b\xa2\x30\x93\xb0\x21\xc3\xbe\x13\x70\xbf\x2c\x3e\xab\x21\x43\xb6\x7d\x55\x9f\x4f\xf8\xb4\x7e\xd8\xac\x9e" +
	"\x9f\x36\xdf\x56\x65\xb9\x79\xd8\x6e\x47\x9c\x16\x75\x43\x02\x6e\xe6\xd3\xcd\x47\x5b\x97\x87\x56\x8a\x65\x51\x2c" +
	"\x8b\x9b\x0b\x74\xb9\x7a\x5e\x7d\xf8\xf2\xfe\x2f\xc8\x69\xa6\x75\xb3\xfb\x13\xd8\x13\x56\x69\x1b\xc3\xda\xf3\x8e" +
	"\x04\x8c\x88\xf4\x93\xe4\x24\xd0\x2f\xbc\xc1\xf4\xb2\x26\xd1\x0c\xd2\xac\x76\x94\x87\x7a\x9e\xc8\xb2\xd8\x39\x7a" +
	"\x37\x74\x19\xe7\x95\x55\x51\xa1\x2e\x49\x63\xb7\x25\xc9\xb6\x0a\x02\x96\xe3\x0a\x47\x5e\x71\x75\x2d\xa7\x55\x4b" +
	"\xff\xdd\xf5\xb9\xc9\xbf\x99\x3e\xa5\x5a\xd6\x8d\x19\xef\xdf\x95\xf7\x90\x66\x96\xa5\x7d\xc7\x03\xfd\xae\x4e\xf3" +
	"\x61\x56\x16\xc8\xb7\x4a\xd2\x4a\x4a\x6e\x2e\x7e\x47\x97\x05\x8f\xf3\x47\xfe\x2b\x00\x00\xff\xff\x53\xba\x77\xec" +
	"\x44\x05\x00\x00")

func bindataDeploymentAlamedaaiDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedaaiDMyaml,
		"Deployment/alameda-aiDM.yaml",
	)
}



func bindataDeploymentAlamedaaiDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedaaiDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-aiDM.yaml",
		size: 1348,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1557293960, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedadatahubDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x41\x6f\xe2\x3a\x10\xbe\xf3\x2b\xe6\xd6\x53\x08\xe8\xa9\x55\x6b" +
	"\xe9\x1d\x52\x85\xa7\x56\x02\x8a\xa0\xbc\xdd\x1b\x1a\x9c\x81\x58\xb5\x3d\xae\xed\xa4\xe5\xdf\xaf\x42\x0b\x0d\x14" +
	"\xb6\x3d\xac\xb4\xb9\x44\xfa\x3c\xdf\x37\xdf\x8c\xc7\x83\x4e\xfd\x4f\x3e\x28\xb6\x02\xd0\xb9\x90\xd6\xfd\xce\x93" +
	"\xb2\x85\x80\x9c\x9c\xe6\x8d\x21\x1b\x3b\x86\x22\x16\x18\x51\x74\x00\x2c\x1a\x12\x80\x1a\x0d\x15\x98\x34\x68\x59" +
	"\x2d\xdf\xf1\xe0\x50\x92\x80\x15\x15\xe4\x31\xb2\x47\xd5\x01\xd0\xb8\x24\x1d\x1a\x2a\x34\x19\xf6\xdc\x2d\x20\xd9" +
	"\x38\xb6\x64\xe3\x29\x49\xb4\x96\x23\x46\xc5\xf6\x9d\x5e\x50\x90\x5e\xb9\xb8\x75\x9b\xd3\x4a\x59\x0a\x50\xf2\x0b" +
	"\x44\x86\x62\x6b\x17\x62\x49\x4d\x16\xad\xe4\x96\x78\x42\x15\x20\x92\x71\x1a\x23\x75\x51\xbb\x12\xbb\xec\xc8\x86" +
	"\x52\xad\x62\x57\x71\xfa\x82\x2a\x26\x2b\xf6\x89\x27\x2c\x36\x02\x2e\xa2\xaf\xe8\xa2\x13\x1c\xc9\xc6\x83\xa7\xad" +
	"\x74\x10\xd0\xef\x00\x04\xd2\x24\x23\xfb\x37\x77\x06\xa3\x2c\x87\xad\x6a\x0f\xeb\x6d\x59\xd8\x19\x78\xe7\xb5\xba" +
	"\xdb\x7c\xe7\x3a\xdc\x7c\xfa\x40\xfe\x6c\x02\x80\x9d\xe1\xb7\x26\xdb\x88\xca\x92\xdf\x13\x93\xdf\x26\x01\x50\x06" +
	"\xd7\x24\xe0\xb9\xc2\x4d\xd3\x14\xe7\xd9\x95\x14\x43\x64\x9f\x1e\x51\x12\x5f\x92\x16\x75\xaf\xfb\x4f\xf7\xea\x90" +
	"\x3e\xa9\xb4\x9e\xb0\x56\x72\x23\xe0\x7e\x35\xe6\x38\xf1\x14\x9a\x69\xda\x45\x79\x0a\x5c\x79\x49\xad\x72\x1a\xf0" +
	"\xb9\xa2\x10\x0f\x30\x00\xe9\x2a\x01\x97\x3d\x73\x00\x1a\x32\xec\x37\x02\xfa\xbd\xde\x48\xed\x4f\xc8\xd6\x1f\xdc" +
	"\x5d\x9d\xd9\x30\x1b\x0d\xf2\x6c\x91\x67\x8f\xd9\xdd\xfc\x76\x71\x3f\xfe\x6f\x38\xff\x99\xdf\x2e\xb2\x3c\x9f\x0e" +
	"\x66\xb3\x96\x6e\x8d\xba\x22\x01\x65\x8c\x2e\x88\x74\x5f\xae\xb2\x2b\x5d\xbd\x16\xcb\x6e\x6b\xb8\xbb\xa1\x96\xe2" +
	"\xba\x77\x7d\xf5\xfd\x7c\xf3\xd9\x60\x3a\xce\x46\x83\xcf\x09\xb1\x30\xca\x7e\x5f\x68\x92\xcd\x66\x3f\x1e\xa6\xf9" +
	"\x19\x21\x87\x21\x7c\x29\x36\x99\x3e\x8c\x06\x8f\x77\x83\xf9\x6c\x31\x9f\x0e\xcf\xf7\xc0\x79\x36\x14\x4b\xaa\x42" +
	"\xf2\x74\x1d\x3e\xde\x4b\x62\xd8\xaa\xc8\x5e\xd9\xf5\xb6\x15\x37\xbd\x9b\x7e\xeb\x76\xb1\x68\xde\x67\x98\x78\x5e" +
	"\x52\xfb\x3a\xe9\xf5\x63\x34\x77\x03\x6a\x0c\xda\xe2\x10\x4c\x20\xad\x82\x4f\x35\x4b\xd4\xe9\x52\xd9\xf4\x78\x48" +
	"\xdf\x82\x5c\x23\x7f\x84\x25\x49\xdc\x38\xfa\x77\x6f\xa1\x75\xac\xac\x8a\x0a\x75\x4e\x1a\x37\x33\x92\x6c\x8b\x20" +
	"\xe0\xb2\x15\xe0\xc8\x2b\x2e\x4e\x1c\x69\x55\xd3\xdf\xad\x67\xe7\xe0\x0f\x94\x53\xb3\xae\x0c\x7d\xda\x07\xc7\x0b" +
	"\x61\xfb\x4f\x9a\x77\x8f\x6b\xfa\x2a\x56\xf3\xfa\x28\x34\x90\xaf\x95\xa4\x4c\x4a\xae\x4e\xaf\xf8\xcf\x51\xe3\x93" +
	"\x8b\xe9\x57\x00\x00\x00\xff\xff\x4e\xd3\xa3\xe7\xa7\x06\x00\x00")

func bindataDeploymentAlamedadatahubDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedadatahubDMyaml,
		"Deployment/alameda-datahubDM.yaml",
	)
}



func bindataDeploymentAlamedadatahubDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedadatahubDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-datahubDM.yaml",
		size: 1703,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1557293960, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedaevictionerDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x4d\x4f\xe3\x3a\x14\xdd\xf7\x57\x5c\xb1\x61\x95\xa4\xe8\xbd\xbe" +
	"\x27\x59\x7a\x8b\xf0\x52\x69\x90\xa0\x53\x01\xc3\xb6\xba\x75\x6e\x89\x35\xb6\xaf\xb1\x9d\x30\xf9\xf7\x23\x17\x52" +
	"\x12\x28\x0c\x8b\x91\xc6\xab\xf6\x7e\x9d\x73\xee\x47\xd0\xa9\x3b\xf2\x41\xb1\x15\x80\xce\x85\xa2\x3b\x9b\x7d\x57" +
	"\xb6\x16\x50\x91\xd3\xdc\x1b\xb2\x71\x66\x28\x62\x8d\x11\xc5\x0c\xc0\xa2\x21\x01\xa8\xd1\x50\x8d\x19\x75\x4a\x46" +
	"\xc5\x96\xfc\xb3\x2b\x38\x94\x24\x60\x47\x35\x79\x8c\xec\x51\xcd\x00\x34\x6e\x49\x87\x94\x0d\x09\xe4\x90\xbe\x37" +
	"\x48\x36\x8e\x2d\xd9\xf8\x4e\x55\xb4\x96\x23\xa6\xbf\xcf\x15\x6a\x0a\xd2\x2b\x17\xf7\x9c\x2b\xda\x29\x4b\x01\x1a" +
	"\x7e\x84\xc8\x50\xef\x49\x43\x6c\xe8\x78\x31\x80\x48\xc6\x69\x8c\x94\xa3\x76\x0d\xe6\xec\xc8\x86\x46\xed\x62\xae" +
	"\xb8\x78\x44\x15\xb3\x1d\xfb\xcc\x13\xd6\xbd\x80\xd3\xe8\x5b\x3a\x9d\x05\x47\x32\x41\x7b\x72\x5a\x49\x0c\x02\xce" +
	"\x66\x00\x81\x34\xc9\xc8\xfe\x89\x94\xc1\x28\x9b\xcb\x91\xce\xa9\xd2\x29\x8b\x81\xc3\x73\xea\xa8\xbb\xe9\x7d\xd0" +
	"\xe1\xf4\xf4\x04\xe4\x23\x18\x80\x81\xf9\x53\x9f\x6d\x44\x65\xc9\x1f\x72\xb3\x5f\x41\x01\x28\x83\xf7\x24\xe0\xa1" +
	"\xc5\x3e\x35\xc8\x79\x76\x0d\xc5\x10\xd9\x17\x6f\xb3\x32\xdf\x90\x16\xdd\x3c\xff\x2b\xff\x67\x5a\x61\xdd\x6a\xbd" +
	"\x66\xad\x64\x2f\xe0\x62\xb7\xe2\xb8\xf6\x14\xd2\x66\x0d\x51\x9e\x02\xb7\x5e\xd2\x48\x57\x32\x3e\xb4\x14\xe2\xc4" +
	"\x06\x20\x5d\x2b\xe0\xef\x85\x99\x18\x0d\x19\xf6\xbd\x80\x7f\x17\x57\xea\xe0\x20\xdb\xbd\xa4\x0e\x62\xcb\xcb\xf2" +
	"\x6a\x59\x95\x9b\xe5\xdd\xc5\xff\xb7\x17\x5f\x57\xcb\xeb\x4d\x55\xde\x96\x5f\xbe\x9d\x6f\xca\xaa\xba\x5e\xde\xdc" +
	"\x8c\x0a\x77\xa8\x5b\x12\x70\x32\x68\x4d\x63\x6a\xda\x6d\x3e\x5a\xef\x3c\x74\x52\x2c\xe6\xf3\xc5\xfc\xe4\x33\x58" +
	"\xc3\xcf\xcd\x72\x55\x9e\x5f\x2e\x8f\x60\xa5\x9d\x3b\x19\x35\x06\xeb\xb4\xe0\x61\xed\x79\x4b\xe3\x4e\xd0\x8f\x97" +
	"\xd9\x0e\x13\x36\x06\x6d\x3d\x35\x66\x50\xb4\xc1\x17\x9a\x25\xea\x62\xab\x6c\x71\x64\xca\x4f\x71\x2e\x21\xbc\xb2" +
	"\x65\x59\xec\x1d\xfd\x77\x60\x31\x72\x2b\xab\xa2\x42\x5d\x91\xc6\xfe\x86\x24\xdb\x3a\x08\x58\x8c\x02\x1c\x79\xc5" +
	"\xf5\x11\x97\x56\x1d\xfd\x71\x49\x03\x89\xdf\xa0\xa8\x63\xdd\x1a\x7a\x73\x56\x47\xee\x6a\xbf\x40\x59\x3a\x1f\xbc" +
	"\xa7\x4f\x84\x6b\xbe\x7f\x15\x1d\xc8\x77\x4a\x52\x29\x25\xb7\xef\x7e\x32\xdf\x06\xae\xde\x3b\xf4\x9f\x01\x00\x00" +
	"\xff\xff\x1c\x25\x2c\xae\x00\x06\x00\x00")

func bindataDeploymentAlamedaevictionerDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedaevictionerDMyaml,
		"Deployment/alameda-evictionerDM.yaml",
	)
}



func bindataDeploymentAlamedaevictionerDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedaevictionerDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-evictionerDM.yaml",
		size: 1536,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1557293960, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedagrafanaDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\xb1\x8e\xe3\x36\x10\xed\xfd\x15\x03\x37\xd7\x44\xb2\xf7\xee\xd2" +
	"\xb0\x0b\x6e\x9b\x00\xd9\x83\x8b\x20\x4d\x90\x62\x96\x1a\x5b\xcc\x92\x1c\x86\x1c\x79\x61\x04\xf9\xf7\x80\x5a\x59" +
	"\x96\x6c\xc9\xab\x2d\xce\x8d\x01\xce\x7b\x6f\x66\x1e\xc9\x11\x31\x98\x3f\x28\x26\xc3\x5e\x01\x86\x90\x36\xc7\x87" +
	"\xd5\x8b\xf1\x95\x82\x47\x0a\x96\x4f\x8e\xbc\xac\x1c\x09\x56\x28\xa8\x56\x00\x1e\x1d\x29\x40\x8b\x8e\x2a\x2c\x0e" +
	"\x11\xf7\xe8\xb1\x5b\x4f\x01\x35\x29\xd8\x53\x45\x11\x85\x23\x9a\x15\x80\xc5\x67\xb2\x29\x53\x21\x67\xe8\xb9\xed" +
	"\x82\x66\x17\xd8\x93\x97\x29\x49\xf4\x9e\x05\xc5\xb0\xef\xe8\x15\x25\x1d\x4d\x90\xb6\xda\x47\xda\x1b\x4f\x09\x6a" +
	"\x7e\x05\x61\xa8\xda\x72\x41\x6a\xca\x59\xac\xd1\x2d\x11\x2e\x6a\x00\x42\x2e\x58\x14\x2a\xd1\x86\x1a\x4b\x0e\xe4" +
	"\x53\x6d\xf6\x52\x1a\xde\xbc\xa2\x91\x62\xcf\xb1\x88\x84\xd5\x49\xc1\x27\x89\x0d\x7d\x5a\xa5\x40\x3a\xe7\x8e\xd4" +
	"\x4a\x26\x05\x0f\x2b\x80\x44\x96\xb4\x70\x7c\xab\xca\xa1\xe8\xfa\xb7\x41\x97\xd7\x9d\x0e\x5a\x3a\x97\xd0\x31\x07" +
	"\xbe\xe6\x9f\x5d\x26\x02\x70\x2e\x2b\xff\x8c\x37\xf2\x8d\xbd\xa0\xf1\x14\x7b\x72\xd1\x6d\xd4\x81\x44\xf8\x85\x7c" +
	"\xaf\x69\x1c\x1e\x48\xc1\x1a\x6d\x30\x9e\xd6\xfd\xba\x66\xe7\x30\xef\xfb\x9f\xeb\x54\xaf\x7f\x5a\x6f\x52\x4d\xd6" +
	"\x6e\xce\xfc\x32\xd5\xeb\xbf\x7a\xf0\x91\x6d\xe3\xe8\x89\x1b\x2f\x83\x72\x0b\x70\x79\x65\x87\x52\x2b\x78\xe3\xf7" +
	"\x31\xb8\xd4\x53\xb4\x82\xc5\x38\x3e\xe6\x66\x53\x12\x37\x51\x53\xba\x51\x98\x8a\x8d\xd9\x24\x7a\xd3\xb9\xb5\x09" +
	"\x91\x8f\x26\x1f\x6f\xe3\x0f\x77\x65\x43\x64\x47\x52\x53\x93\x8a\x0b\x6c\x75\xf6\x66\xd6\xde\xc1\xa6\x0c\xdc\x3d" +
	"\x67\xef\xfe\xd5\xcf\xe5\xd7\xf2\xcb\x18\xb4\x6b\xac\xdd\xb1\x35\xfa\xa4\xe0\xd7\xfd\x77\x96\x5d\xa4\x94\x2f\xdb" +
	"\x19\x15\x38\x0e\xcd\xcd\x39\xfb\x3a\x76\x1c\x45\xc1\x97\xed\x76\x3b\x88\x9f\x3b\xa9\x45\xc2\x68\x39\x44\x16\xd6" +
	"\x6c\x15\xfc\xfe\x6d\xd7\x47\x22\x75\x56\x0c\x73\x58\xe3\xcc\x38\x2b\x80\x0e\x8d\x82\xcf\xdb\xad\x1b\xad\x3a\x72" +
	"\x1c\x4f\x6d\xe0\xc9\x0c\x22\x91\xfe\x69\x28\x4d\x6a\x3c\xcc\x69\x3c\x8c\x34\xa6\x0f\xd7\xf5\x26\x1f\x31\x6e\xac" +
	"\x79\xee\x37\xba\xc2\x54\x3f\x33\xc6\x2a\x6d\x86\x03\x66\x6c\xcd\x05\x54\xfc\x9d\xd8\xcf\x8a\x7f\xf0\x04\x2d\x39" +
	"\x43\x1f\x4a\x72\xae\xf2\x5e\x0b\x2d\xa5\xa2\x98\x60\x35\xf4\x6d\x74\x1f\x97\x95\x45\x2e\xc8\xe9\xd1\x44\x05\xff" +
	"\xfe\x77\x43\xee\x2a\x6c\x99\x45\xca\x43\xfd\x40\xb3\x20\xcb\x87\x09\x8c\x66\xbf\x37\x87\x27\x0c\xe3\x33\x61\x84" +
	"\xdc\xd5\x31\x29\xe0\x85\x4e\x97\xa1\x55\xa6\x7a\x14\x06\x08\xad\x75\x73\xf1\xdb\x8a\xe7\x6e\xfb\xfc\x18\x9a\x29" +
	"\xb6\xa2\x3d\x36\x56\x9e\xb8\x22\x05\x5f\x3f\x6f\x17\x76\x72\xb1\xbe\x3c\xa1\xb3\x93\xdd\xdc\xc3\x2c\xef\x68\x7a" +
	"\x2c\xce\x74\x73\x73\x1b\xde\x70\x0b\x9b\xd2\xb6\x49\x42\xb1\x26\xb4\x52\x97\x57\x17\xe9\xd2\xd7\x3b\xb0\x4e\xcc" +
	"\x73\x45\xef\x29\xdd\xc3\xf4\x46\x53\x65\x74\xfe\xe4\x17\x91\xf2\xb7\x8c\x7c\xd5\xbe\x00\xe6\x55\x3f\x40\xe9\x92" +
	"\x8c\x61\x45\xd7\xe0\x7c\x86\xa5\xf8\x69\xf9\xfe\x45\xb5\x38\xc1\x1d\xc6\x74\x8a\x6e\x52\x26\x8d\xf6\x03\x7d\xdc" +
	"\x65\xdd\x1f\xb4\x3f\xe8\x44\xde\x0e\xc5\xf9\xeb\xf6\x3e\x76\x6e\xd0\x76\x90\x44\xf1\x68\x34\xfd\xa2\x75\x1e\xe6" +
	"\xd3\x0f\xb4\x6b\xd4\xf7\xc9\x57\xf3\xff\x01\x00\x00\xff\xff\x65\xcc\x42\x59\x7d\x0b\x00\x00")

func bindataDeploymentAlamedagrafanaDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedagrafanaDMyaml,
		"Deployment/alameda-grafanaDM.yaml",
	)
}



func bindataDeploymentAlamedagrafanaDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedagrafanaDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-grafanaDM.yaml",
		size: 2941,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1559111925, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedainfluxdbDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x94\xc1\x4e\xe3\x30\x10\x86\xef\x7d\x8a\x11\x7b\xe0\x94\x86\x9e\x56" +
	"\xf2\x2d\xd0\xb0\x44\x0b\x25\x6a\x53\x76\xf7\x54\x4d\x93\x09\xb5\x70\x6c\xcb\x9e\x14\xfa\xf6\x2b\x87\x16\x42\x69" +
	"\x01\xed\xfa\x50\x55\xe3\xf9\xbf\x7f\x26\xb6\x07\xad\xbc\x23\xe7\xa5\xd1\x02\xd0\x5a\x1f\xaf\x47\x83\x07\xa9\x2b" +
	"\x01\x63\xb2\xca\x6c\x1a\xd2\x3c\x68\x88\xb1\x42\x46\x31\x00\xd0\xd8\x90\x00\x54\xd8\x50\x85\x91\xd4\xb5\x6a\x9f" +
	"\xaa\xe5\x76\xc3\x5b\x2c\x49\x40\x4d\x15\x39\x64\xe3\x50\x0e\x00\x14\x2e\x49\xf9\xa0\x85\x60\xf1\x22\xee\x02\xa5" +
	"\x69\xac\xd1\xa4\xf9\x20\x13\xb5\x36\x8c\x2c\x8d\xde\xea\x2b\xf2\xa5\x93\x96\xbb\x7a\xc7\x54\x4b\x4d\x1e\x56\xe6" +
	"\x11\xd8\x40\xd5\x15\x0c\xbc\xa2\x60\xa3\x64\xd9\x09\xa1\x87\x03\x60\x6a\xac\x42\xa6\x21\x2a\xbb\xc2\xa1\xb1\xa4" +
	"\xfd\x4a\xd6\x3c\x94\x26\x7e\x44\xc9\x51\x6d\x5c\xe4\x08\xab\x8d\x80\x53\x76\x2d\x9d\x0e\xbc\xa5\x32\x98\x3b\xea" +
	"\x98\x5e\xc0\x68\x00\xe0\x49\x51\xc9\xc6\x3d\x97\xd5\x20\x97\xab\xeb\x5e\x9f\xfb\xbd\xf6\x9b\xda\xd5\xb0\x95\xf6" +
	"\xbe\x6d\x58\xea\x8b\x14\x80\x5d\x61\x61\x7d\x03\x4f\x65\xeb\x24\x6f\x2e\x8c\x66\x7a\xe2\xd7\x0d\x00\xd7\xea\xc4" +
	"\xcf\x3d\x39\x01\xa3\xb3\xb3\xb3\xed\x4e\x69\x34\xa3\xd4\xe4\x5e\xcc\xa2\xed\xe1\xbe\x71\x09\x4b\x36\x78\xdf\x8b" +
	"\x8b\xd1\xf0\x7b\x84\xca\x4a\x4d\x6f\x53\xf2\x56\xa9\xdc\x28\x59\x6e\x04\x64\xf5\xc4\x70\xee\xc8\x87\x0b\xb4\xcb" +
	"\x22\xbd\x7e\xed\x6c\x67\x97\x4d\x2e\xaf\xe7\xbf\xc7\xe7\x8b\x69\x9a\xdf\x4e\x8b\x6c\xf2\x63\x31\xce\x66\xc9\xf9" +
	"\x75\x3a\x7e\xc9\x05\x58\xa3\x6a\x49\xc0\x49\x38\x94\x93\xe3\x8c\xab\xa2\xc8\xbb\x9f\xd9\x22\x9d\xfc\x3f\xe3\x22" +
	"\x9d\x16\xd9\x65\x76\x91\x14\xe9\x01\x4e\x4c\x5c\xc6\xac\x7c\x6c\x9d\x5c\x23\x53\xf8\x3f\x2c\x1d\x7f\x8d\x9d\x4f" +
	"\xb3\xbb\xa4\x48\x17\x3f\xd3\x3f\x5f\x65\x3f\xd0\xe6\x33\x76\x32\x2f\xae\xfe\xbd\xf5\x64\x7c\x93\x4d\x16\xf3\x59" +
	"\x3a\x3d\xa0\xc5\xaa\x91\xfa\x53\x71\x9e\xcc\x66\xbf\x6e\xa7\x87\xcc\x3b\x80\x45\xef\x3f\x80\x1c\xf1\x6e\x3d\xb9" +
	"\x4f\x54\x1f\x39\x07\xf9\x5b\xe3\xb5\x51\x6d\x43\x37\xa6\xd5\xec\xfb\x77\xb2\x09\x91\x1c\x79\x25\x60\xff\x08\x7a" +
	"\xdc\xc3\x53\x30\x62\xe5\x7b\x49\x61\x8e\xdc\x6a\xb5\x11\x50\xa3\xf2\x74\xc4\x64\x8d\x2e\x56\x72\x19\xbf\x7b\x75" +
	"\xb0\xf7\x1c\xa3\x30\x26\x22\x1f\xc6\xea\x7d\xbf\x16\xdf\x2e\x9f\x51\x7b\x84\xe7\x0e\x8f\xbe\xee\x43\xb8\x77\x39" +
	"\xca\xdc\x1f\x49\xf9\xb0\x77\x4f\xa5\x23\x16\xfd\x22\xbb\xc8\xe4\xa8\xf4\x6f\x00\x00\x00\xff\xff\x94\x54\x36\xb6" +
	"\x88\x06\x00\x00")

func bindataDeploymentAlamedainfluxdbDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedainfluxdbDMyaml,
		"Deployment/alameda-influxdbDM.yaml",
	)
}



func bindataDeploymentAlamedainfluxdbDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedainfluxdbDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-influxdbDM.yaml",
		size: 1672,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1557293960, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedaoperatorDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x0c\x72\xd9\x93\x24\xa7\x45\x7a" +
	"\xe0\x4d\xad\x5c\x74\x81\x4d\x22\x24\x69\xaf\xc1\x84\x1a\x59\x44\x49\x0e\x97\xa4\xe4\xfa\xdf\x17\xb4\x6c\xaf\xe4" +
	"\x8f\x16\x28\xd0\xd5\x49\x18\xbe\x37\x6f\x66\xf8\x38\xe8\xd4\x1f\xe4\x83\x62\x2b\x00\x9d\x0b\xe5\x78\x9f\xfd\xa9" +
	"\x6c\x2b\xa0\x26\xa7\x79\x67\xc8\xc6\xcc\x50\xc4\x16\x23\x8a\x0c\xc0\xa2\x21\x01\xa8\xd1\x50\x8b\x39\x3b\xf2\x18" +
	"\xd9\x1f\x0e\x82\x43\x49\x02\x3a\x6a\xa7\x30\xaa\x0c\x40\xe3\x07\xe9\x90\xb8\x90\x24\x4e\xe4\x7d\x40\xb2\x71\x6c" +
	"\xc9\xc6\xab\x39\xd1\x5a\x8e\x18\x15\xdb\x03\xbf\xa5\x20\xbd\x72\x71\x5f\x6f\x4d\x9d\xb2\x14\xa0\xe7\x2d\x44\x86" +
	"\x76\x5f\x30\xc4\x9e\x92\x8c\x56\x72\x4f\xbc\x96\x16\x20\x92\x71\x1a\x23\x15\xa8\x5d\x8f\x05\x3b\xb2\xa1\x57\x5d" +
	"\x2c\x14\x97\x5b\x54\x31\xef\xd8\xe7\x9e\xb0\xdd\x09\xf8\x14\xfd\x40\x9f\xb2\xe0\x48\xa6\x22\x3c\xed\x73\x07\x01" +
	"\xf7\x19\x40\x20\x4d\x32\xb2\x9f\xca\x33\x18\x65\xff\x65\xd6\xef\xb2\xe3\x79\x0d\xc7\x0a\x0e\xc4\xd9\x84\xd3\x77" +
	"\x73\xca\xe9\xd3\x0b\x81\xdb\x12\x00\xc7\x9a\xa7\x49\xdb\x88\xca\x92\x3f\x31\xf3\x7f\x96\x01\x50\x06\x37\x24\xe0" +
	"\xeb\x80\xbb\x34\x18\xe7\xd9\xf5\x14\x43\x64\x5f\x9e\x73\x72\xdf\x93\x16\xe3\xaa\xf8\xb1\xf8\x69\xc9\x6f\x06\xad" +
	"\x1b\xd6\x4a\xee\x04\x7c\xee\x9e\x38\x36\x9e\x42\x72\xd5\x11\xe5\x29\xf0\xe0\x25\xcd\x3a\x4a\xc1\xaf\x03\x85\xb8" +
	"\x88\x01\x48\x37\x08\xb8\x5f\x99\x45\xd0\x90\x61\xbf\x13\xf0\xc3\xea\x51\x9d\x0e\xc8\x8e\xdf\xa8\xc7\x46\x9f\xaa" +
	"\xc7\xf5\x6b\x53\xfd\xb2\x7e\x4f\x7f\xb3\x24\x23\xea\x81\x7e\xf5\x6c\x96\x72\x9d\x22\xdd\xbe\x50\xb7\x8c\x1e\xe2" +
	"\x0d\xc6\x5e\x9c\x2e\xae\x38\xd9\x1f\x00\x2e\x84\x9b\xe7\xfa\x7f\x92\xbc\x90\xaa\xbe\x54\x8f\xeb\xba\x7a\x7f\x6e" +
	"\xd6\x2f\xd5\xdb\xf3\xcb\x7b\x5d\xbd\x55\xbf\xfd\xfe\xf3\x7b\x55\xd7\x2f\xeb\xd7\xd7\xf3\x12\x04\xdc\x1d\xef\x32" +
	"\x25\xed\x87\x8f\x62\xf6\x7c\x8b\x30\x4a\xf1\xb0\x5a\x3d\xac\xee\x4e\xc4\x91\xf5\x60\xe8\x91\x07\x3b\xbf\x9e\xa3" +
	"\xbe\xe3\x56\xd9\x8e\x67\x32\x26\x21\xa7\xd2\x4b\x8a\xb2\xbc\x44\xa4\x87\xf6\x6c\xf5\x4e\x40\x87\x3a\x50\x36\x8f" +
	"\xa7\x17\x1e\x1a\xcf\x1f\x34\x1f\x09\xfd\xf5\xcd\xd8\xd3\x27\xd9\x18\xb4\xed\x32\x98\x43\x39\x04\x5f\x6a\x96\xa8" +
	"\xcb\x0f\x65\x4b\x83\x16\x37\xe4\xcf\x40\x79\x7e\x52\xca\x5d\x92\x9a\x9d\x2b\xab\xa2\x42\x5d\x93\xc6\xdd\x2b\x49" +
	"\xb6\x6d\x10\xf0\x30\x03\x74\xa8\xf4\xe0\xe9\xad\xf7\x14\x7a\xd6\x6d\x32\xe2\xec\xd8\x91\x57\xdc\x5e\x61\x6a\x35" +
	"\xd2\x77\xe9\xed\x28\xf4\xbd\x5a\x9b\xfc\x71\xb1\x65\x2e\xd6\xcc\xde\x6f\x79\xda\x26\xb8\xa1\x7f\x05\x6b\xde\xdc" +
	"\xc0\x9e\xfb\xa9\xe5\xad\xdd\xa2\x6f\xab\xe6\xf3\x7c\x62\x2a\x92\x59\xac\x93\x1c\xdc\xde\x94\x77\xd3\x3e\xbd\xfb" +
	"\xcf\xef\x70\xe2\x1f\x80\x81\xfc\xa8\x24\x55\x52\x26\xdb\xdf\x5c\xae\x4b\xd8\xd3\xd5\x3d\x9c\x70\xd9\xdf\x01\x00" +
	"\x00\xff\xff\x16\x64\x95\x61\xa1\x07\x00\x00")

func bindataDeploymentAlamedaoperatorDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedaoperatorDMyaml,
		"Deployment/alameda-operatorDM.yaml",
	)
}



func bindataDeploymentAlamedaoperatorDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedaoperatorDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-operatorDM.yaml",
		size: 1953,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1557293960, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}


//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"CustomResourceDefinition/alamedarecommendationsCRD.yaml": bindataCustomResourceDefinitionAlamedarecommendationsCRDyaml,
	"CustomResourceDefinition/alamedascalersCRD.yaml":         bindataCustomResourceDefinitionAlamedascalersCRDyaml,
	"ClusterRole/admission-controllerCR.yaml":                 bindataClusterRoleAdmissioncontrollerCRyaml,
	"ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml": bindataClusterRoleAggregatealamedaadmineditalamedaCRyaml,
	"ClusterRole/alameda-datahubCR.yaml":                      bindataClusterRoleAlamedadatahubCRyaml,
	"ClusterRole/alameda-evictionerCR.yaml":                   bindataClusterRoleAlamedaevictionerCRyaml,
	"ClusterRole/alameda-grafanaCR.yaml":                      bindataClusterRoleAlamedagrafanaCRyaml,
	"ClusterRole/alameda-operatorCR.yaml":                     bindataClusterRoleAlamedaoperatorCRyaml,
	"ServiceAccount/admission-controllerSA.yaml":              bindataServiceAccountAdmissioncontrollerSAyaml,
	"ServiceAccount/alameda-aiSA.yaml":                        bindataServiceAccountAlamedaaiSAyaml,
	"ServiceAccount/alameda-datahubSA.yaml":                   bindataServiceAccountAlamedadatahubSAyaml,
	"ServiceAccount/alameda-evictionerSA.yaml":                bindataServiceAccountAlamedaevictionerSAyaml,
	"ServiceAccount/alameda-grafanaSA.yaml":                   bindataServiceAccountAlamedagrafanaSAyaml,
	"ServiceAccount/alameda-operatorSA.yaml":                  bindataServiceAccountAlamedaoperatorSAyaml,
	"ClusterRoleBinding/admission-controllerCRB.yaml":         bindataClusterRoleBindingAdmissioncontrollerCRByaml,
	"ClusterRoleBinding/alameda-datahubCRB.yaml":              bindataClusterRoleBindingAlamedadatahubCRByaml,
	"ClusterRoleBinding/alameda-evictionerCRB.yaml":           bindataClusterRoleBindingAlamedaevictionerCRByaml,
	"ClusterRoleBinding/alameda-grafanaCRB.yaml":              bindataClusterRoleBindingAlamedagrafanaCRByaml,
	"ClusterRoleBinding/alameda-operatorCRB.yaml":             bindataClusterRoleBindingAlamedaoperatorCRByaml,
	"Secret/admission-controller-tls.yaml":                    bindataSecretAdmissioncontrollertlsyaml,
	"Secret/alameda-influxdb.yaml":                            bindataSecretAlamedainfluxdbyaml,
	"ConfigMap/dashboards-config.yaml":                        bindataConfigMapDashboardsconfigyaml,
	"ConfigMap/grafana-datasources.yaml":                      bindataConfigMapGrafanadatasourcesyaml,
	"PersistentVolumeClaim/admission-controller-data.yaml":    bindataPersistentVolumeClaimAdmissioncontrollerdatayaml,
	"PersistentVolumeClaim/admission-controller-log.yaml":     bindataPersistentVolumeClaimAdmissioncontrollerlogyaml,
	"PersistentVolumeClaim/alameda-ai-data.yaml":              bindataPersistentVolumeClaimAlamedaaidatayaml,
	"PersistentVolumeClaim/alameda-ai-log.yaml":               bindataPersistentVolumeClaimAlamedaailogyaml,
	"PersistentVolumeClaim/alameda-datahub-data.yaml":         bindataPersistentVolumeClaimAlamedadatahubdatayaml,
	"PersistentVolumeClaim/alameda-datahub-log.yaml":          bindataPersistentVolumeClaimAlamedadatahublogyaml,
	"PersistentVolumeClaim/alameda-evictioner-data.yaml":      bindataPersistentVolumeClaimAlamedaevictionerdatayaml,
	"PersistentVolumeClaim/alameda-evictioner-log.yaml":       bindataPersistentVolumeClaimAlamedaevictionerlogyaml,
	"PersistentVolumeClaim/alameda-operator-data.yaml":        bindataPersistentVolumeClaimAlamedaoperatordatayaml,
	"PersistentVolumeClaim/alameda-operator-log.yaml":         bindataPersistentVolumeClaimAlamedaoperatorlogyaml,
	"PersistentVolumeClaim/my-alamedagrafanaPVC.yaml":         bindataPersistentVolumeClaimMyalamedagrafanaPVCyaml,
	"PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml":        bindataPersistentVolumeClaimMyalamedainfluxdbPVCyaml,
	"Service/admission-controllerSV.yaml":                     bindataServiceAdmissioncontrollerSVyaml,
	"Service/alameda-datahubSV.yaml":                          bindataServiceAlamedadatahubSVyaml,
	"Service/alameda-grafanaSV.yaml":                          bindataServiceAlamedagrafanaSVyaml,
	"Service/alameda-influxdbSV.yaml":                         bindataServiceAlamedainfluxdbSVyaml,
	"Deployment/admission-controllerDM.yaml":                  bindataDeploymentAdmissioncontrollerDMyaml,
	"Deployment/alameda-aiDM.yaml":                            bindataDeploymentAlamedaaiDMyaml,
	"Deployment/alameda-datahubDM.yaml":                       bindataDeploymentAlamedadatahubDMyaml,
	"Deployment/alameda-evictionerDM.yaml":                    bindataDeploymentAlamedaevictionerDMyaml,
	"Deployment/alameda-grafanaDM.yaml":                       bindataDeploymentAlamedagrafanaDMyaml,
	"Deployment/alameda-influxdbDM.yaml":                      bindataDeploymentAlamedainfluxdbDMyaml,
	"Deployment/alameda-operatorDM.yaml":                      bindataDeploymentAlamedaoperatorDMyaml,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op: "open",
					Path: name,
					Err: os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op: "open",
			Path: name,
			Err: os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}


type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"ClusterRole": {Func: nil, Children: map[string]*bintree{
		"admission-controllerCR.yaml": {Func: bindataClusterRoleAdmissioncontrollerCRyaml, Children: map[string]*bintree{}},
		"aggregate-alameda-admin-edit-alamedaCR.yaml": {Func: bindataClusterRoleAggregatealamedaadmineditalamedaCRyaml, Children: map[string]*bintree{}},
		"alameda-datahubCR.yaml": {Func: bindataClusterRoleAlamedadatahubCRyaml, Children: map[string]*bintree{}},
		"alameda-evictionerCR.yaml": {Func: bindataClusterRoleAlamedaevictionerCRyaml, Children: map[string]*bintree{}},
		"alameda-grafanaCR.yaml": {Func: bindataClusterRoleAlamedagrafanaCRyaml, Children: map[string]*bintree{}},
		"alameda-operatorCR.yaml": {Func: bindataClusterRoleAlamedaoperatorCRyaml, Children: map[string]*bintree{}},
	}},
	"ClusterRoleBinding": {Func: nil, Children: map[string]*bintree{
		"admission-controllerCRB.yaml": {Func: bindataClusterRoleBindingAdmissioncontrollerCRByaml, Children: map[string]*bintree{}},
		"alameda-datahubCRB.yaml": {Func: bindataClusterRoleBindingAlamedadatahubCRByaml, Children: map[string]*bintree{}},
		"alameda-evictionerCRB.yaml": {Func: bindataClusterRoleBindingAlamedaevictionerCRByaml, Children: map[string]*bintree{}},
		"alameda-grafanaCRB.yaml": {Func: bindataClusterRoleBindingAlamedagrafanaCRByaml, Children: map[string]*bintree{}},
		"alameda-operatorCRB.yaml": {Func: bindataClusterRoleBindingAlamedaoperatorCRByaml, Children: map[string]*bintree{}},
	}},
	"ConfigMap": {Func: nil, Children: map[string]*bintree{
		"dashboards-config.yaml": {Func: bindataConfigMapDashboardsconfigyaml, Children: map[string]*bintree{}},
		"grafana-datasources.yaml": {Func: bindataConfigMapGrafanadatasourcesyaml, Children: map[string]*bintree{}},
	}},
	"CustomResourceDefinition": {Func: nil, Children: map[string]*bintree{
		"alamedarecommendationsCRD.yaml": {Func: bindataCustomResourceDefinitionAlamedarecommendationsCRDyaml, Children: map[string]*bintree{}},
		"alamedascalersCRD.yaml": {Func: bindataCustomResourceDefinitionAlamedascalersCRDyaml, Children: map[string]*bintree{}},
	}},
	"Deployment": {Func: nil, Children: map[string]*bintree{
		"admission-controllerDM.yaml": {Func: bindataDeploymentAdmissioncontrollerDMyaml, Children: map[string]*bintree{}},
		"alameda-aiDM.yaml": {Func: bindataDeploymentAlamedaaiDMyaml, Children: map[string]*bintree{}},
		"alameda-datahubDM.yaml": {Func: bindataDeploymentAlamedadatahubDMyaml, Children: map[string]*bintree{}},
		"alameda-evictionerDM.yaml": {Func: bindataDeploymentAlamedaevictionerDMyaml, Children: map[string]*bintree{}},
		"alameda-grafanaDM.yaml": {Func: bindataDeploymentAlamedagrafanaDMyaml, Children: map[string]*bintree{}},
		"alameda-influxdbDM.yaml": {Func: bindataDeploymentAlamedainfluxdbDMyaml, Children: map[string]*bintree{}},
		"alameda-operatorDM.yaml": {Func: bindataDeploymentAlamedaoperatorDMyaml, Children: map[string]*bintree{}},
	}},
	"PersistentVolumeClaim": {Func: nil, Children: map[string]*bintree{
		"admission-controller-data.yaml": {Func: bindataPersistentVolumeClaimAdmissioncontrollerdatayaml, Children: map[string]*bintree{}},
		"admission-controller-log.yaml": {Func: bindataPersistentVolumeClaimAdmissioncontrollerlogyaml, Children: map[string]*bintree{}},
		"alameda-ai-data.yaml": {Func: bindataPersistentVolumeClaimAlamedaaidatayaml, Children: map[string]*bintree{}},
		"alameda-ai-log.yaml": {Func: bindataPersistentVolumeClaimAlamedaailogyaml, Children: map[string]*bintree{}},
		"alameda-datahub-data.yaml": {Func: bindataPersistentVolumeClaimAlamedadatahubdatayaml, Children: map[string]*bintree{}},
		"alameda-datahub-log.yaml": {Func: bindataPersistentVolumeClaimAlamedadatahublogyaml, Children: map[string]*bintree{}},
		"alameda-evictioner-data.yaml": {Func: bindataPersistentVolumeClaimAlamedaevictionerdatayaml, Children: map[string]*bintree{}},
		"alameda-evictioner-log.yaml": {Func: bindataPersistentVolumeClaimAlamedaevictionerlogyaml, Children: map[string]*bintree{}},
		"alameda-operator-data.yaml": {Func: bindataPersistentVolumeClaimAlamedaoperatordatayaml, Children: map[string]*bintree{}},
		"alameda-operator-log.yaml": {Func: bindataPersistentVolumeClaimAlamedaoperatorlogyaml, Children: map[string]*bintree{}},
		"my-alamedagrafanaPVC.yaml": {Func: bindataPersistentVolumeClaimMyalamedagrafanaPVCyaml, Children: map[string]*bintree{}},
		"my-alamedainfluxdbPVC.yaml": {Func: bindataPersistentVolumeClaimMyalamedainfluxdbPVCyaml, Children: map[string]*bintree{}},
	}},
	"Secret": {Func: nil, Children: map[string]*bintree{
		"admission-controller-tls.yaml": {Func: bindataSecretAdmissioncontrollertlsyaml, Children: map[string]*bintree{}},
		"alameda-influxdb.yaml": {Func: bindataSecretAlamedainfluxdbyaml, Children: map[string]*bintree{}},
	}},
	"Service": {Func: nil, Children: map[string]*bintree{
		"admission-controllerSV.yaml": {Func: bindataServiceAdmissioncontrollerSVyaml, Children: map[string]*bintree{}},
		"alameda-datahubSV.yaml": {Func: bindataServiceAlamedadatahubSVyaml, Children: map[string]*bintree{}},
		"alameda-grafanaSV.yaml": {Func: bindataServiceAlamedagrafanaSVyaml, Children: map[string]*bintree{}},
		"alameda-influxdbSV.yaml": {Func: bindataServiceAlamedainfluxdbSVyaml, Children: map[string]*bintree{}},
	}},
	"ServiceAccount": {Func: nil, Children: map[string]*bintree{
		"admission-controllerSA.yaml": {Func: bindataServiceAccountAdmissioncontrollerSAyaml, Children: map[string]*bintree{}},
		"alameda-aiSA.yaml": {Func: bindataServiceAccountAlamedaaiSAyaml, Children: map[string]*bintree{}},
		"alameda-datahubSA.yaml": {Func: bindataServiceAccountAlamedadatahubSAyaml, Children: map[string]*bintree{}},
		"alameda-evictionerSA.yaml": {Func: bindataServiceAccountAlamedaevictionerSAyaml, Children: map[string]*bintree{}},
		"alameda-grafanaSA.yaml": {Func: bindataServiceAccountAlamedagrafanaSAyaml, Children: map[string]*bintree{}},
		"alameda-operatorSA.yaml": {Func: bindataServiceAccountAlamedaoperatorSAyaml, Children: map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
