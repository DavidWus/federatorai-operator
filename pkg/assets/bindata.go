// Code generated by go-bindata. DO NOT EDIT.
// sources:
// CustomResourceDefinition/alamedarecommendationsCRD.yaml
// CustomResourceDefinition/alamedascalersCRD.yaml
// ClusterRole/admission-controllerCR.yaml
// ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml
// ClusterRole/alameda-datahubCR.yaml
// ClusterRole/alameda-evictionerCR.yaml
// ClusterRole/alameda-grafanaCR.yaml
// ClusterRole/alameda-operatorCR.yaml
// ServiceAccount/admission-controllerSA.yaml
// ServiceAccount/alameda-aiSA.yaml
// ServiceAccount/alameda-datahubSA.yaml
// ServiceAccount/alameda-evictionerSA.yaml
// ServiceAccount/alameda-grafanaSA.yaml
// ServiceAccount/alameda-operatorSA.yaml
// ClusterRoleBinding/admission-controllerCRB.yaml
// ClusterRoleBinding/alameda-datahubCRB.yaml
// ClusterRoleBinding/alameda-evictionerCRB.yaml
// ClusterRoleBinding/alameda-grafanaCRB.yaml
// ClusterRoleBinding/alameda-operatorCRB.yaml
// Secret/admission-controller-tls.yaml
// Secret/alameda-influxdb.yaml
// ConfigMap/dashboards-config.yaml
// ConfigMap/grafana-datasources.yaml
// PersistentVolumeClaim/admission-controller-data.yaml
// PersistentVolumeClaim/admission-controller-log.yaml
// PersistentVolumeClaim/alameda-ai-data.yaml
// PersistentVolumeClaim/alameda-ai-log.yaml
// PersistentVolumeClaim/alameda-datahub-data.yaml
// PersistentVolumeClaim/alameda-datahub-log.yaml
// PersistentVolumeClaim/alameda-evictioner-data.yaml
// PersistentVolumeClaim/alameda-evictioner-log.yaml
// PersistentVolumeClaim/alameda-operator-data.yaml
// PersistentVolumeClaim/alameda-operator-log.yaml
// PersistentVolumeClaim/my-alamedagrafanaPVC.yaml
// PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml
// Service/admission-controllerSV.yaml
// Service/alameda-datahubSV.yaml
// Service/alameda-grafanaSV.yaml
// Service/alameda-influxdbSV.yaml
// Deployment/admission-controllerDM.yaml
// Deployment/alameda-aiDM.yaml
// Deployment/alameda-datahubDM.yaml
// Deployment/alameda-evictionerDM.yaml
// Deployment/alameda-grafanaDM.yaml
// Deployment/alameda-influxdbDM.yaml
// Deployment/alameda-operatorDM.yaml

package assets


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}


type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataCustomResourceDefinitionAlamedarecommendationsCRDyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x53\x3d\x8f\xdb\x30\x0c\xdd\xf5\x2b\x88\xec\x71\x6b\x74\x29\xbc\x1d" +
	"\xda\xa5\xcb\xa1\xb8\x02\xb7\x14\x1d\x18\x89\xcd\xb1\x27\x8b\x2a\x45\x07\xbd\x7f\x5f\xd8\x8a\xf3\x71\x89\x13\x4e" +
	"\xf6\x13\xf5\xde\xe3\x87\x30\xf3\x33\x69\x61\x49\x1d\x60\x66\xfa\x67\x94\xc6\xbf\xd2\xbc\x7e\x2e\x0d\xcb\x87\x5d" +
	"\xbb\x21\xc3\xd6\xbd\x72\x0a\x1d\x7c\x19\x8a\x49\xff\x44\x45\x06\xf5\xf4\x95\x7e\x73\x62\x63\x49\xae\x27\xc3\x80" +
	"\x86\x9d\x03\x88\xb8\xa1\x58\xc6\x2f\x00\x2f\xc9\x54\x62\x24\x5d\x9b\x48\x9c\x69\x3b\x58\xb5\xcd\xc7\x95\x03\x48" +
	"\xd8\x53\x07\x18\xb1\xa7\x80\x4a\x5e\xfa\x9e\x52\x40\x9b\x3c\xe0\x60\x52\x3c\x46\x4e\xdb\x66\x64\x42\x4e\xa4\xa5" +
	"\x41\x76\x25\x93\x1f\x15\xb6\x2a\x43\xee\x60\x39\xb1\x2a\xec\xdd\xd4\x22\x1e\xaa\xd8\xd3\x99\xd8\x74\x9e\xe3\xa0" +
	"\x18\x97\xec\x38\x80\xe2\x25\x53\x07\x8f\x23\x65\x46\x4f\xc1\x01\xec\x30\x72\xcd\xa8\x22\x92\x29\x3d\x7c\xff\xf6" +
	"\xfc\xe9\x87\x7f\xa1\x1e\x2b\x08\x90\x55\x32\xa9\xf1\xec\x65\x8c\x93\xee\x1f\x30\x00\x7b\x1b\x35\x8a\x29\xa7\xed" +
	"\x01\x9e\xac\xdf\x4b\x3a\x9d\xc2\x79\xa2\x6c\xfe\x90\xb7\x03\x3c\xb7\x6f\x8e\x6b\xe6\xe6\xf1\xd5\x5e\x9e\xe3\x00" +
	"\x6c\xd4\x5f\x80\xcb\x44\x35\xa6\x61\x5f\xc1\x17\xca\x39\x86\xee\x37\xee\x2a\xeb\x42\x8d\xc7\xbb\x7f\x07\x56\x0a" +
	"\x97\x57\xd7\x93\xa1\x0b\xf8\x06\x5b\x3d\x42\x55\x7c\x73\xb7\x15\xd6\x27\xbd\xbb\x3b\x0d\x43\x1b\xca\x8d\xa1\xed" +
	"\xe6\x27\xba\x6b\x31\xe6\x17\x6c\xdd\xf1\x0a\x7a\x4f\xd9\x28\x3c\xbe\x5f\xf3\xd5\xea\x6c\xa7\xa7\x5f\x2f\x29\x4c" +
	"\x0f\xb6\x74\xf0\xf3\xd7\xb8\xd0\x26\x4a\x61\xbf\x84\x13\xf8\x3f\x00\x00\xff\xff\xc3\x68\x72\x63\x12\x04\x00\x00" +
	"")

func bindataCustomResourceDefinitionAlamedarecommendationsCRDyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataCustomResourceDefinitionAlamedarecommendationsCRDyaml,
		"CustomResourceDefinition/alamedarecommendationsCRD.yaml",
	)
}



func bindataCustomResourceDefinitionAlamedarecommendationsCRDyaml() (*asset, error) {
	bytes, err := bindataCustomResourceDefinitionAlamedarecommendationsCRDyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "CustomResourceDefinition/alamedarecommendationsCRD.yaml",
		size: 1042,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553062567, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataCustomResourceDefinitionAlamedascalersCRDyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\xc1\x6e\x23\x37\x0c\xbd\xcf\x57\x10\xee\x21\x97\x7a\xdc\xa0\x97" +
	"\x62\x0e\x05\x16\x6e\x0f\x41\xd1\x45\x91\x14\x7b\x29\x7a\xa0\x25\x8e\xad\x46\x22\x55\x89\x32\xd6\xfd\xfa\x42\x1a" +
	"\xdb\xc9\xcc\xc6\xd8\x14\xa8\x4e\xa3\x37\xe2\x23\xf5\x48\x8a\x18\xdd\x27\x4a\xd9\x09\x0f\x80\xd1\xd1\x67\x25\xae" +
	"\xbb\xdc\x3f\xff\x90\x7b\x27\x9b\xe3\xfd\x8e\x14\xef\xbb\x67\xc7\x76\x80\x6d\xc9\x2a\xe1\x91\xb2\x94\x64\xe8\x27" +
	"\x1a\x1d\x3b\x75\xc2\x5d\x20\x45\x8b\x8a\x03\x00\x40\x07\xe0\x71\x47\x3e\x0f\x5d\xdd\x1a\x61\x4d\xe2\x3d\xa5\xb5" +
	"\x8a\xf8\x0b\xf5\x00\xab\xfb\xfe\xbb\x55\x07\xc0\x18\x68\x00\xf4\x18\xc8\x62\x36\xe8\x29\xe5\x1e\x8b\x4a\xfd\x76" +
	"\xbc\xef\x2b\x03\x3a\x6e\xb0\xeb\x72\x24\x53\x99\xf7\x49\x4a\x1c\xe0\xf6\xc1\x89\xf9\x1c\xc5\x74\x81\x0f\x93\x93" +
	"\xa7\xe6\xa4\xe1\xd1\x97\x84\x7e\xe9\xbe\x03\xc8\x46\x22\x0d\xf0\xb1\x52\x44\x34\x64\x3b\x80\x23\x7a\x67\xb1\xde" +
	"\x78\x22\x95\x48\xfc\xe1\xb7\x87\x4f\xdf\x3f\x99\x03\x05\x9c\x40\x80\x98\x24\x52\x52\x77\xf1\x5d\xd7\x2b\xa5\xaf" +
	"\x18\x80\xa5\x6c\x92\x8b\x8d\x11\x7e\x5c\xbf\xfa\x03\x70\x57\x99\x27\x13\xb0\x55\x6a\xca\xa0\x07\x82\xe3\x84\x91" +
	"\x85\xdc\xbc\x82\x8c\xa0\x07\x97\x21\x51\x4c\x94\x89\xb5\x45\x38\xe3\x92\x11\x90\x41\x76\x7f\x91\xd1\x1e\x9e\x28" +
	"\x55\x12\xc8\x07\x29\xde\xd6\x04\x1d\x29\x29\x24\x32\xb2\x67\xf7\xcf\x95\x39\x83\x4a\x73\xe9\x51\x29\xeb\x8c\xd1" +
	"\xb1\x52\x62\xf4\x55\x93\x42\xdf\x02\xb2\x85\x80\x27\x48\x54\x7d\x40\xe1\x57\x6c\xed\x48\xee\xe1\x57\x49\x04\x8e" +
	"\x47\x19\xe0\xa0\x1a\xf3\xb0\xd9\xec\x9d\x5e\x4a\xcd\x48\x08\x85\x9d\x9e\x36\xad\x62\xdc\xae\xa8\xa4\xbc\xb1\x74" +
	"\x24\xbf\xc1\xe8\xd6\x2d\x4e\xd6\x56\x9e\xc1\x7e\x93\xce\x65\x98\xef\x5e\x05\xa6\xa7\x9a\xb4\xac\xc9\xf1\xfe\x0a" +
	"\xb7\xdc\xbf\x57\xf5\x5f\x1c\x5b\x70\x19\xf0\xcc\x32\x45\xff\x22\x6e\x85\xaa\x26\x8f\x3f\x3f\xfd\x0e\x97\x18\x5a" +
	"\x02\xe6\x8a\x37\xad\x5f\xcc\xf2\x8b\xec\x55\x26\xc7\x23\xa5\x29\x6d\x63\x92\xd0\x18\x89\x6d\x14\xc7\xda\x36\xc6" +
	"\x3b\xe2\xb9\xe4\xb9\xec\x82\xd3\x9a\xe7\xbf\x0b\x65\xad\xd9\xe9\x61\x8b\xcc\xa2\xb0\x23\x28\xd1\xa2\x92\xed\xe1" +
	"\x81\x61\x8b\x81\xfc\x16\x33\xfd\xdf\xa2\x57\x7d\xf3\xba\x0a\xfa\x75\xd9\xaf\x8f\xc2\x17\x07\x27\x71\xae\xf0\xa5" +
	"\xa3\x2f\xeb\xad\xfe\xa9\xcb\xcc\x9e\x9f\x37\xda\xe9\x66\x28\x75\x11\xe3\xce\x13\x7d\x26\x53\xf4\xa6\xdd\x4e\xc4" +
	"\x13\xce\x9b\x27\x8a\x77\xe6\xb4\x3c\x4f\x5c\xc2\x12\x5b\x43\xd6\xea\xe4\x0b\xd8\x48\x88\x68\xf4\xbd\xa1\x66\xf2" +
	"\x64\x54\xd2\x92\x7f\x56\xb8\x77\x0f\x21\x4a\x52\x64\x1d\xe0\xb1\x30\xac\x02\x3e\xd3\xaa\xb6\x6c\xa2\x3d\x31\x25" +
	"\x54\x02\x23\x96\x00\x47\xa5\x04\x41\xac\x1b\x4f\x53\xf9\xd6\xb2\x73\x9e\xee\xde\x0c\x68\x91\x1d\x68\x05\xe7\x12" +
	"\xcd\x7a\x68\x7d\x0d\xf2\xab\xd9\x55\xd4\x92\xdf\x93\xdf\xf3\x1b\xbc\xbd\x0e\x8c\xe5\xfd\x6f\x19\x4e\xda\x44\x2f" +
	"\xa7\x40\xac\x46\x78\x74\xfb\x37\x8e\xdc\xbc\xe0\x92\xe1\xbf\xda\xde\xf8\xb5\x80\x8f\x97\x49\x7b\xbc\x47\x1f\x0f" +
	"\x78\xdf\xbd\x48\x83\xc6\x50\x54\xb2\x1f\x97\x13\x6b\xb5\x9a\x8d\xa9\xb6\x35\xc2\xb6\xcd\xdd\x3c\xc0\x1f\x7f\xd6" +
	"\x59\xa5\x92\xc8\x9e\x1b\x62\x02\xff\x0d\x00\x00\xff\xff\xc7\x3f\x75\xd9\xda\x07\x00\x00")

func bindataCustomResourceDefinitionAlamedascalersCRDyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataCustomResourceDefinitionAlamedascalersCRDyaml,
		"CustomResourceDefinition/alamedascalersCRD.yaml",
	)
}



func bindataCustomResourceDefinitionAlamedascalersCRDyaml() (*asset, error) {
	bytes, err := bindataCustomResourceDefinitionAlamedascalersCRDyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "CustomResourceDefinition/alamedascalersCRD.yaml",
		size: 2010,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1558937075, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAdmissioncontrollerCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x52\x3d\x6f\x85\x30\x0c\xdc\xf9\x15\xd1\xdb\xa1\xea\x56\xb1\x76\xe8" +
	"\xde\xa1\xbb\x5f\xe2\x07\x16\x21\x8e\x6c\xe7\xf5\xe3\xd7\x57\x40\x05\x0c\x45\x45\x6a\xa6\x9c\x74\x97\xbb\x8b\x0d" +
	"\x99\xde\x50\x94\x38\xb5\x4e\xae\xe0\x1b\x28\xd6\xb3\xd0\x17\x18\x71\x6a\x86\x27\x6d\x88\x1f\xee\x8f\xd5\x40\x29" +
	"\xb4\xee\x39\x16\x35\x94\x57\x8e\x58\x8d\x68\x10\xc0\xa0\xad\x9c\x4b\x30\x62\xeb\x6e\x18\x50\xc0\x58\x80\x6a\x08" +
	"\x23\xe9\xf4\x6e\xed\x39\x99\x70\x8c\x28\x95\x94\x88\x3a\xf1\x6b\x07\x99\x5e\x84\x4b\x9e\xe1\x74\x6a\x77\x59\x35" +
	"\x82\x1d\xa9\xc9\x3e\xc3\x65\xa6\x09\x2a\x17\xf1\xb8\x53\x8d\xc5\xc0\x28\x75\xef\x78\xed\x99\x07\xcf\xe9\x46\x5d" +
	"\x59\xb4\x3a\xb3\xee\x28\xd7\x9d\xa0\x43\x5b\xef\x5e\x10\x0c\x57\x58\x72\xd8\xc3\x80\x11\x67\xf8\x7b\xdc\xc3\x48" +
	"\x99\xc3\x9f\xce\x91\x74\x03\x19\xcc\xf7\x47\x3e\xf8\x61\x98\x74\x6d\xb3\xb0\xb2\x1e\x99\x0b\xe6\x48\x1e\x14\x4d" +
	"\x77\x45\x72\xe4\xcf\x11\x93\x9d\xcd\x75\x36\xc9\xf1\x27\xfc\xe4\x98\xc6\xb0\x6d\xc0\xbf\xec\xa7\xd6\x0d\x67\x4c" +
	"\xda\xd3\xcd\x1a\xe2\x23\xeb\xad\xee\xb2\x0d\xa7\x5c\xbf\x03\x00\x00\xff\xff\xf4\x88\xe0\xed\x0a\x03\x00\x00")

func bindataClusterRoleAdmissioncontrollerCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAdmissioncontrollerCRyaml,
		"ClusterRole/admission-controllerCR.yaml",
	)
}



func bindataClusterRoleAdmissioncontrollerCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAdmissioncontrollerCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/admission-controllerCR.yaml",
		size: 778,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1558936681, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAggregatealamedaadmineditalamedaCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x4f\xbd\x4e\xf4\x30\x10\xec\xfd\x14\xab\xeb\x93\x4f\x5f\x87\xdc\x52" +
	"\xd0\x53\xd0\xef\xd9\xa3\xdc\xea\x6c\x6f\xb4\x5e\x1f\x12\x4f\x8f\x2e\x21\xd0\x81\x90\xa8\x3c\xf2\xce\x2f\xaf\xf2" +
	"\x02\xeb\xa2\x2d\x92\x9d\x39\xcd\x3c\xfc\xa2\x26\x6f\xec\xa2\x6d\xbe\x3e\xf4\x59\xf4\xdf\xed\x7f\xb8\x4a\xcb\x91" +
	"\x1e\xcb\xe8\x0e\x7b\xd6\x82\x50\xe1\x9c\xd9\x39\x06\xa2\xc6\x15\x91\x78\x59\x0c\x0b\x3b\x26\x2e\x5c\x91\x79\xe2" +
	"\x5c\xa5\x4d\xc8\xe2\xc7\x57\x20\x2a\x7c\x46\xe9\x77\x19\x7d\x93\xf9\x65\xe6\xba\xfb\x44\x3a\xb9\x0d\x9c\x7e\x23" +
	"\xbc\x47\x7f\xea\x6c\x14\xf4\x18\x26\xe2\x55\x9e\x4c\xc7\xba\x95\x98\x88\x87\x6b\x4f\x5c\xa4\x2d\x73\xd2\xe6\x2c" +
	"\x0d\xd6\x67\x96\x40\x64\xe8\x3a\x2c\xe1\xa0\xee\x2b\xee\x6c\x58\x0f\x44\x37\xd8\xf9\xe3\xb6\xc0\xb7\xb7\x48\xdf" +
	"\x41\x32\xb0\x63\x83\x63\xcd\x07\xcc\x28\x70\xfc\x45\x0b\x43\xd2\x5a\xd1\xf2\xb6\xff\xa7\x36\xaf\xec\xe9\xf2\x1e" +
	"\x00\x00\xff\xff\x36\x9a\x6e\xc2\xf0\x01\x00\x00")

func bindataClusterRoleAggregatealamedaadmineditalamedaCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAggregatealamedaadmineditalamedaCRyaml,
		"ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml",
	)
}



func bindataClusterRoleAggregatealamedaadmineditalamedaCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAggregatealamedaadmineditalamedaCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml",
		size: 496,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553062567, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAlamedadatahubCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\x31\x4f\xc3\x40\x0c\x85\xf7\xfb\x15\x56\x99\x13\xc4\x86\xb2\x32" +
	"\xb0\x22\x06\x76\x37\xf7\xda\x58\xcd\x9d\x0f\xdb\x57\x09\x7e\x3d\x6a\xaa\x16\x75\xb2\xf4\xfc\xf4\x7d\xb2\xb9\xc9" +
	"\x17\xcc\x45\xeb\x44\xb6\xe7\x79\xe4\x1e\x8b\x9a\xfc\x72\x88\xd6\xf1\xf4\xea\xa3\xe8\xf3\xf9\x25\x9d\xa4\xe6\x89" +
	"\xde\xd6\xee\x01\xfb\xd4\x15\xa9\x20\x38\x73\xf0\x94\x88\x2a\x17\x4c\x74\x40\x86\x71\xa8\xb1\x0c\xbc\x72\x41\xe6" +
	"\xe1\xd2\x58\xfa\x3e\x59\x5f\xe1\x53\x7a\xa2\x0f\x58\x11\xbf\x18\xe9\xa0\x46\xdf\x1d\xf6\x43\xcd\xb4\x20\x16\x74" +
	"\xa7\x5e\x33\x6c\x03\x7a\xe3\x19\xa4\x0d\xd5\x17\x39\xc4\x50\xb4\x4a\xa8\x49\x3d\x52\x1a\x88\x9b\xbc\x9b\xf6\xe6" +
	"\x13\x25\xa2\x81\x76\xbb\x44\x64\x70\xed\x36\xe3\x16\xde\x31\x9e\x88\xce\xb0\xfd\x6d\x71\x44\x3c\x30\xb6\x90\x7b" +
	"\xa8\xcf\xbc\x4a\x3d\x8e\xb3\xd6\x60\xa9\x30\x1f\x59\x1e\xc8\xd7\xea\xf5\x3c\xc3\xac\xa5\xa0\xe6\xed\x5d\xff\x92" +
	"\xbb\xe3\x32\x7b\xcb\x1c\xf8\x0b\x00\x00\xff\xff\x44\xa5\x3d\x5d\x6a\x01\x00\x00")

func bindataClusterRoleAlamedadatahubCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAlamedadatahubCRyaml,
		"ClusterRole/alameda-datahubCR.yaml",
	)
}



func bindataClusterRoleAlamedadatahubCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAlamedadatahubCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/alameda-datahubCR.yaml",
		size: 362,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAlamedaevictionerCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x31\x6b\x03\x31\x0c\x46\x77\xff\x0a\x91\xfd\xae\x74\x2b\x5e\x3b" +
	"\x74\xef\xd0\x5d\xb1\xbf\xa6\x22\xb6\x75\x48\x72\x86\xfe\xfa\x72\xe1\x86\xc2\x4d\x82\x87\xf4\x78\xe2\x4d\xbe\x60" +
	"\x2e\x3a\x32\xd9\x95\xcb\xca\x33\x7e\xd4\xe4\x97\x43\x74\xac\xf7\x37\x5f\x45\x5f\x1e\xaf\xe9\x2e\xa3\x66\x7a\x6f" +
	"\xd3\x03\xf6\xa9\x0d\xa9\x23\xb8\x72\x70\x4e\x44\x83\x3b\x32\x7d\xa3\xc2\x38\xd4\x58\x16\x6e\xdc\x51\x79\xc1\x43" +
	"\xca\xae\x82\x25\x9b\x0d\x9e\xd3\x42\xbc\xc9\x87\xe9\xdc\x7c\x3f\x5d\xe8\x72\x49\x44\x06\xd7\x69\x05\x07\xdb\xb4" +
	"\x7a\x22\x7a\xc0\xae\x07\xb9\x21\x9e\xb3\xa2\x21\x70\xb6\xf0\x0c\xf5\xc2\x4d\xc6\x6d\x2d\x3a\x82\x65\xc0\x7c\x65" +
	"\x39\xcb\x8f\xb6\x7d\x1b\xe6\xff\x91\xa1\x68\xef\x18\xf5\xf9\xfe\xb9\xe0\x2f\x00\x00\xff\xff\x1e\xb7\xab\xd4\x2f" +
	"\x01\x00\x00")

func bindataClusterRoleAlamedaevictionerCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAlamedaevictionerCRyaml,
		"ClusterRole/alameda-evictionerCR.yaml",
	)
}



func bindataClusterRoleAlamedaevictionerCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAlamedaevictionerCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/alameda-evictionerCR.yaml",
		size: 303,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1555988180, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAlamedagrafanaCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\xa1\x6e\xc5\x30\x0c\x46\x61\xee\xa7\xb0\x2e\x4f\xa7\xb1\x29\x74" +
	"\x60\x7c\x60\xfc\xbf\x8d\xdb\x59\x4d\xe3\xc8\x4e\x0a\xf6\xf4\xd3\x05\xa5\xe7\x48\x1f\xba\xfe\x88\x87\x5a\xcb\xec" +
	"\x4f\xac\x0b\xe6\xf8\x35\xd7\x3f\x0c\xb5\xb6\x1c\x1f\xb1\xa8\xbd\x5d\xef\x74\x68\x2b\x99\x3f\xeb\x8c\x21\xfe\x6d" +
	"\x55\xe8\x94\x81\x82\x81\x4c\xcc\x0d\xa7\x64\xde\xa4\x88\x63\x98\x43\x13\x2a\x4e\x29\x48\xbb\x63\x43\x03\xf9\xac" +
	"\x12\x99\x12\xa3\xeb\x97\xdb\xec\x91\x99\x98\x13\x3f\x1e\xc4\xec\x12\x36\x7d\x95\x3b\xbe\xbc\xe8\x58\x25\x88\xf9" +
	"\x12\x7f\xde\x63\x97\xf1\x1f\x00\x00\xff\xff\x37\xd4\xd9\xbf\xb3\x00\x00\x00")

func bindataClusterRoleAlamedagrafanaCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAlamedagrafanaCRyaml,
		"ClusterRole/alameda-grafanaCR.yaml",
	)
}



func bindataClusterRoleAlamedagrafanaCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAlamedagrafanaCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/alameda-grafanaCR.yaml",
		size: 179,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1555988180, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleAlamedaoperatorCRyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\xbb\x92\xdb\x30\x0c\xec\xf5\x15\x9c\x4b\x6d\xdd\xa4\xcb\xb8\x4d" +
	"\x91\x36\x93\x22\x3d\x4c\xae\x64\x8c\x29\x82\x01\x41\x5f\xee\xbe\x3e\xa3\xc7\xc9\x4e\xe4\x24\x37\x2e\xae\xf2\x0e" +
	"\x68\x72\x17\xd8\x85\x28\xf3\x77\x68\x61\x49\x7b\xa7\x07\xf2\x2d\x55\x3b\x8a\xf2\x0b\x19\x4b\x6a\x4f\x9f\x4a\xcb" +
	"\xf2\x78\xfe\xd8\x9c\x38\x85\xbd\xfb\x1c\x6b\x31\xe8\x37\x89\x68\x06\x18\x05\x32\xda\x37\xce\x25\x1a\xb0\x77\x1d" +
	"\x02\x94\x4c\x94\x78\x47\x91\x06\x04\xda\x49\x9e\x4b\x8d\xd6\x88\xb2\x6f\x76\x8e\x32\x7f\x51\xa9\xb9\x8c\x17\x77" +
	"\xee\xe1\xa1\x71\x4e\x51\xa4\xaa\xc7\x52\x4b\x12\x50\x26\x94\x25\xcc\x40\x91\x23\xfb\x49\x95\x97\x64\x2a\x31\x42" +
	"\xc7\xa3\x33\xf4\xb0\x5c\xeb\x61\xd3\x6f\xe4\x32\x83\x27\x32\x7f\xdc\x52\x52\xce\x65\x4b\xba\x30\x14\xd8\xcc\x18" +
	"\x90\xa3\x3c\x0f\x48\xf6\x36\x9a\x11\x79\x05\x19\x26\x58\x73\x78\x85\x79\x3d\x0f\x88\x30\xdc\x56\xd4\x4a\x46\x2a" +
	"\x47\xee\xac\x65\xd9\xca\xbb\xc8\xf1\x92\x3a\xee\xef\xed\xbd\x9a\x14\x4f\x91\x53\xdf\x8e\x83\x24\x4e\xd0\xd2\x12" +
	"\x6f\x19\x17\x0b\xc7\x7f\xcf\xa3\x5e\x4b\x0a\x2f\xc3\x80\x14\x26\x3f\xde\x61\x3c\xf7\x8a\x7e\xec\x38\x51\xe4\x97" +
	"\x4d\x54\x16\xfa\x0f\xee\x2b\x74\xe0\x32\x2e\x80\xeb\x44\xdd\x8f\x0a\x7d\x76\x59\x65\x80\x1d\x51\x8b\xab\x29\x40" +
	"\xa7\x7c\x97\x4c\x1e\x6e\x35\x69\x37\x48\x62\x13\xe5\xd4\xbb\xdf\x14\xbb\x5b\xb1\x9e\x8b\xeb\x33\x17\x35\x6e\x9d" +
	"\xd9\x8d\x50\x30\x7e\x1a\xd2\x28\xae\x2c\xab\xb8\x6d\xd8\xd7\x62\x32\xbc\x16\x03\x3a\x4e\xfc\x0f\x57\xb6\x16\xbc" +
	"\x69\x23\x0b\xbc\xe2\xcf\x45\xb8\x7a\xeb\xe2\xf1\x64\xfb\xb6\x97\xb0\x4c\x59\xd1\x73\x31\xbd\xfe\xbc\x6c\xd9\xce" +
	"\x14\x79\xcc\x56\xea\x9f\x70\x38\x8a\x9c\xe6\xc8\x57\xbd\x95\xb7\xff\xc5\x6b\xcd\xe1\xdf\xd2\x75\xbb\x5f\x3d\xf3" +
	"\xb5\x4f\x77\x51\xfd\x0a\x00\x00\xff\xff\x62\xfe\x79\x2f\x5e\x05\x00\x00")

func bindataClusterRoleAlamedaoperatorCRyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleAlamedaoperatorCRyaml,
		"ClusterRole/alameda-operatorCR.yaml",
	)
}



func bindataClusterRoleAlamedaoperatorCRyaml() (*asset, error) {
	bytes, err := bindataClusterRoleAlamedaoperatorCRyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRole/alameda-operatorCR.yaml",
		size: 1374,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556265604, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAdmissioncontrollerSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x31\xaa\x42\x41\x0c\x05\xd0\x7e\x56\x91\x0d\xfc\xe2\xb7\xe9\x5c" +
	"\x83\x60\x7f\xc9\x5c\x21\xf8\x26\x79\x64\xe2\x5b\xbf\x08\xd6\x87\x83\xd3\x1f\xac\xed\x19\x2a\xd7\xff\x78\x79\x4c" +
	"\x95\x3b\xeb\x72\xe3\xcd\x2c\xdf\xd1\x63\xb1\x31\xd1\xd0\x21\x12\x58\x54\xc1\x5c\xbe\xbf\xe9\xcf\x32\xba\xf2\x38" +
	"\x58\x3f\xdc\x27\x8c\x2a\x4f\x4e\x16\x3a\x0b\xfe\x09\x00\x00\xff\xff\x7e\x31\x7e\x77\x63\x00\x00\x00")

func bindataServiceAccountAdmissioncontrollerSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAdmissioncontrollerSAyaml,
		"ServiceAccount/admission-controllerSA.yaml",
	)
}



func bindataServiceAccountAdmissioncontrollerSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAdmissioncontrollerSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/admission-controllerSA.yaml",
		size: 99,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAlamedaaiSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\x31\x0e\x02\x41\x08\x05\xd0\x7e\x4e\xc1\x05\x2c\x6c\xe9\x3c\x83" +
	"\x89\xfd\x0f\x7c\x13\xa2\xc3\x6c\x58\x9c\xf3\xdb\x6c\xfb\x70\xc4\x8b\x75\xc6\x4a\x95\x7d\x1f\x9f\x48\x57\x79\xb2" +
	"\x76\x18\x1f\x66\xeb\x97\x3d\x26\x1b\x8e\x86\x0e\x91\xc4\xa4\x0a\xbe\x98\x74\xdc\x10\x17\x9d\x07\x8c\x2a\x6f\x3a" +
	"\x0b\xbd\x0a\xf1\x0f\x00\x00\xff\xff\xaa\xc4\x7e\xde\x59\x00\x00\x00")

func bindataServiceAccountAlamedaaiSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAlamedaaiSAyaml,
		"ServiceAccount/alameda-aiSA.yaml",
	)
}



func bindataServiceAccountAlamedaaiSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAlamedaaiSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/alameda-aiSA.yaml",
		size: 89,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1554197916, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAlamedadatahubSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\xb1\x0d\x02\x31\x0c\x05\xd0\x3e\x53\x78\x01\x0a\x5a\x77\xcc\x80" +
	"\x44\xff\x89\x3f\xc2\x82\x38\x27\x9f\x2f\xf3\x23\xa4\x6b\x1f\x36\x7f\x30\x77\x9f\xa1\xb2\xae\xed\xe3\x61\x2a\x77" +
	"\xe6\xf2\xce\x5b\xef\xf3\x88\x6a\x83\x05\x43\x41\x9b\x48\x60\x50\x05\x5f\x0c\x1a\x2e\x7f\x7d\x1f\xcf\xd3\xf7\x0d" +
	"\x9d\x2a\x2f\x1a\x13\x35\x13\xfe\x0b\x00\x00\xff\xff\x06\xa1\x23\x4a\x5e\x00\x00\x00")

func bindataServiceAccountAlamedadatahubSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAlamedadatahubSAyaml,
		"ServiceAccount/alameda-datahubSA.yaml",
	)
}



func bindataServiceAccountAlamedadatahubSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAlamedadatahubSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/alameda-datahubSA.yaml",
		size: 94,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAlamedaevictionerSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x31\x0e\x02\x41\x08\x05\xd0\x7e\x4e\xc1\x05\x2c\x6c\xe9\x3c\x83" +
	"\x89\xfd\x0f\xf3\x4d\x88\x0e\x6c\x58\x9c\xf3\xdb\x6c\xfd\x70\xf8\x8b\x75\x7a\x86\xca\xbe\x8f\x8f\xc7\x54\x79\xb2" +
	"\xb6\x1b\x1f\x66\xf9\x8b\x1e\x8b\x8d\x89\x86\x0e\x91\xc0\xa2\x0a\xbe\x58\x9c\xb8\x71\xbb\xb5\x67\xb0\x2e\x3a\x0f" +
	"\x18\x55\xde\x9c\x2c\x74\x16\xfc\x1f\x00\x00\xff\xff\x58\x7c\x98\x9a\x61\x00\x00\x00")

func bindataServiceAccountAlamedaevictionerSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAlamedaevictionerSAyaml,
		"ServiceAccount/alameda-evictionerSA.yaml",
	)
}



func bindataServiceAccountAlamedaevictionerSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAlamedaevictionerSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/alameda-evictionerSA.yaml",
		size: 97,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAlamedagrafanaSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\xb1\x0d\xc2\x40\x0c\x05\xd0\xfe\xa6\xf0\x02\x14\xb4\xee\x98\x01" +
	"\x89\xfe\xcb\xfe\x41\x16\x9c\x2f\x72\x4c\xe6\xa7\x49\xfb\xb0\xc7\x8b\x75\xc4\x4a\x95\xf3\x3e\x3e\x91\xae\xf2\x64" +
	"\x9d\x61\x7c\x98\xad\x5f\xf6\x98\x6c\x38\x1a\x3a\x44\x12\x93\x2a\xf8\x62\xd2\x71\x7b\x17\x36\x24\x2e\x3f\x76\x18" +
	"\x55\x36\x3a\x0b\xbd\x0a\xf1\x0f\x00\x00\xff\xff\x5c\xef\x2c\xe0\x5e\x00\x00\x00")

func bindataServiceAccountAlamedagrafanaSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAlamedagrafanaSAyaml,
		"ServiceAccount/alameda-grafanaSA.yaml",
	)
}



func bindataServiceAccountAlamedagrafanaSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAlamedagrafanaSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/alameda-grafanaSA.yaml",
		size: 94,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1555988180, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAccountAlamedaoperatorSAyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x31\x0e\x02\x41\x08\x05\xd0\x7e\x4e\xc1\x05\x2c\x6c\xe9\x3c\x83" +
	"\x89\xfd\xcf\xf0\x4d\x88\x0e\x4c\x58\xdc\xf3\x5b\x68\xfb\x1e\xb6\x3f\x58\x87\x67\xa8\x9c\xd7\xf1\xf2\x30\x95\x3b" +
	"\xeb\xf4\xc9\xdb\x9c\xf9\x89\x1e\x8b\x0d\x43\x43\x87\x48\x60\x51\x05\x6f\x2c\x1a\x2e\xb9\x59\xe8\xac\x7f\x1c\x1b" +
	"\x93\x2a\x4f\xda\x8f\xe1\xdf\x00\x00\x00\xff\xff\x01\x08\xdb\x27\x5f\x00\x00\x00")

func bindataServiceAccountAlamedaoperatorSAyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAccountAlamedaoperatorSAyaml,
		"ServiceAccount/alameda-operatorSA.yaml",
	)
}



func bindataServiceAccountAlamedaoperatorSAyaml() (*asset, error) {
	bytes, err := bindataServiceAccountAlamedaoperatorSAyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ServiceAccount/alameda-operatorSA.yaml",
		size: 95,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleBindingAdmissioncontrollerCRByaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\xb1\x4e\xc4\x30\x0c\xc6\xf1\x3d\x4f\xe1\x17\x68\x11\x1b\xca\x06" +
	"\x0c\xec\x45\x62\x77\x13\x17\x4c\x53\x3b\x72\x9c\x0e\x3c\x3d\xaa\x44\x07\x74\xa7\xd3\xcd\x9f\xbe\xff\x0f\x2b\x7f" +
	"\x90\x35\x56\x89\x60\x33\xa6\x11\xbb\x7f\xa9\xf1\x0f\x3a\xab\x8c\xeb\x53\x1b\x59\x1f\xf6\xc7\xb0\xb2\xe4\x08\xaf" +
	"\xa5\x37\x27\x9b\xb4\xd0\x0b\x4b\x66\xf9\x0c\x1b\x39\x66\x74\x8c\x01\x40\x70\xa3\x08\x0b\x65\x32\x74\x35\xe4\x01" +
	"\xf3\xc6\xed\xc8\x0f\x49\xc5\x4d\x4b\x21\x0b\xa6\x85\x26\x5a\x8e\x07\x56\x7e\x33\xed\xf5\x86\x1e\x00\x2e\xf0\xfb" +
	"\xad\xd6\xe7\x6f\x4a\xde\x0e\x6c\xf8\x0b\xbd\x93\xed\x9c\xe8\x39\x25\xed\xe2\x01\xe0\xac\x5d\x2d\x9c\x73\xab\x98" +
	"\xfe\x8b\xbf\x01\x00\x00\xff\xff\x96\x62\xb4\x2f\x3d\x01\x00\x00")

func bindataClusterRoleBindingAdmissioncontrollerCRByamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleBindingAdmissioncontrollerCRByaml,
		"ClusterRoleBinding/admission-controllerCRB.yaml",
	)
}



func bindataClusterRoleBindingAdmissioncontrollerCRByaml() (*asset, error) {
	bytes, err := bindataClusterRoleBindingAdmissioncontrollerCRByamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRoleBinding/admission-controllerCRB.yaml",
		size: 317,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleBindingAlamedadatahubCRByaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\x31\xae\xc2\x30\x0c\xc6\xf1\x3d\xa7\xc8\x05\xda\xa7\xb7\xa1\x6c" +
	"\xc0\xc0\x5e\x24\x76\x37\x71\xa9\x69\x1a\x47\x8e\xd3\x81\xd3\xa3\x0a\x84\x04\x48\x88\xd5\xfa\xfc\xff\x41\xa6\x13" +
	"\x4a\x21\x4e\xce\x4a\x0f\xbe\x85\xaa\x23\x0b\x5d\x41\x89\x53\x3b\x6d\x4a\x4b\xfc\xb7\xfc\x9b\x89\x52\x70\x76\x1f" +
	"\x6b\x51\x94\x8e\x23\xee\x28\x05\x4a\x67\x33\xa3\x42\x00\x05\x67\xac\x4d\x30\xa3\xb3\x03\x06\x14\x50\x16\xa0\x06" +
	"\x22\xcc\x18\xa0\x59\x17\x63\xed\x8d\x70\xc4\x0e\x87\x75\x0c\x99\x0e\xc2\x35\x7f\x81\x8d\xb5\x1f\xee\x4f\x4c\xa9" +
	"\xfd\x05\xbd\x16\x67\x9a\x47\xe1\x88\xb2\x90\xc7\xad\xf7\x5c\x93\x3e\x23\xef\x8f\xf7\x7b\xc9\xe0\x5f\x85\x5b\x00" +
	"\x00\x00\xff\xff\xc4\x91\x85\x3b\x28\x01\x00\x00")

func bindataClusterRoleBindingAlamedadatahubCRByamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleBindingAlamedadatahubCRByaml,
		"ClusterRoleBinding/alameda-datahubCRB.yaml",
	)
}



func bindataClusterRoleBindingAlamedadatahubCRByaml() (*asset, error) {
	bytes, err := bindataClusterRoleBindingAlamedadatahubCRByamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRoleBinding/alameda-datahubCRB.yaml",
		size: 296,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleBindingAlamedaevictionerCRByaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\x31\x0e\xc2\x30\x0c\x85\xe1\x3d\xa7\xc8\x05\x5a\xc4\x86\xb2\x01" +
	"\x03\x7b\x91\xd8\xdd\xc4\x05\xd3\x34\x8e\x1c\xa7\x03\xa7\x47\x15\x08\x09\x81\x10\xb3\xfd\xfe\x0f\x32\x9d\x50\x0a" +
	"\x71\x72\x56\x7a\xf0\x2d\x54\xbd\xb0\xd0\x0d\x94\x38\xb5\xe3\xa6\xb4\xc4\xab\x79\x6d\x46\x4a\xc1\xd9\x7d\xac\x45" +
	"\x51\x3a\x8e\xb8\xa3\x14\x28\x9d\xcd\x84\x0a\x01\x14\x9c\xb1\x36\xc1\x84\xce\x0e\x18\x50\x40\x59\x80\x1a\x88\x30" +
	"\x61\x80\x06\x67\xf2\x4b\x11\xc5\x08\x47\xec\x70\x58\xfe\x21\xd3\x41\xb8\xe6\x1f\xb6\xb1\xf6\x83\xfe\x57\x2a\xb5" +
	"\xbf\xa2\xd7\xe2\x4c\xf3\x8c\x1c\x51\x66\xf2\xb8\xf5\x9e\x6b\xd2\x57\xe7\xcb\xf6\x71\x2a\x19\xfc\xbb\x73\x0f\x00" +
	"\x00\xff\xff\x2e\xae\x54\xf5\x31\x01\x00\x00")

func bindataClusterRoleBindingAlamedaevictionerCRByamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleBindingAlamedaevictionerCRByaml,
		"ClusterRoleBinding/alameda-evictionerCRB.yaml",
	)
}



func bindataClusterRoleBindingAlamedaevictionerCRByaml() (*asset, error) {
	bytes, err := bindataClusterRoleBindingAlamedaevictionerCRByamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRoleBinding/alameda-evictionerCRB.yaml",
		size: 305,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleBindingAlamedagrafanaCRByaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\x31\x4e\xc6\x30\x0c\xc5\xf1\x3d\xa7\xc8\x05\x5a\xc4\x86\xb2\x01" +
	"\x03\xfb\x87\xc4\xfe\x9a\xb8\xc5\x34\xb5\x23\xc7\xe9\xc0\xe9\x11\x02\x21\x01\x12\x62\xb5\xfc\xfe\x3f\x34\x7e\x22" +
	"\xeb\xac\x92\xa2\x2d\xc8\x33\x86\x3f\xab\xf1\x2b\x9c\x55\xe6\xfd\xa6\xcf\xac\x57\xe7\x75\xd8\x59\x4a\x8a\xf7\x75" +
	"\x74\x27\xbb\x68\xa5\x3b\x96\xc2\xb2\x85\x83\x1c\x05\x8e\x14\x62\x14\x1c\x94\xe2\x4a\x85\x0c\xae\x06\x9e\x50\x71" +
	"\x50\xc1\xb4\x19\x56\x08\x82\x69\xa5\x0b\xad\xef\xcf\x68\xfc\x60\x3a\xda\x1f\x70\x88\xf1\x97\xfb\x2f\xa6\x8f\xe5" +
	"\x85\xb2\xf7\x14\xa6\xcf\xc2\x23\xd9\xc9\x99\x6e\x73\xd6\x21\xfe\x15\xf9\x39\xfc\xb8\xf7\x86\xfc\x5d\x78\x0b\x00" +
	"\x00\xff\xff\x75\x1b\xd8\xd0\x28\x01\x00\x00")

func bindataClusterRoleBindingAlamedagrafanaCRByamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleBindingAlamedagrafanaCRByaml,
		"ClusterRoleBinding/alameda-grafanaCRB.yaml",
	)
}



func bindataClusterRoleBindingAlamedagrafanaCRByaml() (*asset, error) {
	bytes, err := bindataClusterRoleBindingAlamedagrafanaCRByamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRoleBinding/alameda-grafanaCRB.yaml",
		size: 296,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1555988180, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataClusterRoleBindingAlamedaoperatorCRByaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\xbd\x0a\xc2\x30\x10\xc0\xf1\x3d\x4f\x91\x17\x68\xc5\x4d\xb2\xa9" +
	"\x83\x7b\x05\xf7\x6b\x72\xd5\xb3\x69\x2e\x5c\x2e\x1d\x7c\x7a\x91\x8a\x20\x05\x71\xbd\x8f\xff\x0f\x32\x5d\x50\x0a" +
	"\x71\x72\x56\x7a\xf0\x2d\x54\xbd\xb1\xd0\x03\x94\x38\xb5\xe3\xae\xb4\xc4\x9b\x79\x6b\x46\x4a\xc1\xd9\x63\xac\x45" +
	"\x51\x3a\x8e\x78\xa0\x14\x28\x5d\xcd\x84\x0a\x01\x14\x9c\xb1\x36\xc1\x84\xce\x0e\x18\x50\x40\x59\x80\x1a\x88\x30" +
	"\x61\x80\x86\xf3\x32\x32\xc2\x11\x3b\x1c\x5e\xd7\x90\xe9\x24\x5c\xf3\x0f\xd9\x58\xbb\x82\xff\x73\x4a\xed\xef\xe8" +
	"\xb5\x38\xd3\xbc\x13\x67\x94\x99\x3c\xee\xbd\xe7\x9a\xf4\x53\x59\x7d\x2e\x8b\x92\xc1\x7f\x1b\xcf\x00\x00\x00\xff" +
	"\xff\xa8\xcd\x05\x0d\x2b\x01\x00\x00")

func bindataClusterRoleBindingAlamedaoperatorCRByamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataClusterRoleBindingAlamedaoperatorCRByaml,
		"ClusterRoleBinding/alameda-operatorCRB.yaml",
	)
}



func bindataClusterRoleBindingAlamedaoperatorCRByaml() (*asset, error) {
	bytes, err := bindataClusterRoleBindingAlamedaoperatorCRByamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ClusterRoleBinding/alameda-operatorCRB.yaml",
		size: 299,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataSecretAdmissioncontrollertlsyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x3d\x0a\x82\x41\x0c\x04\xd0\x3e\xa7\xc8\x05\xbe\xc2\x36\x97\xb0" +
	"\x10\xec\x87\xdd\x11\x82\xfb\x67\x36\x0a\xde\x5e\x44\xfb\xf7\x04\xcb\xaf\x8c\xed\x73\x98\xbe\x4e\x72\xf7\x51\x4d" +
	"\x2f\x2c\xc1\x94\xce\x44\x45\xc2\x44\x75\xa0\xd3\x14\xb5\xfb\xfe\xe2\xa3\xcc\x91\x31\x5b\x63\x1c\xd9\xf6\x1f\xec" +
	"\x85\x42\xd3\x1b\x2b\x03\x39\x03\x2e\xbf\x9f\xef\x45\xd3\xf3\xc2\xe3\xc9\x4f\x00\x00\x00\xff\xff\xc0\x89\x2c\x4b" +
	"\x73\x00\x00\x00")

func bindataSecretAdmissioncontrollertlsyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataSecretAdmissioncontrollertlsyaml,
		"Secret/admission-controller-tls.yaml",
	)
}



func bindataSecretAdmissioncontrollertlsyaml() (*asset, error) {
	bytes, err := bindataSecretAdmissioncontrollertlsyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Secret/admission-controller-tls.yaml",
		size: 115,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1554254667, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataSecretAlamedainfluxdbyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x31\x0e\xc2\x30\x0c\x05\xd0\x3d\xa7\xf0\x05\x3a\xb0\xfa\x12\x0c" +
	"\x48\xec\x9f\xfa\x57\xb2\x48\xd2\xe0\xb8\x08\x6e\xcf\x40\xe7\xa7\x87\xe1\x77\xc6\xf4\xbd\xab\xbc\x2f\xe5\xe9\xdd" +
	"\x54\x6e\x5c\x83\x59\x1a\x13\x86\x84\x16\x91\x8e\x46\x15\x54\x34\x1a\x16\xef\x5b\x3d\x3e\xf6\x58\xb2\xce\x13\xe7" +
	"\xc0\x4a\x95\x8d\xc6\x40\xee\x01\x2f\xff\x9b\xdf\x41\x95\xeb\xc0\xeb\xe0\x2f\x00\x00\xff\xff\x82\xf8\x7a\xe9\x6e" +
	"\x00\x00\x00")

func bindataSecretAlamedainfluxdbyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataSecretAlamedainfluxdbyaml,
		"Secret/alameda-influxdb.yaml",
	)
}



func bindataSecretAlamedainfluxdbyaml() (*asset, error) {
	bytes, err := bindataSecretAlamedainfluxdbyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Secret/alameda-influxdb.yaml",
		size: 110,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1554254667, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataConfigMapDashboardsconfigyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\x79\x73\xdc\x36\xb6\xef\xff\xfa\x14\x78\x9c\xbc\x19\xc9\xb7\x5b" +
	"\x6e\xb6\xdc\x5a\xba\xca\xb7\x4a\x91\xb3\xb8\x2a\x76\xf4\xbc\xe4\xd6\x4c\xe4\xdb\x05\x91\xe8\x6e\x5a\x24\xc1\x70" +
	"\x91\xa5\x38\xce\x67\x7f\x45\x80\x3b\x00\x92\xbd\x53\xd2\xe9\xaa\x19\x47\x58\x48\x10\x38\x38\x38\x1b\xce\x0f\x7b" +
	"\xd6\x6f\xc4\x0f\x2c\xea\x8e\xd1\xad\xbe\x77\x63\xb9\xe6\x18\x5d\x50\x77\x6a\xcd\xde\x60\x6f\xcf\x21\x21\x36\x71" +
	"\x88\xc7\x7b\x08\xb9\xd8\x21\x63\x64\xe2\x60\x7e\x4d\xb1\x6f\x06\x7d\x83\x35\x4b\x6a\x02\x0f\x1b\x64\x8c\xa6\xc4" +
	"\x24\x3e\x0e\xa9\x8f\xad\x3d\xd6\x11\xa1\x3d\x84\x0c\x3b\x0a\x42\xe2\xcf\x09\xb6\xc3\xf9\xe1\xe7\x80\xba\xf1\x03" +
	"\x11\xfa\xab\xcf\xfe\x41\xe8\x6b\xf2\x2f\x42\x1a\x76\x5d\x1a\xe2\xd0\xa2\x6e\xa0\x8d\x0b\x15\x08\x69\xb6\x15\x84" +
	"\xda\x18\xfd\x5e\x28\x43\xa5\x16\xac\xd5\x75\x64\xd9\xe1\x6b\x57\x1b\x23\xbd\x57\xad\x8b\x87\x14\xd0\xc8\x37\x88" +
	"\x36\x46\x5a\xbf\x8f\x7e\xf2\xf1\x14\xbb\x18\xf5\xfb\x9a\xd0\x98\xb8\xf8\xda\x8e\x1b\x86\x7e\x44\x84\xda\xb9\x65" +
	"\x2a\xeb\x2c\x83\xba\x17\xd4\xa6\x7e\xfc\x16\x7f\x76\x8d\xf7\x07\x3d\x34\xd4\xf5\x1e\x1a\x8e\x46\x3d\xa4\x1f\x88" +
	"\x2f\x8b\xe7\x30\x6e\x7d\x9e\x7f\x3e\xfa\x27\x3a\xb7\x89\x1f\x06\x62\xeb\xf0\xde\x63\xad\xb3\xd5\xd0\x4a\x2d\xbe" +
	"\x15\xfe\xfa\x94\xfd\xf7\xb7\xfc\x31\x1a\x31\xad\x50\xfa\x75\xda\xcc\x25\xe1\x6b\x53\x1b\x23\x37\xb2\xed\x62\xb9" +
	"\x8f\xbd\xf9\x07\x4a\xed\xd0\xf2\xb4\x31\x1a\x14\xaa\x2c\xb3\x3c\xd9\x9a\x6d\xb9\x37\xf1\xea\xfd\xfe\xa9\x50\xe8" +
	"\x61\x97\xd8\x41\x65\xfd\xca\xab\xa7\x19\xd4\xb6\xb1\x17\x90\xf8\x81\x53\x6c\x07\x95\xa9\xd5\x66\xbe\x65\x5e\xd2" +
	"\x2a\x61\xf0\xf5\x90\x2e\xf8\x17\x6d\x8c\x86\x2f\x84\xe2\xbb\xf2\x17\x24\xa5\xf7\x71\x69\x79\x22\x2b\xef\x67\x5f" +
	"\x7a\x5a\x29\xcc\x3f\xec\x53\xa5\x26\xb4\x42\x36\xc5\xda\x05\xdf\x00\xe8\x67\xb6\x03\xd0\xfb\x10\x87\x51\x75\x59" +
	"\xb3\x45\xf5\xe9\x97\xe2\x72\x96\xc6\x50\x9d\x2f\x6c\xcc\xc9\x07\xcb\x21\x34\x0a\x85\x25\x43\xc9\x8c\x52\xff\x7b" +
	"\x6c\xdc\xcc\x7c\x1a\xb9\xaa\x79\x65\xad\x7e\xc3\x76\x24\x27\x69\x5e\x5f\x5d\x3b\x56\xc3\xa8\x7b\xf8\x62\xd4\x43" +
	"\xa3\x17\xfc\x7f\x83\xc3\x33\x09\x7d\xf3\x76\x47\x27\x3d\xa4\x0f\xcf\x7a\xe8\xc5\x20\x6e\x78\xaa\x6c\x39\x1a\xf4" +
	"\x90\x7e\x32\xec\xa1\xf8\xc9\x83\xc3\xb3\x93\x83\x32\x85\x57\x67\xba\xbc\xb1\x2f\x7d\xea\x90\x70\x4e\xc4\x39\x56" +
	"\xd2\x3d\xab\x9d\x52\xdf\xc1\xf1\x44\x6a\x1e\xf1\x0d\xe2\x86\x91\x6b\x85\xd5\x47\xcc\x70\x34\x23\x32\x0a\x74\xf0" +
	"\x5d\x3a\x85\x22\x21\x3a\x96\x9b\x56\x8a\x84\x17\xcc\xe9\x17\x15\x2f\x09\xe7\x3e\x09\xe6\xd4\x36\x7f\xc1\xd7\x9c" +
	"\xcc\xea\x9b\xbd\xc1\xfe\x0d\xf1\xd3\x76\xb5\xd4\xdc\xb0\x9b\x46\xd2\xdd\xb4\xc8\x66\xd2\x9b\x37\xd3\xf0\xb8\x5a" +
	"\xea\x86\xc4\xbf\xc5\xb6\x9c\x9c\x65\x9c\x05\xf1\xc9\xf7\x3c\xcb\x9d\x7d\xe0\x7b\x48\x57\xd7\xca\xa8\xb8\xfa\xf9" +
	"\x05\x7e\x7c\x1b\x2f\x1a\x0a\x29\x0a\xc9\x5d\x95\x14\x58\xc3\xdb\x74\xc9\x2b\x55\xdf\xaa\x6d\x6b\x5e\xe2\x63\x77" +
	"\xd6\xea\x25\xc3\xea\x4b\x6a\x37\x85\x83\xef\x5e\xe1\x10\x5f\x52\xcb\x0d\xe3\xcf\xd6\x07\x95\x65\xd2\xe2\x19\x66" +
	"\xd5\x6f\x28\x3b\xcd\x34\x83\xba\x2e\x31\x42\x62\x56\xa9\x3e\x6e\xf9\x21\x1e\x9d\x74\x59\x3c\x1a\x84\x53\x2b\x26" +
	"\x04\xad\xda\x31\xa9\xfa\x91\xba\xe1\x7b\xeb\x4f\xf6\x92\xd1\xe0\xff\x0a\xad\x7c\xa2\xea\xcf\x6a\x1a\xba\xb3\x09" +
	"\x7c\x83\xbd\x96\x8b\x3b\xf5\xa9\x13\x3f\x29\xfe\x12\xd9\x74\x87\xfc\x43\xb5\xb7\xcf\xcf\xa5\xd5\x34\xeb\xbc\xd0" +
	"\x7a\x04\x1e\xf6\x6f\x6c\xcb\x95\x72\x8f\xa9\x65\xdb\x65\x99\xe1\x48\xef\x21\x5d\x3f\xed\x21\xfd\xf4\x2c\x66\x82" +
	"\xfa\xa9\x84\x5b\x4e\xe3\x51\x48\x99\x3a\xdf\x2d\xa4\xf8\x4c\xfe\xc8\x61\xcc\x5b\xcf\x8e\x24\x0f\x4b\xf8\x10\x7b" +
	"\x58\xed\xd6\x65\x3c\xf4\x82\xda\x91\xe3\xca\xd6\x2c\xc4\xfe\x8c\x84\x2d\x17\x83\xdc\x79\x6c\x7c\xfb\x41\xe4\xec" +
	"\x47\xde\xd7\xcf\xf4\xfa\xe5\xdf\x57\xda\xe1\x33\xec\x59\x01\xf1\x6f\x89\x7f\xf8\xec\x4a\xfb\x86\x5e\xbe\x44\xfa" +
	"\x01\x7a\x8e\x0c\x1a\xb9\x61\x4d\xc3\x03\xf1\xc3\x4a\xac\x3d\xb4\x1c\x32\x09\x88\x6f\x11\x51\xb0\x2a\xf0\x9f\x1f" +
	"\xb1\x11\xb2\x89\x1b\x4a\x1a\xf9\x64\xca\x64\x24\x4d\x4a\x1f\x41\x48\x62\x11\xe9\x78\x30\x58\x88\x3c\x32\x16\x1e" +
	"\x4f\x9c\x36\x38\x64\x27\xdf\xa9\x30\xb7\xa9\x4c\x71\x7e\xf9\x1a\xbd\x67\x9f\x1d\xa0\x8f\x97\x42\x33\x1f\xbb\x31" +
	"\xbd\x11\x37\x94\x9f\x75\xa9\xb4\x11\x58\xee\xcc\x26\x41\x88\x85\x83\x8e\x31\x9d\xe2\xc6\x3b\x15\x37\x1e\x6b\xd3" +
	"\x7e\xe3\xd1\x78\x5e\xb4\x97\x4b\xec\xb9\x94\x03\x2e\xb1\xed\x58\xd7\xb7\x09\xab\xc5\xb7\xb3\xb6\xc2\x15\xb6\x2d" +
	"\x1c\x5c\xa4\x92\xcf\xd7\xea\x1e\xb8\xc6\xac\x5c\x26\x4e\xc5\x62\xf9\x2f\xc4\x9d\x85\x4c\x28\xad\x32\xdd\xb8\x96" +
	"\xa8\xbb\xae\x43\x90\x21\xbe\xcf\x68\x57\xf6\x86\x98\xd1\x48\x8e\xc8\x58\x18\x90\xf1\xa5\x8c\x2a\xf5\x32\x77\x1a" +
	"\xea\xc7\x3d\x34\x1c\xc4\x8a\xcd\x49\x4c\xa8\xc3\x13\x09\x43\xc9\x3a\x0f\x2b\x9d\x8f\x5e\xc4\xbc\x6d\x98\xfc\xdf" +
	"\xe0\x70\x38\xac\x08\x78\x6b\x91\x55\xaa\x53\x9f\x08\x2b\xa2\x08\xd3\x52\x58\x39\x1a\x56\x4b\x83\xb7\xe4\x8b\x62" +
	"\x9e\x6d\x32\x23\xae\x74\x4a\xb1\x6d\xcd\xdc\xf3\xe0\x43\xb2\x7e\x72\xde\x1d\x13\xaa\xaa\xce\x88\xfc\x64\x63\xcb" +
	"\xeb\x63\xdd\xf4\x07\xc7\x0b\xef\x6b\x5b\xfc\x87\xf8\x54\xd9\xc0\xc1\x77\xea\x3a\xcb\x55\xd6\xf9\xd6\x6c\x1e\xbe" +
	"\xe7\xba\xb1\xbc\x45\xad\xb0\x4b\x43\xac\x3e\xce\xd8\x46\x0e\x5a\x1d\x50\xf1\xc9\x27\x97\x95\x59\xd5\x17\xcb\x0c" +
	"\x25\x0a\xa3\x5a\xbc\x14\x04\x25\x89\xe8\x90\x2a\x0d\x78\xa6\xf8\x78\xcd\x8b\x9f\xe0\x63\xd3\x8a\x02\x91\x66\x79" +
	"\xad\x8a\x2f\xf8\xc4\x35\x89\x4f\xd8\x16\x9a\xda\x54\x60\xd6\xfc\x40\xfb\xf5\x96\xf8\xbe\x65\x12\xe9\x37\x30\x13" +
	"\x8d\x9a\x2d\x05\x21\x36\x6e\x14\x6f\x8f\x4f\x34\x8f\x98\xbf\x70\xd9\x45\xd6\x62\xa9\x23\x3f\x88\x1c\x74\x7d\xbf" +
	"\x6f\xb9\x41\x88\x5d\x83\x1c\xa0\x7d\x1f\x87\x64\x3f\x3b\xcf\x27\x3e\xf9\x23\x22\x41\x38\x61\x67\xfe\x57\x83\x9a" +
	"\x24\x3e\xf1\x47\x87\x87\x57\xda\xb7\xdf\x47\xce\xa7\x83\x58\x20\x58\xec\x29\xbc\xdb\xe6\x45\x04\xbe\xfd\x7f\xcc" +
	"\x9e\xf9\xf5\x6b\x3a\xc0\x6f\xdf\x64\x0f\x6d\x29\x52\x2c\x2f\x51\x48\xac\x13\x0e\xf9\x91\x4b\xc2\x12\x91\x3e\xae" +
	"\x7d\x47\x66\x89\x1d\x4e\xda\xf9\xfd\xdc\x9a\x2a\x14\x02\x89\x94\x82\xde\xf1\x65\x40\x3f\xc4\x87\x13\x7a\x87\x43" +
	"\x61\x76\xb5\x30\xb3\x2f\x89\xda\x75\xf0\x8e\x04\xd4\x8e\x42\x8b\xaa\xb9\x4f\x30\xc7\x3e\x33\x1e\x49\xb9\x4b\x40" +
	"\xfd\x50\xaa\xab\x32\xc6\x32\x49\x25\x22\xcb\x35\xad\x5b\xcb\x8c\xb0\x5d\x7f\x24\x95\x45\x2c\xe9\xa6\x48\x9e\xc8" +
	"\x6c\x67\xd5\x6f\xbd\xc3\x77\x96\xf4\x3c\xbb\x8e\x8c\x1b\xbe\x95\xc4\x89\x8d\x27\x22\xe1\x40\xf1\x0a\x28\xed\x88" +
	"\xd2\x9e\x75\x9c\x37\xe3\xad\xbf\x7f\xaa\xfd\xe8\x7b\x7c\xd7\x56\x85\x6e\x63\x4d\x61\x0d\x6d\x3a\xfb\x1e\x07\x52" +
	"\xbb\x49\x76\x12\x69\xba\x74\x5b\xe4\x5f\x54\xdd\x18\x2d\xd4\xef\x7c\x80\xc1\x3c\x26\x8d\x85\x87\x56\xf3\xfa\xda" +
	"\x7d\x79\xaf\x5a\x7a\x26\x19\xa8\x45\x82\xb8\xf6\x17\x72\x4b\x52\xe3\xc8\x9e\xea\x95\x0f\xc0\x66\x28\xb1\xf0\xad" +
	"\x6a\x34\x14\xcd\x90\xb5\xab\xd0\x56\xd4\x36\x49\x60\xf8\x96\x97\x30\x1e\xed\xc2\xc7\xc1\xdc\x72\x67\xe8\x92\x9a" +
	"\x01\xb2\x5c\x64\x50\x37\xf4\xa9\x8d\x3c\x1b\xbb\x04\xed\xdf\x44\xd7\xa4\x1f\xdc\x07\x21\x71\xaa\x03\x6d\x6d\x7e" +
	"\x74\xa9\x5b\xdd\xdb\xed\xec\x8e\x55\x0b\x4f\x4b\xcb\xa3\x9c\xde\x44\xd3\x63\x43\xbb\x4d\xdb\x1e\xc5\xd2\x98\x35" +
	"\xe8\x4b\xcb\xf3\x55\xcf\x00\x18\x1f\xc1\xf8\x28\xa9\x01\xe3\xe3\xa3\x37\x3e\x72\xa3\xa2\xe5\x1a\x3e\xc1\x01\x61" +
	"\x3c\x7c\xe2\x51\x73\x12\xf3\x76\x6c\xb9\xc4\x9f\x04\xcc\x67\x37\xf1\x49\x10\x62\x3f\x0c\x26\x4c\x55\xfd\x9a\xb9" +
	"\xbe\x63\xbd\xa4\xc0\xf9\x63\xfd\x44\x9f\x7f\x3a\x40\xff\x8d\x46\x8f\xc3\x1e\xa9\xf7\xd0\x91\xd2\x16\x99\x9d\x89" +
	"\x17\xc9\x59\x78\xc9\xce\xc2\xf8\x84\xac\x37\x4c\xd6\x49\xcd\x5d\xb3\x4c\x0e\x36\x69\x97\x4c\x4d\x3a\x20\xc4\xed" +
	"\x48\x88\x4b\x3c\xf4\x31\x0f\xb0\x23\x93\xa0\x70\x4e\xca\x92\x1d\x08\x73\xd9\x6f\x93\xc2\xdc\xd9\xb2\xc2\xdc\x48" +
	"\x30\xce\x82\x30\x07\xc2\x9c\x50\x03\xc2\x1c\x08\x73\x72\x61\xee\x49\x0a\x6c\x20\xa2\xd5\xcd\x68\xe7\x44\x34\x65" +
	"\x83\xa7\x14\x9c\xf7\xe4\x05\x2a\xd1\xe0\xb5\x68\x64\xde\x71\xb3\x3c\xf5\x02\x22\xf3\x40\x9e\x02\x79\x0a\xe4\x29" +
	"\xad\x14\x71\xc7\xcd\x5c\x36\x09\xaf\xb4\x6f\x8f\x43\x50\x52\x0a\x49\x1f\x62\xa9\x10\xbd\xa5\xa6\xc4\x51\xfd\x60" +
	"\x45\xa4\x0d\xc7\xd7\x75\x41\x48\x7a\xcc\x17\x18\x4c\x62\x58\x0e\xb6\xe5\xd1\x01\x70\xbd\xa1\xf4\x25\xeb\x13\xa2" +
	"\xe4\x1e\xc6\x7a\x21\x6a\x6e\x99\x8c\xb2\xd3\x98\x2c\x05\xe5\x72\x47\x24\xd8\xae\x40\xd6\x02\x59\x0b\x64\x2d\x2d" +
	"\x88\x1c\x6e\xb0\x72\xa9\x49\x52\x3b\x95\x41\x5d\xd3\x0a\x2d\xea\x7e\xcd\xfe\xeb\xe5\x95\xf6\x8e\x60\xf3\xfe\x4a" +
	"\xeb\xf1\x46\x2f\xaf\xb4\x98\x23\xc6\x52\x19\x8f\x89\x5c\xf0\x31\xdb\x10\xe6\xaa\x31\x91\x2b\xc4\x41\xae\x7a\xb5" +
	"\x62\x70\x78\xa6\x94\xfb\x62\x89\x0f\xb1\x69\x81\x5b\x15\xca\x29\x2d\x49\x7d\x8e\xe5\x82\xc4\x07\x57\x56\x93\xba" +
	"\x87\x21\xd3\x9d\x2e\x6b\x18\x1b\x56\x2f\x80\x83\xb0\x06\xc2\x9a\x58\x03\xc2\xda\xa3\x17\xd6\x8a\x57\x56\x8b\x76" +
	"\x31\xf9\x5d\xd5\x92\xe5\xec\x71\x98\xce\x1a\x2f\xa9\x32\xe3\x19\x5c\x4f\xad\x9b\xd1\x07\x2e\x48\x3d\xa4\x10\x30" +
	"\x30\x9d\x6d\x5f\xcc\xd2\x05\xd6\xb4\x6e\xdb\x59\x55\x42\x00\x71\x0c\xc4\x31\xb1\x06\xc4\xb1\x47\x2f\x8e\x2d\x60" +
	"\xf4\x7a\x43\x1c\xea\xdf\x5f\xfa\x24\x08\x22\x9f\xac\x6e\x44\xab\x3e\xef\x49\x59\xd3\xf4\xde\xe0\x70\x54\x6f\x4d" +
	"\xe3\xf3\x83\xd2\x09\x02\x71\x50\x39\xb9\x65\x71\x10\xdf\x81\x38\xb8\x21\x71\x10\x04\xbe\xe2\x97\xac\x51\xe0\x3b" +
	"\xde\xb0\xc0\x37\xaa\xca\x66\x20\xf0\x81\xc0\x27\xd6\x80\xc0\x07\x02\x5f\x2e\xa0\xbd\xb2\x82\x9b\xf5\x89\x7b\xe5" +
	"\xa7\x81\xb0\x57\x16\xf6\xe2\xd9\x01\x51\xaf\x79\x6a\x41\xd4\x13\x5a\x6e\xe5\xf2\xe7\x65\x96\xa7\x0b\xd1\x29\x72" +
	"\x99\x89\x9a\xde\x12\x3f\xbb\x04\x1a\xce\x71\x88\xe6\xf8\x96\xa0\xc8\x0d\x8c\x39\x31\x23\x9b\x98\x88\x5e\x7f\x26" +
	"\x86\x90\x8d\x1b\xe4\xc8\xd2\x97\xac\x4f\x8e\xac\xda\xf5\xd6\x2e\x47\x56\x2d\x93\x20\x47\x82\x1c\x29\xa9\x01\x39" +
	"\xf2\xa9\xc9\x91\x1e\x31\x26\x19\xe3\x8f\x5f\x77\x80\x6a\x7d\xb9\x4f\x4a\xfa\x43\x4d\xe2\x5f\x80\x3e\x16\xe7\xae" +
	"\x0b\xf2\xdf\xda\x04\xaf\x9d\xc3\x53\xe8\x2d\xf0\x29\x46\x67\x55\x3e\xd6\x1e\xa0\xe2\x1d\xe1\xf2\x14\xfa\x18\xe0" +
	"\x99\xb8\x76\x8b\x23\x54\x74\x3a\x89\x72\x45\x2e\xfc\x18\x5a\xb6\xf5\x27\x03\x5f\x41\x78\x86\x2d\x37\x08\x11\xbb" +
	"\x19\x9e\x09\x86\x17\x97\x1f\x91\x9f\x4c\x51\xf5\x61\x35\x79\x95\x6b\x68\x42\x34\x96\x7d\x91\x3b\x4d\x6b\x68\xa2" +
	"\x4d\x72\x8c\x6a\xa6\xb3\x9a\xec\xc4\x2b\x24\x1e\x5e\x36\x6b\x30\xe4\x04\x86\x9c\xc0\xc9\x59\x1c\x1f\xc1\x63\x76" +
	"\x0e\x1b\x5e\x34\x89\xe2\x2d\x19\xb0\x2d\x39\xc6\xb7\x33\xdd\x41\xcf\x50\xde\xc2\x8d\x9c\xb8\xd5\x38\x88\x1c\xf4" +
	"\x1c\x05\x06\xb6\xb1\xcf\x62\xb2\xa4\x4d\x56\x8c\xb9\x8a\x55\x69\xef\xfb\x7b\xc9\xd7\xc8\xbf\x08\x71\xd6\xeb\x63" +
	"\x47\x36\x03\x59\x8b\xef\x26\x93\x4c\xef\x90\xb6\xf9\x24\x8e\x05\x15\x99\x31\xcb\x03\x2b\x69\x22\x68\x01\x2b\x0d" +
	"\x53\x26\x72\xb6\x1b\x1f\xe3\x8b\xb2\xf1\x09\x65\x92\x27\x2d\x9b\x6b\x39\x5e\x7b\x79\x9e\x65\xea\x9b\xc4\xff\xfe" +
	"\x3e\x56\x12\x99\xb0\xf4\xfe\x42\xd6\xca\xa3\xb6\x65\xc4\x6b\xad\x99\x64\x8a\x23\x5b\xaa\x1a\xd5\x4b\x5c\x3e\x09" +
	"\x22\x3b\xfc\xb1\x2d\x79\x05\xc4\x26\x86\x08\x6f\xc6\x7f\xf2\x65\x91\x2f\x66\x9b\xe5\xcc\xf4\x3a\x45\xbd\x62\x4d" +
	"\x4b\xab\x4a\x6c\x53\xde\x5d\x4a\x78\xad\x46\xdb\xfc\x5a\x87\x60\x57\xf1\x56\x49\xe9\xa7\x56\x24\x16\xe2\x99\x24" +
	"\xf1\xf1\x03\xc8\xad\x1d\x4b\x23\x1f\x73\x06\x29\x48\x6b\xea\x64\xda\xdb\xcd\x93\x0d\x59\xb0\x5b\x65\xc1\xc6\xd7" +
	"\x44\x6e\x7a\xe2\xd5\x4b\x27\xc9\xe6\x82\x97\x3c\x37\xce\xe6\x13\x68\xaf\xfe\x55\x8a\xae\xfc\xb3\x14\x95\x4a\x73" +
	"\x42\xa7\x53\x73\x3f\x2e\x65\xc9\xe1\x31\x3f\x3b\xd4\x97\x14\xb1\xa7\xad\x14\xa6\x6a\xf6\x1b\x50\x98\xaa\x55\xa0" +
	"\x30\x75\x4c\x61\xe2\x1b\xae\xa4\x33\xf9\xf1\x3f\xa0\xf6\x80\xda\x03\x6a\x0f\x6f\x03\x6a\x4f\xf6\xec\x87\xaa\xf6" +
	"\x24\xb1\xc4\xa0\xf9\x80\xe6\x03\x9a\x8f\xea\xbb\x40\xf3\x41\xbb\xd3\x7c\x4c\x2b\xb8\xe9\xa0\x9f\xe8\xa4\x85\xda" +
	"\x53\x95\xa7\x41\xed\xa9\x56\x81\xda\xd3\x09\xb5\x27\x88\x9c\x7d\x07\xdf\x31\x57\xcf\x64\x6a\xd9\x84\x03\xaf\x4c" +
	"\x02\xeb\x4f\x32\xb9\xbe\x0f\x49\xf0\x75\x1a\xc4\x07\xf0\xcb\xbf\xaf\x34\x72\x17\xfe\x3e\x3c\x7a\xf1\xe9\xaf\xeb" +
	"\xd0\x9f\x06\x7f\xdd\x4d\x83\xbf\xfe\x9c\x06\x57\xda\x37\xd4\x47\xd5\x07\xe0\x5b\x6c\xd9\xed\x9f\x70\x80\xae\xef" +
	"\xd1\xbe\x49\x6e\x2d\x83\xf4\x3c\x6a\xf6\x32\x48\x98\x03\x5e\x55\x2e\xbb\x72\x4b\x8e\xaa\xd5\xbf\xa0\xee\xfd\x07" +
	"\x57\xee\x33\x44\x5d\xb4\x9f\x95\xf5\x90\x47\xcd\x03\xc4\x94\xba\x89\x4d\xa6\x21\x62\xaf\x3f\xe0\xb3\x90\x35\x9b" +
	"\x78\xd4\x1c\x67\x79\xd3\x2d\x77\x4a\xc7\xa0\x44\x82\x12\x09\x4a\x24\x6f\x03\x4a\x64\xf6\xec\x87\xaa\x44\xb2\x3b" +
	"\x0a\x17\xd8\xc3\x86\x15\x8a\x69\xde\x40\x7f\x04\xfd\x11\xf4\x47\xd0\x1f\xd7\xa3\x3f\xee\xd0\xd3\xd5\x46\xe5\x3b" +
	"\x01\x95\x0f\x54\xbe\x87\xa0\xf2\xe5\x9e\x2e\xd3\x0a\x6e\xaa\xb1\x81\x13\xcb\xc7\x21\xc9\xe3\x00\xcb\xfa\x0b\x0f" +
	"\xed\x67\x31\xfc\x63\x88\x03\x04\x5d\x06\x74\x99\xa4\x0d\xe8\x32\xd9\xb3\x1f\xb4\x2e\xf3\xfa\x57\xf0\x88\x81\x46" +
	"\x03\x1a\xcd\x83\xd2\x68\xf6\x24\xaf\x8e\x8f\x93\x98\xa5\x88\xcf\xd7\x02\x63\x4e\x1c\xfc\x1b\xf1\x03\xee\x8a\x2a" +
	"\xa6\xda\xd1\x82\xf0\x9e\xb3\x03\x13\xfb\x37\x85\xe9\xcf\xf9\x5a\xb1\x8c\x38\x9e\x8d\x43\xcb\x9d\x55\xbe\x4f\xb3" +
	"\xad\x20\x2c\x13\xfd\xb7\x62\x3f\x7e\x5c\x96\x7a\x64\x57\x5a\xe9\x97\xbe\x5e\xde\xd4\xe9\x7d\xd5\xe2\x7d\xb1\xea" +
	"\xe3\x3c\xcb\xb8\x61\x82\x6a\xe9\xa1\xc9\x24\x64\x32\x91\xb8\xc3\xb4\x91\xa0\x68\xe9\x03\xa1\xe8\x48\x2c\xd2\x9d" +
	"\x6a\xc9\x48\x28\xd1\xc5\xa2\xa3\x81\xd8\x4a\x60\x61\x43\xa1\x44\x2f\x9d\x8e\x9f\xca\xb3\x13\x8b\x02\x94\x39\x16" +
	"\x65\xdf\xd7\x66\x54\xe2\x10\x8e\xc5\x21\x88\xa3\x1a\xbe\x10\x8b\x84\x8b\xd7\x27\x42\xc9\xd1\xa0\xfc\x35\xca\x45" +
	"\xfd\x93\x32\xd1\x5f\x2b\xd1\x61\xf5\xb2\xe1\xcf\x04\xdb\x61\x71\x1c\x5a\xc4\x34\x52\xed\x1d\x39\x31\x4f\x9d\x0f" +
	"\xb6\x69\x3a\x37\xb8\x58\x7f\x9b\x93\x7e\x52\xc8\xb7\xd0\x1e\x62\x0e\x8c\x39\x7b\xe0\xe1\xe7\x80\xba\x63\x56\xfe" +
	"\x57\x3f\x69\x96\xd3\x96\x86\x5d\x97\x86\x38\x9d\x73\x29\xed\x97\x3e\x5a\x72\x1a\x59\x76\xf8\xda\x95\x5e\xe8\x2c" +
	"\x9b\x04\xfa\x7d\xf4\x93\x8f\xa7\xd8\xc5\xa8\xdf\x17\x4f\x26\xe2\x2a\xf3\x46\x24\xa9\x0c\x54\x75\x96\x41\xdd\xf2" +
	"\x8d\xed\x41\x0f\x0d\x75\xbd\x87\x86\xa3\x51\x0f\xe9\x92\x0b\xd6\xe9\x85\xff\xf3\xfc\xf3\xd1\x3f\xd1\xb9\x4d\x7c" +
	"\x21\xa5\x45\xe1\x9c\x36\x71\x30\xbf\xa6\xd8\xaf\x88\x78\xdf\x1a\x89\x40\x99\x15\x43\x9b\xb9\x24\x64\xe2\x72\x99" +
	"\x5d\x73\x91\xe0\x43\x26\xa7\x14\x24\x8e\x24\xcf\x6b\xb1\x20\x24\x3e\x4e\xfc\xf1\xfa\x68\x34\x7c\x71\xac\x9f\x1c" +
	"\x0f\x4f\x8b\x90\x95\x52\xe5\xbc\x70\x15\xb6\xf0\x05\x9d\xbb\xe5\xdb\xe2\x92\x6f\x35\x77\x45\x8b\x3b\xbe\x09\xac" +
	"\xc9\x9a\x2f\xf8\x76\x00\xe6\xf6\x1f\xc3\xb3\x33\xe3\xc5\xf1\x2a\xd9\x67\xfe\x61\xbe\x78\x81\x8f\xf0\x46\xd2\xcd" +
	"\xb8\x91\x73\x4d\x7c\x44\xa7\xec\xfa\xb0\x41\x7d\x11\x4e\x10\xb0\x6d\x11\xaa\x35\x7b\x2e\x74\x47\xbe\x79\xf7\x1c" +
	"\x03\xb6\x2d\xa4\x7e\x81\xd4\x2f\x90\xfa\x45\x13\x13\xfe\x25\x3e\x61\x76\xfd\x9c\x31\x6b\x66\x44\x7c\x79\xa5\x7d" +
	"\x17\xff\x7b\xa5\x49\xad\x89\xcb\xa7\x7b\x91\xe9\xba\x05\x83\xe2\x42\x4b\xdd\x12\xd7\x36\x3e\x86\x94\xae\xef\xa7" +
	"\x99\x7d\x0f\xdf\xce\x1e\x58\xf6\xbd\x95\x80\xc9\x14\x92\xd2\xc6\x71\x37\xaa\x52\xab\x60\x10\xdb\xa6\xe8\xd3\x32" +
	"\x37\xde\x8e\x25\x9f\x91\x54\xf2\x91\x03\xd2\x2e\x93\x08\x06\x24\x1f\x90\x7c\xc4\x1a\x90\x7c\x1e\xbd\xe4\xd3\x90" +
	"\x68\xa7\x2a\xf5\xa0\x67\x31\x3d\x3f\x14\xd9\x27\x3e\xf3\x4e\xab\xa3\xad\x64\xce\xa8\x33\x80\x80\xf8\xa3\x18\x70" +
	"\xb7\x23\xad\x2a\x96\x17\x45\x20\x56\xf5\xd5\xcb\x05\x62\xc9\x0f\xe6\xb3\x25\x0e\xe6\x39\xb1\x66\x73\xb6\xcc\xc3" +
	"\xa3\x81\x77\x57\x1d\x35\x3b\xb7\x4f\x8e\xaa\x27\xb3\x3a\x4a\xcb\xb6\x66\xee\x79\xf0\xa1\xce\xb8\xdc\x2e\x92\x4b" +
	"\x69\x97\xfe\xc1\xf1\xc2\x7b\xe5\x03\xe2\x16\xff\x21\x3e\x5d\x7b\x2c\x98\x1f\xcf\xd3\xfb\x1a\xbb\x78\x9d\x64\x97" +
	"\x78\xb2\xb3\xcf\x93\x36\x78\x45\x02\x63\xc5\x68\xb3\x46\x31\xb0\x65\xb0\x59\x55\x56\x86\x60\xb3\xad\x06\x9b\x85" +
	"\xd4\xbb\xd9\x1f\xf5\x18\x2a\x80\x8f\x43\xb2\x6f\x50\x37\xc4\x96\x4b\x7c\x7e\x5e\xc6\xa7\xc7\x24\x20\x06\x75\xcd" +
	"\x60\xc2\x48\xe3\xab\xe5\xe0\x19\xf9\x3f\x2f\xaf\xb4\x2b\x8d\xdd\xc2\x79\xf9\xf7\x95\xf6\xbf\x37\xa7\xc1\xe4\xf0" +
	"\xd9\x95\xd6\xcb\xfb\xc7\x75\x71\xb3\xcb\x5f\x5f\x5d\x69\xdf\x7e\x1f\x3a\x9f\x0e\xae\x7c\xf9\x55\x1d\xd6\x56\x76" +
	"\x5f\x87\xf9\xd2\x27\x3e\xf1\x6c\x6c\x90\xfd\xc6\xdb\x3b\xd5\xd3\xbc\x87\xae\xb4\xf4\xf1\x57\x5a\xfc\xd7\x77\x3a" +
	"\xff\xd7\xa3\x26\xff\x8f\xfd\xc3\x67\x07\x57\xda\xc1\x01\x4a\x6f\x31\xf1\xb1\xac\x9a\xed\x36\x08\xb1\x3a\x4a\xb4" +
	"\xac\x8f\x48\xd3\xdc\x2e\x19\x08\x96\x4d\x26\x92\x87\x83\x39\x24\xf4\x2d\x23\x11\xc9\xeb\xd7\x79\xf1\x10\xb0\x24" +
	"\xf9\xee\x8b\xe5\x05\x9a\xdd\x04\x16\x7d\xf8\xf5\x92\xf9\x2c\x2e\xa9\x29\x1c\xb5\x10\x51\xd4\x85\x88\xa2\x5a\x4c" +
	"\x53\x84\x1e\x42\x5c\x0e\xc4\x1b\xa5\x1d\x77\x7a\x83\x02\xfc\xb8\x35\x5e\x59\x76\x1b\x17\xdc\xb2\xa5\xd2\x45\xdd" +
	"\xb2\x2d\xae\xa2\x1c\x9f\x82\x71\x12\x8c\x93\x60\x9c\x04\xe3\xa4\xda\x2d\x9b\x24\xb9\xe3\xf9\x11\x1e\x9b\x67\xf6" +
	"\xdd\xf9\x1b\xf0\xcc\x96\x4d\x93\xa9\xb9\x66\x97\x62\x0c\x78\x67\xc1\x3b\xbb\xba\x77\xb6\xcd\x5d\x5c\x88\x4b\x03" +
	"\x01\x08\x04\x20\x10\x80\xea\xb3\xfa\x3e\x78\xdf\x6c\x8d\x6b\x36\xcd\xee\x09\xde\xd9\x47\xe7\x9d\xdd\x99\xfb\xb5" +
	"\xfe\xe4\xcd\xdd\xaf\x47\x03\xa5\xfb\x75\x81\xbc\x88\x9b\x75\xbf\xee\xc4\x77\x0a\xae\xcf\xa7\xea\xfa\xcc\xbd\x61" +
	"\xe9\x39\xc4\x1c\x62\x5c\xfd\x2e\x38\x3c\xbf\x3d\x18\xff\xe5\x55\xf5\x72\x3c\x5a\xed\xa0\x6c\xe7\x7f\x4c\xdf\x2f" +
	"\xf7\x3e\xb6\x72\x1f\xea\x2b\x40\x77\xee\xc8\x7f\x48\x3d\x34\x42\xc9\x89\xfe\xda\x0d\x89\x1b\x10\x70\x26\x96\x6b" +
	"\x3b\xe4\x4c\xcc\xf7\x80\x49\x0c\x99\xcb\x83\xb5\x02\x6f\xe1\xb6\xbe\xab\x76\x7b\xef\xd6\x59\xb8\xf3\x2b\xb2\xfa" +
	"\x51\x2d\xd5\x73\xa1\xad\x6a\xf8\x68\x7d\x49\x36\x72\x5d\xcb\x9d\xa1\xf7\xcc\xf6\xbc\x86\x4b\xb2\x9d\x16\xcb\x0b" +
	"\x16\xc0\xea\xf3\xd7\x29\xb1\x2f\xb6\xbc\x2f\x5a\x2c\xef\x02\x89\xeb\xb6\x21\x93\xcb\xab\xd8\xde\x97\x56\xad\x16" +
	"\xcd\x68\x99\xe4\x7f\x52\x71\x79\x24\x4e\xe2\x83\x92\xd8\x11\x0e\xd0\x9f\xc4\xaf\x02\x15\x81\xe4\xbe\x34\x90\x7d" +
	"\x2c\x6e\x26\x9e\x33\x6f\x8e\x03\xa2\x8a\x2f\x5c\x2a\x15\x78\x55\x18\x8f\x1f\x9e\xe4\x3a\x8f\xdf\xb5\x5a\x84\x60" +
	"\x92\xf6\x62\xeb\xe1\x81\xf1\xc8\x1b\x63\x03\xa5\x73\xfb\x84\x04\xfa\x58\x76\xaf\x9c\x8e\xe8\x82\x46\xa2\x67\x08" +
	"\x04\xfa\x2e\x08\xf4\xea\x93\x1d\x75\x44\x28\xde\x44\x26\xb2\xee\x7f\xf5\xe3\x0a\x1c\x64\x8e\x8f\x96\x14\x99\x5a" +
	"\xcc\xcf\x6f\x67\xb5\x16\xf3\x8a\xc9\xbb\x79\x0a\x96\xbc\x21\xf4\x96\x86\x64\x8c\x6c\xcb\xb1\x42\xe4\xe0\x7b\x44" +
	"\xee\x0c\x42\xcc\x00\x31\x2b\x17\xb2\x5c\x84\xe3\x53\x12\x99\xdc\xeb\x89\x02\xea\x10\x94\x99\xc4\x02\x44\xa7\xc8" +
	"\x0a\x11\x32\x29\x09\x90\x4b\x43\x34\xc7\xb7\x84\x3f\x2d\x38\x14\xa3\x09\x73\xaf\x84\x3e\x10\xdd\x12\x0d\x42\xb5" +
	"\x68\xd9\x5e\x58\xa8\x1e\xd6\xe7\x15\x8a\x4f\xde\x0f\x96\x43\x52\x99\x47\x2e\xf5\xf1\x40\xbd\xaa\xac\xa3\x94\xf7" +
	"\x3c\x3c\x23\xc9\x57\x57\x83\xfb\x7c\xe2\x11\xac\x38\x71\x78\xdd\x2b\xcb\x27\x46\xba\x54\xb7\x82\x84\x66\xf8\x94" +
	"\xa9\x27\x92\x51\xc6\x5b\xe9\x67\x82\x4d\x26\xdf\xc9\xea\xf9\x31\x23\xcc\xb4\x41\x6d\xa9\x02\x63\xf2\x7b\x41\xcd" +
	"\xbe\x40\x96\x85\xaf\xe5\x66\x60\x5a\x61\x72\xac\xca\x76\x03\x8b\x31\x49\xe4\x64\x05\xcb\x50\x86\xa1\xb0\x5a\x45" +
	"\xdc\x88\xf8\x9c\x05\x82\x51\x58\xe3\x7f\x18\xfa\xc8\xd0\x4f\xc4\x0c\xac\xb2\xbc\xaa\x26\x0e\x49\x2e\x6b\xfd\xfb" +
	"\xdf\xff\xfe\x77\xff\xcd\x9b\xfe\xab\x57\xe8\xe7\x9f\xc7\x8e\x33\x0e\xa4\x62\xa0\x3a\x2c\x05\xa5\xf4\x56\x23\x25" +
	"\xc6\xd5\x79\x2a\x31\xa9\xa0\x18\x37\xf9\xe8\x2b\xe5\x48\x0f\x87\x21\xf1\x19\xe1\xa5\xa6\x5b\xa9\x07\xb0\x24\x93" +
	"\xc9\xa6\xea\x48\x76\xc2\x21\xa4\x9d\x0e\xda\xcd\x5e\xe6\xf3\x0c\x7d\xcb\x95\x32\x4d\x96\x44\x34\x8b\x94\x32\xee" +
	"\x3f\xbe\x7f\x25\xf0\xce\x16\xc7\x66\x46\x8d\xdd\x20\xc5\x36\x11\x54\xa8\x8e\x70\x77\x46\x9b\xb5\xc1\x37\xa8\x42" +
	"\x5c\x1f\x64\x32\x64\x93\xb0\x8f\x8a\x84\x31\xb7\x4c\x93\x48\x7d\x1a\x29\x61\x70\x39\x67\x15\x92\x50\xdd\x97\x46" +
	"\x40\x1b\xd5\x4e\x39\x6d\x1c\xad\x4a\x1b\x2c\x46\x0e\xfd\x43\x9a\x98\xbc\x3d\x7d\xf0\xf4\x73\x9b\xa7\x8f\x77\xe4" +
	"\x8f\x88\x04\x52\x79\x1a\x28\xa4\xd8\x69\xfd\x14\x22\x8f\xcb\xea\x1c\x85\xfc\x12\x0b\xc6\x40\x1f\xdb\xa7\x8f\xef" +
	"\xbb\x4f\x1f\x6f\x88\x03\x27\xcc\xa2\xf4\x21\x33\x6f\x2c\x43\x1f\xaf\x36\x4d\x1f\xdc\x99\xbc\x2a\x7d\xc0\x09\xb3" +
	"\x33\x0a\xf9\xe1\x61\x50\x08\x9c\x30\x3b\xa2\x8f\x1f\xbb\x4f\x1f\xef\x48\x10\x62\x3f\x44\x52\xab\x3d\x90\x48\xa5" +
	"\xd3\xfa\x49\xe4\xa7\xdd\x08\x21\x7b\x35\xf3\xb3\xbc\x93\xb5\xe4\x1e\x65\xd6\xa1\x49\x39\xbf\xcb\xb8\x31\x8d\xc8" +
	"\x38\x88\x9c\x89\x8f\x43\xf2\x55\xcc\x0c\xa3\x4e\x17\xd3\x4b\xdf\x97\x86\x5d\x76\x38\x71\x4c\x29\xee\xb2\xc1\x29" +
	"\xcc\x22\x33\x24\x4d\x1a\xdd\xc1\x69\x3e\x19\x99\x4f\x6d\xe1\x7b\x0d\x17\xcb\x70\x98\x22\x5d\x94\x67\xf7\xca\x8d" +
	"\xcb\xf0\xed\x6c\x42\x6f\x89\x3f\x89\x39\x4f\xee\x9e\xcf\x17\xd8\x4f\x72\xf2\x4f\x7c\x2e\xe0\x04\x85\xdc\xc3\x59" +
	"\xab\x2a\x59\xe4\x14\x51\x59\xa1\xdf\xf5\x81\xf3\x29\x9f\xfd\x83\x1e\xba\x72\x4b\x6b\x96\x2c\x59\xba\x62\xf1\x82" +
	"\xfd\x57\xbc\x60\x57\x2e\xf5\x51\xe4\xa1\x67\x68\x90\xf9\xf3\x1f\xd4\xea\x89\xb7\x52\xb6\xba\x7a\xdc\xef\x03\x6b" +
	"\xb7\xd4\xda\x7d\xbf\xea\xda\xd5\x06\xaa\xab\x98\x29\x92\xb1\xde\x0e\xf3\xd4\x42\xa4\xcd\x83\x5a\xdd\xa5\x1c\x12" +
	"\xea\x9d\xb9\x26\x2e\x5b\x4a\x25\xb0\x86\xcd\x1a\xef\xd5\x32\x41\x15\x77\x6c\x56\x53\xdc\xb7\x95\xa5\x5f\x66\x7b" +
	"\x37\xde\x67\xe8\x06\x09\xfc\xd0\x25\x12\x48\x58\x35\x10\xc0\x16\x09\xe0\xc7\xf5\x12\x80\x64\x79\x93\xa0\x3c\x9f" +
	"\x2b\x7a\x69\x56\xc6\x16\xeb\xea\x51\x13\x25\xbc\x7f\x31\x5e\xbc\xb1\x90\xca\xf5\x30\xf9\xf5\xac\x60\x35\x5a\xb2" +
	"\x36\xde\xf1\xa7\x05\x15\xb0\x3c\x6a\x51\xd3\xdf\x88\x97\x82\xdb\x85\x25\x5e\xf0\xf0\x6c\xe4\x27\x91\x89\x9e\xec" +
	"\x8a\x91\x8f\xdd\x20\x9e\x33\xd5\x8c\xf1\x16\x1e\x56\xa3\x98\xe7\x50\xcb\xac\xfb\x9e\xec\x23\xe5\x40\x8e\x65\xcc" +
	"\xc1\xad\xe2\x38\x96\xbe\x40\x12\x20\x66\xa7\x99\x38\xa4\x01\x8b\x79\xe0\x7b\x4d\x30\xd7\xad\x23\xc5\x1a\xcd\x82" +
	"\xb9\xe2\xfa\xa6\xbd\xdf\x36\x80\x8b\xd9\x26\xa6\x96\x6b\xa5\x61\x41\x9c\x2b\xf0\xe0\xc9\xfd\x3c\x6d\x10\x2b\x0e" +
	"\x7a\x89\x68\x16\x97\xfb\x2e\x09\x49\x30\xb1\xe8\x64\x4e\x83\x50\xbe\xad\x52\x96\x28\xc6\x4f\x59\xae\x61\x47\x26" +
	"\x39\xaf\xcb\x2f\x50\x13\x35\xa8\x39\x91\x1d\x5a\xca\xae\x69\xea\x8b\x78\xe8\xe2\xa0\x0a\x08\x91\x82\x85\x44\xfb" +
	"\x23\x22\xfe\xfd\xfa\x27\x22\xa7\x5d\x21\xc4\x41\xf3\xc9\x8c\xc8\xb2\x53\xc4\xc4\x7b\x63\x79\x1f\x7d\xfb\xfd\xbd" +
	"\x6b\xa8\x11\xfd\x55\x21\xbe\x21\x9e\x31\x62\x0c\xfe\x5f\xfa\x4d\xe2\x0b\x24\x9b\xa0\x50\x53\xd7\x31\xd9\xbb\x7c" +
	"\xbe\x84\xea\x28\x20\x1f\xf8\xa3\x25\x31\x5e\x85\xbf\x00\x16\x55\x78\x12\xc0\xa2\xae\x07\x16\x95\x5d\x3d\xab\xc3" +
	"\x44\x3d\x75\x88\x69\x3a\xa5\x33\xa1\x06\x10\xd5\xf3\x89\x69\xb1\xe8\xc9\xbe\x4f\x0c\xea\x38\xc4\x35\x59\xfa\x10" +
	"\xc0\x47\x7d\x94\xf8\xa8\x47\x35\x00\xa9\x27\x67\xa7\xc7\xc7\x47\x27\xfa\x69\xe1\xca\xdc\x23\x07\x48\xd5\x97\x40" +
	"\x48\x7d\x83\x5d\x3c\x23\x26\xfa\xf5\xfa\x33\x31\x84\x65\x5f\x0a\x1d\x35\x0f\x8e\xaf\x8f\x58\x7f\xed\x4e\xed\xe8" +
	"\xee\x55\x35\x52\xa3\x11\xd1\x62\xb5\xa0\x72\x45\x6e\x95\xd3\x05\x96\xa2\x0d\xe6\x54\xa5\xb0\x4d\xb0\xb8\x44\xdc" +
	"\xdf\x5c\xbc\xb7\xf8\x65\x66\x8e\x03\x51\xfb\x7d\x4b\x85\x7b\xab\x62\x3e\x97\xf2\xd4\xb5\x89\x25\x2d\x47\x8a\x36" +
	"\x89\xe2\x10\x1b\xcc\x3b\xef\x3c\x36\xd8\x0a\x26\xd8\xc6\x0e\x31\xf1\xa6\x23\x84\x4d\x62\xcc\x56\xf7\xb0\x03\x71" +
	"\x6c\x91\x38\xda\xdd\x48\xd8\x75\xe0\x38\x90\xc4\x16\x49\x22\x61\x16\x93\xc0\xc0\x76\x62\x7f\x66\xf6\x46\x20\x13" +
	"\x20\x93\x7a\x32\x01\x0a\x01\x0a\x59\xea\xc6\xdb\xae\xc9\xe2\x9c\xd3\xf2\x7b\x46\xca\xe8\xad\x62\xcc\x40\x28\xc5" +
	"\x4e\xeb\x67\x25\x88\xb3\x92\xd5\xc8\xa5\xf9\x82\xe3\xea\xe4\x72\xe9\xd3\x58\xb3\x47\xfb\x6f\xd3\xb3\x51\xea\x5a" +
	"\x03\x7a\x29\x76\x5a\xb3\xd0\xba\x06\x91\x64\x2b\xa4\x42\x4d\xe0\x27\x3b\x38\x78\xba\x4f\x19\x17\x69\x00\x01\xd0" +
	"\xc7\xb6\xe9\x23\x8b\xdd\xe8\x3e\x95\x30\x6f\x0e\x10\xc8\xb6\x0f\x18\x99\x03\xbd\x73\x97\x1d\x2f\xa9\x6d\x19\xa2" +
	"\x13\x1a\x08\xa3\xd2\x69\xad\x27\x8b\x6a\xca\xbb\xc5\x36\x9e\x14\x51\xd4\xaf\x6f\x61\xf5\x9e\x1f\x3e\x7b\xbe\x9b" +
	"\x6d\xbd\x57\xf3\x11\xcb\x5d\x1f\x32\x68\xe4\x86\xfb\x91\xf7\xf5\x33\xbd\x7e\x79\xa5\xe5\x11\x39\xfd\x98\x79\x05" +
	"\x57\xda\xb7\x65\xc3\xfd\x58\xdc\xe1\xf7\xf7\x0a\x2a\x10\x87\x84\xf8\x2c\xfb\xd8\x51\x51\x0e\x6b\xf1\xdd\x24\x0b" +
	"\x37\x11\xd7\x55\x32\x2d\x59\xc7\x2c\x5c\xce\x72\x88\xac\xa7\xb0\x31\x56\x1a\xa6\x0c\x64\xa3\xdd\xf8\x58\x96\x5b" +
	"\xd9\xf8\x5a\x51\x71\xab\x18\x4a\xea\x9b\xc4\xff\xfe\xfe\x83\x95\x04\x19\xbc\x97\x26\xf5\x48\x98\x14\x73\xc8\x4c" +
	"\x71\x64\x4b\xaf\xb2\x66\x01\x5f\x01\xb1\x63\x5d\xf6\x4a\xe3\xb1\xaa\x08\x07\xa8\x1c\x64\x8c\x54\x06\xe1\xb8\x69" +
	"\x21\x68\x55\xd2\x8c\x3f\xac\xac\xde\xc7\x4f\xcc\x50\xb4\x71\x10\xff\x77\x2f\x8f\x6c\x65\xcf\xa4\x26\xe1\xa1\xb2" +
	"\xf1\x77\xc4\xed\x73\x17\x16\x9a\xfa\xd4\xc9\x5e\x65\xd8\x51\x10\x66\x21\xbb\x87\x87\xd9\xb0\x79\xf0\x2c\xba\xbe" +
	"\xcf\x5f\x2f\x0c\x9f\x87\xe1\x4a\x6a\xb3\x40\xdd\xc2\x5f\xc9\xe4\xb0\x05\x88\x1f\x1b\x13\x23\x32\x49\x60\x24\x59" +
	"\xdf\xa4\xa1\x8b\x3e\xfe\x92\x86\x92\x29\x22\x67\xeb\x13\x7c\xfa\x24\x88\xec\xf0\xc7\xe6\x2d\xcb\xd7\x50\x41\xd6" +
	"\x72\x52\x97\x6f\x90\x36\x5b\x24\x8b\xc9\x54\xd4\x2b\xf6\x49\x69\xa7\x10\xdb\x94\x77\x97\x6e\xe6\x56\xa3\x6d\x7e" +
	"\xad\x43\xb0\xe0\xb6\x4e\xde\x2a\x29\xfd\xd4\x6a\xdb\x66\x81\x84\x8b\x71\xfc\x6a\xa8\x48\xa6\x0c\x6e\x39\xe0\xb8" +
	"\xd8\x70\xdd\x31\x27\x1b\x09\x2a\x11\x4b\xef\xe4\xa1\x26\x2d\x83\x4a\x2a\xe1\x42\xdd\x0b\x2a\x11\xe3\x99\x20\xa8" +
	"\x44\x3e\xf4\x27\x25\xf3\xee\x5a\x11\xb2\xdc\xf4\xf0\xed\xbe\x77\x27\x41\x8e\x61\xbb\x17\x68\x64\xbb\x56\x94\xd2" +
	"\xe5\xb8\x4d\xeb\x5e\x19\xde\xcc\x2a\xd4\x72\x71\xf9\x11\x5d\x50\x5f\x3e\x5a\xa0\x95\x62\xa7\x35\x66\xf7\x60\xb4" +
	"\x92\xdd\x79\xef\xbe\xed\x0d\xec\xb2\x0f\x33\x5a\x0d\x8c\x6f\xf2\xd6\x60\x7c\x03\xe3\x9b\xac\x23\x18\xdf\xb2\x46" +
	"\x1b\x34\xbe\x3d\xab\x37\x6b\xa9\xdc\x51\x60\x5f\x2a\x77\x03\xfb\x52\xda\xab\x6a\x5f\x8a\xc5\x95\x4e\x99\x96\x76" +
	"\x7c\xf3\xab\x1e\xca\x99\xe3\xc2\x09\x06\xa0\xc6\x8b\x5f\x79\x48\xc7\xbb\x24\x45\x08\x4f\x46\x8b\xb0\x6b\xa2\x77" +
	"\xa5\xdb\x93\xc2\x4c\x3f\x48\x34\xc0\x7e\x1f\xbd\xb1\xee\x88\x29\xde\xbb\x5c\x12\xf3\xef\x64\xf5\xa5\x3d\xad\x5d" +
	"\xda\x1c\xa5\xbb\x3a\x60\xb6\xe8\x67\xd5\xc2\x02\x4e\xd8\x7f\x1f\x8b\xb7\x9d\x6b\xb0\x02\x5b\xe1\x00\xca\xeb\xe7" +
	"\x96\x49\x7e\x70\xbc\xf0\xbe\xb6\xc5\x7f\x88\x4f\xd5\x18\xde\x4b\xe2\x7b\xaf\x01\xbe\xbb\x19\xdd\x04\xf0\xbb\x17" +
	"\xb2\xc9\xfe\x7a\x1d\xc4\x44\x18\xb3\x0d\x34\x46\xcd\x20\x0a\x71\x9f\x7f\x8c\xf4\xb3\x91\x21\x9c\xa1\x0b\xa6\x3a" +
	"\x2d\x72\x2c\xfe\x66\xbb\x36\x35\x2e\x7b\xf3\x74\x68\x9c\x1d\x4b\x03\xf0\xca\x70\x85\x4b\xe2\x72\xd5\x0e\xcf\x6f" +
	"\xc8\xed\xcc\x06\x78\x42\xae\x87\xdb\x18\xe0\x65\x76\x75\x9e\x0f\x2e\x6a\x5e\xb5\xe9\x19\x19\x9a\x43\xb9\x01\xbe" +
	"\xc0\xb3\x47\x8a\x06\x8a\x5d\xc5\xbf\xad\x04\x33\xf9\x62\x21\x79\xa2\x3b\x10\x95\x8b\x4f\x6e\x2b\x67\x15\xaa\xe8" +
	"\x5e\x32\x51\xac\x21\xcf\x95\x43\x70\x10\xf9\xc4\xe1\x8c\x9d\x1b\xb4\xf2\xe4\x09\xb2\xf7\x2d\xaa\x50\xb4\x78\x64" +
	"\x55\xb1\x60\x4c\x99\x2b\x17\xb9\xab\x3b\x7f\xc4\x95\x76\x78\x58\x72\xf6\xa3\x2f\x73\xe2\x13\x74\x95\x80\x55\x5e" +
	"\x69\xe8\x25\xfa\x97\x98\x79\x36\xe7\xa5\xff\x62\xb2\x4d\xe6\x1f\x7f\x89\xfe\xf5\x5d\xf6\xb8\xb4\x2e\xf7\xa4\xb3" +
	"\x7a\x8f\x9a\xc5\x5e\x89\x2f\x9e\x55\xb9\xc1\xbf\x10\x3a\x7f\xfb\x0a\x7d\xc7\x32\x3a\x59\xb6\xc2\xbf\xb0\x80\xe2" +
	"\x23\x5d\x69\x41\xf1\xa9\x07\x13\x7d\x44\xea\xcf\xca\x8a\x88\xe4\x01\x0a\x75\xff\x86\xdc\xd7\xc4\x52\xb2\x26\xd4" +
	"\x23\x3e\xe6\x1a\xb7\xf6\x52\xd5\x28\x4b\x00\x65\x79\x7d\xfd\x64\xd8\x1f\x1e\xf5\xf5\xfe\x99\x7e\x18\x05\x7d\x82" +
	"\x83\xb0\x3f\x3c\x34\xa8\xe3\x45\x21\x39\x64\xd2\x9a\x2b\x37\x71\x2c\x62\xa8\x88\x89\x3c\xcb\x0c\x75\xfe\x56\x86" +
	"\x6b\x50\xfc\x42\x36\xef\x6b\xf9\x42\xc3\x8b\x5a\x1a\x31\x96\x38\x97\x5a\xa7\xc6\x2a\x18\xba\xf4\xc1\x60\x80\x9e" +
	"\xa1\xb5\xe6\xa9\xce\x1e\xc6\x12\xd5\x05\xc5\x78\xa0\xb8\x24\x49\x90\x57\x7e\x7e\x5c\x51\x8a\x49\x92\x66\x5c\x6d" +
	"\xb0\xb9\xad\x88\x18\x9c\x26\xc1\x6b\xc2\x14\x5e\x28\x0b\xde\x02\xb2\xdd\x6a\xe9\xa5\x97\x93\xea\x96\x3a\x3c\xdb" +
	"\x6f\x34\x30\x5c\xae\x68\xb8\x6c\x20\xda\x0d\x9a\x2c\xcb\x49\x50\xe3\x5d\x5f\x15\x33\xca\xe9\xa2\xd4\xa2\x46\x67" +
	"\x45\x87\x76\x36\xd3\x27\x23\x3a\x3c\x16\xcb\xe9\x06\x75\x4c\x60\x97\xc0\x2e\x79\x23\x25\xbb\x4c\xa8\xe7\x51\x32" +
	"\x4c\x29\x00\x18\x30\xcc\x85\x47\xdb\x31\x86\xb9\x57\xd3\xb3\xde\x7d\x5f\x4c\xcc\x2c\xcd\xbc\xec\x90\x77\x64\xa6" +
	"\xc8\x4a\xdb\x3e\x6f\x73\xe6\x76\xb9\xb8\xfc\x38\x46\x05\x91\xba\x87\x72\x33\x51\x4f\xe2\x85\x41\xfb\x96\xcb\x78" +
	"\xba\x63\xd9\x96\x41\x7d\xe1\x1e\xbf\x16\x66\x99\x12\x05\x0b\x7f\x30\xc7\xbe\xca\x85\x55\x97\x9f\x96\x51\xdc\x24" +
	"\x5d\x49\xcb\x35\xad\x5b\xcb\x8c\xaa\x0c\xbb\x6a\x33\x4f\xdb\xb3\xfc\x8d\xd5\x51\xde\xa9\x90\xfb\xaf\x23\xe3\x86" +
	"\xdb\xd6\xe4\xe9\x84\x13\x7b\xb9\x14\xcc\x2a\xcd\x65\x29\xed\x59\xe7\x27\xc8\x3c\x01\x15\x52\xaa\x7e\xd2\x3d\xbe" +
	"\x6b\x6b\x0b\x6f\x40\xb3\xcc\x95\x3c\x97\xba\x52\xe5\xa9\x2e\xab\x72\x5c\x4d\x67\xdf\xe3\x40\x15\x81\xc4\x9d\x29" +
	"\x8a\xae\xdc\x9b\xa2\xa8\x2c\x4c\xd3\x12\x62\x48\xfe\x59\x59\x64\x63\xe7\x3e\x4d\xf4\xf6\x34\x71\x8c\x7b\x15\xb1" +
	"\x62\xdb\x9a\xa9\x3d\x53\xac\xf6\x17\x72\x9b\x7d\xeb\x9e\xea\x95\xe0\x34\x5d\xd8\x69\xaa\x8f\x6a\x77\x6a\x83\xd7" +
	"\x54\x98\x0d\x70\x9b\x16\xea\xc0\x6d\xba\x73\xb7\xe9\x18\xf1\x30\xf4\x36\x2e\xb8\x0d\x38\x4e\x93\x97\x77\xd8\x77" +
	"\x9a\x8c\xb0\xb3\xee\xd3\xf6\xcb\x07\x1e\xd4\xe2\x6f\x5d\xf3\x0b\x4e\xd4\x55\x9d\xa8\x22\x9c\x5c\xe7\x5d\xa7\x60" +
	"\xff\x2c\xfe\xc0\x75\xda\x66\xe4\xe0\x3a\xcd\xef\x08\xd4\x20\x49\x76\xd4\x07\xba\x79\x27\x67\xf3\x51\xb3\x21\x37" +
	"\x67\x93\x0c\x06\xa6\xfb\x76\xc3\xdc\x95\xe9\x7e\x7b\xae\xcc\x84\x52\x1e\x9b\x71\x1e\x02\xa1\x8a\xbf\x47\x63\x9c" +
	"\xdf\xac\xd6\x07\x5c\x11\xb8\x62\xea\xb1\x7c\xa4\x7c\x11\x9c\x96\xc5\xdf\xa3\xe1\x8b\xb5\xd6\x98\x4e\x39\x2d\x79" +
	"\x7a\x92\x85\xfc\x96\xe0\xa5\xcc\x6b\xbb\xe9\xa5\x54\x38\xcd\x72\x4d\xac\xa3\xee\x3c\xf0\x54\x16\x3a\x6e\xde\x53" +
	"\xb9\x27\x79\x75\x11\xf0\xb9\x0c\xb0\xfa\xd8\x10\x9f\xbf\x90\x6b\xec\x79\x32\x4a\xc9\xcc\x3a\x49\x93\x26\x92\x6c" +
	"\x2b\xa8\x56\x50\x9f\x63\xca\x40\x21\x9e\x71\x13\x6f\x80\xa8\xab\xb8\x83\xcf\xa5\x9e\x3c\xbd\xe4\x17\x2b\x9c\xa3" +
	"\x1b\x72\xff\xb2\x2e\xbd\xa4\xf8\xf6\x75\xe0\x42\x6b\x6f\x95\xe8\x07\x6d\xe1\xa1\x25\x48\xa4\xed\xc0\xa1\xb7\x3d" +
	"\x5f\x00\x1f\x9d\xff\x2a\x34\xbf\x99\x1d\x59\x03\x14\x98\x6d\xc9\xb4\xcd\xc3\xda\x93\x05\x55\x44\x4d\x81\xa9\x8e" +
	"\xb1\xa1\x9d\x5b\x82\x19\x5a\x76\xf7\x2a\x40\x72\x76\xbb\x83\x57\x9c\x5d\xd8\xe7\xf9\x6f\x2b\xfb\xdc\x9d\x59\xee" +
	"\x5d\xdf\x24\x9e\x4d\xef\x1d\xe2\x86\xfd\x93\x6b\xd3\x34\x8d\xd1\xe9\xf4\xac\x7f\xf7\xe5\x8f\xa9\x54\xa9\xce\x38" +
	"\x40\x73\xef\x0e\xf3\x86\x82\xb1\xa1\x3d\xc9\x26\xe6\x08\x39\xe5\xc7\x6d\x78\xc9\xa6\x18\x87\x0c\xd0\xa6\x25\xbb" +
	"\x90\x76\xdd\x1e\xaf\xd8\xf2\x6c\x03\x23\xc9\x7f\xdb\x63\x24\xcd\xcc\xa2\xcb\x0c\x61\x63\xe4\xa9\xb6\x6e\x6e\x88" +
	"\x4d\xa8\x71\x8d\x5a\x32\x8b\x9a\x07\x6c\x8f\x65\x74\x62\x3d\x80\x91\xe4\xbf\xa2\xc5\x22\xb7\x95\x7d\x2b\x5a\x13" +
	"\xb8\xff\xa1\x64\x47\x98\x72\x0b\xaa\xe6\xd2\x2f\x7d\xbd\x6c\x0b\xd4\x42\x9a\xd4\xfc\xd7\x70\xe0\x68\xca\x47\x7a" +
	"\x96\x71\xc3\xa2\x43\x4b\x0f\x4e\x96\x26\xf3\x0b\x89\xc6\x39\x6d\x24\x44\x1c\xeb\x62\x10\xf2\x91\x58\xa4\x3b\xd5" +
	"\x92\x91\x50\xa2\x8b\x45\x47\x03\xb1\x95\x60\xfd\x1c\x0a\x25\x7a\xc9\x06\xff\xa9\x3c\x43\x96\x43\x26\x85\x3d\xb7" +
	"\xc4\xa8\xc4\x21\x1c\x8b\x43\x10\x47\x35\x7c\x21\x16\x55\x45\x08\xed\x44\x28\x39\x1a\x94\xbf\x46\xb9\xa8\x7f\x52" +
	"\x16\xc7\xa8\x95\x2c\x54\xa9\x55\x3c\x37\x7b\xd7\x5b\xbd\xb5\x88\x05\x9e\x6b\x27\x26\x36\x31\x2e\x0e\x46\xbb\xcd" +
	"\xac\x63\xc3\x34\xff\x3f\x27\xe0\x3d\x84\xca\xce\xaa\x7e\xc2\x31\x38\x7b\x38\xfc\x1c\x50\x77\xcc\x5a\xfe\xd5\x4f" +
	"\x3a\xe6\x74\xa7\x61\xd7\xa5\x21\x4e\xd7\x63\x09\x8b\xd9\x75\x64\xd9\xe1\x6b\x57\x9a\xbf\x4e\xb8\x20\xf0\x93\x8f" +
	"\xa7\xd8\xc5\xe2\x15\x01\x84\x34\xe2\xb2\x5c\x7b\x0a\xb3\x76\x72\x90\x48\xeb\x2c\x83\xba\x17\x69\xa4\x2c\x4b\xfb" +
	"\x3a\xe8\xa1\xa1\xae\xf7\xd0\x70\x34\xea\x21\x5d\x4c\x5a\xaa\xf1\x78\x99\x31\xd2\x07\x22\xbf\x4a\x4f\x8d\xf3\x7c" +
	"\x6a\xd0\x3f\xd1\xb9\x4d\xfc\x50\x62\x61\x8a\x8f\x06\xf6\xf9\x12\xc6\x97\xf0\x26\x13\x07\xf3\x6b\x8a\xfd\x8a\x6f" +
	"\xaa\x99\xff\x10\xd3\x0a\xa5\x93\xa2\xcd\x5c\x12\x32\x3f\x5f\x59\xc4\xe1\x0e\x8a\x0f\x99\xdb\xa4\x30\x26\x7e\xa5" +
	"\x61\x78\x5a\x2c\x09\x89\x8f\x13\x91\x43\x1f\x8d\x4e\xce\x4e\x8f\x8f\x87\x47\xfa\x51\xb1\x8d\x2c\xca\xbe\x90\x33" +
	"\xb0\xf0\x09\x9d\x4b\x86\x38\xa8\x13\x1b\x93\x1b\x1e\xd5\x4b\x05\x2d\xb2\x21\xa6\xb9\x27\x7f\xbd\xfe\x4c\x0c\x81" +
	"\x22\x96\xc9\x78\xb8\x32\x24\x89\x49\x02\xc3\xb7\xbc\x54\x7a\x14\xae\xdf\x6c\x02\xb1\x44\x82\x4d\x52\x73\x0f\xa7" +
	"\x79\x29\xaa\x37\x2c\x3a\x87\x58\x22\x7e\x19\x20\x96\xc8\x87\xae\xbc\xc9\xf0\x18\x13\x85\xef\x3a\x77\x7c\x8e\x21" +
	"\x26\x5d\xd5\x35\x22\x96\x98\xc4\x98\xad\x8e\x43\x01\xc4\xf1\xa0\x80\x05\xb6\x01\x64\x03\x24\xb1\x45\x92\x50\xd9" +
	"\x1d\x80\x4c\x80\x4c\xea\xc9\x04\x28\x04\x28\xa4\x84\x19\x6d\x3e\x10\xb2\x28\xf9\xa7\x01\xdd\x68\x47\xac\x04\x29" +
	"\x3c\xfc\x9d\xc3\x39\xba\xf4\x69\xac\xd9\xa3\xfd\x2c\x22\x49\x8a\x7a\x03\xf4\x52\xec\xb4\x66\xa1\x75\x0d\x22\xc9" +
	"\x56\x48\x85\x9a\xc0\x4f\x76\x70\xf0\x74\x9f\x32\xf2\x38\x78\xa0\x8f\x2d\xd3\x87\xda\xdb\xdb\x39\x2a\x01\xb8\xc5" +
	"\x5d\x01\xb8\xae\x46\x1b\xdb\x80\xe2\xbc\xe4\xb7\xdb\x80\x30\xb6\x79\xb2\xa8\xa6\xbc\x5b\x6c\xe3\x49\x11\x05\x20" +
	"\x71\x02\x12\xe7\xda\x86\xf9\x54\x91\x38\xb3\xf0\x33\x1c\xa0\xd2\x45\xe6\x1e\x52\x19\x84\xe3\xa6\xd9\x1f\xd2\x66" +
	"\xfc\x61\x65\xf5\xbe\x98\xf2\x25\xae\xf7\xa8\xd9\x43\x2c\x39\x55\x5a\x12\xff\xd1\x63\xf1\x6a\xf1\x77\xc4\xed\x73" +
	"\x17\x56\x3d\x5e\x68\x21\xac\x2e\x09\xa2\x2b\xc6\xbc\xfd\x8d\x9e\xff\xef\xef\xbf\x7b\xd4\xfc\xf4\xe9\xbb\xe7\x35" +
	"\xf7\xac\xd9\x06\x40\xd7\xf7\xb5\x31\x78\x3d\x55\xe0\x5d\xaf\xf4\xd6\x5e\x3e\xb1\x6c\xf1\xe2\xc7\xc6\x84\x8c\x4c" +
	"\x12\x18\x3c\x29\x0b\xd2\x65\xeb\x03\x10\xa7\xe5\x6e\x70\x85\x3b\xed\x55\x0d\x33\xc9\x14\xc9\x4e\xe1\x9c\xae\x16" +
	"\xaf\xb2\x91\x80\x14\xb1\xf4\x4e\x1e\xa6\xd2\x32\x20\xa5\x12\x6a\xd4\xbd\x80\x14\x31\x16\x0a\x02\x52\xe4\x43\x7f" +
	"\x52\xf2\xf2\xae\x95\x28\xcb\x4d\x0f\xee\xee\x7b\x86\x78\x8e\x0a\xc4\x76\x2f\xd0\xc8\x76\x2d\x30\x69\xfe\x40\x65" +
	"\x5a\x85\x75\xea\x6d\x59\xfa\x86\x55\xa8\xe5\xe2\xf2\x23\xba\xa0\xbe\x7c\xb4\x40\x2b\xc5\x4e\x39\xad\x08\x61\x93" +
	"\x4b\xd1\x8a\xe1\x45\x13\x43\x35\xf5\xdd\xb2\xdb\x81\x4d\xf7\x61\x46\xba\x81\xe1\x4e\xde\x1a\x0c\x77\x60\xb8\x93" +
	"\x75\x04\xc3\x5d\xd6\x68\x83\x86\xbb\x67\xf5\x26\x31\x95\x2b\x0b\xec\x4b\xe5\x6e\x60\x5f\x4a\x7b\x55\xed\x4b\xb1" +
	"\xb8\xd2\x29\xd3\xd2\x8e\x6f\x8d\x9d\x94\x0a\xa5\x96\xa1\x13\xc1\x00\xd4\x78\x69\xec\x5d\x92\x75\x94\xc3\x20\xcb" +
	"\x20\xdb\xe8\x14\x9d\x7b\x9e\x6d\x19\xf2\x4c\x88\x8b\xdf\x2a\x03\x48\x28\xe9\xfa\x9e\xd6\xae\x6f\x03\x22\xd4\x59" +
	"\xb5\x10\x00\xa1\xf2\x3a\x00\x84\x52\xed\x8a\xad\x01\x42\x35\x61\xad\x6f\x14\x0e\xaa\x16\x71\x7d\xf7\x58\x50\x0d" +
	"\x18\xc7\xbb\x05\x82\x8a\x07\x07\x28\x50\x1b\x42\x81\xaa\x9d\xdc\x75\x43\x40\x29\xa6\xf7\xf1\x22\x40\x19\x5e\x94" +
	"\x60\xc0\x04\xc4\xa0\xae\x19\x4c\x72\x56\xda\x79\x2c\x28\x40\x8f\x28\xfe\x00\x0b\xaa\xcd\xc8\x01\x0b\x2a\x35\x76" +
	"\xe9\x83\xc1\x00\x3d\x43\x41\xe4\xec\x67\x7b\x75\x92\xee\xe7\x49\x19\xc7\x69\x9c\xff\x29\x72\x0c\x26\x3a\x8e\x83" +
	"\xc8\x99\xf8\x38\x24\xb5\x30\x52\x7f\xab\x70\xa4\x38\x50\x94\xac\xf4\xf2\xd7\x57\x2d\xec\x6e\xf5\x9b\xbc\x01\xe0" +
	"\x6f\xf3\x08\x53\x4d\xa2\xdd\x86\xf0\xa5\x6a\x85\x3a\x80\x51\xe9\xb6\xf1\xb2\x81\x68\x37\x68\xb6\x8c\x59\x82\x43" +
	"\xb0\x7b\xc0\xa5\x8b\xfd\xa4\x38\x2e\xda\xaf\xe0\x52\x19\x5e\x74\xb0\x2c\xfa\xca\x32\xf1\x7f\x55\x09\x22\x0f\x08" +
	"\x4c\x9f\xd6\x63\x31\x7c\xfb\xdf\xb1\x51\xbc\x4e\xe8\xeb\xe0\x20\x6f\x28\xab\xde\x8a\x15\xf6\xc9\x08\x22\x8f\xc5" +
	"\x16\xbb\x41\x85\x15\x98\x2f\x30\x5f\xde\x68\x29\xe6\x9b\xc2\x5f\x19\x5e\x84\x80\xff\x02\x5c\x56\xe9\xf7\x68\xf8" +
	"\xef\x5e\x4d\xcf\x4e\xc0\x65\x5d\x7e\x2c\x21\x64\xc9\x3c\x43\xfb\x96\xcb\xce\x02\xc7\xb2\x2d\x83\xfa\x42\x36\x02" +
	"\x80\xc9\xea\x1c\x4c\xd6\x51\xad\xaa\xe9\x52\x57\xaa\xc2\x01\x44\xd6\x13\x82\xc8\x2a\xf6\x05\xcf\x6d\x5e\x5c\x93" +
	"\x44\x74\x54\xbb\x53\x1b\x5c\xb7\xc2\x6c\x80\xef\xb6\x50\x07\xbe\xdb\x9d\xfb\x6e\x9b\x21\xe4\x37\xea\xbd\x6d\x02" +
	"\x92\xdf\xbd\x03\xb7\x19\xd6\x79\xb7\x3e\xdc\xf6\xcb\x07\x6e\xdc\xe2\x6f\x5d\xf3\x0b\x9e\xdc\x15\x3d\xb9\xc9\x85" +
	"\x1c\xee\x9a\x61\xa2\x5c\xe7\xfd\xb7\x60\x36\x2d\xfe\xc0\x7f\xdb\x66\xe4\xe0\xbf\x4d\xfd\xb7\x41\xe4\xec\xe7\xee" +
	"\x52\x71\xfb\x77\xd1\x11\xbb\x79\x4f\x6b\xf3\x49\xb3\x21\x5f\x6b\x93\x08\x06\x16\xff\x76\xc3\x04\x8b\x7f\x8d\xbb" +
	"\x35\x21\x32\x30\xf9\x43\xec\x57\xe9\xf7\x68\x4c\xfe\x9b\x55\x31\x81\x07\x03\x0f\xe6\x8d\x56\xf2\xba\x02\x17\x06" +
	"\xc7\xab\xac\xcd\xa3\xe1\xc2\x7b\x35\x3d\xbb\xe0\x78\xe5\x99\x5f\x9a\x7c\xaf\xe0\x69\xcd\x6b\xbb\xe9\x69\x55\x38" +
	"\xfe\x72\x75\xb2\xa3\x2e\x49\xf0\xb6\x16\x3a\x6e\xde\xdb\xba\x27\x79\x75\x01\x0c\xb9\x02\x9a\xab\x05\xc6\x9c\x38" +
	"\xf8\xb7\x0c\x72\x55\x3f\x2e\x56\x86\xf7\x9c\x87\x98\xd8\xbf\x29\xf6\x92\x80\x18\x6b\x21\x71\x3c\x1b\x87\x96\x3b" +
	"\x5b\x0e\x5e\x75\x2d\x68\xe6\x35\x00\x71\x99\x71\x2a\x6d\xd3\x44\x94\x3b\x44\x34\x57\xa7\xeb\x14\xdf\xbe\x16\xe0" +
	"\xf1\xb7\x4a\x24\x8a\x96\xc0\xe3\xae\x04\x30\x76\x7b\x88\xe3\x8b\xcc\x17\x00\x83\xe7\xbf\x0a\xcd\x6f\x68\x4f\x5a" +
	"\xf5\xdb\xd1\x7a\x60\x3b\x71\x21\x68\xfb\x0d\xed\xd7\x12\xd0\xd3\xb2\x7b\x56\x01\x53\xb4\xdb\x7d\xbb\xe2\xec\xc2" +
	"\xee\xce\x7f\x5b\xd9\xdd\xe7\x42\x90\x0a\x2a\x6e\x6f\x69\x1e\xaf\xef\x26\x13\x2c\x33\x7d\x34\x5a\xb8\x76\xc8\x08" +
	"\x0a\x76\x88\xf6\xf4\x99\xd8\x28\xe4\x64\x1e\xb7\xe1\x25\x6a\x2e\x21\x12\x71\x89\x4b\x48\xd5\x90\x8c\x49\xc8\xe0" +
	"\x83\x32\xd6\x20\xed\x9a\x72\x06\x69\xcf\xed\xb1\x85\x2d\xcf\x35\xf0\x8c\xfc\xd7\xc4\x33\x5a\xf1\x84\x91\x53\x7b" +
	"\xe2\x8f\x9c\xe6\x13\x5f\x49\xff\x75\x1a\x5f\x46\xbf\x25\xbb\x5d\x2d\x25\x0b\xc3\x94\x19\xa0\x12\xb3\x1b\x33\x7a" +
	"\xc8\xad\x7c\x4d\x1f\x5f\xff\xf9\xa2\x5d\xaa\x66\x83\x49\x9e\xdf\x8a\x14\x53\xa2\x30\x68\xe2\x57\x56\xea\x90\x39" +
	"\x1b\xfe\x56\xd4\xef\xb8\x25\xb9\xa4\xd9\x4d\xb9\xf1\x4a\x73\xe9\x97\xbe\x5e\xb6\xce\x68\x21\x4d\x6a\x34\xe5\xe3" +
	"\x3c\xcb\xb8\x61\xf1\x86\xa5\x87\x26\xdb\x31\x33\xfe\x8b\xeb\xa4\x8d\x84\x18\x56\x5d\x0c\x6b\x3d\x12\x8b\xf4\xea" +
	"\xdc\x89\xb3\xa9\xe9\x62\xd1\xd1\x40\x6c\x25\xd8\xa2\x86\x42\x89\x5e\x32\x7d\x7e\x2a\xcf\x8e\xe5\x90\x89\x8a\x0e" +
	"\xdb\x8d\x4a\x1c\xc2\xb1\x38\x04\x71\x54\xc3\x17\x62\x51\x95\xdb\x6b\x27\x42\xc9\xd1\xa0\xfc\x35\xca\x45\xfd\x93" +
	"\xb2\xc8\x38\xad\x64\x2f\x48\x8d\x91\x97\xc4\x47\x65\x90\xd2\x2c\x5f\x58\xd9\x1e\x59\x32\x52\x44\x2c\xae\x59\xc3" +
	"\x5f\x4c\xe2\xff\x51\xac\xb8\xcd\xec\x16\x47\x69\x36\x33\x4e\xc8\x7b\x08\x95\x1d\x0c\xfd\xe4\xf0\x39\xfc\x1c\x50" +
	"\x77\xcc\xda\xfc\xd5\x4f\xba\xe4\xd4\xa7\x61\xd7\xa5\x21\x4e\x57\x65\x09\x2b\xc6\x75\x64\xd9\xe1\x6b\x57\x9a\xa1" +
	"\x4d\x08\x3c\xff\xc9\xc7\x53\xec\x62\x31\xf4\x1c\x21\x8d\xb8\x2c\x9b\x9c\xe2\xa0\xae\x09\xdc\xd3\x2c\x83\xba\x17" +
	"\x69\x04\x26\x4b\x6c\x3a\xe8\xa1\xa1\xae\xf7\xd0\x70\x34\xea\x21\x5d\xf4\x63\x68\x3c\x10\x63\x8c\xf4\x81\x78\x52" +
	"\xa5\x3c\xf5\x3c\x9f\x1a\xf4\x4f\x74\x6e\x13\x3f\x94\xe8\xfc\xf1\xf1\xcf\x3e\x5f\x72\xe4\x25\x0c\xc8\xc4\xc1\xfc" +
	"\x9a\x62\xdf\x5c\x94\x03\x11\xd3\x0a\xa5\x93\xa2\xcd\x5c\x12\x32\x27\x4b\xf9\x54\xe0\x46\xe3\x0f\x99\x29\xbb\x30" +
	"\x26\x1e\x2a\x7f\x54\x2a\x09\x89\x8f\x13\x91\x51\x1f\x8d\x4e\xce\x4e\x8f\x8f\xf5\xe1\x8b\xe3\x42\x2a\x34\x69\xf4" +
	"\x76\x21\x2b\x5e\xe1\x13\x3a\x97\xee\x6f\x50\x77\xce\x27\x37\x07\xaa\xc1\xea\x2d\xf2\xfd\x5d\xf0\x7d\xd5\xff\x1f" +
	"\xcb\x24\x28\x4d\xb5\xf8\xeb\xf5\x67\x62\x08\xe4\xb1\x4c\x6e\xbf\x95\x11\x38\x4c\x12\x18\xbe\xe5\xa5\xaa\x80\x70" +
	"\xc7\x63\x13\x00\x1d\x12\x28\x8e\x9a\xcb\x1e\xcd\xeb\x52\x0d\xe3\xef\x1c\x40\x87\xf8\xbd\x00\xd0\x21\x1f\xba\x32" +
	"\x5c\xfe\x31\xe6\xc5\xde\x75\xaa\xf4\x1c\x6e\x4b\xba\xaa\x6b\x04\xe8\x30\x89\x31\x5b\x1d\x76\x01\x88\xe3\x41\xe5" +
	"\xd1\xdf\x06\x6e\x0b\x90\xc4\xf6\xf1\xfb\x05\x23\x13\x90\x09\x90\x49\x3d\x99\x00\x85\x00\x85\x94\x81\xfb\x1f\x08" +
	"\x59\x94\x8d\x31\x00\xe6\xb3\x1b\x56\x82\x14\xae\xd8\xce\xc1\xfa\x5c\xfa\x34\xd6\xec\xd1\x7e\x16\x30\x22\x8d\x8a" +
	"\x05\x7a\x29\x76\x5a\xb3\xd0\xba\x06\x91\x64\x2b\xa4\x42\x4d\xe0\x27\x3b\x38\x78\xba\x4f\x19\x19\xd0\x2f\xd0\xc7" +
	"\xb6\xe9\x23\x73\xb7\x77\x9f\x4a\x00\x5d\x70\x57\x78\xa5\xab\xd1\xc6\x36\x90\x27\x2f\xf9\xb5\x25\x20\x8c\x6d\x9e" +
	"\x2c\xaa\x29\xef\x16\xdb\x78\x52\x44\x01\xc0\x93\x00\x3c\xb9\xb6\x61\x3e\x55\xe0\xc9\x2c\xe9\x0f\x0e\x50\xe9\x0e" +
	"\x6a\x0f\xa9\x0c\xc2\x71\xd3\xec\x0f\x69\x33\xfe\xb0\xb2\x7a\x5f\x4c\x2a\x12\xd7\x7b\xd4\xec\x21\x96\x02\x29\x2d" +
	"\x89\xff\xe8\xb1\x4b\xaf\xf1\x77\xc4\xed\x73\x17\x56\x3d\x3c\x66\x21\x8e\x72\x99\x8b\xb3\xbc\x81\x1b\xb0\xfa\xec" +
	"\x12\x6c\x5d\xd8\x65\x4f\x15\x6b\xd9\x2b\xbd\xbb\x97\x4f\x2f\x5b\xc2\xf4\x6e\x2d\x32\x49\x60\xf0\x04\x20\x48\x97" +
	"\xad\x12\xe0\x7a\x96\xbb\xc1\x95\xda\xb4\x57\x15\xd7\x33\x53\x27\x3b\x05\xee\xb9\x5a\xd4\xca\x46\xc2\x52\xc4\xd2" +
	"\x3b\x79\xb0\x4a\xcb\xb0\x94\x4a\xf4\x51\xf7\xc2\x52\xc4\xf0\x28\x08\x4b\x91\x0f\xfd\x49\x49\xcd\xbb\x56\xa5\x2c" +
	"\x37\x3d\xbe\xbb\xef\x1f\xe2\xd9\x03\x10\xdb\xbd\x40\x23\xdb\xb5\xc3\xa4\x79\xea\x94\xb7\xdf\xd7\xa9\xbd\x65\xb7" +
	"\xec\x57\xa1\x96\x8b\xcb\x8f\xe8\x82\xfa\xf2\xd1\x02\xad\x14\x3b\xe5\xb4\x22\x84\x85\x2e\x45\x2b\x86\x17\x4d\x0c" +
	"\xd5\xd4\x77\xcb\x7a\x07\x96\xdd\x87\x19\xef\x06\xe6\x3b\x79\x6b\x30\xdf\x81\xf9\x4e\xd6\x11\xcc\x77\x59\xa3\x0d" +
	"\x9a\xef\x9e\xd5\x1b\xc6\x54\x0e\x2d\xb0\x2f\x95\xbb\x81\x7d\x29\xed\x55\xb5\x2f\xc5\xe2\x4a\xa7\x4c\x4b\x3b\xbe" +
	"\x48\x76\x52\x2a\x94\x5a\x86\x4e\x04\x03\x50\xe3\x3d\xb2\xec\x1e\x28\xc3\xfd\x95\xa1\x83\xd1\x29\xba\x90\xaa\xcd" +
	"\xcb\xdc\x2b\x03\xe4\x21\xe9\xda\x9e\xd6\xae\x6d\x03\xf0\xd0\x59\xb5\x10\x70\x87\xf2\x3a\xc0\x1d\x52\xed\x8a\xad" +
	"\xe1\x0e\x35\x01\x8b\x6f\x14\x75\xa8\x16\x5e\x7c\xf7\x90\x43\x0d\x10\xbc\xbb\xc5\x1b\x8a\x07\x07\x60\x43\x1b\x02" +
	"\x1b\xaa\x9d\x5c\x40\x1a\x5a\x11\x69\xc8\xf0\xa2\x04\x67\x24\x20\x06\x75\xcd\x60\x92\xb3\xd2\xce\x63\x0e\x01\x6e" +
	"\x40\xf1\x07\x98\x43\x6d\x46\x0e\x98\x43\xa9\xa1\x4b\x1f\x0c\x06\xe8\x19\xcb\x96\x9f\xed\xd5\x49\xba\x9f\x27\x65" +
	"\xcc\xa0\x71\xfe\xa7\xc8\x31\x98\xe8\x38\x0e\x22\x67\xe2\xe3\x90\x14\xa0\x8a\xfe\xee\x0c\x56\x51\x03\x18\xc1\xe6" +
	"\xa1\x8c\x9a\x64\xbb\x0d\x01\x19\xd5\x4a\x75\x80\xa0\xd1\x6d\xcb\x65\xc7\x11\x34\x38\x8a\x91\xe1\x45\xdb\xc1\xce" +
	"\x28\x85\x00\x76\x12\x40\x03\x20\x10\x8b\xbf\x47\x63\x8d\xdd\xa0\xda\x0a\x1c\x18\x38\x30\x6f\xb4\x12\x86\x91\xe1" +
	"\x45\x5b\x02\x30\xea\x3e\x13\x06\x14\xa3\xe2\xef\xd1\x30\xe1\xbd\x9a\x9e\x5d\x40\x31\xba\xb8\xfc\xd8\x04\x61\x84" +
	"\xf6\x2d\x97\x1d\x08\x8e\x65\x5b\x06\xf5\x85\xd4\x04\x00\x6a\xd4\x39\x50\xa3\xa3\x5a\xa5\xd3\xa5\xae\x54\x99\x03" +
	"\x40\xa3\x27\x04\x68\x54\xec\x0b\x4e\xdc\xbc\xb8\x26\xa3\xe8\xa8\x76\xa7\x36\x78\x71\x85\xd9\x00\x37\x6e\xa1\x0e" +
	"\xdc\xb8\x3b\x77\xe3\x36\xa3\x96\x6f\xd4\x91\xdb\x84\x5d\xbe\x7b\x5f\x6e\x33\xb6\xef\x6e\xdd\xb9\xed\x97\x0f\x3c" +
	"\xba\xc5\xdf\xba\xe6\x17\x9c\xba\x2b\x3a\x75\x93\x7b\x39\xdc\x4b\xc3\x44\xb9\xce\xbb\x72\xc1\x76\x5a\xfc\x81\x2b" +
	"\xb7\xcd\xc8\xc1\x95\x9b\xba\x72\x83\xc8\xd9\xcf\x1d\xa7\xe2\xf6\xef\xa4\x4f\x76\xf3\x4e\xd7\xe6\xa3\x66\x43\x6e" +
	"\xd7\x26\x19\x0c\xec\xfe\xed\x86\x09\x76\xff\x1a\xcf\x6b\x42\x64\x60\xf8\x87\x60\x30\xf1\xf7\x68\x0c\xff\x9b\x55" +
	"\x34\x81\x11\x03\x23\xe6\x8d\x56\x72\xc0\x02\x2b\x46\xe0\x83\x7d\xf4\xac\x78\xaf\xa6\x67\x17\x7c\xb0\x3c\x17\x4c" +
	"\x93\x1b\x16\x9c\xae\x79\x6d\x37\x9d\xae\x0a\x1f\x60\xae\x58\x76\xd4\x3b\x09\x8e\xd7\x42\xc7\xcd\x3b\x5e\xf7\x24" +
	"\xaf\x2e\x60\x65\x57\xf0\x75\xb5\xc0\x98\x13\x07\xff\x96\x21\xb2\xea\xc7\xc5\xca\xf0\x9e\xf3\x10\x13\xfb\x37\xc5" +
	"\x5e\x12\x8c\x6b\x2d\x24\x8e\x67\xe3\xd0\x72\x67\xcb\x61\xb0\x02\xae\xfd\x02\x58\xeb\xea\x0c\x9f\xe2\xdb\xd7\x01" +
	"\x4a\xff\x56\x89\x60\xd1\x0e\x9a\xde\x95\x80\xce\x6e\x0f\x99\x7e\x91\xd9\x02\x58\xf9\xfc\xd7\x04\x2b\x0f\x5b\x76" +
	"\x35\x22\x2c\xe8\x3a\x6a\x12\xad\xa8\x36\x9b\xd9\xdf\x25\x40\xa9\x25\xf7\xb8\x02\x0d\x69\xb7\xfb\x7c\x3d\x53\x0c" +
	"\x4c\x21\xff\x75\x81\x29\x28\x18\x40\x97\xb6\x7b\xc1\x78\xb1\x30\x01\x26\xf6\x0d\x39\x39\x27\x4d\x79\x61\xdc\x7c" +
	"\x33\x1c\x41\x86\x49\xd4\x8e\x0f\x48\x7b\x6e\x8f\x09\xec\x72\xe2\x81\x4f\xe4\xbf\x26\x3e\xd1\x8a\x0f\x8c\x9c\x5a" +
	"\x36\x30\x72\x9a\x59\x80\x72\x33\xd4\xe9\x8e\x19\x31\x97\x2c\x80\xb5\x64\x2d\x0c\x53\x66\xca\x4a\x0c\x78\xcc\x7c" +
	"\x22\xb7\x17\x36\x7d\x7c\xfd\xe7\x8b\x16\xae\x9a\xdd\x26\x79\x7e\x2b\x52\x4c\x89\xc2\xa0\x89\xaf\x5a\xa9\x8d\xe6" +
	"\xf2\xd8\xb7\xa2\xa6\xc8\x0d\xd3\x25\x1d\x71\xca\xcd\x60\x9a\x4b\xbf\xf4\xf5\xb2\x9d\x47\x0b\x69\x52\xa3\x29\x1f" +
	"\xe7\x59\xc6\x0d\x0b\x62\x2c\x3d\x34\xd9\x8e\x99\x2f\x41\x5c\x27\x6d\x24\x04\xc6\xea\x62\xac\xec\x91\x58\xa4\x57" +
	"\xe7\x4e\x9c\x4d\x4d\x17\x8b\x8e\x06\x62\x2b\xc1\xaa\x35\x14\x4a\xf4\x92\x11\xf5\x53\x79\x76\x2c\x87\x4c\x54\x74" +
	"\xd8\x6e\x54\xe2\x10\x8e\xc5\x21\x88\xa3\x1a\xbe\x10\x8b\xaa\xac\x5f\x3b\x11\x4a\x8e\x06\xe5\xaf\x51\x2e\xea\x9f" +
	"\x94\x85\xdb\x69\x25\xcb\x43\x76\xb5\x84\x9f\x07\xfd\xff\xb1\x4c\x82\xb2\x34\x64\x65\xa3\x66\xc9\xd2\x11\xb1\x38" +
	"\x69\x0d\x7f\x31\xff\xf8\x52\x54\x63\xb5\xdb\xcc\xf8\x31\x4c\x13\x69\x71\x1a\xde\x43\xa8\xec\xaa\xe8\x67\x27\xc7" +
	"\xe1\xe7\x80\xba\x63\xd6\xea\xaf\x7e\xd2\x29\x27\x3d\x0d\xbb\x2e\x0d\x71\xba\x24\x4b\x18\x43\xae\x23\xcb\x0e\x5f" +
	"\xbb\xd2\xd4\x6f\x42\x28\xfb\x4f\x3e\x9e\x62\x17\x8b\xc1\xec\x08\x69\xc4\x65\x69\xea\x14\x47\x76\x4d\x28\xa0\x66" +
	"\x19\xd4\xbd\x48\x63\x3a\x59\xc6\xd4\x41\x0f\x0d\x75\xbd\x87\x86\xa3\x51\x0f\xe9\xa2\x3b\x44\xe3\x91\x1d\x63\xa4" +
	"\x0f\xc4\x63\x2a\x65\xa8\xe7\xf9\xd4\xa0\x7f\xa2\x73\x9b\xf8\xa1\xc4\x36\x10\x0b\x02\xec\xf3\x25\xe7\x5d\xc2\x7d" +
	"\x4c\x1c\xcc\xaf\x29\xf6\xcd\x45\xd9\x0f\x31\xad\x50\x3a\x29\xda\xcc\x25\x21\xf3\xd5\x94\x8f\x04\x6e\x7b\xfe\x90" +
	"\x59\xc4\x0b\x63\xe2\xc1\xf7\x47\x7a\xb1\x24\x24\x3e\x4e\x24\x49\x7d\x34\x3a\x39\x3b\x3d\x3e\x1e\x9e\x9d\x9c\x14" +
	"\x00\x1b\xa4\xf1\xe0\x85\x74\x7b\x85\x4f\xe8\x5c\x1e\xc1\x41\xdd\x21\x9f\xdc\x45\xa8\x86\xbf\xb7\x48\x24\x98\xa6" +
	"\x6d\xfc\xf5\xfa\x33\x31\x04\x8a\x58\x26\x57\xe0\xca\x68\x1e\x26\x09\x0c\xdf\xf2\x52\xa5\x40\xb8\x28\xb2\x09\xb0" +
	"\x0f\x09\xac\x47\xcd\x8d\x91\xe6\xa5\xa8\xde\x05\xe8\x1c\xd8\x87\x78\x71\x06\xc0\x3e\xe4\x43\x57\xc6\xdc\x3f\xc6" +
	"\x1c\xdb\xbb\x4e\xbb\x9e\x03\x78\x49\x57\x75\x8d\x60\x1f\x26\x31\x66\xab\x43\x38\x00\x71\x3c\xa8\x9c\xfc\xdb\xc0" +
	"\x80\x01\x92\xd8\x22\x49\xa8\x2c\x4c\x40\x26\x40\x26\xf5\x64\x02\x14\x02\x14\x52\x02\x6c\x36\x1f\x08\x59\x94\x5c" +
	"\x86\x00\x0c\xb4\x23\x56\x82\x14\x5e\xd7\xce\x41\x04\x5d\xfa\x34\xd6\xec\xd1\x7e\x16\x4a\x22\x8d\xa7\x05\x7a\x29" +
	"\x76\x5a\xb3\xd0\xba\x06\x91\x64\x2b\xa4\x42\x4d\xe0\x27\x3b\x38\x78\xba\x4f\x19\x19\x68\x30\xd0\xc7\xb6\xe9\x23" +
	"\xf3\xb5\x77\x9f\x4a\x00\xa9\x70\x57\xd8\xa7\xab\xd1\xc6\x36\x50\x2c\x2f\xf9\xad\x27\x20\x8c\x6d\x9e\x2c\xaa\x29" +
	"\xef\x16\xdb\x78\x52\x44\x01\x20\x96\x00\x62\xb9\xb6\x61\x3e\x55\x10\xcb\x2c\x73\x10\x0e\x50\xe9\x0a\x6b\x0f\xa9" +
	"\x0c\xc2\x71\xd3\xec\x0f\x69\x33\xfe\xb0\xb2\x7a\x5f\x4c\x4c\x12\xd7\x7b\xd4\xec\x21\x96\x47\x29\x2d\x89\xff\xe8" +
	"\xb1\x3b\xb3\xf1\x77\xc4\xed\x73\x17\x56\x3d\xd4\x66\x21\x88\x72\xe5\x7b\xb7\xd9\xf5\xd9\xba\x98\xcb\x9e\x2a\xc2" +
	"\xb2\x57\x7a\x77\x2f\x9f\x5e\xb6\x84\xe9\xad\x5c\x64\x92\xc0\xe0\x49\x44\x90\x2e\x5b\x25\xc0\x08\x2d\x77\x83\xcb" +
	"\xb8\x69\xaf\x6a\xb0\x49\xa6\x4e\x76\x0a\x28\x74\xb5\xa8\x95\x8d\x84\xa5\x88\xa5\x77\xf2\x60\x95\x96\x61\x29\x95" +
	"\x80\xa3\xee\x85\xa5\x88\x11\x51\x10\x96\x22\x1f\xfa\x93\x92\x9a\x77\xad\x4a\x59\x6e\x7a\x7c\x77\xdf\x3f\xc4\xf3" +
	"\x0e\x20\xb6\x7b\x81\x46\xb6\x6b\x87\x49\x93\xdd\x29\xef\xcd\xaf\x53\x7b\xcb\xee\xe7\xaf\x42\x2d\x17\x97\x1f\xd1" +
	"\x05\xf5\xe5\xa3\x05\x5a\x29\x76\xca\x69\x45\x08\x0b\x5d\x8a\x56\x0c\x2f\x9a\x18\xaa\xa9\xef\x96\xf5\x0e\x2c\xbb" +
	"\x0f\x33\xde\x0d\xcc\x77\xf2\xd6\x60\xbe\x03\xf3\x9d\xac\x23\x98\xef\xb2\x46\x1b\x34\xdf\x3d\xab\x37\x8c\xa9\x1c" +
	"\x5a\x60\x5f\x2a\x77\x03\xfb\x52\xda\xab\x6a\x5f\x8a\xc5\x95\x4e\x99\x96\x76\x7c\x77\xec\xa4\x54\x28\xb5\x0c\x9d" +
	"\x08\x06\xa0\xc6\xab\x63\xd9\xe5\x4f\x06\x23\x2c\x83\x18\xa3\x53\xa4\x4a\x60\xb4\xcc\xcd\x32\x00\x30\x92\xae\xee" +
	"\x69\xed\xea\x36\xe0\x17\x9d\x55\x0b\x01\xbe\x28\xaf\x03\xf8\x22\xd5\xae\xd8\x1a\x7c\x51\x13\x52\xf9\x46\xc1\x8b" +
	"\x6a\xf1\xca\x77\x8f\x5c\xd4\x00\xe7\xbb\x5b\xd8\xa2\x78\x70\x80\x59\xb4\x21\xcc\xa2\xda\xc9\x05\xc0\xa2\x15\x01" +
	"\x8b\x0c\x2f\x4a\xe0\x4a\x02\x62\x50\xd7\x0c\x26\x39\x2b\xed\x3c\x74\x11\x00\x0f\x14\x7f\x00\x5d\xd4\x66\xe4\x00" +
	"\x5d\x94\x9a\xba\xf4\xc1\x60\x80\x9e\xb1\x74\xfb\xd9\x5e\x9d\xa4\xfb\x79\x52\x46\x1e\x1a\xe7\x7f\x8a\x1c\x83\x89" +
	"\x8e\xe3\x20\x72\x26\x3e\x0e\x49\x27\x11\x8f\x1a\xd0\x0c\x36\x0f\x88\xd4\x24\xdb\x6d\x08\x0e\xa9\x56\xaa\x03\x08" +
	"\x8e\x6e\xdb\x2e\x3b\x0e\xc1\xc1\xb1\x90\x0c\x2f\x02\xf0\x0d\x40\x52\x14\x7f\x8f\xc6\x1e\xbb\x41\xb5\x15\x38\x30" +
	"\x70\x60\xde\x68\x25\x10\x24\xc3\x8b\x00\x01\x09\x10\x90\x24\xbf\x47\xc3\x84\xf7\x6a\x7a\x76\x01\x01\xe9\xe2\xf2" +
	"\x63\x13\xfc\x11\xda\xb7\x5c\x76\x20\x38\x96\x6d\x19\xd4\x17\x92\x13\x00\x20\x52\xe7\x00\x91\x8e\x6a\x95\x4e\x97" +
	"\xba\x52\x65\x0e\xc0\x90\x9e\x10\x18\x52\xb1\x2f\x38\x71\xf3\xe2\x9a\x9c\xa2\xa3\xda\x9d\xda\xe0\xc5\x15\x66\x03" +
	"\xdc\xb8\x85\x3a\x70\xe3\xee\xdc\x8d\xdb\x8c\x7d\xbe\x51\x47\x6e\x13\x02\xfa\xee\x7d\xb9\xcd\xe0\xc0\xbb\x75\xe7" +
	"\xb6\x5f\x3e\xf0\xe8\x16\x7f\xeb\x9a\x5f\x70\xea\xae\xe8\xd4\x4d\x6e\xe6\x70\x2f\x0d\x13\xe5\x3a\xef\xca\x05\xdb" +
	"\x69\xf1\x07\xae\xdc\x36\x23\x07\x57\x6e\xea\xca\x0d\x22\x67\x3f\x77\x9c\x8a\xdb\xbf\x93\x3e\xd9\xcd\x3b\x5d\x9b" +
	"\x8f\x9a\x0d\xb9\x5d\x9b\x64\x30\xb0\xfb\xb7\x1b\x26\xd8\xfd\x6b\x3c\xaf\x09\x91\x81\xe1\x1f\x82\xc1\xc4\xdf\xa3" +
	"\x31\xfc\x6f\x56\xd1\x04\x46\x0c\x8c\x98\x37\x5a\xc9\x01\x0b\xac\x18\x81\x0f\xf6\xd1\xb3\xe2\xbd\x9a\x9e\x5d\xf0" +
	"\xc1\xf2\x6c\x30\x4d\x6e\x58\x70\xba\xe6\xb5\xdd\x74\xba\x2a\x7c\x80\xb9\x62\xd9\x51\xef\x24\x38\x5e\x0b\x1d\x37" +
	"\xef\x78\xdd\x93\xbc\xba\x80\x8e\x5d\x41\xd4\xd5\x02\x63\x4e\x1c\xfc\x5b\x06\xc4\xaa\x1f\x17\x2b\xc3\x7b\xce\x43" +
	"\x4c\xec\xdf\x14\x7b\x49\x50\xad\xb5\x90\x38\x9e\x8d\x43\xcb\x9d\x2d\x07\xbc\xba\x16\xf4\xfa\x1a\xe8\xb8\xcc\x4e" +
	"\x95\xb6\x69\x22\xca\x1d\x42\xd8\xab\x53\x78\x8a\x6f\x4f\x84\x41\x91\xdf\x96\x20\xe7\xe5\x74\x95\x61\xce\xab\x2e" +
	"\x69\x17\x90\xe7\xe5\x4f\x48\xc1\x65\x5d\x09\x94\xec\xf6\x90\xe7\x17\x99\x2f\x40\x8a\xcf\x7f\x4d\x48\xf1\x6b\xd9" +
	"\x93\xe7\x82\x47\x1b\x15\xf7\xa3\x34\xfb\xcf\x77\x93\x09\x96\x69\x48\x8d\x8a\x70\xb7\x36\x6d\x41\x99\x51\x93\x68" +
	"\x45\x77\x51\xee\x70\x91\x5c\x4b\x3b\x5c\x2a\x92\x64\x1b\xbc\x84\x19\xa5\xde\xe4\xd2\x87\xa4\x7b\x5c\x01\x78\xb4" +
	"\xdb\x7d\xbe\x9e\x29\x06\xa6\x90\xff\xba\xc0\x14\x14\x0c\xa0\x4b\xdb\xbd\x60\x9d\x58\x98\x00\x13\x03\x86\x9c\x9c" +
	"\x93\xa6\xbc\x30\x6e\xbe\x19\x8e\x20\x83\x1d\x6a\xc7\x07\xa4\x3d\xb7\xc7\x04\x76\x39\xf1\xc0\x27\xf2\x5f\x13\x9f" +
	"\x68\xc5\x07\x46\x4e\x2d\x1b\x18\x39\xcd\x2c\x40\xb9\x19\xea\x94\xc3\x8c\x98\x4b\x26\xbe\x5a\xb2\x16\x86\x29\xb3" +
	"\x55\x25\x16\x3a\x66\x1f\x91\x1b\x04\x9b\x3e\xbe\xfe\xf3\x45\x13\x56\xcd\x6e\x93\x3c\xbf\x15\x29\xa6\x44\x61\xd0" +
	"\xc4\x19\xad\x54\x37\x73\x79\xec\x5b\x51\x15\xe4\x96\xe7\x92\x12\x38\xe5\x76\x2e\xcd\xa5\x5f\xfa\x7a\xd9\x90\xa3" +
	"\x85\x34\xa9\xd1\x94\x8f\xf3\x2c\xe3\x86\x45\x29\x96\x1e\x9a\x6c\xc7\xcc\x59\x20\xae\x93\x36\x12\x22\x5f\x75\x31" +
	"\x18\xf6\x48\x2c\xd2\xab\x73\x27\xce\xa6\xa6\x8b\x45\x47\x03\xb1\x95\x60\xb6\x1a\x0a\x25\x7a\xc9\x4a\xfa\xa9\x3c" +
	"\x3b\x96\x43\x26\x2a\x3a\x6c\x37\x2a\x71\x08\xc7\xe2\x10\xc4\x51\x0d\x5f\x88\x45\x55\xd6\xaf\x9d\x08\x25\x47\x83" +
	"\xf2\xd7\x28\x17\xf5\x4f\xca\xe2\xe9\xb4\x92\x69\x21\xb5\x5b\x5e\x26\x58\x73\x1c\xbc\x23\x4b\x35\x56\x36\x5b\x96" +
	"\x6c\x19\x11\x8b\x84\xd6\xf0\x17\x13\x07\xe6\x1f\x5f\x8a\xba\xac\x76\x9b\x59\x38\x86\x69\x96\xfc\x98\x8e\x4d\x1c" +
	"\xcc\xaf\x29\xf6\x4d\xcf\xa7\xb7\x96\x49\xfc\xe0\xf0\x1e\x3b\xf6\x18\xfd\xd5\x67\xad\xb0\x67\x25\xb6\x91\x34\xbb" +
	"\x7e\xd6\x70\xcc\xfe\xec\x23\xd3\x0a\xf0\xb5\x4d\x5e\x11\x9b\x70\xff\x5a\x91\x53\x12\xd3\x62\x99\xe2\x4a\x66\xb0" +
	"\x29\xb5\x4d\xe2\x8f\xd3\x93\x2f\x29\x65\x09\x05\x2a\x65\xc9\xaa\x8f\xb3\xef\xf0\x70\x38\x1f\xa3\xe7\xb7\xd8\x7f" +
	"\x6e\x5b\xd7\xcf\x67\x3e\x9e\x62\x17\x3f\xcf\x3e\x23\x78\x5e\x79\x80\x3f\x7b\x6d\xe6\xc0\x00\xf1\xc6\x1e\xa3\xa9" +
	"\x65\x93\xbd\xff\x1f\x00\x00\xff\xff\xd0\x0b\x2f\x77\xc2\x2e\x03\x00")

func bindataConfigMapDashboardsconfigyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataConfigMapDashboardsconfigyaml,
		"ConfigMap/dashboards-config.yaml",
	)
}



func bindataConfigMapDashboardsconfigyaml() (*asset, error) {
	bytes, err := bindataConfigMapDashboardsconfigyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ConfigMap/dashboards-config.yaml",
		size: 208578,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1558937083, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataConfigMapGrafanadatasourcesyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4f\x6f\xdb\x3e\x0c\xbd\xe7\x53\xf0\xa7\x16\xc8\xa5\x89\x9a\xcb" +
	"\x0f\xad\x80\x1d\xd6\xf5\xb0\x0d\xd8\x1f\x60\x40\x2f\xc3\xb0\x32\x32\x1d\x6b\xb1\x25\x83\x94\xd3\x66\x5d\xbf\xfb" +
	"\x20\xb9\x4d\xb2\xc6\xc8\xb0\xad\x3e\x24\x96\xf8\xde\xa3\x48\x3e\x0b\x5b\x77\x45\x2c\x2e\x78\x03\xab\xd9\x68\xe9" +
	"\x7c\x61\xe0\x55\xf0\xa5\x5b\xbc\xc3\x76\xd4\x50\xc4\x02\x23\x9a\x11\x80\xc7\x86\x0c\x2c\x18\x4b\xf4\x38\x49\xbb" +
	"\x12\x3a\xb6\x24\x0f\x31\x69\xd1\x92\x81\x92\x0a\x62\x8c\x81\xd1\x8d\x1e\xa9\x0b\x8a\x31\x2c\xc9\x4f\xa5\x32\xf0" +
	"\x63\x32\x02\x00\x38\xfa\x4f\x77\xc2\x7a\xee\xbc\x26\xbf\x02\xa9\xfa\xdd\x9b\xca\xd5\xd4\xbf\x16\x21\xff\xaf\xb0" +
	"\xee\xe8\xc5\xb5\xc5\x08\x7a\x85\xac\xb9\xf3\x5a\xc8\x32\x45\xd1\xcb\x6e\x4e\xec\x29\x92\x4c\x5d\xd0\x42\xbc\x72" +
	"\x96\xd0\xda\xd0\xf9\xa8\x73\xca\xeb\x1d\x0d\x75\x41\xc8\xc4\x70\x7c\x97\xd7\xf7\x2a\xc7\xc8\x56\x01\x8e\xf3\x4e" +
	"\x5e\xdb\x16\x60\xa7\x3a\xdd\x72\x68\x28\x56\xd4\xc9\x74\x8d\x4d\x0d\xa0\x29\x5a\xfd\xd0\x87\x14\x5d\xb9\xd4\x3f" +
	"\xe7\x17\xfa\x00\x2d\x4b\x0b\x15\x30\x71\x30\x16\xdd\x9f\x44\x8f\x55\x9f\x58\x8d\xf5\x62\xfc\x0f\xc2\xb9\x39\x7f" +
	"\xcd\x3e\x2a\x82\x4f\xb5\x3f\x89\x6d\x46\x75\x97\x7f\xd3\xa3\xb6\x7e\x51\x06\x66\x27\xdb\xc0\x4e\x0e\x65\xe0\xf3" +
	"\x26\xf0\x2b\x7f\x03\x4f\x86\x51\x06\xd4\x1b\x5f\xd6\xdd\xed\xe5\x85\x3a\x79\x0a\x01\xd8\x67\xc5\x75\x9b\x59\x2e" +
	"\xb3\x8a\xb9\x3a\xd9\xc7\xa0\xb5\x24\xe9\x0c\xaa\xe5\x70\xbb\x1e\x82\x74\x5c\xa7\x78\x15\x63\x2b\x46\x6b\xac\xb1" +
	"\xa1\x02\x27\x8f\xaa\xd3\x1d\x0b\x4f\x65\x65\xcd\xd9\xe9\xd9\xff\x43\x3a\x2d\x8a\xdc\x04\x2e\x92\x18\x16\x8d\xf3" +
	"\x69\x63\x30\xa1\x10\x6f\x40\x43\x80\xd4\xbd\x39\x4a\x2e\xee\xab\xf3\x91\xd8\x63\x3d\x04\x9c\xa3\x38\xfb\xb2\x8b" +
	"\x95\x32\x50\x62\x2d\x34\x80\x71\x72\x49\x25\x76\x75\x3c\x80\xf9\x26\xc1\x5f\x62\x44\x65\x06\xa6\x93\x3a\x5d\xcb" +
	"\xa7\xa5\x6b\xaf\x88\x5d\xb9\x56\x06\x22\x3f\x7c\x1d\xbb\xcf\xfd\x80\x30\x13\x16\x1f\x7c\xbd\x1e\xce\xfd\x84\x71" +
	"\xc0\x18\x1f\x37\x5e\x1c\x6a\xc3\xa3\x11\xda\x83\xa8\x3f\xb7\xc2\x56\x6f\xb2\x3c\x93\x69\x68\xc9\x4b\xe5\xca\x38" +
	"\x69\x82\x77\x31\xb0\xf3\x8b\xec\x88\xf3\xd3\xf3\xd9\x73\x8c\x27\xb5\xf5\x99\xa6\xb3\x2f\x03\x7d\x5d\xaf\x09\x0b" +
	"\xe2\xf7\xd8\xd0\x2c\x95\x9a\x4e\x17\xd8\x7d\xc7\x98\x3e\xe2\x7d\xd6\xd0\x50\x85\x6c\xc7\xf4\xf6\x37\xa7\xda\x26" +
	"\xbb\x4a\x77\x5a\xce\xd6\xdf\x73\xea\x39\xac\xb3\x59\x7d\xc9\x6f\xf7\xfd\x62\x34\xca\x17\xc5\xcf\x00\x00\x00\xff" +
	"\xff\x2c\xa5\x46\xcd\xc8\x06\x00\x00")

func bindataConfigMapGrafanadatasourcesyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataConfigMapGrafanadatasourcesyaml,
		"ConfigMap/grafana-datasources.yaml",
	)
}



func bindataConfigMapGrafanadatasourcesyaml() (*asset, error) {
	bytes, err := bindataConfigMapGrafanadatasourcesyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "ConfigMap/grafana-datasources.yaml",
		size: 1736,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1555988180, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAdmissioncontrollerdatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3b\x4e\x04\x41\x0c\x44\xf3\x3e\x85\x2f\x30\x48\x10\x76\x4a\x40" +
	"\x84\x40\x04\x43\x6c\xb9\x0b\x64\x6d\xff\xd6\xf6\xcc\xf9\x57\x2d\xcd\x86\xaf\xf4\xea\xf1\xd4\x1d\xe6\x3a\x7a\xa6" +
	"\xf3\x35\xdd\xb4\x97\x4c\xdf\x6b\xf1\x40\x8f\x7d\xd4\xa3\xe1\xbd\xb2\xb6\xd4\x10\x5c\x38\x38\x27\xa2\xce\x0d\x99" +
	"\xb8\x34\xf5\xf5\xdd\x64\xf4\xb0\x51\x2b\x6c\x5b\xca\xcb\x3c\xe5\xb2\x7c\xb2\x20\xd3\x1f\x0a\x8c\x63\x18\x6b\xf2" +
	"\x09\x59\x11\x16\x81\xfb\xe7\x28\xf0\x85\x44\x1b\xfd\x80\xcb\xaf\x69\xe0\xab\x0b\x12\x91\xc1\xc7\x61\xf2\x14\x0c" +
	"\xf7\x03\x1e\x17\x11\xf9\x0a\xfe\x23\xd3\xdb\x87\xd2\x23\x00\x00\xff\xff\x6f\xb5\x76\x7d\xcb\x00\x00\x00")

func bindataPersistentVolumeClaimAdmissioncontrollerdatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAdmissioncontrollerdatayaml,
		"PersistentVolumeClaim/admission-controller-data.yaml",
	)
}



func bindataPersistentVolumeClaimAdmissioncontrollerdatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAdmissioncontrollerdatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/admission-controller-data.yaml",
		size: 203,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAdmissioncontrollerlogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x31\x4e\x44\x31\x0c\x44\xfb\x9c\xc2\x17\xf8\x48\x50\xa6\xa5\xa0" +
	"\x42\x20\x8a\xa5\xb6\x9c\x61\x65\x91\xc4\xc1\xf6\xdf\xf3\xa3\x48\xbb\xe5\x1b\xbd\x79\xbc\xf4\x02\x0f\xb5\x59\xe9" +
	"\xf6\x5c\x7e\x75\xb6\x4a\x9f\x7b\x89\xc4\xcc\x8b\xf5\x73\xe0\xb5\xb3\x8e\x32\x90\xdc\x38\xb9\x16\xa2\xc9\x03\x95" +
	"\xb8\x0d\x8d\xfd\x3d\xc4\x66\xba\xf5\x0e\x3f\xba\x5d\x9f\xd6\x4d\xee\x52\x2c\x16\x54\xfa\x41\x83\x73\x9a\xb3\x96" +
	"\x58\x90\xdd\x60\x11\x44\xbc\x5b\x43\x6c\x24\x3a\xe8\x0b\xdc\xbe\x5d\x13\x1f\x53\x50\x88\x1c\x61\xa7\xcb\x43\x70" +
	"\xfc\x9d\x88\xbc\x13\x51\xec\xe0\x15\x95\x5e\xde\x94\xfe\x03\x00\x00\xff\xff\xcf\x90\x04\x04\xca\x00\x00\x00")

func bindataPersistentVolumeClaimAdmissioncontrollerlogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAdmissioncontrollerlogyaml,
		"PersistentVolumeClaim/admission-controller-log.yaml",
	)
}



func bindataPersistentVolumeClaimAdmissioncontrollerlogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAdmissioncontrollerlogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/admission-controller-log.yaml",
		size: 202,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaaidatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3d\x0e\xc2\x30\x14\x83\xf7\x9c\xe2\x5d\xa0\x48\x30\x66\x65\x60" +
	"\x42\x20\x86\x32\x5b\x89\x41\x4f\x34\x3f\xe4\xa5\x3d\x3f\x8a\x54\xc6\xcf\x9f\x6d\x54\x9d\xd9\x4c\x4b\xf6\xb2\x1d" +
	"\xdd\x47\x73\xf4\x72\x1f\x89\x75\xe6\x3e\x97\x65\x4d\x3c\x2f\xd0\xe4\x12\x3b\x22\x3a\xbc\x13\xc9\x48\xf4\x82\x05" +
	"\x89\x11\x13\x74\x1a\xe2\x50\xb7\xb0\x3b\xab\x08\xf4\xf2\x62\x64\x43\x2f\x0d\xea\xac\x32\x8c\x29\x42\xa0\xd9\xb5" +
	"\x44\xda\x40\x91\x49\x1e\x44\x7c\x36\xed\xbc\xe5\x40\x27\xd2\x68\x65\x6d\xe1\x5f\x68\xfc\xae\xb4\xbe\x93\x88\x8d" +
	"\xc3\x37\xbd\x9c\x2e\x2a\xbf\x00\x00\x00\xff\xff\x7a\x3d\x1c\x6c\xc1\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaaidatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaaidatayaml,
		"PersistentVolumeClaim/alameda-ai-data.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaaidatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaaidatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-ai-data.yaml",
		size: 193,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaailogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3b\x6e\xc3\x30\x10\x44\x7b\x9e\x62\x2f\xa0\x00\x49\xc9\x36\x45" +
	"\xaa\xc0\x86\x0b\xb9\x1e\x90\x63\x61\x61\xfe\xcc\xa5\x74\x7e\x83\x80\x5c\xbe\xf9\x3c\x34\x5d\xd9\x4d\x6b\xf1\x72" +
	"\x7c\xbb\xa7\x96\xe8\xe5\x3a\x13\x1b\x2c\x63\xad\x69\xcf\xfc\x4d\xd0\xec\x32\x07\x22\x06\xbc\x13\x29\xc8\xf4\x82" +
	"\x84\xcc\x88\x05\xba\xa4\xba\x7d\xb5\x23\x9c\x95\x35\x04\x7a\x79\x30\xb2\x63\xd4\x0e\x75\xd6\x18\xe6\x13\x21\xd0" +
	"\xec\xbf\x46\xda\x44\x91\x45\x6e\x44\xbc\x77\x1d\xbc\x94\x40\x27\xd2\x69\x75\xef\xe1\x33\xe8\x7c\xed\xb4\x71\x92" +
	"\x88\x4d\xe1\x46\x2f\x3f\x7f\x2a\xef\x00\x00\x00\xff\xff\x14\xd9\x87\x6f\xc0\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaailogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaailogyaml,
		"PersistentVolumeClaim/alameda-ai-log.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaailogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaailogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-ai-log.yaml",
		size: 192,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedadatahubdatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3b\xae\x02\x31\x10\x04\x73\x9f\xa2\x2f\xb0\x4f\x7a\x84\x4e\x09" +
	"\x88\x10\x88\x60\x89\x07\xbb\x01\x8b\xf5\x07\x8f\xbd\xe7\x47\x46\x4b\x34\xaa\x52\x4d\x4b\x09\x33\xab\x86\x9c\x2c" +
	"\xd6\x7f\xf3\x0a\xc9\x5b\x9c\x87\xd1\xc6\xd4\xe6\xbc\xf4\xc8\xfd\x22\x21\x9a\xc8\x26\x5e\x9a\x58\x03\x24\x89\xb4" +
	"\x90\x45\x22\xbd\x4c\xc3\x3e\xfb\xed\x7b\xff\xca\xea\xb6\x40\x8b\x38\x5a\xdc\xe9\x59\xa5\xe5\x2a\xc1\x68\xa1\x1b" +
	"\xff\xe2\x1c\x55\x8f\xd9\x53\x07\x02\x13\x2e\x14\x7f\xad\xa1\xf1\x94\x1c\x0d\x50\xa9\xb9\x57\xf7\x0b\x2a\xdf\x9d" +
	"\xda\x36\x02\x74\x0c\x3e\x68\xb1\x3b\x04\x7c\x02\x00\x00\xff\xff\x17\x75\x4a\xb4\xc6\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedadatahubdatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedadatahubdatayaml,
		"PersistentVolumeClaim/alameda-datahub-data.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedadatahubdatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedadatahubdatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-datahub-data.yaml",
		size: 198,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedadatahublogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3b\x6e\x02\x31\x14\x45\x7b\xaf\xe2\x6e\x60\x22\x25\xa5\xdb\x14" +
	"\xa9\x22\x10\xc5\x50\x3f\xec\xcb\x60\xe1\x1f\x7e\xf6\xac\x1f\x59\x1a\xca\x73\xee\x47\x6a\x58\xd9\x34\x94\x6c\xb1" +
	"\x7f\x9b\x67\xc8\xde\xe2\x3c\x8d\x76\xe6\xbe\x96\x38\x12\x7f\xa3\x84\x64\x12\xbb\x78\xe9\x62\x0d\x90\x25\xd1\x42" +
	"\xa2\x24\x7a\x59\xa6\x7d\x8c\xdb\x12\xcb\xf6\x55\x77\x77\xe4\x5a\xc5\xd1\xe2\x4e\xcf\x26\xbd\x34\x09\x46\x2b\xdd" +
	"\x9c\x8b\x73\x54\xfd\x2f\x9e\x3a\x11\x58\x70\xa1\xf8\x6b\x0b\x9d\xa7\xec\x68\x80\x46\x2d\xa3\xb9\x4f\xa1\xf1\x35" +
	"\xa8\xfd\x20\x40\xe7\xe1\x46\x8b\x9f\xbf\x80\x77\x00\x00\x00\xff\xff\xbc\x6e\xe4\x34\xc5\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedadatahublogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedadatahublogyaml,
		"PersistentVolumeClaim/alameda-datahub-log.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedadatahublogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedadatahublogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-datahub-log.yaml",
		size: 197,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaevictionerdatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x3d\x6a\x03\x41\x0c\xc5\xf1\x7e\x4e\xa1\x0b\x6c\x20\x29\xa7\x4d" +
	"\x91\x2a\x24\xb8\x58\xd7\x42\xf3\x6c\x84\x77\x3e\x2c\x69\xf7\xfc\x66\x60\x5d\xbe\xc7\x8f\x3f\x0f\x5d\x61\xae\xbd" +
	"\x65\x3a\x3e\xd3\x43\x5b\xc9\xf4\x3f\x1f\x0f\xb4\x58\xfb\xb6\x57\x7c\x6f\xac\x35\x55\x04\x17\x0e\xce\x89\xa8\x71" +
	"\x45\x26\xde\xb8\xa2\xf0\x82\x43\x25\xb4\x37\xd8\x32\xc1\xc7\x38\xe4\x34\x3e\x58\x90\xe9\x86\x02\xe3\xe8\xc6\x9a" +
	"\x7c\x40\x66\x82\x45\xe0\xfe\xdb\x0b\x7c\x4e\xa2\x85\x2e\xe0\x72\x35\x0d\xfc\x35\x41\x22\x32\x78\xdf\x4d\xde\xc0" +
	"\xf0\xdc\xe1\x71\x2e\x22\x9f\xc1\x3b\x32\x7d\xfd\x28\xbd\x02\x00\x00\xff\xff\x8f\x8f\x27\x58\xc9\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaevictionerdatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaevictionerdatayaml,
		"PersistentVolumeClaim/alameda-evictioner-data.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaevictionerdatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaevictionerdatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-evictioner-data.yaml",
		size: 201,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaevictionerlogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\xbd\x4a\x07\x41\x0c\x07\xfb\x7d\x8a\xbc\xc0\x09\x5a\x6e\x6b\x61" +
	"\x25\x8a\xc5\x59\x87\xec\xcf\x23\xb8\x5f\x26\xb9\x7b\x7e\x59\xb8\x7f\x39\xc3\x30\x3c\x75\x87\xb9\x8e\x9e\xe9\x7a" +
	"\x4e\xbf\xda\x4b\xa6\xcf\x65\x3c\xd0\x63\x1f\xf5\x6c\x78\xad\xac\x2d\x35\x04\x17\x0e\xce\x89\xa8\x73\x43\x26\xae" +
	"\xdc\x50\x78\xc3\xa5\x12\x3a\x3a\x6c\xab\xe3\x78\x9a\x97\xdc\x89\x4f\x16\x64\xfa\x41\x81\x71\x0c\x63\x4d\x3e\x21" +
	"\xeb\xc0\x22\x70\x7f\x1f\x05\xbe\x90\x68\xa3\x2f\x70\xf9\x36\x0d\x7c\x74\x41\x22\x32\xf8\x38\x4d\x1e\x81\xe1\xef" +
	"\x84\xc7\x4d\x44\xbe\x86\x07\x32\xbd\xbc\x29\xfd\x07\x00\x00\xff\xff\x7d\xd0\xec\x3a\xc8\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaevictionerlogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaevictionerlogyaml,
		"PersistentVolumeClaim/alameda-evictioner-log.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaevictionerlogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaevictionerlogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-evictioner-log.yaml",
		size: 200,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaoperatordatayaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3d\xce\xc2\x30\x10\x44\x7b\x9f\x62\x2e\x90\x4f\xfa\x28\xdd\x52" +
	"\x50\x21\x10\x45\xa8\x57\xf6\x80\x2c\xe2\x1f\xbc\x9b\x9c\x1f\x59\x84\x72\xe6\x3d\x3d\x69\x69\x66\xd7\x54\x8b\xc7" +
	"\xf6\xef\x5e\xa9\x44\x8f\xeb\x78\xd4\x58\x6c\xae\xcb\x9a\x79\x5c\x24\x65\x97\x69\x12\xc5\xc4\x3b\xa0\x48\xa6\x87" +
	"\x2c\x92\x19\x65\xaa\x8d\x5d\xac\xf6\x69\xe0\xbf\xb6\x85\xdd\xd0\x26\x81\x1e\x0f\xc6\x2f\x97\xe4\xb4\x31\x8c\x80" +
	"\x84\x40\xd5\x73\x8d\xd4\x31\x81\x09\x37\x4a\xbc\xf7\x64\xbc\x94\x40\x07\x74\x6a\x5d\x7b\xf8\x09\x9d\xef\x95\x6a" +
	"\xfb\x02\x74\x04\x9f\xf4\x38\x9c\x12\x3e\x01\x00\x00\xff\xff\x75\x88\xf8\xa8\xc7\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaoperatordatayamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaoperatordatayaml,
		"PersistentVolumeClaim/alameda-operator-data.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaoperatordatayaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaoperatordatayamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-operator-data.yaml",
		size: 199,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimAlamedaoperatorlogyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8c\x3d\x0e\xc2\x30\x14\x83\xf7\x9c\xc2\x17\x28\x12\x8c\x59\x19\x98" +
	"\x10\x88\xa1\xcc\x4f\x89\xa9\x22\xf2\x47\x5e\xda\xf3\xa3\x88\x32\x7e\xf6\x67\x4b\x0d\x33\x9b\x86\x92\x2d\xb6\xa3" +
	"\x79\x87\xec\x2d\xee\x23\xd1\xce\xdc\xe7\x12\xd7\xc4\x73\x94\x90\x4c\x62\x17\x2f\x5d\xac\x01\xb2\x24\x5a\x48\x94" +
	"\x44\x2f\x53\xa9\x6c\xd2\x4b\x9b\x62\x59\x0e\x75\x73\xbb\xa0\x55\x1c\x2d\x5e\xf4\xbf\x5a\x82\xd1\x4a\x37\xf6\xe2" +
	"\x1c\x55\xaf\xc5\x53\x07\x02\x13\x1e\x14\xff\x6c\xa1\xf3\x96\x1d\x0d\xd0\xa8\x65\x6d\xee\x2f\x34\x7e\x56\x6a\xdf" +
	"\x09\xd0\x71\xb8\xd0\xe2\x74\x09\xf8\x06\x00\x00\xff\xff\xed\x6e\x78\xea\xc6\x00\x00\x00")

func bindataPersistentVolumeClaimAlamedaoperatorlogyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimAlamedaoperatorlogyaml,
		"PersistentVolumeClaim/alameda-operator-log.yaml",
	)
}



func bindataPersistentVolumeClaimAlamedaoperatorlogyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimAlamedaoperatorlogyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/alameda-operator-log.yaml",
		size: 198,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimMyalamedagrafanaPVCyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x3d\x6a\xc4\x30\x14\xc4\xf1\x5e\xa7\x78\x17\xb0\x21\x29\xd5\xa6" +
	"\x48\x15\x12\x52\x78\xeb\x41\x1a\x1b\xb1\xd6\xc7\xbe\x27\x1b\xf6\xf6\x8b\xc0\x5b\xce\xf0\xe3\x8f\x96\x16\xaa\xa5" +
	"\x5a\xbc\x9c\x1f\xee\x9e\x4a\xf4\xf2\x37\x1e\xeb\x2c\x7d\xa9\xfb\x91\xf9\xb5\x23\x65\x97\xd9\x11\xd1\xe1\x9d\x48" +
	"\x41\xa6\x97\xfc\x9c\xb0\x23\x33\x62\xde\x14\x2b\x0a\xa6\x01\xe6\x76\x86\xcb\x58\x43\xa0\x97\x95\x91\x8a\x5e\x15" +
	"\xc9\x59\x63\x18\x09\x84\x40\xb3\x9f\x1a\x69\x63\x8a\x4c\xf2\x4f\xc4\x9b\xa6\xce\xdf\x12\xe8\x44\x94\x56\x0f\x0d" +
	"\x6f\xa0\x7c\x1c\xb4\x7e\x2d\x11\x1b\xc1\x8d\x5e\x3e\xbf\x93\xbc\x02\x00\x00\xff\xff\xa9\x9c\x3a\x4f\xc9\x00\x00" +
	"\x00")

func bindataPersistentVolumeClaimMyalamedagrafanaPVCyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimMyalamedagrafanaPVCyaml,
		"PersistentVolumeClaim/my-alamedagrafanaPVC.yaml",
	)
}



func bindataPersistentVolumeClaimMyalamedagrafanaPVCyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimMyalamedagrafanaPVCyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/my-alamedagrafanaPVC.yaml",
		size: 201,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataPersistentVolumeClaimMyalamedainfluxdbPVCyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcc\x3b\x6e\xc3\x30\x10\x84\xe1\x9e\xa7\xd8\x4e\x95\x84\xa8\x65\x9b" +
	"\x22\x55\x90\x20\x85\x52\xaf\xc9\x91\xb1\x30\x5f\xe6\x92\x82\x7d\x7b\x83\x80\x5c\xce\xe0\xc3\xcf\x45\x36\x54\x95" +
	"\x9c\x2c\x1d\xab\xb9\x49\xf2\x96\x7e\xc7\xa3\x0d\xa9\x6d\x39\xf4\x88\xcf\xc0\x12\x4d\x44\x63\xcf\x8d\xad\x21\x4a" +
	"\x1c\x61\x29\x3e\x67\x0e\x1c\xe1\x79\x91\xb4\x87\xfe\xf0\x97\x79\x88\xa5\x1c\xee\x44\x5a\xd8\xc1\xd2\x0e\x8f\xca" +
	"\x2d\x57\x16\xa3\x05\x6e\x34\xd8\x39\xa8\x7e\x67\x0f\x1d\x93\x68\xa6\x3f\xb0\xff\xaf\xd2\xf0\x93\x1c\x0c\x51\x85" +
	"\xe6\x5e\xdd\x1b\x54\xdc\x3b\xb4\x9d\x8b\x48\x47\xf0\x0a\x4b\xd3\xfa\xf1\x25\xd3\x2b\x00\x00\xff\xff\x4a\x54\xad" +
	"\xdd\xcc\x00\x00\x00")

func bindataPersistentVolumeClaimMyalamedainfluxdbPVCyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataPersistentVolumeClaimMyalamedainfluxdbPVCyaml,
		"PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml",
	)
}



func bindataPersistentVolumeClaimMyalamedainfluxdbPVCyaml() (*asset, error) {
	bytes, err := bindataPersistentVolumeClaimMyalamedainfluxdbPVCyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml",
		size: 204,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1556326748, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAdmissioncontrollerSVyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x41\xaa\xc3\x30\x0c\x44\xf7\x3e\xc5\x5c\x20\x90\xcf\xcf\xa2\xf8" +
	"\x14\x85\x42\xf7\xaa\x3d\x2d\xa6\x8e\x6d\x24\x91\xf3\x97\xf8\x00\xed\xee\x21\x31\xf3\x46\x46\xb9\x53\xad\xf4\x16" +
	"\x71\xfc\x85\x77\x69\x39\xe2\x46\x3d\x4a\x62\xd8\xe9\x92\xc5\x25\x06\xa0\xca\x83\xd5\x4e\x02\x64\x8c\x08\xc9\x7b" +
	"\xb1\x33\xb8\xa4\xde\x5c\x7b\xad\xd4\x00\x34\xd9\xf9\xf5\x69\x43\x12\x23\x9e\xcc\x54\xf1\xae\x52\x82\x0d\xa6\xb3" +
	"\x79\x74\xf5\xa9\x58\x26\x46\x6c\xdb\xff\x14\xba\xe8\x8b\x7e\x9d\xb7\xcb\xba\xae\x01\x30\x56\x26\xef\xfa\x63\xd1" +
	"\x27\x00\x00\xff\xff\xf4\xe7\x31\xb4\xe0\x00\x00\x00")

func bindataServiceAdmissioncontrollerSVyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAdmissioncontrollerSVyaml,
		"Service/admission-controllerSV.yaml",
	)
}



func bindataServiceAdmissioncontrollerSVyaml() (*asset, error) {
	bytes, err := bindataServiceAdmissioncontrollerSVyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Service/admission-controllerSV.yaml",
		size: 224,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1554254667, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAlamedadatahubSVyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x31\x0e\xc3\x20\x14\x43\x77\x4e\xe1\x0b\x44\x4a\x87\x2c\x5c\xa3" +
	"\x52\x77\x07\xdc\x16\x95\x04\xf4\xa1\x39\x7f\x45\xd4\x35\x9b\x65\x5b\xcf\x66\x4d\x0f\x59\x4b\x65\xf7\x38\x6e\xee" +
	"\x93\xf6\xe8\x71\x97\x1d\x29\xc8\x6d\xea\x8c\xec\xf4\x0e\xc8\x5c\x95\xdb\x50\x00\x6b\xf5\x60\xe6\xa6\xc8\x69\x14" +
	"\xde\xdf\xd5\x01\x3b\x37\x5d\xf9\xad\x32\xc8\xe3\xa9\x28\x63\x2f\xc6\xe4\x5a\x55\x18\xbc\x5a\xac\x9f\xe0\xe9\x4f" +
	"\x78\x59\x0d\xe7\xce\x48\x3c\x96\x79\x5e\x66\x07\x34\x65\x85\x5e\xec\xfa\xc3\x2f\x00\x00\xff\xff\x17\x03\xde\x3c" +
	"\xcd\x00\x00\x00")

func bindataServiceAlamedadatahubSVyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAlamedadatahubSVyaml,
		"Service/alameda-datahubSV.yaml",
	)
}



func bindataServiceAlamedadatahubSVyaml() (*asset, error) {
	bytes, err := bindataServiceAlamedadatahubSVyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Service/alameda-datahubSV.yaml",
		size: 205,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAlamedagrafanaSVyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x31\xaa\xc3\x30\x10\x44\x7b\x9d\x62\x2f\x60\xf0\xe7\x77\x3a\x45" +
	"\x20\x90\x7e\x22\x8d\x8d\x88\x2c\x2d\xab\xc5\xe7\x0f\x56\x95\xc6\xdd\xe3\x15\x6f\x06\x5a\x5e\xb4\x51\x7a\x8b\x72" +
	"\xfe\x85\x4f\x69\x39\xca\x93\x76\x96\xc4\x70\xd0\x91\xe1\x88\x41\xa4\xe2\xcd\x3a\x2e\x12\x81\x6a\x14\x54\x1c\xcc" +
	"\x58\x76\xc3\x86\x86\x20\xd2\x70\xf0\xce\x0f\x45\x62\x94\x8d\x99\x06\xef\x86\x12\x86\x32\x5d\x3d\xed\xe6\x33\xbc" +
	"\x4c\x8c\xf2\xbf\xae\xeb\xdc\x71\xd8\x4e\x7f\xfc\xca\xc1\xca\xe4\xdd\xee\x8f\xc8\x37\x00\x00\xff\xff\x1d\x9d\x3e" +
	"\xc2\xd3\x00\x00\x00")

func bindataServiceAlamedagrafanaSVyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAlamedagrafanaSVyaml,
		"Service/alameda-grafanaSV.yaml",
	)
}



func bindataServiceAlamedagrafanaSVyaml() (*asset, error) {
	bytes, err := bindataServiceAlamedagrafanaSVyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Service/alameda-grafanaSV.yaml",
		size: 211,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1553562665, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataServiceAlamedainfluxdbSVyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\x41\x0a\xc2\x30\x14\x44\xf7\x39\xc5\xbf\x40\x41\x37\x52\x72\x0a" +
	"\x41\x70\x3f\x4d\xa6\x12\x4c\x93\xf0\xf3\x2d\x1e\x5f\x9a\x95\x1b\xdd\x3d\x66\xe0\xcd\xa0\xa5\x3b\xb5\xa7\x5a\xbc" +
	"\xec\x67\xf7\x4c\x25\x7a\xb9\x51\xf7\x14\xe8\x36\x1a\x22\x0c\xde\x89\x64\x2c\xcc\xfd\x20\x11\xb4\xe6\x05\x19\x1b" +
	"\x23\xa6\x54\xd6\xfc\x7a\xc7\xc5\x89\x14\x6c\xfc\x59\xf4\x86\x40\x2f\x2b\x23\x15\x56\x15\xc9\xf5\xc6\x70\x18\x5b" +
	"\x55\x1b\xea\x69\xa0\x97\xf9\x34\x5f\xc6\x92\x41\x1f\xb4\xeb\x77\xd8\x99\x19\xac\xea\x9f\x2b\x9f\x00\x00\x00\xff" +
	"\xff\x1e\x34\xee\x61\xd5\x00\x00\x00")

func bindataServiceAlamedainfluxdbSVyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataServiceAlamedainfluxdbSVyaml,
		"Service/alameda-influxdbSV.yaml",
	)
}



func bindataServiceAlamedainfluxdbSVyaml() (*asset, error) {
	bytes, err := bindataServiceAlamedainfluxdbSVyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Service/alameda-influxdbSV.yaml",
		size: 213,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1554254667, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAdmissioncontrollerDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\x4b\x6f\xdb\x46\x10\xbe\xeb\x57\x0c\x72\xc9\x89\xa2\xd2\x56\x2d" +
	"\xb0\x40\x0f\x8c\xc9\xa0\x46\x25\x9b\xb0\xd4\x00\x39\x09\xe3\xe5\xd0\x5c\x64\x5f\xd9\x5d\xca\xe5\xbf\x2f\x56\x94" +
	"\x64\xd2\x96\x2c\xf7\x60\x20\x3c\x11\xdf\xec\xf7\x98\x7d\xa2\x15\x5f\xc9\x79\x61\x34\x03\xb4\xd6\xa7\xdb\x4f\x93" +
	"\xef\x42\x57\x0c\x72\xb2\xd2\x74\x8a\x74\x98\x28\x0a\x58\x61\x40\x36\x01\xd0\xa8\x88\x01\x56\x4a\xf8\xc8\x4a\xb8" +
	"\xd1\xc1\x19\x29\xc9\xed\x8b\xde\x22\x27\x06\x35\x55\xe4\x30\x18\x87\x62\x02\x20\xf1\x9e\xa4\x8f\x7c\x88\x36\x0c" +
	"\x50\xa2\xa2\x0a\x77\x00\x37\xca\x1a\x4d\x3a\x9c\xd5\x45\xad\x4d\xc0\x20\x8c\xde\x6b\x54\xe4\xb9\x13\x36\xec\x72" +
	"\xe7\x54\x0b\x4d\x1e\x1a\xf3\x08\xc1\x40\xb5\x0b\x0e\xa1\xa1\x73\x72\x00\x81\x94\x95\x18\x68\x8a\xd2\x36\x38\x35" +
	"\x96\xb4\x6f\x44\x1d\xa6\xc2\xa4\x8f\x28\x42\x52\x1b\x97\x38\xc2\xaa\x63\xf0\x31\xb8\x96\x3e\x4e\xbc\x25\x1e\xcd" +
	"\x1d\x59\x29\x38\x7a\x06\x9f\x26\x00\x9e\x24\xf1\x60\x5c\x1f\x4b\x61\xe0\xcd\x62\xd0\xeb\xa1\xdb\xd3\x39\x0e\x29" +
	"\xf6\xe4\xc1\x2c\xc7\xef\xd5\x99\x8e\x9f\x1c\x19\xbd\x6e\x05\x70\xc8\xdf\xcf\xb8\x0e\x28\x34\xb9\x23\x3b\xb9\x6c" +
	"\x07\x20\x14\x3e\x10\x83\x1f\x2d\x76\x71\xa2\xac\x33\xb6\xa1\xe0\x83\x71\xe9\x7e\x3d\x93\x27\xbe\x6b\x48\xb2\xed" +
	"\x6c\xfa\xeb\xf4\xf7\xb1\x40\xd9\x4a\x59\x1a\x29\x78\xc7\xe0\xba\xbe\x31\xa1\x74\xe4\xe3\x36\x3b\x8c\x72\xe4\x4d" +
	"\xeb\x38\x0d\x5a\x8b\xe0\x8f\x96\x7c\x18\x61\x00\xdc\xb6\x0c\x7e\x9b\xab\x11\xa8\x48\x19\xd7\x31\xf8\x63\xbe\x14" +
	"\xc7\x02\xe9\xed\x13\xf5\xd0\xed\x4d\xb6\x2c\x56\x65\x76\x55\x6c\xe2\xdf\x40\x64\x8b\xb2\xa5\x2f\xce\xa8\xb1\x5d" +
	"\x2d\x48\x56\x77\x54\x8f\xd1\x3d\x5e\x62\x68\xd8\x71\x15\xa7\xc7\xb3\x00\x00\x2f\x8c\xcb\xdb\xfc\x9d\x2c\x5f\x58" +
	"\x65\x8b\x6c\x59\xe4\xd9\x26\xcb\x97\x57\xeb\xc5\x26\x2f\xca\xc5\xed\xb7\xa2\xb7\xdf\xf5\xfe\x4e\x6d\x5f\x0c\x92" +
	"\xad\xb3\xbf\xfe\xf9\xbc\xc9\xf2\xfc\xae\x58\xad\x9e\xa7\x60\xf0\xe1\xb0\xa7\xa2\x6e\xd3\xde\x4f\x07\x57\xca\xd4" +
	"\x6f\x39\x9b\xcf\x66\xf3\xd9\x87\x4b\x3e\xc5\x4d\xf6\x79\xf1\xa2\xc9\xe3\xb1\xbe\xc0\x5e\x2f\x56\x9b\xab\xe2\x6e" +
	"\xbd\xf9\x72\x7d\x4a\x24\xa5\xc0\xd3\x20\x7d\xc2\xc9\x05\x1f\xff\xa6\xdc\x85\xb7\x88\x96\x77\xd7\x5f\xb3\x75\xb1" +
	"\xf9\xbb\xf8\xf6\x76\xed\xef\xd4\x5d\xd2\xbe\xca\xfe\x47\x5e\x8e\xa3\xb8\x5b\x23\x5b\x45\x4b\xd3\xea\xe1\x39\x4b" +
	"\x40\x45\xa4\x5f\xe7\xb1\xc0\xc0\xa0\x0f\x73\xaa\x12\xaf\xd1\x5b\x2d\x3b\x06\x35\x4a\x4f\x93\x21\x1e\xef\x6d\x5f" +
	"\x3a\x73\x4f\xc3\xbd\x45\xff\x3e\x5d\x55\xfd\xc7\x8d\x52\xa8\xab\x31\x98\x40\xda\x7a\x97\x4a\xc3\x51\xa6\xf7\x42" +
	"\xa7\xaf\x5e\x5e\x3d\xc3\x46\xaf\x67\x58\x92\x84\xce\xd2\x9f\xc7\x3c\x83\x72\x8d\x42\xb6\x8e\xd6\x8d\x23\xdf\x18" +
	"\x59\x31\xf8\x65\x36\x28\x0b\x2d\x82\x40\x99\x93\xc4\x6e\x45\xdc\xe8\xca\x33\x98\x0f\x06\x58\x72\xc2\x54\x27\x4a" +
	"\x52\x6c\xe9\x27\xea\xfd\x10\xe7\xfd\x5b\xef\xf7\x98\x67\xf0\xec\xe1\x39\xf9\xf2\xec\x8e\x7e\x12\x1f\x18\x7c\xa0" +
	"\x37\x11\xa4\x79\x38\x33\xfe\xe5\xd6\xf4\xc4\x1d\x85\xe1\xbc\xf6\xc8\xcd\xd9\x97\x30\x09\xf2\x40\xf7\xe4\xb6\x82" +
	"\x53\xc6\x79\x3c\x1c\xaf\x3e\x9c\xe3\xa1\xe7\xd5\x27\xff\x05\x00\x00\xff\xff\x53\x27\x37\x93\x8d\x09\x00\x00")

func bindataDeploymentAdmissioncontrollerDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAdmissioncontrollerDMyaml,
		"Deployment/admission-controllerDM.yaml",
	)
}



func bindataDeploymentAdmissioncontrollerDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAdmissioncontrollerDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/admission-controllerDM.yaml",
		size: 2445,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1557293960, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedaaiDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\xc1\x8e\xd3\x30\x10\x86\xef\x7d\x8a\xd1\xde\x93\xcd\x2e\x2a\x07" +
	"\x4b\x1c\x8a\xb2\x12\x48\xb0\x5b\xb5\x0b\x57\x34\x75\xa6\x8d\x85\xed\xf1\xda\x4e\x20\x6f\x8f\x9c\xb6\xd9\x24\xad" +
	"\x00\x09\x91\xe3\xcc\xfc\xdf\xfc\xf6\x8c\x83\x4e\x7d\x25\x1f\x14\x5b\x01\xe8\x5c\xb8\x6d\xef\x16\xdf\x95\xad\x04" +
	"\x94\xe4\x34\x77\x86\x6c\x5c\x18\x8a\x58\x61\x44\xb1\x00\xb0\x68\x48\x00\x6a\x34\x54\x61\x86\xea\x14\x0a\x0e\x25" +
	"\x09\xd8\x53\x45\x1e\x23\xfb\x3e\xa1\x71\x47\x3a\x24\x15\x24\xf8\x20\xeb\x03\x92\x8d\x63\x4b\x36\xce\x68\x68\x2d" +
	"\x47\x8c\x8a\xed\x49\x59\x51\x90\x5e\xb9\xd8\x7b\x2c\x69\xaf\x2c\x05\xa8\xf9\x07\x44\x86\xaa\x37\x09\xb1\xa6\xd4" +
	"\x40\x2b\xd9\x0b\x07\x20\xbb\xa3\x9b\x45\x70\x24\x13\xcd\x53\x5f\x14\x04\xdc\x2d\x00\x02\x69\x92\x91\xfd\xb1\x8f" +
	"\xc1\x28\xeb\x4f\x23\xcb\x53\xd3\x47\x77\x91\x8c\xd3\x18\xe9\x24\x19\x5d\x4c\xfa\xae\x5c\x4e\xfa\xf4\x04\x7a\x0d" +
	"\x0b\x70\x76\x78\xbc\x1a\x1b\x51\x59\xf2\x83\x26\xbb\x40\x67\x64\x0f\xca\xd2\xc0\x54\x06\x0f\x24\xe0\xa5\xc1\x2e" +
	"\x57\x7c\xeb\x3c\xbb\x9a\x62\x88\xec\x6f\x5f\x45\xa2\x2d\xf2\x37\xf9\xdb\xa9\x68\xdd\x68\xbd\x66\xad\x64\x27\xe0" +
	"\xe3\xfe\x91\xe3\xda\x53\x48\x63\x3f\x57\x79\x0a\xdc\x78\x49\xa3\x13\xa4\xe0\x4b\x43\x21\x4e\x62\x00\xd2\x35\x02" +
	"\xee\x8b\xa2\x30\x93\xb0\x21\xc3\xbe\x13\x70\xbf\x2c\x3e\xab\x21\x43\xb6\x7d\x55\x9f\x4f\xf8\xb4\x7e\xd8\xac\x9e" +
	"\x9f\x36\xdf\x56\x65\xb9\x79\xd8\x6e\x47\x9c\x16\x75\x43\x02\x6e\xe6\xd3\xcd\x47\x5b\x97\x87\x56\x8a\x65\x51\x2c" +
	"\x8b\x9b\x0b\x74\xb9\x7a\x5e\x7d\xf8\xf2\xfe\x2f\xc8\x69\xa6\x75\xb3\xfb\x13\xd8\x13\x56\x69\x1b\xc3\xda\xf3\x8e" +
	"\x04\x8c\x88\xf4\x93\xe4\x24\xd0\x2f\xbc\xc1\xf4\xb2\x26\xd1\x0c\xd2\xac\x76\x94\x87\x7a\x9e\xc8\xb2\xd8\x39\x7a" +
	"\x37\x74\x19\xe7\x95\x55\x51\xa1\x2e\x49\x63\xb7\x25\xc9\xb6\x0a\x02\x96\xe3\x0a\x47\x5e\x71\x75\x2d\xa7\x55\x4b" +
	"\xff\xdd\xf5\xb9\xc9\xbf\x99\x3e\xa5\x5a\xd6\x8d\x19\xef\xdf\x95\xf7\x90\x66\x96\xa5\x7d\xc7\x03\xfd\xae\x4e\xf3" +
	"\x61\x56\x16\xc8\xb7\x4a\xd2\x4a\x4a\x6e\x2e\x7e\x47\x97\x05\x8f\xf3\x47\xfe\x2b\x00\x00\xff\xff\x53\xba\x77\xec" +
	"\x44\x05\x00\x00")

func bindataDeploymentAlamedaaiDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedaaiDMyaml,
		"Deployment/alameda-aiDM.yaml",
	)
}



func bindataDeploymentAlamedaaiDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedaaiDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-aiDM.yaml",
		size: 1348,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1557293960, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedadatahubDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x41\x6f\xe2\x3a\x10\xbe\xf3\x2b\xe6\xd6\x53\x08\xe8\xa9\x55\x6b" +
	"\xe9\x1d\x52\x85\xa7\x56\x02\x8a\xa0\xbc\xdd\x1b\x1a\x9c\x81\x58\xb5\x3d\xae\xed\xa4\xe5\xdf\xaf\x42\x0b\x0d\x14" +
	"\xb6\x3d\xac\xb4\xb9\x44\xfa\x3c\xdf\x37\xdf\x8c\xc7\x83\x4e\xfd\x4f\x3e\x28\xb6\x02\xd0\xb9\x90\xd6\xfd\xce\x93" +
	"\xb2\x85\x80\x9c\x9c\xe6\x8d\x21\x1b\x3b\x86\x22\x16\x18\x51\x74\x00\x2c\x1a\x12\x80\x1a\x0d\x15\x98\x34\x68\x59" +
	"\x2d\xdf\xf1\xe0\x50\x92\x80\x15\x15\xe4\x31\xb2\x47\xd5\x01\xd0\xb8\x24\x1d\x1a\x2a\x34\x19\xf6\xdc\x2d\x20\xd9" +
	"\x38\xb6\x64\xe3\x29\x49\xb4\x96\x23\x46\xc5\xf6\x9d\x5e\x50\x90\x5e\xb9\xb8\x75\x9b\xd3\x4a\x59\x0a\x50\xf2\x0b" +
	"\x44\x86\x62\x6b\x17\x62\x49\x4d\x16\xad\xe4\x96\x78\x42\x15\x20\x92\x71\x1a\x23\x75\x51\xbb\x12\xbb\xec\xc8\x86" +
	"\x52\xad\x62\x57\x71\xfa\x82\x2a\x26\x2b\xf6\x89\x27\x2c\x36\x02\x2e\xa2\xaf\xe8\xa2\x13\x1c\xc9\xc6\x83\xa7\xad" +
	"\x74\x10\xd0\xef\x00\x04\xd2\x24\x23\xfb\x37\x77\x06\xa3\x2c\x87\xad\x6a\x0f\xeb\x6d\x59\xd8\x19\x78\xe7\xb5\xba" +
	"\xdb\x7c\xe7\x3a\xdc\x7c\xfa\x40\xfe\x6c\x02\x80\x9d\xe1\xb7\x26\xdb\x88\xca\x92\xdf\x13\x93\xdf\x26\x01\x50\x06" +
	"\xd7\x24\xe0\xb9\xc2\x4d\xd3\x14\xe7\xd9\x95\x14\x43\x64\x9f\x1e\x51\x12\x5f\x92\x16\x75\xaf\xfb\x4f\xf7\xea\x90" +
	"\x3e\xa9\xb4\x9e\xb0\x56\x72\x23\xe0\x7e\x35\xe6\x38\xf1\x14\x9a\x69\xda\x45\x79\x0a\x5c\x79\x49\xad\x72\x1a\xf0" +
	"\xb9\xa2\x10\x0f\x30\x00\xe9\x2a\x01\x97\x3d\x73\x00\x1a\x32\xec\x37\x02\xfa\xbd\xde\x48\xed\x4f\xc8\xd6\x1f\xdc" +
	"\x5d\x9d\xd9\x30\x1b\x0d\xf2\x6c\x91\x67\x8f\xd9\xdd\xfc\x76\x71\x3f\xfe\x6f\x38\xff\x99\xdf\x2e\xb2\x3c\x9f\x0e" +
	"\x66\xb3\x96\x6e\x8d\xba\x22\x01\x65\x8c\x2e\x88\x74\x5f\xae\xb2\x2b\x5d\xbd\x16\xcb\x6e\x6b\xb8\xbb\xa1\x96\xe2" +
	"\xba\x77\x7d\xf5\xfd\x7c\xf3\xd9\x60\x3a\xce\x46\x83\xcf\x09\xb1\x30\xca\x7e\x5f\x68\x92\xcd\x66\x3f\x1e\xa6\xf9" +
	"\x19\x21\x87\x21\x7c\x29\x36\x99\x3e\x8c\x06\x8f\x77\x83\xf9\x6c\x31\x9f\x0e\xcf\xf7\xc0\x79\x36\x14\x4b\xaa\x42" +
	"\xf2\x74\x1d\x3e\xde\x4b\x62\xd8\xaa\xc8\x5e\xd9\xf5\xb6\x15\x37\xbd\x9b\x7e\xeb\x76\xb1\x68\xde\x67\x98\x78\x5e" +
	"\x52\xfb\x3a\xe9\xf5\x63\x34\x77\x03\x6a\x0c\xda\xe2\x10\x4c\x20\xad\x82\x4f\x35\x4b\xd4\xe9\x52\xd9\xf4\x78\x48" +
	"\xdf\x82\x5c\x23\x7f\x84\x25\x49\xdc\x38\xfa\x77\x6f\xa1\x75\xac\xac\x8a\x0a\x75\x4e\x1a\x37\x33\x92\x6c\x8b\x20" +
	"\xe0\xb2\x15\xe0\xc8\x2b\x2e\x4e\x1c\x69\x55\xd3\xdf\xad\x67\xe7\xe0\x0f\x94\x53\xb3\xae\x0c\x7d\xda\x07\xc7\x0b" +
	"\x61\xfb\x4f\x9a\x77\x8f\x6b\xfa\x2a\x56\xf3\xfa\x28\x34\x90\xaf\x95\xa4\x4c\x4a\xae\x4e\xaf\xf8\xcf\x51\xe3\x93" +
	"\x8b\xe9\x57\x00\x00\x00\xff\xff\x4e\xd3\xa3\xe7\xa7\x06\x00\x00")

func bindataDeploymentAlamedadatahubDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedadatahubDMyaml,
		"Deployment/alameda-datahubDM.yaml",
	)
}



func bindataDeploymentAlamedadatahubDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedadatahubDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-datahubDM.yaml",
		size: 1703,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1557293960, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedaevictionerDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x4d\x4f\xe3\x3a\x14\xdd\xf7\x57\x5c\xb1\x61\x95\xa4\xe8\xbd\xbe" +
	"\x27\x59\x7a\x8b\xf0\x52\x69\x90\xa0\x53\x01\xc3\xb6\xba\x75\x6e\x89\x35\xb6\xaf\xb1\x9d\x30\xf9\xf7\x23\x17\x52" +
	"\x12\x28\x0c\x8b\x91\xc6\xab\xf6\x7e\x9d\x73\xee\x47\xd0\xa9\x3b\xf2\x41\xb1\x15\x80\xce\x85\xa2\x3b\x9b\x7d\x57" +
	"\xb6\x16\x50\x91\xd3\xdc\x1b\xb2\x71\x66\x28\x62\x8d\x11\xc5\x0c\xc0\xa2\x21\x01\xa8\xd1\x50\x8d\x19\x75\x4a\x46" +
	"\xc5\x96\xfc\xb3\x2b\x38\x94\x24\x60\x47\x35\x79\x8c\xec\x51\xcd\x00\x34\x6e\x49\x87\x94\x0d\x09\xe4\x90\xbe\x37" +
	"\x48\x36\x8e\x2d\xd9\xf8\x4e\x55\xb4\x96\x23\xa6\xbf\xcf\x15\x6a\x0a\xd2\x2b\x17\xf7\x9c\x2b\xda\x29\x4b\x01\x1a" +
	"\x7e\x84\xc8\x50\xef\x49\x43\x6c\xe8\x78\x31\x80\x48\xc6\x69\x8c\x94\xa3\x76\x0d\xe6\xec\xc8\x86\x46\xed\x62\xae" +
	"\xb8\x78\x44\x15\xb3\x1d\xfb\xcc\x13\xd6\xbd\x80\xd3\xe8\x5b\x3a\x9d\x05\x47\x32\x41\x7b\x72\x5a\x49\x0c\x02\xce" +
	"\x66\x00\x81\x34\xc9\xc8\xfe\x89\x94\xc1\x28\x9b\xcb\x91\xce\xa9\xd2\x29\x8b\x81\xc3\x73\xea\xa8\xbb\xe9\x7d\xd0" +
	"\xe1\xf4\xf4\x04\xe4\x23\x18\x80\x81\xf9\x53\x9f\x6d\x44\x65\xc9\x1f\x72\xb3\x5f\x41\x01\x28\x83\xf7\x24\xe0\xa1" +
	"\xc5\x3e\x35\xc8\x79\x76\x0d\xc5\x10\xd9\x17\x6f\xb3\x32\xdf\x90\x16\xdd\x3c\xff\x2b\xff\x67\x5a\x61\xdd\x6a\xbd" +
	"\x66\xad\x64\x2f\xe0\x62\xb7\xe2\xb8\xf6\x14\xd2\x66\x0d\x51\x9e\x02\xb7\x5e\xd2\x48\x57\x32\x3e\xb4\x14\xe2\xc4" +
	"\x06\x20\x5d\x2b\xe0\xef\x85\x99\x18\x0d\x19\xf6\xbd\x80\x7f\x17\x57\xea\xe0\x20\xdb\xbd\xa4\x0e\x62\xcb\xcb\xf2" +
	"\x6a\x59\x95\x9b\xe5\xdd\xc5\xff\xb7\x17\x5f\x57\xcb\xeb\x4d\x55\xde\x96\x5f\xbe\x9d\x6f\xca\xaa\xba\x5e\xde\xdc" +
	"\x8c\x0a\x77\xa8\x5b\x12\x70\x32\x68\x4d\x63\x6a\xda\x6d\x3e\x5a\xef\x3c\x74\x52\x2c\xe6\xf3\xc5\xfc\xe4\x33\x58" +
	"\xc3\xcf\xcd\x72\x55\x9e\x5f\x2e\x8f\x60\xa5\x9d\x3b\x19\x35\x06\xeb\xb4\xe0\x61\xed\x79\x4b\xe3\x4e\xd0\x8f\x97" +
	"\xd9\x0e\x13\x36\x06\x6d\x3d\x35\x66\x50\xb4\xc1\x17\x9a\x25\xea\x62\xab\x6c\x71\x64\xca\x4f\x71\x2e\x21\xbc\xb2" +
	"\x65\x59\xec\x1d\xfd\x77\x60\x31\x72\x2b\xab\xa2\x42\x5d\x91\xc6\xfe\x86\x24\xdb\x3a\x08\x58\x8c\x02\x1c\x79\xc5" +
	"\xf5\x11\x97\x56\x1d\xfd\x71\x49\x03\x89\xdf\xa0\xa8\x63\xdd\x1a\x7a\x73\x56\x47\xee\x6a\xbf\x40\x59\x3a\x1f\xbc" +
	"\xa7\x4f\x84\x6b\xbe\x7f\x15\x1d\xc8\x77\x4a\x52\x29\x25\xb7\xef\x7e\x32\xdf\x06\xae\xde\x3b\xf4\x9f\x01\x00\x00" +
	"\xff\xff\x1c\x25\x2c\xae\x00\x06\x00\x00")

func bindataDeploymentAlamedaevictionerDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedaevictionerDMyaml,
		"Deployment/alameda-evictionerDM.yaml",
	)
}



func bindataDeploymentAlamedaevictionerDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedaevictionerDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-evictionerDM.yaml",
		size: 1536,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1557293960, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedagrafanaDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\xb1\x8e\xe3\x36\x10\xed\xfd\x15\x03\x37\xd7\x44\xb2\xf7\xee\xd2" +
	"\xb0\x0b\x6e\x9b\x00\xd9\x83\x8b\x20\x4d\x90\x62\x96\x1a\x5b\xcc\x92\x1c\x86\x1c\x79\x61\x04\xf9\xf7\x80\x5a\x59" +
	"\x96\x6c\xc9\xab\x2d\xce\x8d\x01\xce\x7b\x6f\x66\x1e\xc9\x11\x31\x98\x3f\x28\x26\xc3\x5e\x01\x86\x90\x36\xc7\x87" +
	"\xd5\x8b\xf1\x95\x82\x47\x0a\x96\x4f\x8e\xbc\xac\x1c\x09\x56\x28\xa8\x56\x00\x1e\x1d\x29\x40\x8b\x8e\x2a\x2c\x0e" +
	"\x11\xf7\xe8\xb1\x5b\x4f\x01\x35\x29\xd8\x53\x45\x11\x85\x23\x9a\x15\x80\xc5\x67\xb2\x29\x53\x21\x67\xe8\xb9\xed" +
	"\x82\x66\x17\xd8\x93\x97\x29\x49\xf4\x9e\x05\xc5\xb0\xef\xe8\x15\x25\x1d\x4d\x90\xb6\xda\x47\xda\x1b\x4f\x09\x6a" +
	"\x7e\x05\x61\xa8\xda\x72\x41\x6a\xca\x59\xac\xd1\x2d\x11\x2e\x6a\x00\x42\x2e\x58\x14\x2a\xd1\x86\x1a\x4b\x0e\xe4" +
	"\x53\x6d\xf6\x52\x1a\xde\xbc\xa2\x91\x62\xcf\xb1\x88\x84\xd5\x49\xc1\x27\x89\x0d\x7d\x5a\xa5\x40\x3a\xe7\x8e\xd4" +
	"\x4a\x26\x05\x0f\x2b\x80\x44\x96\xb4\x70\x7c\xab\xca\xa1\xe8\xfa\xb7\x41\x97\xd7\x9d\x0e\x5a\x3a\x97\xd0\x31\x07" +
	"\xbe\xe6\x9f\x5d\x26\x02\x70\x2e\x2b\xff\x8c\x37\xf2\x8d\xbd\xa0\xf1\x14\x7b\x72\xd1\x6d\xd4\x81\x44\xf8\x85\x7c" +
	"\xaf\x69\x1c\x1e\x48\xc1\x1a\x6d\x30\x9e\xd6\xfd\xba\x66\xe7\x30\xef\xfb\x9f\xeb\x54\xaf\x7f\x5a\x6f\x52\x4d\xd6" +
	"\x6e\xce\xfc\x32\xd5\xeb\xbf\x7a\xf0\x91\x6d\xe3\xe8\x89\x1b\x2f\x83\x72\x0b\x70\x79\x65\x87\x52\x2b\x78\xe3\xf7" +
	"\x31\xb8\xd4\x53\xb4\x82\xc5\x38\x3e\xe6\x66\x53\x12\x37\x51\x53\xba\x51\x98\x8a\x8d\xd9\x24\x7a\xd3\xb9\xb5\x09" +
	"\x91\x8f\x26\x1f\x6f\xe3\x0f\x77\x65\x43\x64\x47\x52\x53\x93\x8a\x0b\x6c\x75\xf6\x66\xd6\xde\xc1\xa6\x0c\xdc\x3d" +
	"\x67\xef\xfe\xd5\xcf\xe5\xd7\xf2\xcb\x18\xb4\x6b\xac\xdd\xb1\x35\xfa\xa4\xe0\xd7\xfd\x77\x96\x5d\xa4\x94\x2f\xdb" +
	"\x19\x15\x38\x0e\xcd\xcd\x39\xfb\x3a\x76\x1c\x45\xc1\x97\xed\x76\x3b\x88\x9f\x3b\xa9\x45\xc2\x68\x39\x44\x16\xd6" +
	"\x6c\x15\xfc\xfe\x6d\xd7\x47\x22\x75\x56\x0c\x73\x58\xe3\xcc\x38\x2b\x80\x0e\x8d\x82\xcf\xdb\xad\x1b\xad\x3a\x72" +
	"\x1c\x4f\x6d\xe0\xc9\x0c\x22\x91\xfe\x69\x28\x4d\x6a\x3c\xcc\x69\x3c\x8c\x34\xa6\x0f\xd7\xf5\x26\x1f\x31\x6e\xac" +
	"\x79\xee\x37\xba\xc2\x54\x3f\x33\xc6\x2a\x6d\x86\x03\x66\x6c\xcd\x05\x54\xfc\x9d\xd8\xcf\x8a\x7f\xf0\x04\x2d\x39" +
	"\x43\x1f\x4a\x72\xae\xf2\x5e\x0b\x2d\xa5\xa2\x98\x60\x35\xf4\x6d\x74\x1f\x97\x95\x45\x2e\xc8\xe9\xd1\x44\x05\xff" +
	"\xfe\x77\x43\xee\x2a\x6c\x99\x45\xca\x43\xfd\x40\xb3\x20\xcb\x87\x09\x8c\x66\xbf\x37\x87\x27\x0c\xe3\x33\x61\x84" +
	"\xdc\xd5\x31\x29\xe0\x85\x4e\x97\xa1\x55\xa6\x7a\x14\x06\x08\xad\x75\x73\xf1\xdb\x8a\xe7\x6e\xfb\xfc\x18\x9a\x29" +
	"\xb6\xa2\x3d\x36\x56\x9e\xb8\x22\x05\x5f\x3f\x6f\x17\x76\x72\xb1\xbe\x3c\xa1\xb3\x93\xdd\xdc\xc3\x2c\xef\x68\x7a" +
	"\x2c\xce\x74\x73\x73\x1b\xde\x70\x0b\x9b\xd2\xb6\x49\x42\xb1\x26\xb4\x52\x97\x57\x17\xe9\xd2\xd7\x3b\xb0\x4e\xcc" +
	"\x73\x45\xef\x29\xdd\xc3\xf4\x46\x53\x65\x74\xfe\xe4\x17\x91\xf2\xb7\x8c\x7c\xd5\xbe\x00\xe6\x55\x3f\x40\xe9\x92" +
	"\x8c\x61\x45\xd7\xe0\x7c\x86\xa5\xf8\x69\xf9\xfe\x45\xb5\x38\xc1\x1d\xc6\x74\x8a\x6e\x52\x26\x8d\xf6\x03\x7d\xdc" +
	"\x65\xdd\x1f\xb4\x3f\xe8\x44\xde\x0e\xc5\xf9\xeb\xf6\x3e\x76\x6e\xd0\x76\x90\x44\xf1\x68\x34\xfd\xa2\x75\x1e\xe6" +
	"\xd3\x0f\xb4\x6b\xd4\xf7\xc9\x57\xf3\xff\x01\x00\x00\xff\xff\x65\xcc\x42\x59\x7d\x0b\x00\x00")

func bindataDeploymentAlamedagrafanaDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedagrafanaDMyaml,
		"Deployment/alameda-grafanaDM.yaml",
	)
}



func bindataDeploymentAlamedagrafanaDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedagrafanaDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-grafanaDM.yaml",
		size: 2941,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1558937083, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedainfluxdbDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x94\xc1\x4e\xe3\x30\x10\x86\xef\x7d\x8a\x11\x7b\xe0\x94\x86\x9e\x56" +
	"\xf2\x2d\xd0\xb0\x44\x0b\x25\x6a\x53\x76\xf7\x54\x4d\x93\x09\xb5\x70\x6c\xcb\x9e\x14\xfa\xf6\x2b\x87\x16\x42\x69" +
	"\x01\xed\xfa\x50\x55\xe3\xf9\xbf\x7f\x26\xb6\x07\xad\xbc\x23\xe7\xa5\xd1\x02\xd0\x5a\x1f\xaf\x47\x83\x07\xa9\x2b" +
	"\x01\x63\xb2\xca\x6c\x1a\xd2\x3c\x68\x88\xb1\x42\x46\x31\x00\xd0\xd8\x90\x00\x54\xd8\x50\x85\x91\xd4\xb5\x6a\x9f" +
	"\xaa\xe5\x76\xc3\x5b\x2c\x49\x40\x4d\x15\x39\x64\xe3\x50\x0e\x00\x14\x2e\x49\xf9\xa0\x85\x60\xf1\x22\xee\x02\xa5" +
	"\x69\xac\xd1\xa4\xf9\x20\x13\xb5\x36\x8c\x2c\x8d\xde\xea\x2b\xf2\xa5\x93\x96\xbb\x7a\xc7\x54\x4b\x4d\x1e\x56\xe6" +
	"\x11\xd8\x40\xd5\x15\x0c\xbc\xa2\x60\xa3\x64\xd9\x09\xa1\x87\x03\x60\x6a\xac\x42\xa6\x21\x2a\xbb\xc2\xa1\xb1\xa4" +
	"\xfd\x4a\xd6\x3c\x94\x26\x7e\x44\xc9\x51\x6d\x5c\xe4\x08\xab\x8d\x80\x53\x76\x2d\x9d\x0e\xbc\xa5\x32\x98\x3b\xea" +
	"\x98\x5e\xc0\x68\x00\xe0\x49\x51\xc9\xc6\x3d\x97\xd5\x20\x97\xab\xeb\x5e\x9f\xfb\xbd\xf6\x9b\xda\xd5\xb0\x95\xf6" +
	"\xbe\x6d\x58\xea\x8b\x14\x80\x5d\x61\x61\x7d\x03\x4f\x65\xeb\x24\x6f\x2e\x8c\x66\x7a\xe2\xd7\x0d\x00\xd7\xea\xc4" +
	"\xcf\x3d\x39\x01\xa3\xb3\xb3\xb3\xed\x4e\x69\x34\xa3\xd4\xe4\x5e\xcc\xa2\xed\xe1\xbe\x71\x09\x4b\x36\x78\xdf\x8b" +
	"\x8b\xd1\xf0\x7b\x84\xca\x4a\x4d\x6f\x53\xf2\x56\xa9\xdc\x28\x59\x6e\x04\x64\xf5\xc4\x70\xee\xc8\x87\x0b\xb4\xcb" +
	"\x22\xbd\x7e\xed\x6c\x67\x97\x4d\x2e\xaf\xe7\xbf\xc7\xe7\x8b\x69\x9a\xdf\x4e\x8b\x6c\xf2\x63\x31\xce\x66\xc9\xf9" +
	"\x75\x3a\x7e\xc9\x05\x58\xa3\x6a\x49\xc0\x49\x38\x94\x93\xe3\x8c\xab\xa2\xc8\xbb\x9f\xd9\x22\x9d\xfc\x3f\xe3\x22" +
	"\x9d\x16\xd9\x65\x76\x91\x14\xe9\x01\x4e\x4c\x5c\xc6\xac\x7c\x6c\x9d\x5c\x23\x53\xf8\x3f\x2c\x1d\x7f\x8d\x9d\x4f" +
	"\xb3\xbb\xa4\x48\x17\x3f\xd3\x3f\x5f\x65\x3f\xd0\xe6\x33\x76\x32\x2f\xae\xfe\xbd\xf5\x64\x7c\x93\x4d\x16\xf3\x59" +
	"\x3a\x3d\xa0\xc5\xaa\x91\xfa\x53\x71\x9e\xcc\x66\xbf\x6e\xa7\x87\xcc\x3b\x80\x45\xef\x3f\x80\x1c\xf1\x6e\x3d\xb9" +
	"\x4f\x54\x1f\x39\x07\xf9\x5b\xe3\xb5\x51\x6d\x43\x37\xa6\xd5\xec\xfb\x77\xb2\x09\x91\x1c\x79\x25\x60\xff\x08\x7a" +
	"\xdc\xc3\x53\x30\x62\xe5\x7b\x49\x61\x8e\xdc\x6a\xb5\x11\x50\xa3\xf2\x74\xc4\x64\x8d\x2e\x56\x72\x19\xbf\x7b\x75" +
	"\xb0\xf7\x1c\xa3\x30\x26\x22\x1f\xc6\xea\x7d\xbf\x16\xdf\x2e\x9f\x51\x7b\x84\xe7\x0e\x8f\xbe\xee\x43\xb8\x77\x39" +
	"\xca\xdc\x1f\x49\xf9\xb0\x77\x4f\xa5\x23\x16\xfd\x22\xbb\xc8\xe4\xa8\xf4\x6f\x00\x00\x00\xff\xff\x94\x54\x36\xb6" +
	"\x88\x06\x00\x00")

func bindataDeploymentAlamedainfluxdbDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedainfluxdbDMyaml,
		"Deployment/alameda-influxdbDM.yaml",
	)
}



func bindataDeploymentAlamedainfluxdbDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedainfluxdbDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-influxdbDM.yaml",
		size: 1672,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1557293960, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataDeploymentAlamedaoperatorDMyaml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x0c\x72\xd9\x93\x24\xa7\x45\x7a" +
	"\xe0\x4d\xad\x5c\x74\x81\x4d\x22\x24\x69\xaf\xc1\x84\x1a\x59\x44\x49\x0e\x97\xa4\xe4\xfa\xdf\x17\xb4\x6c\xaf\xe4" +
	"\x8f\x16\x28\xd0\xd5\x49\x18\xbe\x37\x6f\x66\xf8\x38\xe8\xd4\x1f\xe4\x83\x62\x2b\x00\x9d\x0b\xe5\x78\x9f\xfd\xa9" +
	"\x6c\x2b\xa0\x26\xa7\x79\x67\xc8\xc6\xcc\x50\xc4\x16\x23\x8a\x0c\xc0\xa2\x21\x01\xa8\xd1\x50\x8b\x39\x3b\xf2\x18" +
	"\xd9\x1f\x0e\x82\x43\x49\x02\x3a\x6a\xa7\x30\xaa\x0c\x40\xe3\x07\xe9\x90\xb8\x90\x24\x4e\xe4\x7d\x40\xb2\x71\x6c" +
	"\xc9\xc6\xab\x39\xd1\x5a\x8e\x18\x15\xdb\x03\xbf\xa5\x20\xbd\x72\x71\x5f\x6f\x4d\x9d\xb2\x14\xa0\xe7\x2d\x44\x86" +
	"\x76\x5f\x30\xc4\x9e\x92\x8c\x56\x72\x4f\xbc\x96\x16\x20\x92\x71\x1a\x23\x15\xa8\x5d\x8f\x05\x3b\xb2\xa1\x57\x5d" +
	"\x2c\x14\x97\x5b\x54\x31\xef\xd8\xe7\x9e\xb0\xdd\x09\xf8\x14\xfd\x40\x9f\xb2\xe0\x48\xa6\x22\x3c\xed\x73\x07\x01" +
	"\xf7\x19\x40\x20\x4d\x32\xb2\x9f\xca\x33\x18\x65\xff\x65\xd6\xef\xb2\xe3\x79\x0d\xc7\x0a\x0e\xc4\xd9\x84\xd3\x77" +
	"\x73\xca\xe9\xd3\x0b\x81\xdb\x12\x00\xc7\x9a\xa7\x49\xdb\x88\xca\x92\x3f\x31\xf3\x7f\x96\x01\x50\x06\x37\x24\xe0" +
	"\xeb\x80\xbb\x34\x18\xe7\xd9\xf5\x14\x43\x64\x5f\x9e\x73\x72\xdf\x93\x16\xe3\xaa\xf8\xb1\xf8\x69\xc9\x6f\x06\xad" +
	"\x1b\xd6\x4a\xee\x04\x7c\xee\x9e\x38\x36\x9e\x42\x72\xd5\x11\xe5\x29\xf0\xe0\x25\xcd\x3a\x4a\xc1\xaf\x03\x85\xb8" +
	"\x88\x01\x48\x37\x08\xb8\x5f\x99\x45\xd0\x90\x61\xbf\x13\xf0\xc3\xea\x51\x9d\x0e\xc8\x8e\xdf\xa8\xc7\x46\x9f\xaa" +
	"\xc7\xf5\x6b\x53\xfd\xb2\x7e\x4f\x7f\xb3\x24\x23\xea\x81\x7e\xf5\x6c\x96\x72\x9d\x22\xdd\xbe\x50\xb7\x8c\x1e\xe2" +
	"\x0d\xc6\x5e\x9c\x2e\xae\x38\xd9\x1f\x00\x2e\x84\x9b\xe7\xfa\x7f\x92\xbc\x90\xaa\xbe\x54\x8f\xeb\xba\x7a\x7f\x6e" +
	"\xd6\x2f\xd5\xdb\xf3\xcb\x7b\x5d\xbd\x55\xbf\xfd\xfe\xf3\x7b\x55\xd7\x2f\xeb\xd7\xd7\xf3\x12\x04\xdc\x1d\xef\x32" +
	"\x25\xed\x87\x8f\x62\xf6\x7c\x8b\x30\x4a\xf1\xb0\x5a\x3d\xac\xee\x4e\xc4\x91\xf5\x60\xe8\x91\x07\x3b\xbf\x9e\xa3" +
	"\xbe\xe3\x56\xd9\x8e\x67\x32\x26\x21\xa7\xd2\x4b\x8a\xb2\xbc\x44\xa4\x87\xf6\x6c\xf5\x4e\x40\x87\x3a\x50\x36\x8f" +
	"\xa7\x17\x1e\x1a\xcf\x1f\x34\x1f\x09\xfd\xf5\xcd\xd8\xd3\x27\xd9\x18\xb4\xed\x32\x98\x43\x39\x04\x5f\x6a\x96\xa8" +
	"\xcb\x0f\x65\x4b\x83\x16\x37\xe4\xcf\x40\x79\x7e\x52\xca\x5d\x92\x9a\x9d\x2b\xab\xa2\x42\x5d\x93\xc6\xdd\x2b\x49" +
	"\xb6\x6d\x10\xf0\x30\x03\x74\xa8\xf4\xe0\xe9\xad\xf7\x14\x7a\xd6\x6d\x32\xe2\xec\xd8\x91\x57\xdc\x5e\x61\x6a\x35" +
	"\xd2\x77\xe9\xed\x28\xf4\xbd\x5a\x9b\xfc\x71\xb1\x65\x2e\xd6\xcc\xde\x6f\x79\xda\x26\xb8\xa1\x7f\x05\x6b\xde\xdc" +
	"\xc0\x9e\xfb\xa9\xe5\xad\xdd\xa2\x6f\xab\xe6\xf3\x7c\x62\x2a\x92\x59\xac\x93\x1c\xdc\xde\x94\x77\xd3\x3e\xbd\xfb" +
	"\xcf\xef\x70\xe2\x1f\x80\x81\xfc\xa8\x24\x55\x52\x26\xdb\xdf\x5c\xae\x4b\xd8\xd3\xd5\x3d\x9c\x70\xd9\xdf\x01\x00" +
	"\x00\xff\xff\x16\x64\x95\x61\xa1\x07\x00\x00")

func bindataDeploymentAlamedaoperatorDMyamlBytes() ([]byte, error) {
	return bindataRead(
		_bindataDeploymentAlamedaoperatorDMyaml,
		"Deployment/alameda-operatorDM.yaml",
	)
}



func bindataDeploymentAlamedaoperatorDMyaml() (*asset, error) {
	bytes, err := bindataDeploymentAlamedaoperatorDMyamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "Deployment/alameda-operatorDM.yaml",
		size: 1953,
		md5checksum: "",
		mode: os.FileMode(436),
		modTime: time.Unix(1557293960, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}


//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"CustomResourceDefinition/alamedarecommendationsCRD.yaml": bindataCustomResourceDefinitionAlamedarecommendationsCRDyaml,
	"CustomResourceDefinition/alamedascalersCRD.yaml":         bindataCustomResourceDefinitionAlamedascalersCRDyaml,
	"ClusterRole/admission-controllerCR.yaml":                 bindataClusterRoleAdmissioncontrollerCRyaml,
	"ClusterRole/aggregate-alameda-admin-edit-alamedaCR.yaml": bindataClusterRoleAggregatealamedaadmineditalamedaCRyaml,
	"ClusterRole/alameda-datahubCR.yaml":                      bindataClusterRoleAlamedadatahubCRyaml,
	"ClusterRole/alameda-evictionerCR.yaml":                   bindataClusterRoleAlamedaevictionerCRyaml,
	"ClusterRole/alameda-grafanaCR.yaml":                      bindataClusterRoleAlamedagrafanaCRyaml,
	"ClusterRole/alameda-operatorCR.yaml":                     bindataClusterRoleAlamedaoperatorCRyaml,
	"ServiceAccount/admission-controllerSA.yaml":              bindataServiceAccountAdmissioncontrollerSAyaml,
	"ServiceAccount/alameda-aiSA.yaml":                        bindataServiceAccountAlamedaaiSAyaml,
	"ServiceAccount/alameda-datahubSA.yaml":                   bindataServiceAccountAlamedadatahubSAyaml,
	"ServiceAccount/alameda-evictionerSA.yaml":                bindataServiceAccountAlamedaevictionerSAyaml,
	"ServiceAccount/alameda-grafanaSA.yaml":                   bindataServiceAccountAlamedagrafanaSAyaml,
	"ServiceAccount/alameda-operatorSA.yaml":                  bindataServiceAccountAlamedaoperatorSAyaml,
	"ClusterRoleBinding/admission-controllerCRB.yaml":         bindataClusterRoleBindingAdmissioncontrollerCRByaml,
	"ClusterRoleBinding/alameda-datahubCRB.yaml":              bindataClusterRoleBindingAlamedadatahubCRByaml,
	"ClusterRoleBinding/alameda-evictionerCRB.yaml":           bindataClusterRoleBindingAlamedaevictionerCRByaml,
	"ClusterRoleBinding/alameda-grafanaCRB.yaml":              bindataClusterRoleBindingAlamedagrafanaCRByaml,
	"ClusterRoleBinding/alameda-operatorCRB.yaml":             bindataClusterRoleBindingAlamedaoperatorCRByaml,
	"Secret/admission-controller-tls.yaml":                    bindataSecretAdmissioncontrollertlsyaml,
	"Secret/alameda-influxdb.yaml":                            bindataSecretAlamedainfluxdbyaml,
	"ConfigMap/dashboards-config.yaml":                        bindataConfigMapDashboardsconfigyaml,
	"ConfigMap/grafana-datasources.yaml":                      bindataConfigMapGrafanadatasourcesyaml,
	"PersistentVolumeClaim/admission-controller-data.yaml":    bindataPersistentVolumeClaimAdmissioncontrollerdatayaml,
	"PersistentVolumeClaim/admission-controller-log.yaml":     bindataPersistentVolumeClaimAdmissioncontrollerlogyaml,
	"PersistentVolumeClaim/alameda-ai-data.yaml":              bindataPersistentVolumeClaimAlamedaaidatayaml,
	"PersistentVolumeClaim/alameda-ai-log.yaml":               bindataPersistentVolumeClaimAlamedaailogyaml,
	"PersistentVolumeClaim/alameda-datahub-data.yaml":         bindataPersistentVolumeClaimAlamedadatahubdatayaml,
	"PersistentVolumeClaim/alameda-datahub-log.yaml":          bindataPersistentVolumeClaimAlamedadatahublogyaml,
	"PersistentVolumeClaim/alameda-evictioner-data.yaml":      bindataPersistentVolumeClaimAlamedaevictionerdatayaml,
	"PersistentVolumeClaim/alameda-evictioner-log.yaml":       bindataPersistentVolumeClaimAlamedaevictionerlogyaml,
	"PersistentVolumeClaim/alameda-operator-data.yaml":        bindataPersistentVolumeClaimAlamedaoperatordatayaml,
	"PersistentVolumeClaim/alameda-operator-log.yaml":         bindataPersistentVolumeClaimAlamedaoperatorlogyaml,
	"PersistentVolumeClaim/my-alamedagrafanaPVC.yaml":         bindataPersistentVolumeClaimMyalamedagrafanaPVCyaml,
	"PersistentVolumeClaim/my-alamedainfluxdbPVC.yaml":        bindataPersistentVolumeClaimMyalamedainfluxdbPVCyaml,
	"Service/admission-controllerSV.yaml":                     bindataServiceAdmissioncontrollerSVyaml,
	"Service/alameda-datahubSV.yaml":                          bindataServiceAlamedadatahubSVyaml,
	"Service/alameda-grafanaSV.yaml":                          bindataServiceAlamedagrafanaSVyaml,
	"Service/alameda-influxdbSV.yaml":                         bindataServiceAlamedainfluxdbSVyaml,
	"Deployment/admission-controllerDM.yaml":                  bindataDeploymentAdmissioncontrollerDMyaml,
	"Deployment/alameda-aiDM.yaml":                            bindataDeploymentAlamedaaiDMyaml,
	"Deployment/alameda-datahubDM.yaml":                       bindataDeploymentAlamedadatahubDMyaml,
	"Deployment/alameda-evictionerDM.yaml":                    bindataDeploymentAlamedaevictionerDMyaml,
	"Deployment/alameda-grafanaDM.yaml":                       bindataDeploymentAlamedagrafanaDMyaml,
	"Deployment/alameda-influxdbDM.yaml":                      bindataDeploymentAlamedainfluxdbDMyaml,
	"Deployment/alameda-operatorDM.yaml":                      bindataDeploymentAlamedaoperatorDMyaml,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op: "open",
					Path: name,
					Err: os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op: "open",
			Path: name,
			Err: os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}


type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"ClusterRole": {Func: nil, Children: map[string]*bintree{
		"admission-controllerCR.yaml": {Func: bindataClusterRoleAdmissioncontrollerCRyaml, Children: map[string]*bintree{}},
		"aggregate-alameda-admin-edit-alamedaCR.yaml": {Func: bindataClusterRoleAggregatealamedaadmineditalamedaCRyaml, Children: map[string]*bintree{}},
		"alameda-datahubCR.yaml": {Func: bindataClusterRoleAlamedadatahubCRyaml, Children: map[string]*bintree{}},
		"alameda-evictionerCR.yaml": {Func: bindataClusterRoleAlamedaevictionerCRyaml, Children: map[string]*bintree{}},
		"alameda-grafanaCR.yaml": {Func: bindataClusterRoleAlamedagrafanaCRyaml, Children: map[string]*bintree{}},
		"alameda-operatorCR.yaml": {Func: bindataClusterRoleAlamedaoperatorCRyaml, Children: map[string]*bintree{}},
	}},
	"ClusterRoleBinding": {Func: nil, Children: map[string]*bintree{
		"admission-controllerCRB.yaml": {Func: bindataClusterRoleBindingAdmissioncontrollerCRByaml, Children: map[string]*bintree{}},
		"alameda-datahubCRB.yaml": {Func: bindataClusterRoleBindingAlamedadatahubCRByaml, Children: map[string]*bintree{}},
		"alameda-evictionerCRB.yaml": {Func: bindataClusterRoleBindingAlamedaevictionerCRByaml, Children: map[string]*bintree{}},
		"alameda-grafanaCRB.yaml": {Func: bindataClusterRoleBindingAlamedagrafanaCRByaml, Children: map[string]*bintree{}},
		"alameda-operatorCRB.yaml": {Func: bindataClusterRoleBindingAlamedaoperatorCRByaml, Children: map[string]*bintree{}},
	}},
	"ConfigMap": {Func: nil, Children: map[string]*bintree{
		"dashboards-config.yaml": {Func: bindataConfigMapDashboardsconfigyaml, Children: map[string]*bintree{}},
		"grafana-datasources.yaml": {Func: bindataConfigMapGrafanadatasourcesyaml, Children: map[string]*bintree{}},
	}},
	"CustomResourceDefinition": {Func: nil, Children: map[string]*bintree{
		"alamedarecommendationsCRD.yaml": {Func: bindataCustomResourceDefinitionAlamedarecommendationsCRDyaml, Children: map[string]*bintree{}},
		"alamedascalersCRD.yaml": {Func: bindataCustomResourceDefinitionAlamedascalersCRDyaml, Children: map[string]*bintree{}},
	}},
	"Deployment": {Func: nil, Children: map[string]*bintree{
		"admission-controllerDM.yaml": {Func: bindataDeploymentAdmissioncontrollerDMyaml, Children: map[string]*bintree{}},
		"alameda-aiDM.yaml": {Func: bindataDeploymentAlamedaaiDMyaml, Children: map[string]*bintree{}},
		"alameda-datahubDM.yaml": {Func: bindataDeploymentAlamedadatahubDMyaml, Children: map[string]*bintree{}},
		"alameda-evictionerDM.yaml": {Func: bindataDeploymentAlamedaevictionerDMyaml, Children: map[string]*bintree{}},
		"alameda-grafanaDM.yaml": {Func: bindataDeploymentAlamedagrafanaDMyaml, Children: map[string]*bintree{}},
		"alameda-influxdbDM.yaml": {Func: bindataDeploymentAlamedainfluxdbDMyaml, Children: map[string]*bintree{}},
		"alameda-operatorDM.yaml": {Func: bindataDeploymentAlamedaoperatorDMyaml, Children: map[string]*bintree{}},
	}},
	"PersistentVolumeClaim": {Func: nil, Children: map[string]*bintree{
		"admission-controller-data.yaml": {Func: bindataPersistentVolumeClaimAdmissioncontrollerdatayaml, Children: map[string]*bintree{}},
		"admission-controller-log.yaml": {Func: bindataPersistentVolumeClaimAdmissioncontrollerlogyaml, Children: map[string]*bintree{}},
		"alameda-ai-data.yaml": {Func: bindataPersistentVolumeClaimAlamedaaidatayaml, Children: map[string]*bintree{}},
		"alameda-ai-log.yaml": {Func: bindataPersistentVolumeClaimAlamedaailogyaml, Children: map[string]*bintree{}},
		"alameda-datahub-data.yaml": {Func: bindataPersistentVolumeClaimAlamedadatahubdatayaml, Children: map[string]*bintree{}},
		"alameda-datahub-log.yaml": {Func: bindataPersistentVolumeClaimAlamedadatahublogyaml, Children: map[string]*bintree{}},
		"alameda-evictioner-data.yaml": {Func: bindataPersistentVolumeClaimAlamedaevictionerdatayaml, Children: map[string]*bintree{}},
		"alameda-evictioner-log.yaml": {Func: bindataPersistentVolumeClaimAlamedaevictionerlogyaml, Children: map[string]*bintree{}},
		"alameda-operator-data.yaml": {Func: bindataPersistentVolumeClaimAlamedaoperatordatayaml, Children: map[string]*bintree{}},
		"alameda-operator-log.yaml": {Func: bindataPersistentVolumeClaimAlamedaoperatorlogyaml, Children: map[string]*bintree{}},
		"my-alamedagrafanaPVC.yaml": {Func: bindataPersistentVolumeClaimMyalamedagrafanaPVCyaml, Children: map[string]*bintree{}},
		"my-alamedainfluxdbPVC.yaml": {Func: bindataPersistentVolumeClaimMyalamedainfluxdbPVCyaml, Children: map[string]*bintree{}},
	}},
	"Secret": {Func: nil, Children: map[string]*bintree{
		"admission-controller-tls.yaml": {Func: bindataSecretAdmissioncontrollertlsyaml, Children: map[string]*bintree{}},
		"alameda-influxdb.yaml": {Func: bindataSecretAlamedainfluxdbyaml, Children: map[string]*bintree{}},
	}},
	"Service": {Func: nil, Children: map[string]*bintree{
		"admission-controllerSV.yaml": {Func: bindataServiceAdmissioncontrollerSVyaml, Children: map[string]*bintree{}},
		"alameda-datahubSV.yaml": {Func: bindataServiceAlamedadatahubSVyaml, Children: map[string]*bintree{}},
		"alameda-grafanaSV.yaml": {Func: bindataServiceAlamedagrafanaSVyaml, Children: map[string]*bintree{}},
		"alameda-influxdbSV.yaml": {Func: bindataServiceAlamedainfluxdbSVyaml, Children: map[string]*bintree{}},
	}},
	"ServiceAccount": {Func: nil, Children: map[string]*bintree{
		"admission-controllerSA.yaml": {Func: bindataServiceAccountAdmissioncontrollerSAyaml, Children: map[string]*bintree{}},
		"alameda-aiSA.yaml": {Func: bindataServiceAccountAlamedaaiSAyaml, Children: map[string]*bintree{}},
		"alameda-datahubSA.yaml": {Func: bindataServiceAccountAlamedadatahubSAyaml, Children: map[string]*bintree{}},
		"alameda-evictionerSA.yaml": {Func: bindataServiceAccountAlamedaevictionerSAyaml, Children: map[string]*bintree{}},
		"alameda-grafanaSA.yaml": {Func: bindataServiceAccountAlamedagrafanaSAyaml, Children: map[string]*bintree{}},
		"alameda-operatorSA.yaml": {Func: bindataServiceAccountAlamedaoperatorSAyaml, Children: map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
